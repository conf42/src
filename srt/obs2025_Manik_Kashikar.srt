1
00:00:00,500 --> 00:00:01,160
Good morning.

2
00:00:01,160 --> 00:00:02,300
Good afternoon, everyone.

3
00:00:02,900 --> 00:00:04,340
This is Man Kashkar.

4
00:00:05,180 --> 00:00:07,430
I'm a principal architecture
at ThoughtWorks India.

5
00:00:08,029 --> 00:00:12,229
I'm really excited to be here to
walk you through how organizations

6
00:00:12,229 --> 00:00:17,900
can navigate today's complex digital
landscape using intelligent full stack

7
00:00:18,410 --> 00:00:24,650
observability as systems scales, and
expectations rise, observability.

8
00:00:25,085 --> 00:00:29,915
It's no longer just a DevOps concern,
but it is a business imperative.

9
00:00:30,415 --> 00:00:33,265
Let's understand the cost
of poor observability.

10
00:00:33,765 --> 00:00:38,925
We often hear that visibility is
everything, but in reality, most

11
00:00:38,925 --> 00:00:44,955
enterprises only see a fraction of their
landscape despite having multiple tools.

12
00:00:45,465 --> 00:00:50,415
As per the state of observability
report, 89% of organizations

13
00:00:50,535 --> 00:00:52,635
admit they still lack.

14
00:00:53,175 --> 00:00:58,005
Complete visibility to their
systems, tools, sprawl, long mtt

15
00:00:58,035 --> 00:01:02,144
and exploding telemetry volumes
are all driving operational

16
00:01:02,144 --> 00:01:04,334
inefficiencies and rising cost.

17
00:01:04,935 --> 00:01:09,255
The question is no longer whether
to invest in observability, but it

18
00:01:09,255 --> 00:01:12,015
is more about how to do it smartly.

19
00:01:12,515 --> 00:01:18,005
Hence, I request everyone here
to understand why it is important

20
00:01:18,365 --> 00:01:21,035
to have your systems observed.

21
00:01:21,905 --> 00:01:26,485
Each and every time, please treat
observability as a first class citizen.

22
00:01:26,985 --> 00:01:30,195
This isn't just about
collecting logs or metrics.

23
00:01:30,794 --> 00:01:36,315
It is about understanding the why
behind your system's behavior in

24
00:01:36,315 --> 00:01:41,774
real time, and more importantly,
predicting what it could evolve into.

25
00:01:42,255 --> 00:01:47,354
This is a shift from monitoring
to insight driven decision making.

26
00:01:47,854 --> 00:01:51,035
Think observability as a layered strategy.

27
00:01:51,304 --> 00:01:55,654
It spans across applications,
infrastructure, business, and

28
00:01:55,654 --> 00:01:57,304
even user experience domains.

29
00:01:58,174 --> 00:02:04,824
The melt stack metrics, events, logs,
and traces, they act as the foundation.

30
00:02:05,199 --> 00:02:10,749
To build a strong and robust observability
framework, the real impact happens

31
00:02:10,839 --> 00:02:15,579
when you correlate these pillars
across the domain in real time.

32
00:02:16,079 --> 00:02:21,859
Let's also understand the
observability maturity as you see here.

33
00:02:22,534 --> 00:02:27,244
This slide reflects a critical
shift in how organizations evolve

34
00:02:27,244 --> 00:02:28,894
their observability approach.

35
00:02:29,584 --> 00:02:34,654
Early maturity stages often
start with siloed monitoring.

36
00:02:35,344 --> 00:02:40,234
Teams track the metrics and logs,
but the insights are isolated.

37
00:02:40,714 --> 00:02:44,284
They were lacking the context
as well as domain information.

38
00:02:45,184 --> 00:02:51,934
As maturity progress, we see a convergence
of telemetry with real business KPIs

39
00:02:51,934 --> 00:02:58,864
in terms of evaluating and tracking and
monitoring the uptime, the revenue impact,

40
00:02:59,014 --> 00:03:00,874
the customer churn rate, et cetera.

41
00:03:01,374 --> 00:03:06,684
Full stack observability, it
represents the pinnacle, a model where.

42
00:03:07,184 --> 00:03:11,954
Infrastructure applications, digital
experience, and business context,

43
00:03:12,314 --> 00:03:13,814
they all are stitched together.

44
00:03:14,314 --> 00:03:20,494
This maturity enables not just technical
diagnostic, but also insights into the

45
00:03:20,494 --> 00:03:23,224
business impact of technical degradation.

46
00:03:23,914 --> 00:03:27,724
Like for example, a 40 milliseconds
increase in response time will

47
00:03:27,724 --> 00:03:29,969
cause 2% drop in conversation.

48
00:03:30,469 --> 00:03:32,779
This is a concerning
point for your business.

49
00:03:33,279 --> 00:03:36,549
Let's check out this
journey as a case in point.

50
00:03:37,049 --> 00:03:40,589
This is a real world example about a
customer journey, like an e-commerce

51
00:03:40,589 --> 00:03:45,299
platform, who wants to check out some
of the goods in the products, and

52
00:03:45,539 --> 00:03:50,459
it also emphasizes the importance
of having dual lenses, the outside

53
00:03:50,459 --> 00:03:52,889
in perspective and the inside out.

54
00:03:53,609 --> 00:03:55,649
When we talk about outside in.

55
00:03:56,384 --> 00:04:01,094
It actually captures how the user
experiences the application, whether you

56
00:04:01,094 --> 00:04:07,114
have slow pages, failed transactions, high
latency, and when it comes to the insider

57
00:04:07,414 --> 00:04:14,494
out perspective, it surfaces systems,
site telemetry, backend response times,

58
00:04:14,494 --> 00:04:20,374
your service response time, database query
lags, database query, performance memory

59
00:04:20,374 --> 00:04:22,534
spikes, or API gateway bottle links.

60
00:04:23,034 --> 00:04:27,594
The true observability connects
these two views in real time.

61
00:04:28,404 --> 00:04:35,034
For instance, a spike in checkout
may be directly lied, may be directly

62
00:04:35,034 --> 00:04:41,774
tied to a database locked timeout, or
a failing third party payment, API.

63
00:04:42,224 --> 00:04:48,044
Without that correlation, you are left
guessing and it'll take lot of time

64
00:04:48,044 --> 00:04:50,294
for you to identify the root cause.

65
00:04:50,794 --> 00:04:57,564
You are enabling precision recovery and
business aligned decision making, and

66
00:04:57,564 --> 00:05:03,614
here it's AWS who provides us multiple
such services, which could help you to

67
00:05:03,614 --> 00:05:06,074
achieve the full stack observability.

68
00:05:06,764 --> 00:05:13,544
AWS provides a robust observability
toolkit, which values in how you

69
00:05:13,544 --> 00:05:16,454
stitch these services together.

70
00:05:16,954 --> 00:05:22,234
CloudWatch, it'll help you to
capture native metrics and logs

71
00:05:22,294 --> 00:05:25,024
across various compute systems.

72
00:05:25,474 --> 00:05:30,874
X-ray adds distributor repressing
essential to follow a request across

73
00:05:31,054 --> 00:05:33,934
microservices, CloudWatch synthesis.

74
00:05:33,994 --> 00:05:38,824
It mimics user journeys to detect
issues before the customer do.

75
00:05:39,669 --> 00:05:43,414
CloudWatch, RUM, the real user monitoring.

76
00:05:43,534 --> 00:05:49,384
It provides the frontend visibility,
user latency, and core web vitals.

77
00:05:49,884 --> 00:05:55,224
The opportunity here is an integration
building composite dashboards that

78
00:05:55,224 --> 00:05:58,405
unify telemetry across various layers.

79
00:05:59,364 --> 00:06:04,554
For example, correlating CloudWatch
alarms with x-ray presses.

80
00:06:05,155 --> 00:06:08,694
We'll help you to isolate
bottlenecks automatically.

81
00:06:09,624 --> 00:06:14,784
This will help you transform raw
signals into actionable insights and

82
00:06:14,844 --> 00:06:18,954
eventually reducing MTTR significantly.

83
00:06:19,454 --> 00:06:26,434
Let's also quickly understand how you
can target to achieve AI ops and how the

84
00:06:26,434 --> 00:06:32,104
journey will look like with observability
at scale comes the data delay.

85
00:06:32,779 --> 00:06:39,699
Terabyte of LAX thousands of metrics
and alert for this is where AIOps

86
00:06:40,269 --> 00:06:43,919
step in AIOps is a natural evolution.

87
00:06:44,219 --> 00:06:49,919
Applying machine learning and automation
to operational data to detect patterns,

88
00:06:50,099 --> 00:06:54,539
surface anomalies, and even auto issues.

89
00:06:55,049 --> 00:06:58,799
Think of it as observability
with intelligence.

90
00:06:59,655 --> 00:07:05,265
We are seeing a shift from reactive
alert to productive signals spotting

91
00:07:05,265 --> 00:07:07,815
anomalies before users are impacted.

92
00:07:08,355 --> 00:07:11,325
This journey to AI ops isn't overnight.

93
00:07:11,895 --> 00:07:19,695
It starts with robust observability data
layer with smart correlation and gradually

94
00:07:19,695 --> 00:07:22,635
introducing automated decision making.

95
00:07:23,595 --> 00:07:25,005
Now, let's understand.

96
00:07:25,650 --> 00:07:31,799
To achieve this, what are the components
that the organization should focus on?

97
00:07:32,299 --> 00:07:36,200
AIOps operates across
three strategic pillars.

98
00:07:36,619 --> 00:07:42,310
First is observe, ingest, clean,
structured telemetry across the melt.

99
00:07:42,810 --> 00:07:43,159
Learn.

100
00:07:43,659 --> 00:07:49,359
Apply ML services, AI models to
detect any outliers, understand the

101
00:07:49,359 --> 00:07:52,330
seasonality and predict failures.

102
00:07:52,830 --> 00:07:57,960
The third is act automate downstream
workflows, alert suppression, ticketing,

103
00:07:58,229 --> 00:08:00,479
dynamic scaling, and even rollbacks.

104
00:08:00,899 --> 00:08:03,239
This is where the value multiplies.

105
00:08:03,419 --> 00:08:08,639
For example, if CPU usage spikes and
is constantly followed by database

106
00:08:08,909 --> 00:08:11,580
timeouts, AIOps will learn that.

107
00:08:12,494 --> 00:08:16,394
Relationship and suppress noise
while highlighting root cause.

108
00:08:16,844 --> 00:08:21,764
This is the transition from alerts
to intelligent signal management.

109
00:08:22,264 --> 00:08:25,564
Now let's also understand the AI ops.

110
00:08:25,564 --> 00:08:29,854
What are the various tools and the
capabilities that are provided by AWS?

111
00:08:29,914 --> 00:08:31,839
The key services includes.

112
00:08:32,554 --> 00:08:33,214
DevOps Guru.

113
00:08:33,604 --> 00:08:38,374
It is a fully managed ML powered
insight engine that detects operational

114
00:08:38,374 --> 00:08:41,164
issues well before the impact users.

115
00:08:41,674 --> 00:08:44,374
Next is CloudWatch anomaly detection.

116
00:08:44,524 --> 00:08:49,354
This is a beautiful service which auto
detects anomalies in time series metrics.

117
00:08:49,854 --> 00:08:53,604
The third, an very important
one, is X-ray insights.

118
00:08:54,084 --> 00:09:00,174
It correlates traces with error rates
and it highlights the slow segments.

119
00:09:01,014 --> 00:09:07,584
Each of these tools is very valuable
individually, but when combined, they

120
00:09:07,584 --> 00:09:10,254
form a very powerful AI ops pipeline.

121
00:09:10,524 --> 00:09:15,534
For instance, DevOps guru can detect
a performance anomaly, link it to the

122
00:09:15,534 --> 00:09:20,844
failing express segment, and triggers
an SNS alert that upgrades your incident

123
00:09:20,844 --> 00:09:22,254
management system automatically.

124
00:09:22,754 --> 00:09:24,164
Now let's understand.

125
00:09:24,194 --> 00:09:29,684
How can you optimize your it,
IT operations using automation?

126
00:09:30,184 --> 00:09:33,424
With AI ops, we go beyond
dashboards and alerts.

127
00:09:33,454 --> 00:09:38,749
We enter into a world of intelligent
alert routing, noise reduction, contextual

128
00:09:38,859 --> 00:09:41,829
correlation, and automated remediations.

129
00:09:42,329 --> 00:09:48,389
This will result into turning operations
from reactive firefighting mode

130
00:09:48,479 --> 00:09:51,059
into a very proactive governance.

131
00:09:51,659 --> 00:09:54,659
Now, let's see, how can we
streamline the operations?

132
00:09:55,159 --> 00:10:00,649
This is a journey which can be
achieved in a very phased manner

133
00:10:01,149 --> 00:10:04,149
in order to optimize the operations.

134
00:10:04,649 --> 00:10:10,499
You should definitely leverage on the
AWS AI stack or something similar,

135
00:10:10,499 --> 00:10:12,989
which other cloud vendors provides.

136
00:10:13,489 --> 00:10:18,169
Now let's also understand another case
about how can we reduce the incident

137
00:10:18,169 --> 00:10:23,839
volumes as a part of your day-to-day
BAU when it comes to the operations

138
00:10:23,839 --> 00:10:25,759
or maintenance support activities.

139
00:10:26,259 --> 00:10:32,389
Your organization here is a step
by step playbook about how can you

140
00:10:32,629 --> 00:10:35,379
achieve this instrument, everything.

141
00:10:35,859 --> 00:10:42,149
Ingest with structure, identify the
patterns, drive predictive alerts,

142
00:10:42,329 --> 00:10:44,699
and connect it to your ITSM systems.

143
00:10:45,569 --> 00:10:46,859
The goal is.

144
00:10:47,204 --> 00:10:52,034
Fewer tickets, faster resolution,
and a major able uplift in terms of

145
00:10:52,034 --> 00:10:54,194
customer and business experience.

146
00:10:54,694 --> 00:10:57,994
Here is a case in point about
anomaly detection framework.

147
00:10:58,774 --> 00:11:03,274
This isn't just about catching failures,
but it is more about preventing them.

148
00:11:04,204 --> 00:11:10,834
For that, you need to train your ML models
on very relevant logs, metrics and traces.

149
00:11:11,334 --> 00:11:15,444
Your system should be able to
correlate and identify a meaningful

150
00:11:15,444 --> 00:11:20,694
contextual inferences out of the
data that has been provided to you.

151
00:11:21,684 --> 00:11:29,134
This will help you eventually to
degrade your lots of surface issues

152
00:11:29,134 --> 00:11:35,124
that you typically identify in the
operations, and once you apply this.

153
00:11:35,624 --> 00:11:40,034
This is your value realization phase
by instrumenting telemetry across

154
00:11:40,034 --> 00:11:45,794
systems, detecting patterns via ml and
integrating them into the workflow.

155
00:11:46,094 --> 00:11:49,964
The incident volumes will
surely drop significantly.

156
00:11:50,234 --> 00:11:53,774
You are no longer drawing in alerts.

157
00:11:53,804 --> 00:11:58,604
Instead, you are seeing fewer tickets,
faster root cause identification,

158
00:11:58,664 --> 00:12:00,344
and measurable business impact.

159
00:12:00,929 --> 00:12:05,999
Hence observability and AIOps
together will enable a continuous

160
00:12:06,419 --> 00:12:12,449
impro improvement loop for your
organizations where every incident become

161
00:12:12,449 --> 00:12:15,239
training data or smarter operations.

162
00:12:15,739 --> 00:12:20,929
While we have spoken and understood lot
of good things about AI ops and what

163
00:12:20,929 --> 00:12:26,439
are the various ways to achieve it, AI
ops also comes with certain challenges.

164
00:12:27,399 --> 00:12:31,839
Some of the common challenges identified
are the data quality, integration

165
00:12:31,839 --> 00:12:34,449
complexity, and the change resistance.

166
00:12:35,019 --> 00:12:41,649
However, if you see the compelling ROI
that you could achieve by implementing

167
00:12:41,649 --> 00:12:48,879
AIOps such as improved efficiency, faster
MTTR and better customer satisfaction.

168
00:12:49,809 --> 00:12:54,969
When AIOps done right, it will
really help you to transform not

169
00:12:54,969 --> 00:12:57,429
just it, but your entire business.

170
00:12:57,929 --> 00:13:04,049
Some of my closing thoughts here are the
intelligent observability is not a luxury.

171
00:13:04,409 --> 00:13:08,129
It's a foundation for high
performing digital enterprise.

172
00:13:08,804 --> 00:13:13,784
From real time user experience to
deep backend visibility, from animal

173
00:13:13,934 --> 00:13:16,964
detection to AIOps driven automation.

174
00:13:17,324 --> 00:13:22,334
The journey starts with visibility,
but ends with intelligence.

175
00:13:23,054 --> 00:13:28,994
Let's build systems that not only recover
fast, but adopt, predict, and self fail.

176
00:13:29,494 --> 00:13:31,984
Thank you for joining me
today for this session.

177
00:13:32,014 --> 00:13:34,774
I hope the session you find insightful.

178
00:13:35,614 --> 00:13:37,444
Happy learning to all the audience.

