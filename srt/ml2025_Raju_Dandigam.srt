1
00:00:03,750 --> 00:00:04,380
Hello everyone.

2
00:00:04,380 --> 00:00:05,376
My name is Roger Dham.

3
00:00:05,970 --> 00:00:09,180
I'm currently working as
a staff engineer at N one.

4
00:00:09,280 --> 00:00:14,080
Today we are diving into how frontend
analytics can transform the way we build,

5
00:00:14,140 --> 00:00:16,360
debug, and improve our web applications.

6
00:00:16,840 --> 00:00:20,350
Whether you're in product
design, engineering, or growth.

7
00:00:20,740 --> 00:00:25,150
This talk is about enabling smarter
decisions based on real user data.

8
00:00:26,035 --> 00:00:28,015
So what does frontend analytics mean?

9
00:00:28,615 --> 00:00:31,824
Frontend analytics is like putting
on a pair of glasses and seeing

10
00:00:31,824 --> 00:00:33,835
the app through the user eyes.

11
00:00:34,405 --> 00:00:38,574
It tells us what people actually do
on our site, where they click, how far

12
00:00:38,574 --> 00:00:43,045
they scroll, how long they stay, or even
where they rage click out of frustration.

13
00:00:43,765 --> 00:00:47,425
Imagine watching someone try to sign
up, but they get stuck on field.

14
00:00:47,815 --> 00:00:52,615
That insight can make the difference
between a user bouncing or converting.

15
00:00:53,185 --> 00:00:54,385
So why does.

16
00:00:55,105 --> 00:00:56,695
Frontend analytics matters.

17
00:00:57,385 --> 00:01:02,155
So the reality is most users
never report bugs or a confusion.

18
00:01:02,605 --> 00:01:07,015
They just leave the website or
web publication analytics help

19
00:01:07,015 --> 00:01:09,175
us catch those silent failures.

20
00:01:09,760 --> 00:01:12,160
It also help us test ideas quickly.

21
00:01:12,610 --> 00:01:16,630
Let's say that a team launches a
new pricing page with analytics.

22
00:01:16,720 --> 00:01:20,170
We can see instantly whether it
improves signups or heart them.

23
00:01:20,590 --> 00:01:24,190
So we don't need to wait for our
gut feelings or customer complaints.

24
00:01:24,490 --> 00:01:28,870
So the analytics will give us the
fast and the real reliable feedback.

25
00:01:29,380 --> 00:01:33,520
So who benefits out of
these frontend analytics?

26
00:01:34,030 --> 00:01:37,300
So this is not just for data folks, this.

27
00:01:37,840 --> 00:01:40,960
Help us pretty much everyone in the team.

28
00:01:41,170 --> 00:01:44,410
So it could be product,
engineering, growth, or design.

29
00:01:44,470 --> 00:01:49,030
So in case of product teams, they get
prioritized features that actually matter.

30
00:01:49,030 --> 00:01:53,380
By analyzing the funnels or by looking
at the user data, engineers can

31
00:01:53,380 --> 00:01:58,420
debug based on the real usage instead
of guessing and then debug issues

32
00:01:58,420 --> 00:02:00,040
and see where the actual drop is.

33
00:02:02,530 --> 00:02:06,700
The analytics to run the experiments
AB test and optimize the flows.

34
00:02:06,759 --> 00:02:07,900
And then again, analysis.

35
00:02:07,900 --> 00:02:09,910
The analysis of the existing funnels.

36
00:02:10,240 --> 00:02:14,710
Designers can actually validate
their layouts, ui ux designs, and

37
00:02:14,710 --> 00:02:16,660
then see the user behavior choices.

38
00:02:17,200 --> 00:02:20,615
It creates a shared
understanding across teams.

39
00:02:21,435 --> 00:02:25,095
So what actually we can track with this.

40
00:02:26,785 --> 00:02:29,304
So we are not just tracking clicks, right?

41
00:02:29,304 --> 00:02:32,304
So here, think about
capturing your user intent.

42
00:02:32,575 --> 00:02:36,114
So for example, someone searching
for a product, starting a

43
00:02:36,160 --> 00:02:38,035
signup or overing on help icon.

44
00:02:38,454 --> 00:02:42,024
We can track time spent reading a
feature, or how many people scroll

45
00:02:42,024 --> 00:02:45,774
all the way down to the homepage, or
how many people actually figuring out

46
00:02:45,774 --> 00:02:49,795
things, how much time they're spending
to do the action they're supposed to do.

47
00:02:50,185 --> 00:02:53,334
So pretty much everything
can be tracked and analyzed.

48
00:02:53,815 --> 00:02:55,165
The point is to understand.

49
00:02:55,530 --> 00:02:57,119
What the user is trying to do.

50
00:02:57,450 --> 00:03:00,600
Not just the, not just what
they're clicking and what

51
00:03:00,600 --> 00:03:01,769
they're trying to accomplish.

52
00:03:02,130 --> 00:03:02,399
Those.

53
00:03:02,399 --> 00:03:06,999
So those are the things we try to
track and get out of the analytics.

54
00:03:08,420 --> 00:03:10,730
So what are the types of analytics?

55
00:03:11,029 --> 00:03:14,839
So there are different flavors
of analytics, but majorly

56
00:03:14,890 --> 00:03:15,939
there are like four types.

57
00:03:15,939 --> 00:03:19,959
There are like behavioral, technical,
experimental, and then session replace.

58
00:03:20,349 --> 00:03:23,809
So what generally each tele
about is basically behavioral.

59
00:03:24,994 --> 00:03:29,054
Tells you what users did
clicked, dropped off or stayed.

60
00:03:29,654 --> 00:03:34,154
Technical shows things like low
time performance, JavaScript errors,

61
00:03:34,244 --> 00:03:38,624
or any errors dropping the user
or like user not able to proceed.

62
00:03:39,134 --> 00:03:43,154
Whereas experimental is more of a b
testing and then figuring out which

63
00:03:43,154 --> 00:03:47,524
is, which variant is performing
better versus other, or what are the.

64
00:03:47,944 --> 00:03:51,964
Difference between the user
acceptance or like user interactive

65
00:03:52,014 --> 00:03:53,569
in terms of different variations.

66
00:03:53,929 --> 00:03:57,679
And whereas session replace, they are
like watching video of the user screen,

67
00:03:58,129 --> 00:04:02,129
which is basically cool for debugging,
like for UX reviews, for for everything

68
00:04:02,559 --> 00:04:05,709
for everything to understand how user
is interacting with our web application.

69
00:04:07,749 --> 00:04:11,719
So what are the popular tools
available for different end analytics?

70
00:04:11,869 --> 00:04:16,329
There are a lot of tools out there,
so I'm not gonna go each and every

71
00:04:16,329 --> 00:04:19,989
tool, but I just pick the most
popular tools available right there.

72
00:04:20,329 --> 00:04:24,079
There are like amplitude mix panel
or post hack century, and there are.

73
00:04:24,319 --> 00:04:24,769
Bunch.

74
00:04:25,039 --> 00:04:28,429
There are a bunch of more tools
available, but I'm not gonna, as I

75
00:04:28,429 --> 00:04:30,469
said, I'm not gonna go over into them.

76
00:04:30,469 --> 00:04:34,464
But I for this session purpose, I
just took Amplitude as the example,

77
00:04:34,464 --> 00:04:38,474
and then we'll be focusing on the
the ways, how can we set up and

78
00:04:38,474 --> 00:04:43,129
then do a simple analysis and then
understand how can we make use of it.

79
00:04:44,714 --> 00:04:46,304
Why did I choose amplitude?

80
00:04:46,484 --> 00:04:50,684
It is because it is easy to track
and understand the user behavior.

81
00:04:50,684 --> 00:04:53,544
It is pretty easy and simple to set it up.

82
00:04:53,914 --> 00:04:55,594
So let's say that you're a product.

83
00:04:55,644 --> 00:04:58,984
Say, let's say that your product
manager wants to know if a user users

84
00:04:58,984 --> 00:05:02,914
are using a feature and a creative
funnel and a cohort in seconds, right?

85
00:05:02,914 --> 00:05:07,044
So that amplitude can help can
help you to do that pretty fast.

86
00:05:07,584 --> 00:05:11,274
What's better, you can also send a
dashboard to to your team without

87
00:05:11,574 --> 00:05:13,464
any SQL or any analytics needs.

88
00:05:13,464 --> 00:05:14,544
So it's all self-serve.

89
00:05:15,084 --> 00:05:18,234
So that's the real time collaboration
which we can get out of the

90
00:05:18,574 --> 00:05:20,544
these enterprise focus tools.

91
00:05:22,359 --> 00:05:26,899
Let's say that we take a example of
signup, so a signup funnel, right?

92
00:05:26,899 --> 00:05:30,279
So real world example, say
we are losing users midway.

93
00:05:30,489 --> 00:05:31,759
So we can break it down.

94
00:05:31,759 --> 00:05:33,419
We can understand that we can.

95
00:05:35,024 --> 00:05:38,804
Funnel such a way that we can start with
signup start, and then the user enter

96
00:05:38,804 --> 00:05:40,904
the email and then sign up success.

97
00:05:41,204 --> 00:05:45,894
Let's say that if 70% start but only
20% finish, we 20% complete the signup

98
00:05:45,894 --> 00:05:47,964
success, then we know there is a friction.

99
00:05:47,964 --> 00:05:50,514
Maybe we test a shorter form, so aptitude.

100
00:05:51,289 --> 00:05:55,999
Let's us run that habit test and
see if more users complete sign up.

101
00:05:56,329 --> 00:05:57,889
We can play around with variations.

102
00:05:57,889 --> 00:06:01,459
We can reduce the step, or maybe we
can introduce the accordion or we can

103
00:06:01,459 --> 00:06:07,249
introduce a single page so that there
are multiple ways to test it out and

104
00:06:07,249 --> 00:06:09,319
roll it out to the certain segments.

105
00:06:09,319 --> 00:06:14,299
Or maybe a same similar cohorts understand
what is working, what is not working.

106
00:06:14,659 --> 00:06:18,599
So those are the flexibility we
generally get with final analysis.

107
00:06:18,599 --> 00:06:19,709
And then experiments.

108
00:06:21,289 --> 00:06:25,329
How do we actually integrate
a, in this case, the amplitude

109
00:06:25,669 --> 00:06:27,079
tracking like analytics tool?

110
00:06:27,379 --> 00:06:30,434
So this is pretty standard and
it's pretty straightforward

111
00:06:30,434 --> 00:06:31,904
with most of the tools cases.

112
00:06:32,174 --> 00:06:36,544
So all we do is basically we try
to, import the Amplitude library or

113
00:06:36,544 --> 00:06:40,654
maybe, so for each and every client
and then each and every framework

114
00:06:40,654 --> 00:06:42,944
there will be a respective library.

115
00:06:42,944 --> 00:06:45,524
We need to input, and then we
need to visualize with the API

116
00:06:45,554 --> 00:06:49,694
key, which we which we get when
we subscribe to the any any tool.

117
00:06:50,794 --> 00:06:54,454
And then here we are looking at a
example with React, where we just

118
00:06:54,454 --> 00:06:58,999
import the amplitude and then all we
have to do is basically just log the

119
00:06:58,999 --> 00:07:03,439
event whenever we want to whenever the
user takes an action or whenever there

120
00:07:03,439 --> 00:07:05,989
is a navigation or any other action.

121
00:07:06,319 --> 00:07:10,399
So all we do is basically pass the event
name and then associated properties.

122
00:07:10,729 --> 00:07:13,509
So in this case it can be
the name or it could be.

123
00:07:14,099 --> 00:07:17,489
Number of times clicked or the time
spent, like you can pretty much, we

124
00:07:17,489 --> 00:07:22,594
can send all custom properties into the
event and then we can try to track them.

125
00:07:24,709 --> 00:07:28,879
So what are, what is the
optimist way of analytics setup?

126
00:07:29,209 --> 00:07:33,019
So the idea is tracking
starts with a nice plan.

127
00:07:33,019 --> 00:07:37,669
So we cannot just log everything
right, so that, that blows up the data.

128
00:07:37,669 --> 00:07:40,209
And obviously it'll also there are tools.

129
00:07:40,674 --> 00:07:43,104
Charge you based on the amount
of data you're tracking.

130
00:07:43,104 --> 00:07:46,224
So obviously we don't want to end
up track each and everything, so we

131
00:07:46,224 --> 00:07:49,664
have to have a plan, and then we have
to have a procedure, or at least I

132
00:07:49,664 --> 00:07:54,114
can see a structure to tracking or
the analytics you want to target.

133
00:07:54,444 --> 00:07:58,224
So in this case, we have to define a
clean event list, like what we want to

134
00:07:58,224 --> 00:08:02,224
track, and then what are the properties,
which we may think will be helpful to.

135
00:08:02,484 --> 00:08:03,594
Do the analysis, right?

136
00:08:03,654 --> 00:08:04,344
So in the future.

137
00:08:04,594 --> 00:08:08,034
And then also we can also have some
standard patterns, like consistent

138
00:08:08,034 --> 00:08:10,044
names, group related actions.

139
00:08:10,375 --> 00:08:14,195
Let's say that when a user's login we
can also use the user ID to connect the

140
00:08:14,195 --> 00:08:18,185
dots, meaning like we can track, we can
pass the user ID in the login session

141
00:08:18,185 --> 00:08:22,705
so that all the action related to that
user is available in that user list.

142
00:08:23,815 --> 00:08:27,055
This way we see both anonymous and
the logged in user behavior together.

143
00:08:28,164 --> 00:08:30,315
So how do we run the AB test?

144
00:08:30,585 --> 00:08:35,535
So let's say that we want to test if a
new call to action increases the signup

145
00:08:36,015 --> 00:08:38,234
versus not performing well, right?

146
00:08:38,234 --> 00:08:39,554
So how do we want to test it?

147
00:08:39,944 --> 00:08:42,794
We can do that with the
Amplitude experiment.

148
00:08:43,325 --> 00:08:45,245
We can split the users into two groups.

149
00:08:45,405 --> 00:08:49,695
Let's say that A and B. So we call
it as experiment A and experiment B.

150
00:08:49,860 --> 00:08:52,485
A is the old design and
B is the new design.

151
00:08:52,905 --> 00:08:55,005
Then we can see how they're converting.

152
00:08:55,365 --> 00:09:00,255
So we'll have the conversion
rates for each cohort each.

153
00:09:00,535 --> 00:09:01,165
Experiment.

154
00:09:01,195 --> 00:09:03,145
Each cohort is there in the experiment.

155
00:09:03,145 --> 00:09:06,805
And then see, we can see the,
which which cohort or which

156
00:09:06,805 --> 00:09:08,185
experiment is doing better.

157
00:09:08,635 --> 00:09:14,165
So then we can get the get the percentages
and then we can confidently say that which

158
00:09:14,165 --> 00:09:16,055
version is performing better versus the.

159
00:09:17,580 --> 00:09:22,050
So this is where the actual power
comes in, and this is where the product

160
00:09:22,450 --> 00:09:26,620
design and then the growth teams
can effectively make use of running

161
00:09:26,620 --> 00:09:30,970
experiments and then understand what
is working for the, for your users.

162
00:09:33,345 --> 00:09:36,505
So how can an engineer
make use of the analytics?

163
00:09:36,805 --> 00:09:39,715
So the best part is we can
also debug with analytics.

164
00:09:40,105 --> 00:09:43,405
So let's say that you ever
released a feature and then

165
00:09:43,405 --> 00:09:44,695
suddenly the conversion route.

166
00:09:44,935 --> 00:09:50,185
So with analytics, we can spot that
trend and filter by browser or version

167
00:09:50,245 --> 00:09:52,075
and correlate with a recent deployment.

168
00:09:52,600 --> 00:09:58,120
Also we can get into more deep dive,
deeper and figuring out by session

169
00:09:58,120 --> 00:10:02,140
replace, we can literally watch the user
struggle, meaning like where the user able

170
00:10:02,140 --> 00:10:04,290
to proceed versus where user got struck.

171
00:10:04,650 --> 00:10:06,790
It's like time travel for debugging.

172
00:10:08,935 --> 00:10:12,485
So what are we taking
away of this session?

173
00:10:12,485 --> 00:10:14,605
So the the summary or what the outcome is?

174
00:10:14,605 --> 00:10:18,025
Basically after this session,
we want frontend analytics.

175
00:10:18,025 --> 00:10:20,995
We want to understand that frontend
analytics isn't just about the

176
00:10:20,995 --> 00:10:25,195
dashboards, it's about closing the
feedback loop between what we build

177
00:10:25,195 --> 00:10:27,065
and what is the user's experience.

178
00:10:27,665 --> 00:10:31,545
So we can start small track a few
meaningful events, use tools like

179
00:10:31,545 --> 00:10:35,470
Amplitude amplitude to make a. To
make those insight visible across

180
00:10:35,470 --> 00:10:38,590
teams and then use their data
to build confidently together.

181
00:10:39,370 --> 00:10:43,270
So yeah, that's pretty much about
high level, like what we can do and

182
00:10:43,270 --> 00:10:47,350
what are the advantages and what
can we make with threat analytics.

183
00:10:47,620 --> 00:10:47,980
Thank you.

184
00:10:48,040 --> 00:10:49,440
Thank you for giving this opportunity.

185
00:10:49,440 --> 00:10:50,250
Thank you for listening.

