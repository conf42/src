1
00:00:00,040 --> 00:00:00,480
Today.

2
00:00:00,900 --> 00:00:09,959
I will share with you some insights about
IoT and mobile, in particular, how to make

3
00:00:09,960 --> 00:00:18,209
them work together and get the best out
of them to debug and develop application.

4
00:00:18,709 --> 00:00:25,479
So my talk is called unveiling the
vital link between IoT and mobile.

5
00:00:25,480 --> 00:00:28,780
The power of telemetry.

6
00:00:29,280 --> 00:00:35,430
And just before starting, I invite you
to use the chat and drop a message about

7
00:00:35,440 --> 00:00:40,650
if you are using telemetry, which one
and how telemetry solve your issue.

8
00:00:40,660 --> 00:00:45,720
So I'm curious to see telemetry
in action also for you.

9
00:00:46,220 --> 00:00:48,370
But just before starting.

10
00:00:49,175 --> 00:00:53,445
Let me take a just second
to introduce myself.

11
00:00:53,945 --> 00:00:54,395
Ciao.

12
00:00:54,455 --> 00:00:56,095
Hi, I'm Matteo.

13
00:00:56,885 --> 00:00:59,375
I'm a senior mobile engineer.

14
00:00:59,585 --> 00:01:08,015
I start back in days when the first,
beta of IUS was release, to the public.

15
00:01:08,195 --> 00:01:14,245
So as you can imagine, a bit of time ago
and for many years, more than 15 so far.

16
00:01:14,795 --> 00:01:21,515
I work in developing by application,
for iOS sometimes also for Android and

17
00:01:21,525 --> 00:01:30,834
lately back more since 2019 in Flutter
or mobile devices as companion app of

18
00:01:31,204 --> 00:01:38,425
IoT project and with my team, I also
work in developing some, internal tools,

19
00:01:38,925 --> 00:01:41,865
for example, one related to telemetry.

20
00:01:42,515 --> 00:01:46,925
To help our daily job
and make stuff working.

21
00:01:47,340 --> 00:01:52,980
easier, not only for us as developer, but
also for our friend of the QA department.

22
00:01:53,480 --> 00:01:58,699
Last but not least, let me say
I'm an happy and enthusiastic

23
00:01:59,040 --> 00:02:00,019
open source contributor.

24
00:02:00,610 --> 00:02:08,620
So probably you will find some of my
library or awesome collection of links.

25
00:02:09,070 --> 00:02:12,310
One is for sure awesome, swift.

26
00:02:12,400 --> 00:02:14,940
Another is related with awesome BLE.

27
00:02:15,440 --> 00:02:19,910
I'm also the mobile lead of a team.

28
00:02:20,410 --> 00:02:27,040
In intent and intent is a company with
more than 10 years of experience, in

29
00:02:27,040 --> 00:02:32,990
building as you imagine application
companion app or connected device.

30
00:02:33,900 --> 00:02:40,850
So let's say an expertise perfectly
fit our aim, our customer, some

31
00:02:40,850 --> 00:02:47,500
of them are, aura Bosh, and we
are working every day with new.

32
00:02:48,125 --> 00:02:56,225
exception startup, and we're helping
them to start their journey from the

33
00:02:56,225 --> 00:02:58,955
project to the real product on the market.

34
00:02:59,455 --> 00:03:03,385
So let's start speaking
about telemetry now.

35
00:03:03,885 --> 00:03:10,060
Telemetry It is a way to collect
data, but in a very specific way.

36
00:03:10,560 --> 00:03:15,170
Automated, and this is a key
word that I want to underline.

37
00:03:15,820 --> 00:03:19,460
Automation is very important.

38
00:03:19,960 --> 00:03:23,310
The collection of the data
should not be human driven.

39
00:03:23,580 --> 00:03:28,510
And later we'll see why telemetry
is a way to collect a constant.

40
00:03:29,010 --> 00:03:36,370
Stream of data that allow you to see what
happened back in the days in the second

41
00:03:36,870 --> 00:03:45,510
in the minutes and basically add the whole
history of what happened is such important

42
00:03:45,710 --> 00:03:53,150
because as you can imagine, allow you to
have a full reply of what happened and

43
00:03:53,150 --> 00:03:58,155
this one is very useful because it can
happen that you are not Transcribed At

44
00:03:58,155 --> 00:04:05,054
your desk in that let me share an example,
a very high level example, totally, let's

45
00:04:05,054 --> 00:04:10,814
say from a different context, but to
have an idea what telemetry is and how it

46
00:04:10,914 --> 00:04:17,304
works, I share with you one of my passion
that is, building, applying custom drone.

47
00:04:18,244 --> 00:04:23,234
Building a custom drone is not such
a trivial, let's say operation.

48
00:04:23,734 --> 00:04:29,634
And this one already help you to
understand that a telemetry tool is useful

49
00:04:29,714 --> 00:04:32,664
in many different stage of a product.

50
00:04:33,164 --> 00:04:38,354
For a drone is useful when you start
to find how to build that already.

51
00:04:38,854 --> 00:04:43,144
Then when you start to assemble and
put the first screw And then when you

52
00:04:43,144 --> 00:04:48,034
start to do the, let's say, first very
fly, and then when you start to enjoy

53
00:04:48,534 --> 00:04:50,854
flying with that, why is such important?

54
00:04:51,644 --> 00:04:57,834
As you can imagine, a drone has
inside the board that keeps,

55
00:04:57,864 --> 00:05:00,024
let's say, the brain of the drone.

56
00:05:00,624 --> 00:05:02,094
A drone is composed by many components.

57
00:05:02,594 --> 00:05:09,684
motors, at least four propeller,
antenna, GPS, and battery, and

58
00:05:09,684 --> 00:05:11,344
everything has to work smoothly.

59
00:05:11,564 --> 00:05:16,594
Otherwise, instead of having a
beautiful drone fly, we have, let's say

60
00:05:17,094 --> 00:05:21,774
Or in the worst scenario, we have
basically something splashed on the floor.

61
00:05:22,054 --> 00:05:24,294
according to that, we don't
want to do that and we want

62
00:05:24,524 --> 00:05:26,114
to have fun with our drone.

63
00:05:26,674 --> 00:05:32,514
We need to use some specific tool
and drone have many open source

64
00:05:32,514 --> 00:05:34,314
firmware that you can flash.

65
00:05:35,024 --> 00:05:39,054
And this firmware grants you access
to many information in real time.

66
00:05:39,054 --> 00:05:39,184
www.

67
00:05:39,185 --> 00:05:39,194
Flydreamers.

68
00:05:39,194 --> 00:05:47,284
com when you build that, you can use
steel, for example, let's say you

69
00:05:47,284 --> 00:05:53,304
art to install the firmware, but as
you can imagine, meantime, you fly.

70
00:05:53,959 --> 00:05:55,309
there's no way to do that.

71
00:05:55,599 --> 00:05:58,559
So you need data in real
time in a different manner.

72
00:05:58,709 --> 00:06:00,529
And here telemetry comes to help.

73
00:06:01,159 --> 00:06:05,779
Telemetry is able to tell you if
the speed of each of the engine from

74
00:06:05,789 --> 00:06:08,819
this one, you can understand if the
propeller are working the proper way.

75
00:06:09,319 --> 00:06:15,259
If the batteries in the proper, let's
say temperature and how many millivolts

76
00:06:15,259 --> 00:06:20,479
you have still, because if for the first
fly is important to understand that

77
00:06:20,539 --> 00:06:25,449
everything works as expected for the next
slide is important to understand that.

78
00:06:26,169 --> 00:06:31,709
you have battery enough, the battery
is in the proper position, balance, the

79
00:06:31,709 --> 00:06:36,859
engine are not overheating, and you can
collect many of this information, your

80
00:06:36,889 --> 00:06:44,809
position through the GPS, the audio and
video feed from the camera, the propeller

81
00:06:44,809 --> 00:06:49,919
speed, the battery consumption, and
if you put together this one, you have

82
00:06:50,019 --> 00:06:53,439
the full information of your flight.

83
00:06:53,469 --> 00:06:55,429
You can listen, if you can
come back first of all.

84
00:06:55,999 --> 00:07:00,339
That is not such a trivial stuff because
you can even go too far, too high, and

85
00:07:00,339 --> 00:07:05,059
the battery is not able to last that
long, so there is not, let's say, return

86
00:07:05,079 --> 00:07:08,149
home, and this one can be problematic.

87
00:07:08,559 --> 00:07:11,379
You need to know the GPS position
because if anything happens and the

88
00:07:11,399 --> 00:07:16,754
drone falls down, You have to find
that another, not such a trivial stuff.

89
00:07:17,634 --> 00:07:24,364
So let me say drawn is a perfect
example of starting from zero to

90
00:07:24,364 --> 00:07:30,634
reach the final product, how much
a simple stuff like telemetry.

91
00:07:30,634 --> 00:07:38,174
So a full automated feed of data coming
from a device in this case, helped you

92
00:07:38,434 --> 00:07:41,174
to, a different stage, achieve the goal.

93
00:07:41,674 --> 00:07:42,744
One information more.

94
00:07:43,244 --> 00:07:47,594
Is, as you can imagine that we have
different kind of connection, and

95
00:07:47,604 --> 00:07:51,294
in this part, we need to, let's
say in our particular scenario.

96
00:07:51,344 --> 00:07:54,234
So considering that we have a
mobile phone, we are speaking

97
00:07:54,234 --> 00:07:57,414
about indirect way of connection.

98
00:07:57,654 --> 00:07:58,804
Let's play a reversal.

99
00:07:59,054 --> 00:08:03,824
A peripheral that has a standalone
connection, internet connection, can be,

100
00:08:04,064 --> 00:08:10,834
I don't know, Wi Fi rather than NB IoT,
and a SIM on that is pretty standalone.

101
00:08:11,244 --> 00:08:15,534
But you can apply telemetry
over there too for sure.

102
00:08:16,084 --> 00:08:20,924
in a context like BLE,
so we have two options.

103
00:08:20,984 --> 00:08:22,244
Or we have physical gateway.

104
00:08:22,829 --> 00:08:26,259
or you need to ask your
phone to act as a gateway.

105
00:08:26,859 --> 00:08:31,749
So the phone is able to, gather all the
information as a kind of, let's say,

106
00:08:31,799 --> 00:08:38,169
transparent proxy and bring them to, to
a tool where you collect all the data.

107
00:08:38,669 --> 00:08:41,639
Okay, sounds good, I think.

108
00:08:41,649 --> 00:08:46,219
And I think already I catch some
of your possible, let's say, doubt.

109
00:08:46,479 --> 00:08:49,139
So what's the difference
between telemetry and logging?

110
00:08:49,639 --> 00:08:50,169
Good question.

111
00:08:50,719 --> 00:08:51,369
it's pretty simple.

112
00:08:52,139 --> 00:08:55,199
And we come back to the
very, very beginning slide.

113
00:08:55,719 --> 00:08:57,089
Automation is the key.

114
00:08:57,869 --> 00:09:04,189
in this scenario, logging means that
there's a developer that is entitled to

115
00:09:04,919 --> 00:09:09,389
develop some code and drop locks inside
that to double check what's going on.

116
00:09:09,889 --> 00:09:14,599
This one, by definition, can be error
prone, can even be that I did the best

117
00:09:14,599 --> 00:09:17,289
job ever, but I forgot one condition.

118
00:09:18,139 --> 00:09:24,879
And when you're debugging in, say,
special condition, and we'll see this

119
00:09:24,879 --> 00:09:27,689
later, and this one can be problematic.

120
00:09:28,189 --> 00:09:33,349
So telemetry helps a lot because as
I mentioned can be considered as a

121
00:09:33,459 --> 00:09:40,909
transparent proxy that grab the data
and keep them and store them even

122
00:09:40,909 --> 00:09:44,459
locally in the beginning the phone if
the phone has no connection but later

123
00:09:44,459 --> 00:09:47,249
is able to sync To an external system.

124
00:09:47,349 --> 00:09:50,579
And with this external system,
you can have, chronologically

125
00:09:50,599 --> 00:09:54,349
all the what happened and double
check how to make it work.

126
00:09:54,849 --> 00:10:00,779
Why I was saying that is important
and can be risky use logic because

127
00:10:00,819 --> 00:10:07,109
if you are debugging in special
condition, so not next to your desk,

128
00:10:07,609 --> 00:10:11,644
if you figure out that they forgot
to drop a lock, you can It's tricky.

129
00:10:12,434 --> 00:10:15,844
If you forgot that I dropped the log
and the application is being used

130
00:10:15,864 --> 00:10:23,594
to climb a mountain or to swim or
go underwater or drive a fast car.

131
00:10:24,584 --> 00:10:27,624
I don't know if you'll have time to
issue a new version of the app to be

132
00:10:27,624 --> 00:10:29,964
used to debug and catch what's missing.

133
00:10:30,034 --> 00:10:33,494
a tool that grants me
full access to the data.

134
00:10:34,389 --> 00:10:37,649
makes my life easier and
calmer at the same time.

135
00:10:37,789 --> 00:10:42,139
So I don't have to think about, Oh, I
put all the log in the proper place.

136
00:10:42,829 --> 00:10:43,969
Oh, I hope so.

137
00:10:44,629 --> 00:10:48,649
Let's hope that the guy doesn't have
to climb 50 million times this hill.

138
00:10:49,149 --> 00:10:50,269
So it doesn't work like this.

139
00:10:50,419 --> 00:10:52,629
So logging is very important.

140
00:10:53,129 --> 00:10:53,894
What's inside telemetry?

141
00:10:53,894 --> 00:10:56,744
The proper answer probably would
be, and should be, everything.

142
00:10:56,744 --> 00:11:00,449
I tried to put down some of
the log in the proper place.

143
00:11:00,949 --> 00:11:02,999
I thought that usually are used.

144
00:11:03,009 --> 00:11:06,639
So for sure, the connection
status is useful.

145
00:11:07,219 --> 00:11:08,839
More to know if you are connected or not.

146
00:11:09,379 --> 00:11:10,179
There are SSI.

147
00:11:10,199 --> 00:11:13,939
So how much is the signal strength of BLE?

148
00:11:13,939 --> 00:11:19,089
The battery level of the peripheral or
the battery levels if the peripheral has

149
00:11:19,139 --> 00:11:23,116
multiple battery or What do you call it?

150
00:11:23,116 --> 00:11:23,451
Peripheral.

151
00:11:23,451 --> 00:11:25,799
Because even this one
is another condition.

152
00:11:26,299 --> 00:11:31,309
The full flow of the command sent,
received, error, codes, for example,

153
00:11:31,309 --> 00:11:32,889
the firmware version of the device.

154
00:11:33,169 --> 00:11:34,409
So pack all together.

155
00:11:35,249 --> 00:11:36,339
This one is very important.

156
00:11:36,439 --> 00:11:39,689
So give you an idea of what's going on.

157
00:11:40,189 --> 00:11:44,369
And allow you to create a kind
of, let's say, digital twin

158
00:11:44,869 --> 00:11:46,579
reply, the full experience.

159
00:11:47,079 --> 00:11:52,779
And this one is very useful later when
you sit back to your office desk and you

160
00:11:52,779 --> 00:11:59,149
need to the back so you can go check all
the data step by step understand what's

161
00:11:59,509 --> 00:12:04,289
the status of the peripheral understand
what's the mobile phone send and try

162
00:12:04,339 --> 00:12:07,489
to figure out where is the income.

163
00:12:07,489 --> 00:12:13,119
I want to share with you an
example telemetry and let's

164
00:12:13,119 --> 00:12:14,339
call that telemetry in action.

165
00:12:14,349 --> 00:12:16,939
So have a beautiful daily tracker.

166
00:12:17,074 --> 00:12:24,144
It works in the swimming pool and for sure
is not an extreme place, that's for sure.

167
00:12:24,144 --> 00:12:28,534
You need some, pay some attention if
you don't want to make your laptop

168
00:12:28,744 --> 00:12:35,294
fly in the water and start to figure
out, how much it's, let's say.

169
00:12:35,794 --> 00:12:37,414
water, how much is waterproof.

170
00:12:37,514 --> 00:12:40,314
and also, it's a high
humidity environment.

171
00:12:40,314 --> 00:12:42,704
So there are some
precautions that are neat.

172
00:12:43,204 --> 00:12:46,884
And let's say that this device,
for example, is used by a trainer.

173
00:12:47,244 --> 00:12:52,029
So a person that is standing still and
waiting the person that is swimming to

174
00:12:52,409 --> 00:12:56,239
come back and, let's say, start a new lap.

175
00:12:56,739 --> 00:12:57,799
So this is the scenario.

176
00:12:58,339 --> 00:13:01,289
I decided to split that in three part.

177
00:13:01,389 --> 00:13:07,159
So first of all, behavioral debugging,
old school, totally old school approach.

178
00:13:07,659 --> 00:13:10,099
The trainer is checking the phone.

179
00:13:10,599 --> 00:13:11,639
The person is coming.

180
00:13:12,569 --> 00:13:13,049
Noted.

181
00:13:13,549 --> 00:13:15,259
This one is the behavioral debug.

182
00:13:15,419 --> 00:13:16,389
We stop over there.

183
00:13:16,389 --> 00:13:16,439
Okay.

184
00:13:16,939 --> 00:13:18,979
nothing more, nothing less.

185
00:13:19,479 --> 00:13:20,199
Log debugging.

186
00:13:20,539 --> 00:13:26,369
Let's say that we bring our laptop, we
keep connected to the phone or the tablet.

187
00:13:27,129 --> 00:13:31,219
And what we can see, I put some logs
here and there, battery updated.

188
00:13:31,719 --> 00:13:32,029
Beautiful.

189
00:13:32,529 --> 00:13:34,019
Peripheral disk analytics.

190
00:13:34,519 --> 00:13:34,909
Interesting.

191
00:13:35,409 --> 00:13:37,109
But I don't have a clear
idea what's going on.

192
00:13:37,609 --> 00:13:37,909
Telemetry.

193
00:13:37,989 --> 00:13:42,279
So in this case, instead, me as
a developer, I'm in the office.

194
00:13:42,779 --> 00:13:47,739
and I'm looking at the flow
of data coming and I see that

195
00:13:48,149 --> 00:13:50,449
there is a GAN notification.

196
00:13:50,949 --> 00:13:51,359
Good.

197
00:13:51,859 --> 00:13:54,489
This one brings some information
like the firmware version.

198
00:13:54,639 --> 00:13:55,019
Perfect.

199
00:13:55,519 --> 00:13:59,909
But also show me that the battery
drops suddenly to five percent.

200
00:14:00,199 --> 00:14:00,409
very low level.

201
00:14:00,909 --> 00:14:01,639
and then disconnect.

202
00:14:02,139 --> 00:14:07,449
Totally different scenario from, verify
disconnect and, I don't have the data.

203
00:14:08,189 --> 00:14:10,389
Behavior UI debugging.

204
00:14:10,889 --> 00:14:15,319
In this way, I'm in the office,
I can sit, I can try to replicate

205
00:14:15,319 --> 00:14:17,209
the situation and understand

206
00:14:17,709 --> 00:14:20,399
that the sync for sure is intermittent.

207
00:14:20,399 --> 00:14:22,049
So this is the issue.

208
00:14:22,549 --> 00:14:25,539
But the other stuff is that
with the telemetry I was able

209
00:14:25,539 --> 00:14:26,844
to understand that the battery.

210
00:14:27,724 --> 00:14:33,354
After a specific command start
to fall down so much that make

211
00:14:33,374 --> 00:14:34,804
the disconnection in place.

212
00:14:35,304 --> 00:14:41,264
The result, as you can imagine, is
a, the developer doesn't have to

213
00:14:41,434 --> 00:14:43,164
start swimming or learn swimming.

214
00:14:44,154 --> 00:14:48,624
It's not trivial stuff, but as you
can imagine, I am able to debug

215
00:14:48,674 --> 00:14:53,524
that in hour or even less and
staying, for example, in the office.

216
00:14:54,024 --> 00:14:55,074
and much faster.

217
00:14:55,574 --> 00:15:01,104
So this kind of stuff allow me to
have a, let's say really a digital

218
00:15:01,354 --> 00:15:06,154
clone, the device that is in the swim
in the time, have the full flow of

219
00:15:06,154 --> 00:15:12,074
data and they can instruct with the
framework team and the QA team, the

220
00:15:12,074 --> 00:15:18,134
device to replicate the same data and
figure out what's triggering that.

221
00:15:18,254 --> 00:15:22,884
And then I can understand, for example,
that is not a software demo bot.

222
00:15:23,419 --> 00:15:27,789
Issue, but it's more a firmware
implementation that generate the issue,

223
00:15:28,719 --> 00:15:35,849
maybe, and try to address the bug,
how a tool like this works, a tool

224
00:15:35,879 --> 00:15:42,309
like this works in a way, basically
on any device, because user is built

225
00:15:42,349 --> 00:15:45,999
on top of the native implementation.

226
00:15:46,499 --> 00:15:52,659
So in the case of iOS, yes,
it's objective C and in Android.

227
00:15:53,559 --> 00:15:57,659
No, it's not in Java, but
it's a very low level.

228
00:15:58,389 --> 00:16:01,289
So Flutter and React Native
will not have issue with that.

229
00:16:02,099 --> 00:16:04,209
You just import them and that's it.

230
00:16:04,379 --> 00:16:06,456
So you can start to collect the data.

231
00:16:06,456 --> 00:16:11,979
The data can be taken, stored locally,
maybe the device, I'm climbing a mountain.

232
00:16:12,059 --> 00:16:13,449
There is no internet at the moment.

233
00:16:14,299 --> 00:16:16,719
So I can store the whole flow of data.

234
00:16:17,289 --> 00:16:18,279
in a local database.

235
00:16:18,459 --> 00:16:21,929
And then as soon as I have internet
started syncing with a system that

236
00:16:21,989 --> 00:16:23,759
allow me later to browse that.

237
00:16:24,259 --> 00:16:27,829
And later I can browse this data remote.

238
00:16:27,909 --> 00:16:33,049
So in any place, if I'm in the office,
if I'm in a special area dedicated for

239
00:16:33,129 --> 00:16:38,979
testing, and many people can check that
the QA department, me as a developer,

240
00:16:39,019 --> 00:16:43,119
my colleague, I can share snippet
information to the firmware team, and

241
00:16:43,119 --> 00:16:44,799
they can look into that and debug.

242
00:16:45,299 --> 00:16:50,599
So debugging without
telemetry, if you ask me, no.

243
00:16:51,039 --> 00:16:54,769
it's an alley that allows
me to have less to do.

244
00:16:54,919 --> 00:16:59,079
I don't have to remember to cover
many stuff in terms of logs.

245
00:17:00,024 --> 00:17:05,454
So I don't have to make my code, let's
say, full of flux and to catch all

246
00:17:05,454 --> 00:17:12,754
the possible, let's say, nuances, edge
cases, and much more calm, QA team is

247
00:17:12,754 --> 00:17:17,504
much more happy because they have all
the flow of data can even be even too

248
00:17:17,504 --> 00:17:20,924
much, let's say, but we can filter them.

249
00:17:20,924 --> 00:17:25,124
So better to collect the data, most
of them, and then try to understand

250
00:17:25,124 --> 00:17:26,354
on top that what's going on.

251
00:17:27,239 --> 00:17:31,279
We can repeat the scenario as many
times we want because now we have

252
00:17:31,299 --> 00:17:34,329
the data, we know the flow, we
know the steps, and we don't know

253
00:17:34,399 --> 00:17:38,739
only the steps from a behavioral
standpoint or a recorded screen, we

254
00:17:38,739 --> 00:17:40,319
know what's going on under the hood.

255
00:17:41,169 --> 00:17:48,409
So we can have some instruments other
that help us to feed the digital twin

256
00:17:48,909 --> 00:17:54,229
and see how to make it work can be
a digital twin hardware or software.

257
00:17:54,229 --> 00:17:54,354
for listening.

258
00:17:54,844 --> 00:18:00,074
As a simulator, and this one help us
to, shrink a lot, the development.

259
00:18:00,754 --> 00:18:02,954
So why using telemetry?

260
00:18:03,454 --> 00:18:04,004
Save money.

261
00:18:04,684 --> 00:18:10,024
So if I have a prototype and I want
to jump on the market, if it can help,

262
00:18:10,564 --> 00:18:13,474
the firmware team, the hardware team.

263
00:18:14,254 --> 00:18:19,444
giving insights real time on what's
going on, fine tuning and implementation,

264
00:18:20,174 --> 00:18:25,204
catch the bug at the earliest stage
and find the solution much easier,

265
00:18:25,574 --> 00:18:27,744
faster without repeating many time.

266
00:18:28,184 --> 00:18:31,154
Let's say, outdoor test.

267
00:18:31,734 --> 00:18:32,214
For sure.

268
00:18:32,214 --> 00:18:36,044
I'm already saving time and
strictly connected to save time.

269
00:18:36,094 --> 00:18:36,574
I can.

270
00:18:36,999 --> 00:18:40,619
save money so I can cut the
cost of debugging and testing.

271
00:18:41,119 --> 00:18:48,529
Last but not least, I will have
much happier customer and the return

272
00:18:48,549 --> 00:18:52,119
rate risk to perform way better.

273
00:18:52,119 --> 00:18:56,759
So be less, let's say, huge than expected.

274
00:18:57,049 --> 00:19:01,899
So if I have a good stable
product, I don't have to worry

275
00:19:01,969 --> 00:19:03,749
about the product come back.

276
00:19:04,009 --> 00:19:04,724
So this one.

277
00:19:05,084 --> 00:19:09,494
These are very other important
stuff related to the word iot

278
00:19:09,554 --> 00:19:11,234
of iot in particular on BLE.

279
00:19:11,914 --> 00:19:17,724
If you don't believe me, you can check
many on the comments of BLE, related

280
00:19:17,724 --> 00:19:24,794
application that doesn't have a fledge,
let's say overview before the launch.

281
00:19:25,294 --> 00:19:27,399
And you can see in the
comment of the application.

282
00:19:27,899 --> 00:19:29,189
So that's it.

283
00:19:30,009 --> 00:19:36,119
I hope I was able to share with you
an idea of what the limiter is, in

284
00:19:36,119 --> 00:19:38,859
particular in the scenario of BLE.

285
00:19:38,869 --> 00:19:43,889
So how to use a device like a smartphone
to collect data and help improve

286
00:19:43,959 --> 00:19:45,619
the way you are working every day.

287
00:19:46,464 --> 00:19:49,944
And make your own say go to
market in case you are the owner

288
00:19:49,944 --> 00:19:51,614
of the product much easier.

289
00:19:52,114 --> 00:19:53,544
If you want, I'm here.

290
00:19:53,844 --> 00:19:59,144
Let's discuss together, telemetry
and let's explore also your needs.

291
00:19:59,174 --> 00:20:00,504
So if you have any need.

292
00:20:00,924 --> 00:20:06,644
for your IOT device, your IOT project,
and you want to discuss how to improve,

293
00:20:06,834 --> 00:20:12,844
for example, the reliability of the BLE
connection, you are facing an issue with

294
00:20:12,874 --> 00:20:15,624
connection stability, reconnection, etc.

295
00:20:16,124 --> 00:20:18,044
For sure, I think we can help you.

296
00:20:18,564 --> 00:20:20,694
we have the knowledge we have the tool.

297
00:20:21,244 --> 00:20:24,034
So feel free to reach me out on LinkedIn.

298
00:20:24,284 --> 00:20:31,524
You can find me as Teoclipa or you can
drop me an email at grow at winstinton.

299
00:20:31,634 --> 00:20:31,994
com.

300
00:20:32,494 --> 00:20:39,514
And yeah, thank you for your time and hope
we will see and meet each other and can

301
00:20:39,554 --> 00:20:43,044
help you with your beautiful IoT project.

302
00:20:43,514 --> 00:20:43,624
Ciao.

