1
00:00:00,200 --> 00:00:00,980
Hello everyone.

2
00:00:01,710 --> 00:00:06,200
Welcome to my talk titled Sisyphean
struggle navigating performance

3
00:00:06,200 --> 00:00:08,020
issues in modern IT landscapes.

4
00:00:08,189 --> 00:00:10,730
My name is Ravitej Uveeramachaneni.

5
00:00:11,454 --> 00:00:16,944
I work as a principal software engineer
for a software services based company.

6
00:00:17,685 --> 00:00:22,735
And the main reason, or the main,
topic that I'll be discussing today is

7
00:00:22,765 --> 00:00:30,255
how performance issues plague the IT
industry today, why it's a challenge,

8
00:00:30,315 --> 00:00:34,195
why it's a tough challenge and a
challenge that may never be solved.

9
00:00:34,925 --> 00:00:40,155
you'll all agree, if you've, if any, if
you have, IT experience, you'll all agree.

10
00:00:40,785 --> 00:00:42,665
Performance issues are an ongoing thing.

11
00:00:42,765 --> 00:00:48,515
There's no such thing as, as users being
completely satisfied with performance.

12
00:00:48,965 --> 00:00:53,995
Even if they're satisfied today, they
won't be, in a year from now with the

13
00:00:53,995 --> 00:00:56,995
same systems and the same performance.

14
00:00:57,625 --> 00:01:01,795
so the idea of the talk is just
how performance varies, the

15
00:01:01,795 --> 00:01:03,435
challenges it, it brings up.

16
00:01:03,495 --> 00:01:04,095
And.

17
00:01:05,020 --> 00:01:06,700
And how to overcome them.

18
00:01:07,030 --> 00:01:07,860
so let's get started.

19
00:01:08,360 --> 00:01:08,810
Excuse me.

20
00:01:08,910 --> 00:01:11,820
just a review of the contents
that we were discussing.

21
00:01:11,820 --> 00:01:16,550
So again, like I said, we'll be discussing
why IT performance remains a challenge.

22
00:01:16,650 --> 00:01:20,040
any business line, even if it's a
software company, even one of the

23
00:01:20,040 --> 00:01:24,865
high performing tech ones, why IT
Performance, remains a challenge.

24
00:01:24,875 --> 00:01:30,495
You cannot rest easy on your laurels,
thinking your product is working fine.

25
00:01:30,495 --> 00:01:36,725
Today, you'll have to, you'll have to
account for many unforeseen things.

26
00:01:37,225 --> 00:01:40,395
and so that, so basically why it
performance remains a challenge.

27
00:01:40,910 --> 00:01:44,900
The next thing is the complexity
conundrum in IT systems.

28
00:01:44,940 --> 00:01:52,550
So how complexity of multiple systems
working together impacts performance.

29
00:01:52,930 --> 00:01:54,410
so that's an area of discussion.

30
00:01:54,900 --> 00:01:59,080
Also, we'll be discussing the
rising expectations and of users

31
00:01:59,620 --> 00:02:01,030
when it comes to performance.

32
00:02:01,345 --> 00:02:06,295
Like I said at the beginning, even
if users are happy today, they will

33
00:02:06,295 --> 00:02:09,915
not be a year from now or six months
from now with the same system,

34
00:02:10,095 --> 00:02:11,155
and with the same performance.

35
00:02:11,175 --> 00:02:17,435
Users expectations keep increasing and
with advancements in technology, you

36
00:02:17,445 --> 00:02:24,540
will have you, you will have, even if
your system is performing at the same as

37
00:02:24,550 --> 00:02:30,290
it was performing a year ago, you might
see competitors, come in and perform

38
00:02:30,290 --> 00:02:35,820
at a, a better, level than your product
is performing or, things like that.

39
00:02:35,820 --> 00:02:39,620
So with advancements in technology,
you will always want to be at the

40
00:02:39,650 --> 00:02:41,650
top when it comes to performance.

41
00:02:42,290 --> 00:02:46,040
And then there's the human elephant,
element and, performance challenges.

42
00:02:46,080 --> 00:02:50,730
Things like, how, skilled
labor impacts performance.

43
00:02:51,410 --> 00:02:54,370
And then we'll talk about the
resource constraints and optimization.

44
00:02:54,540 --> 00:02:55,520
the cost algorithm.

45
00:02:55,570 --> 00:03:00,370
There's always, you can always spend a
lot of money to improve performance, but

46
00:03:00,440 --> 00:03:02,970
it comes, obviously it comes at a cost.

47
00:03:03,330 --> 00:03:05,750
So how do you go about, balancing the two?

48
00:03:06,375 --> 00:03:10,032
we'll also talk about advanced
solutions and performance management.

49
00:03:10,032 --> 00:03:13,915
What are the advanced techniques
to monitor performance and so on?

50
00:03:14,905 --> 00:03:17,585
and challenges to definitive solutions.

51
00:03:17,585 --> 00:03:23,485
There might be solutions today as
to how to tackle performance issues.

52
00:03:23,815 --> 00:03:26,515
But what the challenges
are with those solutions.

53
00:03:26,995 --> 00:03:28,345
and what the implications for I.

54
00:03:28,345 --> 00:03:28,475
T.

55
00:03:28,475 --> 00:03:33,995
professionals are, and future research and
directions, when it comes to performance.

56
00:03:34,015 --> 00:03:38,675
And I finally, conclude, the
paper with, why performance

57
00:03:38,675 --> 00:03:39,945
will always be an ongoing thing.

58
00:03:40,445 --> 00:03:42,605
so again, an introduction, as to why I.

59
00:03:42,605 --> 00:03:42,725
T.

60
00:03:42,725 --> 00:03:44,135
performance remains a challenge.

61
00:03:44,855 --> 00:03:46,165
Performance issues in I.

62
00:03:46,165 --> 00:03:46,355
T.

63
00:03:46,355 --> 00:03:48,085
systems continue to
challenge professionals.

64
00:03:48,585 --> 00:03:53,875
Despite major advancements in technology,
think of it, we should always, we should

65
00:03:53,875 --> 00:03:59,685
have put performance issues behind us
with all the technological advancements

66
00:03:59,685 --> 00:04:03,965
today, but that's not what I find,
no matter which, which, the company

67
00:04:03,965 --> 00:04:09,880
I work for, you're always debugging,
something related to performance.

68
00:04:09,880 --> 00:04:11,180
It could be network.

69
00:04:11,630 --> 00:04:13,420
it could be your, data load.

70
00:04:13,420 --> 00:04:14,610
It could be a database.

71
00:04:15,220 --> 00:04:17,400
it could be your UI and so on.

72
00:04:17,430 --> 00:04:23,350
So performance is one of the most
complex challenges to solve because

73
00:04:23,370 --> 00:04:26,470
of so many systems being involved.

74
00:04:27,080 --> 00:04:30,680
You have to, let's say, something
that was working fine yesterday,

75
00:04:30,680 --> 00:04:32,160
suddenly stops working today.

76
00:04:32,660 --> 00:04:33,870
It is hard to pinpoint.

77
00:04:34,390 --> 00:04:37,070
A reason as to why you
restart your system.

78
00:04:37,320 --> 00:04:39,430
Things are back working fine.

79
00:04:39,430 --> 00:04:45,130
Maybe they are Back to working as normal,
but you cannot you cannot, you can look

80
00:04:45,130 --> 00:04:50,160
at the logs, you can do all the debugging,
but because of so many systems being

81
00:04:50,450 --> 00:04:54,790
involved, you cannot, you sometimes
cannot pinpoint as to why there was a

82
00:04:54,800 --> 00:04:59,390
lag in performance at a certain time,
at a certain time with a certain system.

83
00:05:00,310 --> 00:05:02,320
So it's just a difficult thing.

84
00:05:02,810 --> 00:05:07,290
to pinpoint and it's, it's like I
said, it is an evolving challenge.

85
00:05:07,300 --> 00:05:13,610
It is, it will always be a challenge, 10
years from now, 20 years from now, impacts

86
00:05:14,020 --> 00:05:18,769
and the impact performance issues have on
business, obviously, as any industry, if

87
00:05:19,309 --> 00:05:24,249
their IT systems are not performing well,
it will have a business, impact even more.

88
00:05:24,249 --> 00:05:29,340
So if, Your, company is a software
services provider or, or you live in

89
00:05:29,350 --> 00:05:34,540
the, technology space, take Google,
X or any social media platform.

90
00:05:34,559 --> 00:05:38,610
If you, if your site, or if your,
website goes down for a few minutes,

91
00:05:39,120 --> 00:05:40,870
it costs you millions of dollars.

92
00:05:40,970 --> 00:05:45,120
so it does have performance
has an impact, on the business.

93
00:05:45,580 --> 00:05:49,150
What the key causes are, Performance
challenges mainly arise from,

94
00:05:49,230 --> 00:05:50,880
increasing system complexity.

95
00:05:50,900 --> 00:05:56,120
So as you integrate more systems, if
you're a developer, you, you understand

96
00:05:56,120 --> 00:06:00,970
there is a DevOps side, you, there's
a deployment, side, to your code, then

97
00:06:00,970 --> 00:06:03,060
there is the aspect of writing good code.

98
00:06:03,560 --> 00:06:08,080
so because of complex systems
being involved, those could,

99
00:06:08,120 --> 00:06:09,670
lead to performance, challenges.

100
00:06:10,645 --> 00:06:15,455
So the, again, the purpose of this
presentation is to explore the complex

101
00:06:15,505 --> 00:06:20,335
factors causing persistent IT performance
issues, evaluate the solutions that we

102
00:06:20,335 --> 00:06:24,875
have today, and suggest strategies for
navigating these challenges effectively.

103
00:06:25,375 --> 00:06:28,375
so let's discuss the complexity
conundrum in IT systems.

104
00:06:29,135 --> 00:06:31,255
complex interconnected environments.

105
00:06:31,285 --> 00:06:34,695
They are one of the reasons
for, performance issues.

106
00:06:34,705 --> 00:06:40,035
Modern IT landscapes consist of diverse
interconnected components, including

107
00:06:40,035 --> 00:06:44,875
cloud infrastructure, microservices,
and lots of, Internet of thing devices.

108
00:06:45,755 --> 00:06:51,015
With these, interconnected environments
and conflict, integrations, those,

109
00:06:51,105 --> 00:06:56,235
introduce new bottlenecks, bottlenecks
multiply with complexity, increase

110
00:06:56,695 --> 00:07:00,395
distribution and interdependency,
amplify the risk of performance,

111
00:07:00,605 --> 00:07:02,245
bottlenecks across systems.

112
00:07:02,745 --> 00:07:06,715
like I said a few minutes ago, it's
a challenge to, isolate what the

113
00:07:06,855 --> 00:07:09,045
root cause was for performance.

114
00:07:09,645 --> 00:07:13,645
Because most of the times what
ends up happening is, let's say

115
00:07:13,645 --> 00:07:15,015
you're having a database issue.

116
00:07:15,255 --> 00:07:18,215
You restart the database and
the performance issue is gone.

117
00:07:18,715 --> 00:07:23,715
so the issue is gone, but we still cannot
pinpoint as to why there was a issue

118
00:07:23,715 --> 00:07:28,875
in, in, in the first place because it's
hard to reproduce, performance issues.

119
00:07:29,175 --> 00:07:30,355
So it's a challenge.

120
00:07:30,605 --> 00:07:34,235
It's a challenge of root cause isolation
with each component introducing its

121
00:07:34,235 --> 00:07:35,955
own set of performance characteristics.

122
00:07:36,580 --> 00:07:40,080
isolating and troubleshooting root
causes becomes a demanding task.

123
00:07:40,790 --> 00:07:45,660
An example of that would be a delay in
data processing within a microservice can

124
00:07:45,660 --> 00:07:47,480
cascade through an entire application.

125
00:07:47,480 --> 00:07:54,180
As I'm sure, another good example would
be, again, like I said, our database, if

126
00:07:54,180 --> 00:07:59,470
it slows down, it, the data that is being
fetched, that, it slows down and then it

127
00:07:59,480 --> 00:08:04,280
has an impact on your reports or whatever
the database is fetching, or whatever

128
00:08:04,280 --> 00:08:05,710
you're fetching from the database.

129
00:08:05,890 --> 00:08:10,500
So, also let's talk about the ever
moving target, which is rising

130
00:08:10,500 --> 00:08:12,400
expectations and advancements.

131
00:08:12,935 --> 00:08:16,795
user expectations are always
changing, that's why we call

132
00:08:16,795 --> 00:08:18,615
it an ever moving target.

133
00:08:19,115 --> 00:08:24,065
As consumer technology advances, so
do user expectations for system speed,

134
00:08:24,195 --> 00:08:26,135
responsiveness, and reliability.

135
00:08:26,635 --> 00:08:31,975
Again, just think back to 10 years
ago, the cell phones that we had, the

136
00:08:31,975 --> 00:08:37,365
phones that we had, they were a major
advancement compared to 20 years ago.

137
00:08:37,745 --> 00:08:43,685
But, we cannot use those devices today
just because we demand more, speed.

138
00:08:44,485 --> 00:08:47,845
so technological advancements
also introduce new demands.

139
00:08:47,945 --> 00:08:51,675
Again, the classic example
would be your, cell phones.

140
00:08:52,295 --> 00:08:56,705
your mobile phones with
advancements in chip design and

141
00:08:56,705 --> 00:08:59,535
with advancements in CPU and GPU.

142
00:08:59,535 --> 00:08:59,775
Thank you.

143
00:09:00,275 --> 00:09:04,845
The phones always perform better
than the previous generations.

144
00:09:04,875 --> 00:09:10,325
The performance might be marginally
better year over year, but when you

145
00:09:10,325 --> 00:09:15,455
compare it to 10 years ago, you would
see a drastic performance improvement.

146
00:09:15,855 --> 00:09:19,965
So put in other words, you cannot
take a phone that was launched 10

147
00:09:19,965 --> 00:09:21,505
years ago and use it in today's world.

148
00:09:21,660 --> 00:09:25,180
the applications designed for
phones today, and so on wouldn't

149
00:09:25,180 --> 00:09:28,240
work on hardware of, 10 years ago.

150
00:09:29,200 --> 00:09:33,370
Changing standards is another
moving target, which is what was

151
00:09:33,370 --> 00:09:37,070
once considered acceptable is now
deemed subpar as expectations rise.

152
00:09:37,760 --> 00:09:39,740
to keep pace with technological progress.

153
00:09:40,080 --> 00:09:44,320
Um, another example, deviating
from the mobile phone would be AI

154
00:09:44,320 --> 00:09:48,460
applications like real time video
processing, demand high computing power.

155
00:09:49,120 --> 00:09:54,130
you have, you get access to 4K, 8K, and,
we don't know what else in the future.

156
00:09:54,800 --> 00:09:58,820
but as you, as you
unlock more, resolutions.

157
00:09:59,635 --> 00:10:03,985
that will put more processing, that will,
that will demand more processing power.

158
00:10:03,985 --> 00:10:07,865
And so you need more, more
resources to solve that challenge.

159
00:10:08,365 --> 00:10:11,195
and then there's the human element
and performance challenges.

160
00:10:11,295 --> 00:10:14,715
things like, things pertaining
to a human element would be

161
00:10:15,215 --> 00:10:17,355
impact of code and configuration.

162
00:10:17,515 --> 00:10:21,835
So inefficient coding practices obviously
could lead to, subpar performance.

163
00:10:22,295 --> 00:10:23,860
or, suboptimal performance.

164
00:10:24,420 --> 00:10:28,350
and if you use suboptimal, algorithms
and misconfigurations, you would

165
00:10:28,350 --> 00:10:31,610
all in those cases too, you
would, obviously see performance

166
00:10:31,610 --> 00:10:34,250
issues, variability and skills.

167
00:10:34,310 --> 00:10:37,900
Not everyone, is, has the
same level of skillset.

168
00:10:38,775 --> 00:10:44,265
So that's why, the top engineers
going to only a few companies, and

169
00:10:44,315 --> 00:10:46,475
and so with variability in skills.

170
00:10:46,810 --> 00:10:50,410
comes, variability in product
that is being, put out there.

171
00:10:51,130 --> 00:10:54,890
so the skill levels and practices of
developers vary, which can lead to

172
00:10:54,980 --> 00:10:56,720
inconsistent performance within systems.

173
00:10:57,580 --> 00:11:01,180
another, human element would
be uncreditable user behavior.

174
00:11:01,860 --> 00:11:06,070
A good example of that would
be sudden spikes in traffic.

175
00:11:06,490 --> 00:11:12,140
let's say a new product was launched,
Or, everyone is, or YouTube suddenly,

176
00:11:12,180 --> 00:11:17,050
lets all users, download, videos,
in, in, in the highest resolution.

177
00:11:17,050 --> 00:11:19,990
So if everyone tried to download
the same video, it would obviously

178
00:11:19,990 --> 00:11:22,050
put a, put, a strain on the system.

179
00:11:22,820 --> 00:11:25,870
just certain spikes in traffic
or unexpected data growth.

180
00:11:26,380 --> 00:11:31,720
can create an unforeseen system strain
like, unexpected data growth would be,

181
00:11:31,950 --> 00:11:36,950
you haven't, really, accounted for, a
good example again would be YouTube,

182
00:11:36,950 --> 00:11:42,410
where, at one point, the maximum number
of views, or the displayed view count

183
00:11:42,580 --> 00:11:47,710
on YouTube was, a certain range and
then, with that, with some videos

184
00:11:47,730 --> 00:11:49,430
exceeding that, they had to change that.

185
00:11:49,430 --> 00:11:53,520
So things like that, even though in that
example, it's not a performance issue.

186
00:11:53,670 --> 00:11:58,380
you could see why, sudden,
unforeseen systems train could

187
00:11:58,390 --> 00:11:59,615
lead to performance issues.

188
00:12:00,175 --> 00:12:03,335
again, example of that would be a
sudden increase in user activity

189
00:12:03,335 --> 00:12:08,895
during a promotional event can overload
systems not designed for such spikes.

190
00:12:09,055 --> 00:12:13,305
So, and so then let's discuss
about resource constraints and,

191
00:12:13,475 --> 00:12:15,215
and the optimization cost element.

192
00:12:15,955 --> 00:12:19,015
Good examples of that would
be limited IT resources.

193
00:12:19,095 --> 00:12:22,165
Organizations often operate
under constraints with limited

194
00:12:22,165 --> 00:12:25,005
access to hardware, software,
licenses, and skilled personnel.

195
00:12:25,835 --> 00:12:31,145
and so with limited resources, you have
to work within your budgets, and if

196
00:12:31,145 --> 00:12:36,470
you're not ready to pay, for the newest
chip, or if you're not ready to pay for

197
00:12:36,550 --> 00:12:40,940
the best talent that will show in your,
that will show in the performance of

198
00:12:40,940 --> 00:12:42,260
the products that you put out there.

199
00:12:42,510 --> 00:12:44,090
So it's always a balancing act.

200
00:12:44,410 --> 00:12:48,470
IT teams must prioritize between
optimizing performance, meeting

201
00:12:48,470 --> 00:12:52,120
security and compliance requirements
and staying within budget.

202
00:12:52,620 --> 00:12:56,600
Cost performance trade offs, upgrading
systems for optimal performance

203
00:12:56,600 --> 00:13:01,010
can be costly, requiring careful
consideration to avoid overspending.

204
00:13:01,510 --> 00:13:07,900
An example of resource constraints would
be deciding between upgrading server

205
00:13:07,900 --> 00:13:12,900
capacity or allocating funds to other
critical IP needs like cyber security.

206
00:13:13,400 --> 00:13:16,620
So let's discuss some advanced
solutions and performance management.

207
00:13:17,270 --> 00:13:20,390
Some of the advanced solutions are
enhanced monitoring techniques.

208
00:13:20,390 --> 00:13:23,750
You can have the best in
class monitoring techniques,

209
00:13:23,750 --> 00:13:24,295
advanced monitoring techniques.

210
00:13:24,685 --> 00:13:29,605
Tools now use machine learning for
real time anomaly detection, providing

211
00:13:29,605 --> 00:13:31,925
insights that allow proactive response.

212
00:13:31,935 --> 00:13:37,305
So instead of reacting to an issue, AI
insights can tell you beforehand if you

213
00:13:37,305 --> 00:13:40,015
are going to have a performance issue.

214
00:13:40,545 --> 00:13:45,075
And that way you can, do what is
necessary to prevent it from, happening.

215
00:13:45,695 --> 00:13:48,435
You also have sophisticated
troubleshooting, options

216
00:13:48,435 --> 00:13:49,955
available in today's world.

217
00:13:50,375 --> 00:13:54,015
some of them are AI driven,
root cause analysis.

218
00:13:54,525 --> 00:13:57,285
Distributed tracing and chaos engineering.

219
00:13:57,785 --> 00:14:02,635
All of these help to proactively
detect and address potential issues.

220
00:14:03,135 --> 00:14:08,135
Holistic optimizations strategies,
those include auto scaling.

221
00:14:08,715 --> 00:14:14,455
These are mostly on the infrastructure
side where you configure your load

222
00:14:14,455 --> 00:14:17,495
balancers for auto scaling and DevOps.

223
00:14:17,845 --> 00:14:20,645
DevOps practices allow more
efficient resource use.

224
00:14:21,465 --> 00:14:22,765
and a smoother user experience.

225
00:14:23,265 --> 00:14:27,725
An example for advanced solutions would
be implementing auto scaling during

226
00:14:27,755 --> 00:14:32,225
peak usage to ensure that systems can
handle increased traffic smoothly.

227
00:14:32,725 --> 00:14:35,835
now let's discuss the challenges
to, the definitive solutions.

228
00:14:36,335 --> 00:14:37,615
some of the, excuse me.

229
00:14:38,115 --> 00:14:43,755
So unintended consequences, optimizing
one area can inadvertently cause

230
00:14:43,775 --> 00:14:47,565
issues in another, especially
in tight integrated systems.

231
00:14:48,015 --> 00:14:49,285
I've seen this a lot where.

232
00:14:49,785 --> 00:14:53,775
You fix one area of the code
and break something else.

233
00:14:53,785 --> 00:14:57,815
So it involves, good communication.

234
00:14:57,895 --> 00:15:01,775
solving performance issues, involves
communication between other teams.

235
00:15:02,255 --> 00:15:06,945
also you being aware of not just
your, area of expertise, but what

236
00:15:07,565 --> 00:15:12,115
could be the potential impact of
you changing something within the

237
00:15:12,115 --> 00:15:13,925
system to make performance better.

238
00:15:14,385 --> 00:15:16,165
If it impacts someone else, maybe.

239
00:15:16,675 --> 00:15:21,365
Maybe, you have upgraded to a
new database connector and that

240
00:15:21,425 --> 00:15:26,085
database connector is not supported
to one of the integrated systems.

241
00:15:26,175 --> 00:15:29,705
now suddenly you have, your
integrations failing and so on.

242
00:15:29,705 --> 00:15:33,725
So unintended consequences,
are one challenge.

243
00:15:34,125 --> 00:15:37,235
Then you have the trade off
conundrum, which means improvements

244
00:15:37,235 --> 00:15:41,235
in aspect of performance often
require sacrifices in another, such

245
00:15:41,235 --> 00:15:44,015
as speed versus data consistency.

246
00:15:44,690 --> 00:15:48,020
so that's pretty self explanatory
where you are looking for speed,

247
00:15:48,040 --> 00:15:52,040
but, you're missing your data is
missing or, you're not getting

248
00:15:52,040 --> 00:15:53,430
the cleanest of data and so on.

249
00:15:54,080 --> 00:15:59,100
Then you have the innovation paradox, the
rapid technological advancements introduce

250
00:15:59,100 --> 00:16:03,780
new performance challenges, just as
solutions for older challenges, emerge.

251
00:16:04,240 --> 00:16:08,400
So again, like I said, uh,
what you were satisfied with.

252
00:16:08,970 --> 00:16:11,170
10 years ago, you're no
longer satisfied with today.

253
00:16:11,190 --> 00:16:17,190
So rapid technological advancements,
they always, keep the user, wanting more.

254
00:16:17,580 --> 00:16:21,720
again, a good example would be increasing
security measure, measures may add

255
00:16:21,720 --> 00:16:26,200
layers of authentication, potentially
impacting system response, time.

256
00:16:26,700 --> 00:16:29,860
So what does this imply
for IT professionals?

257
00:16:29,950 --> 00:16:34,850
it means you have to keep Evolving
your skill set, professionals need to

258
00:16:34,850 --> 00:16:39,400
shift from reactive troubleshooting
to proactive predictive performance

259
00:16:39,400 --> 00:16:41,100
management technique techniques.

260
00:16:41,790 --> 00:16:44,640
You also need to have
cross functional skills.

261
00:16:44,670 --> 00:16:49,290
You no longer can just be an expert
in your area, like a developer

262
00:16:49,290 --> 00:16:51,590
should know about the DevOps side.

263
00:16:52,310 --> 00:16:56,700
Similarly, a DevOps engineer
should know about, should be able

264
00:16:56,700 --> 00:16:58,350
to read code and say, what is a.

265
00:16:59,020 --> 00:17:02,060
What is a bad code versus
what is good code and so on.

266
00:17:02,560 --> 00:17:06,460
understanding system architecture,
data analytics, and emerging

267
00:17:06,460 --> 00:17:10,060
technologies is essential for
modern performance management.

268
00:17:10,770 --> 00:17:13,950
Importance of, communication,
like I touched on earlier.

269
00:17:14,080 --> 00:17:19,200
Effectively conveying technical issues and
solutions to non technical stakeholders is

270
00:17:19,200 --> 00:17:22,050
critical to gaining support and resources.

271
00:17:22,390 --> 00:17:26,060
Now, for many businesses, IT
is not their main, business.

272
00:17:26,090 --> 00:17:28,100
Maybe for an oil and gas company.

273
00:17:28,485 --> 00:17:33,085
If they want to spend more on IT to
improve performance, and so on, they

274
00:17:33,085 --> 00:17:37,985
need to first be able to understand
as to how it impacts their business.

275
00:17:38,395 --> 00:17:43,185
And so you being able to effectively
communicate, maybe they don't understand

276
00:17:43,185 --> 00:17:48,865
that a breach in, an IT system could
negatively impact, the business.

277
00:17:48,875 --> 00:17:51,895
So explaining things like that
to them, explaining things

278
00:17:51,895 --> 00:17:53,485
like how performance could.

279
00:17:53,985 --> 00:17:58,325
Could cause a loss in
business is really important.

280
00:17:59,075 --> 00:18:02,485
The role of IT teams is no longer just
maintenance, but also to align their

281
00:18:02,485 --> 00:18:07,535
work closely with business objectives
for better overall performance.

282
00:18:08,035 --> 00:18:13,035
So what does future research
state and where are we headed?

283
00:18:13,035 --> 00:18:15,430
So there are advanced technologies.

284
00:18:16,170 --> 00:18:19,990
predictive models that are coming up,
developing more context aware predictive

285
00:18:20,200 --> 00:18:25,230
models using big data analytics to
anticipate potential performance issues.

286
00:18:26,040 --> 00:18:30,200
We also have, another area of
future research could be autonomous

287
00:18:30,200 --> 00:18:34,370
optimization, that is researching
into self adjusting systems.

288
00:18:34,420 --> 00:18:35,405
We don't have that.

289
00:18:35,655 --> 00:18:41,485
today, that can automatically configure
and allocate resources in real time.

290
00:18:42,405 --> 00:18:45,955
Human AI collaboration,
exploring effective ways to

291
00:18:45,965 --> 00:18:48,025
combine AI driven insights.

292
00:18:48,525 --> 00:18:51,805
with human expertise to enhance
troubleshooting and optimization,

293
00:18:52,705 --> 00:18:57,645
where, an example would be you have
AI techniques to notice trends where

294
00:18:57,655 --> 00:19:02,155
it could alert you to potential
performance issues and you proactively,

295
00:19:02,265 --> 00:19:04,405
jump on and, and see what's going on.

296
00:19:04,985 --> 00:19:08,875
Standardization of metrics,
creating standardized performance

297
00:19:08,905 --> 00:19:12,515
benchmarks to allow comparison
across diverse IT environments.

298
00:19:12,535 --> 00:19:16,875
That could also help with, future
research could be targeted to towards

299
00:19:16,925 --> 00:19:21,685
that where, you do have benchmarks today,
but they're not the same benchmarks do

300
00:19:21,685 --> 00:19:23,995
not apply to, all the systems and so on.

301
00:19:24,655 --> 00:19:28,085
an example would be industry wide
standards for system latency or

302
00:19:28,095 --> 00:19:32,885
data consistency would enable better
benchmarking and performance evaluations.

303
00:19:33,385 --> 00:19:38,765
So in conclusion, the paper talks about,
it acknowledges persistent challenges.

304
00:19:39,245 --> 00:19:43,685
Performance issues are challenging,
but drive innovation and IT.

305
00:19:44,185 --> 00:19:47,565
It's because users are never
satisfied with performance

306
00:19:48,135 --> 00:19:50,005
that you always see innovation.

307
00:19:50,505 --> 00:19:53,665
You have opportunities
for proactive strategies.

308
00:19:53,995 --> 00:19:59,315
Embracing proactive management, leveraging
emerging technologies, and fostering a

309
00:19:59,315 --> 00:20:01,945
performance oriented culture are crucial.

310
00:20:02,675 --> 00:20:08,045
What lies in the road ahead?

311
00:20:08,105 --> 00:20:12,225
Continued research into predictive
analytics, autonomous optimization,

312
00:20:12,255 --> 00:20:15,435
and standardization of metrics
will pave the way forward.

313
00:20:16,235 --> 00:20:20,955
And as a final note, Although a
final solution may be elusive, even

314
00:20:20,955 --> 00:20:23,815
with all of these advancements at
some point will become the norm.

315
00:20:24,450 --> 00:20:29,950
and then you'll, there will always
be, challenges as of that date and

316
00:20:29,950 --> 00:20:34,970
years from now, which will mean the
quest never ends and you keep, you

317
00:20:34,970 --> 00:20:37,630
keep trying to, improve performance.

318
00:20:37,800 --> 00:20:41,400
so although a final solution may
be elusive, the pursuit of optimal

319
00:20:41,400 --> 00:20:45,240
performance will continue to
inspire advancements in IT, pushing

320
00:20:45,350 --> 00:20:47,280
professionals to innovate and excel.

321
00:20:47,780 --> 00:20:48,190
Thank you.

