1
00:00:00,810 --> 00:00:01,410
Hey everyone.

2
00:00:01,470 --> 00:00:07,020
I'm Manpo and I'm delighted to be here
today to discuss advancing financial

3
00:00:07,020 --> 00:00:08,940
fraud detection with the graph databases.

4
00:00:09,210 --> 00:00:12,000
Before we dive into the topic,
I would like to share a brief

5
00:00:12,000 --> 00:00:13,320
introduction about my background.

6
00:00:13,740 --> 00:00:17,010
I hold Master's degree in
information technology and bring

7
00:00:17,010 --> 00:00:20,220
over 16 years of experience
across various technology domains.

8
00:00:20,515 --> 00:00:24,475
My career started in database
management and I have since expanded

9
00:00:24,475 --> 00:00:28,134
my expertise to include cloud
architecture and motor technologies.

10
00:00:28,494 --> 00:00:32,365
Currently, I'm working as a lead cloud
data need at a prominent financial

11
00:00:32,365 --> 00:00:36,415
institution where I focus on driving
platform modernization initiatives

12
00:00:36,595 --> 00:00:38,364
with ai, power financial services.

13
00:00:40,485 --> 00:00:43,125
Welcome to our exploration of
graph database applications

14
00:00:43,125 --> 00:00:44,595
in financial fraud detection.

15
00:00:44,985 --> 00:00:48,824
This presentation examine how graph
based approaches are revolutionizing

16
00:00:49,035 --> 00:00:52,184
the identification and prevention
of sophisticated fraud schemes.

17
00:00:52,455 --> 00:00:55,269
Over the next few minutes, we will
dive into the following key areas.

18
00:00:56,050 --> 00:00:59,290
There are any capabilities in
modeling complex relationships.

19
00:00:59,500 --> 00:01:03,160
We will explore why graph databases
are particularly well suited.

20
00:01:03,160 --> 00:01:08,440
To present the indicate connection between
entities in the financial or advanced

21
00:01:08,440 --> 00:01:10,570
algorithms travel for fraud detection.

22
00:01:10,810 --> 00:01:14,560
We'll discuss specific algorithms
that leverage the graph structures

23
00:01:14,590 --> 00:01:18,520
to identify suspicious patterns,
the integration of these databases.

24
00:01:18,550 --> 00:01:22,690
With the mission learning, we will examine
how graph databases can be combined

25
00:01:22,870 --> 00:01:24,460
with the mission learning techniques.

26
00:01:24,535 --> 00:01:28,765
To create even more fourfold fraud
detection systems and practical

27
00:01:28,765 --> 00:01:32,095
implementation of strategies for
financial institutions, we'll

28
00:01:32,095 --> 00:01:35,875
consider the challenges and best
practices for deploying graph database

29
00:01:35,875 --> 00:01:38,215
solutions in real financial setting.

30
00:01:39,285 --> 00:01:41,445
Let's begin by understanding
graph databases.

31
00:01:41,775 --> 00:01:44,505
Now, unlike traditional relational
databases that you might be

32
00:01:44,505 --> 00:01:47,805
familiar with, graph databases are
structured around relationships.

33
00:01:48,015 --> 00:01:50,865
This is the fundamental
shift in how we think about

34
00:01:50,865 --> 00:01:52,455
organizing and querying the data.

35
00:01:52,695 --> 00:01:56,325
Instead of tables, which organized
data into row and columns, graph

36
00:01:56,325 --> 00:02:00,285
databases, users, notes, and edges
notes represents the core entity

37
00:02:00,285 --> 00:02:02,565
in our data in a financial context.

38
00:02:02,655 --> 00:02:05,715
This could be like accounts,
either it could be a checking

39
00:02:05,715 --> 00:02:06,795
account or savings account.

40
00:02:06,825 --> 00:02:07,545
Customers.

41
00:02:07,790 --> 00:02:11,915
Transactions, merchants
and devices, IP addresses.

42
00:02:12,960 --> 00:02:16,440
This relationship centric structure
mirrors the complicated interconnections

43
00:02:16,440 --> 00:02:18,150
inherent in financial ecosystems.

44
00:02:18,330 --> 00:02:21,930
Think about it in the real world,
financial entities are not isolated.

45
00:02:22,110 --> 00:02:23,850
They're interconnected in complex ways.

46
00:02:23,970 --> 00:02:27,360
A customer may have multiple accounts,
an account may be involved in many

47
00:02:27,480 --> 00:02:31,205
transactions, and a device might be used
to access several different accounts.

48
00:02:31,670 --> 00:02:36,230
Graph databases allow us to model
these complex relationships directly.

49
00:02:36,410 --> 00:02:39,170
This is a crucial difference
from relational databases.

50
00:02:39,380 --> 00:02:43,250
While relational databases can
represent relationships, then often

51
00:02:43,250 --> 00:02:47,000
struggles with complex queries that
involved in tracing deep connections.

52
00:02:47,179 --> 00:02:50,750
These queries typically requires
multiple giants, which can be

53
00:02:50,869 --> 00:02:52,700
competitionally expensive and slow.

54
00:02:52,855 --> 00:02:56,995
Especially with large data sets,
craft databases server excel at

55
00:02:57,205 --> 00:02:58,555
addressing these relationships.

56
00:02:58,705 --> 00:03:01,495
They're designed from the ground
up to efficiently navigate

57
00:03:01,495 --> 00:03:02,785
and can interconnected data.

58
00:03:02,875 --> 00:03:06,835
This makes them exceptionally powerful for
uncovering sophisticated fraud patterns.

59
00:03:07,045 --> 00:03:09,865
Frauds often exploit these
complex relationships.

60
00:03:10,050 --> 00:03:11,250
To hide their activities.

61
00:03:11,460 --> 00:03:14,490
For example, they might use a
network of shell companies to

62
00:03:14,490 --> 00:03:18,990
launder money, or they might create
fake identities to obtain loans.

63
00:03:19,110 --> 00:03:23,610
These type of schemes create intricate
web of connections that are difficult

64
00:03:23,610 --> 00:03:27,630
to detect the traditional relational
databases in the financial world.

65
00:03:28,295 --> 00:03:31,985
Accounts, customers, transactions,
and devices become richly connected.

66
00:03:31,985 --> 00:03:32,315
Notes.

67
00:03:32,585 --> 00:03:36,755
This preserves the complex network
topology of today's financial systems.

68
00:03:36,965 --> 00:03:41,315
By capturing these connections, we
gain a much more complete and accurate

69
00:03:41,315 --> 00:03:43,055
picture of financial landscape.

70
00:03:43,325 --> 00:03:47,945
These representations enables
investigators to efficiently follow money

71
00:03:47,945 --> 00:03:53,135
trails, identify suspicious patterns, and
gain a holistic view of financial network.

72
00:03:53,375 --> 00:03:55,085
This level of insight is simply.

73
00:03:55,160 --> 00:03:59,359
Not possible when data is scattered across
multiple tables in relational database.

74
00:03:59,510 --> 00:04:04,070
With graph databases, investigators can
quickly and easily trace the flow of

75
00:04:04,070 --> 00:04:09,350
funds, identify anomalies, and uncover
hidden relationships that would remain

76
00:04:09,350 --> 00:04:13,790
effective, invisible when analyzed using
conventional tabular data structures.

77
00:04:14,105 --> 00:04:18,065
Building on our understanding of graph
databases, let's now explore in more

78
00:04:18,065 --> 00:04:20,584
detail the power of relationship analysis.

79
00:04:20,735 --> 00:04:24,125
One of the key strengths of graph
databases, licensing, their ability

80
00:04:24,125 --> 00:04:28,265
to uncover hidden database connections
between seemingly unrelated entities.

81
00:04:28,445 --> 00:04:33,155
This capability is particularly crucial in
the context of financial fraud detection.

82
00:04:33,395 --> 00:04:35,525
Frauds rarely operate in isolation.

83
00:04:35,705 --> 00:04:38,810
They typically engage in complex
schemes that involves multiple

84
00:04:38,810 --> 00:04:41,250
individuals, accounts and transactions.

85
00:04:42,570 --> 00:04:45,870
Graph databases allows to move
beyond a purely transactional

86
00:04:45,870 --> 00:04:47,130
way of financial activity.

87
00:04:47,280 --> 00:04:51,659
And instead, RRP network centric approach
by representing financial entities

88
00:04:51,810 --> 00:04:55,859
as notes and their relationships as
its, we can create a comprehensive

89
00:04:55,859 --> 00:04:57,419
map of financial landscape.

90
00:04:57,719 --> 00:05:01,169
By recognizing these patterns,
investigators can quickly identify.

91
00:05:01,225 --> 00:05:05,185
Potentially fraud activity and prioritize
their investigations accordingly.

92
00:05:05,455 --> 00:05:09,205
Disability to quickly and accurately
identify suspicious patterns

93
00:05:09,355 --> 00:05:12,775
is a significant advantage in a
fight against financial fraud,

94
00:05:13,015 --> 00:05:15,175
where a time is of innocence.

95
00:05:16,560 --> 00:05:20,760
Now let's dive into advanced graph
algorithms that make graph databases

96
00:05:20,760 --> 00:05:22,650
so affect to in flood detection.

97
00:05:22,830 --> 00:05:26,820
These algorithms go beyond simple
data retrieval and leverage the

98
00:05:26,820 --> 00:05:30,150
structure of graph to uncover
hidden patterns and anomalies.

99
00:05:30,510 --> 00:05:31,560
Community detection.

100
00:05:31,740 --> 00:05:36,450
This family of algorithms focuses
on identifying clusters are group of

101
00:05:36,450 --> 00:05:41,099
nodes that are densely connected within
themself, but separately connected

102
00:05:41,429 --> 00:05:43,409
to nodes in their part of the graph.

103
00:05:43,965 --> 00:05:47,985
In a financial network, a community
could represent a group of accounts that

104
00:05:47,985 --> 00:05:51,825
are frequently interacting with each
other, potentially indicating a fraud

105
00:05:51,825 --> 00:05:53,745
ring or a money laundering operation.

106
00:05:53,925 --> 00:05:58,545
For example, imagine a scenario where
several accounts are rapidly transforming

107
00:05:58,575 --> 00:06:02,895
funds among themselves, but they have very
few transactions with external accounts.

108
00:06:03,075 --> 00:06:07,495
This pattern could suggest a.
Close network of colliding actors,

109
00:06:07,705 --> 00:06:11,455
community detection algorithms
can automatically identify such

110
00:06:11,455 --> 00:06:15,385
clusters, allowing investigators to
quickly focus their attention on the

111
00:06:15,534 --> 00:06:17,484
most suspicious area of the graph.

112
00:06:17,635 --> 00:06:20,424
There are several different
algorithms for community detection.

113
00:06:20,780 --> 00:06:24,620
With each, with these sworn strengths
and weaknesses, centrality measures.

114
00:06:24,770 --> 00:06:28,370
These algorithms help us identifying
the most important nodes in the

115
00:06:28,370 --> 00:06:30,140
network in the context of fraud.

116
00:06:30,140 --> 00:06:33,680
Detection important can have
different meanings depending on the

117
00:06:33,710 --> 00:06:35,205
type of fraud we are looking for.

118
00:06:35,909 --> 00:06:39,120
Between a centrality, for
instance, measures the number of

119
00:06:39,120 --> 00:06:43,349
times a node lies on the shortes
path between two other nodes.

120
00:06:43,530 --> 00:06:48,840
Nodes are with high between a centrality
access breaches in the network, connecting

121
00:06:48,930 --> 00:06:50,700
different communities or groups.

122
00:06:51,000 --> 00:06:54,780
In a money laundering scheme, a money
mule who facilitates the transfer of

123
00:06:54,784 --> 00:06:58,710
funds between different actors would
likely to have between a centrality.

124
00:06:59,804 --> 00:07:02,625
Degree Centrality, on the other
hand, simply measures the number

125
00:07:02,625 --> 00:07:04,244
of connections a node has.

126
00:07:04,395 --> 00:07:07,815
A node with the high degree might be
account that is involved in a large

127
00:07:07,815 --> 00:07:10,965
number of transactions, which could
indicate either the list made high

128
00:07:10,965 --> 00:07:15,585
volume business or a hub of fraud,
land activity path finding algorithms.

129
00:07:15,775 --> 00:07:20,125
These algorithms are used to find route
or connections between nodes in the graph.

130
00:07:20,215 --> 00:07:24,205
They're particularly useful for
tracing the flow of funds or assets

131
00:07:24,205 --> 00:07:26,365
in the complex financial transactions.

132
00:07:26,845 --> 00:07:27,175
Graph.

133
00:07:27,175 --> 00:07:29,095
Databases don't just throw data.

134
00:07:29,275 --> 00:07:33,085
They also enable powerful feature
engineering techniques to significantly

135
00:07:33,235 --> 00:07:34,855
enhance machine lending models.

136
00:07:35,060 --> 00:07:39,410
Think of feature engineering as art of
extracting most useful information from

137
00:07:39,410 --> 00:07:45,020
your data to feed into your AI and graphs,
provide some incredibly rich information.

138
00:07:45,200 --> 00:07:48,680
Let's break down the key types of
features we can derive from graph

139
00:07:48,680 --> 00:07:51,080
data, extracting network metrics.

140
00:07:51,260 --> 00:07:53,930
This is where we calculate
various properties of nodes.

141
00:07:54,360 --> 00:07:57,960
Within the network, it's like
understanding the role or importance

142
00:07:57,960 --> 00:08:01,800
of each entity in the graph, for
example, degree simply counts

143
00:08:01,830 --> 00:08:03,870
how many connections a node has.

144
00:08:04,290 --> 00:08:07,950
A high degree accounts might be
involved in many transactions,

145
00:08:08,070 --> 00:08:11,340
which could be normal or
suspicious, depends on the context.

146
00:08:11,790 --> 00:08:14,010
Page rank famously used by Google.

147
00:08:14,385 --> 00:08:18,734
Gives the score for each node based
on the number and importance of its

148
00:08:18,794 --> 00:08:22,875
incoming connections In a financial
network, an account receives funds

149
00:08:22,875 --> 00:08:24,974
from many other high value accounts.

150
00:08:25,065 --> 00:08:25,995
Might be a central hub.

151
00:08:27,330 --> 00:08:28,590
We can look at pipelines.

152
00:08:28,680 --> 00:08:32,580
How many steps does it take for funds
to move from account A to account B?

153
00:08:32,789 --> 00:08:35,159
Short paths might
indicate direct transfers.

154
00:08:35,159 --> 00:08:39,539
While long, convoluted paths could
suggest layering in money laundering, we

155
00:08:39,539 --> 00:08:43,799
can track the frequency of specific path
patterns, our funds repeatedly throwing.

156
00:08:44,074 --> 00:08:47,015
Through the same sequence of
accounts, this could reveal a

157
00:08:47,015 --> 00:08:48,785
structured money laundering process.

158
00:08:48,995 --> 00:08:52,415
And crucially, we can analyze
the timing of fund flows,

159
00:08:52,715 --> 00:08:54,064
creating community features.

160
00:08:54,185 --> 00:08:57,605
This leverages the community detection
algorithms we discussed earlier.

161
00:08:57,845 --> 00:08:59,704
We can determine the community size.

162
00:08:59,975 --> 00:09:02,345
Is an account part of
large or small group.

163
00:09:02,555 --> 00:09:05,195
Large community might be
money laundering networks.

164
00:09:05,255 --> 00:09:08,795
While small isolated accounts
could be shell companies, we

165
00:09:08,795 --> 00:09:11,315
can measure community density.

166
00:09:11,555 --> 00:09:13,595
How tightly connected is the group?

167
00:09:13,655 --> 00:09:14,585
This are impressive.

168
00:09:14,705 --> 00:09:18,335
There's substantial improvements in
fraud detection, accuracy, in some

169
00:09:18,335 --> 00:09:22,325
cases, up to 35% of improvement
where the graph based features are

170
00:09:22,325 --> 00:09:23,945
added to the conventional models.

171
00:09:24,095 --> 00:09:28,415
This is huge forward in our ability
to detect and prevent financial crime.

172
00:09:30,300 --> 00:09:33,390
Financial institutions operate
on the scale that hard to grasp.

173
00:09:33,390 --> 00:09:37,500
For most of us, they process literally
billions of transactions every single day.

174
00:09:37,770 --> 00:09:41,460
Think about critical transactions,
money transfers, and stock rates.

175
00:09:41,550 --> 00:09:43,830
It's massive, constant flow of data.

176
00:09:44,040 --> 00:09:45,205
This presidency, huge challenge.

177
00:09:46,050 --> 00:09:49,830
For any database system and
graph databases are no exception.

178
00:09:50,160 --> 00:09:53,820
To efficiently use graph databases
in this environment, we need

179
00:09:53,820 --> 00:09:55,410
solutions that can truly scale.

180
00:09:55,800 --> 00:09:59,310
Scaling in this context isn't
just storing the lot of data.

181
00:09:59,460 --> 00:10:04,740
It's about doing it efficiently and being
able to query the data incredibly quickly.

182
00:10:04,755 --> 00:10:07,110
Here are some of the
key techniques involved.

183
00:10:07,944 --> 00:10:08,935
Query optimization.

184
00:10:09,055 --> 00:10:12,324
This is where we make sure that
our queries, our requests for

185
00:10:12,324 --> 00:10:16,314
information from the database are
executing as efficiently as possible.

186
00:10:16,494 --> 00:10:18,055
Advancing index is crucial.

187
00:10:18,234 --> 00:10:19,765
Think of an index in your book.

188
00:10:19,824 --> 00:10:22,435
It helps you quickly find
the information you need.

189
00:10:22,515 --> 00:10:26,535
Graph databases use sophisticated
indexing techniques to locate specific

190
00:10:26,535 --> 00:10:30,405
nodes and relationships without
having to scan the entire database.

191
00:10:30,705 --> 00:10:32,535
Caching is another important strategy.

192
00:10:32,715 --> 00:10:37,665
Frequently accessing data is stored in
memory for ultrafast retrievals, so if

193
00:10:37,665 --> 00:10:41,895
you are repeatedly querying the same
accounts are transactions, the system

194
00:10:41,895 --> 00:10:44,115
can provide the results almost instantly.

195
00:10:44,385 --> 00:10:46,814
Partitioning strategies,
when your graph sets.

196
00:10:47,195 --> 00:10:50,285
Too big to fit in a single
mission, you need to spread

197
00:10:50,315 --> 00:10:51,845
it across multiple computers.

198
00:10:51,905 --> 00:10:53,225
This is called partitioning.

199
00:10:53,525 --> 00:10:57,965
Sharding is common technique where we
divide the graph into smaller pieces,

200
00:10:57,965 --> 00:11:04,505
our shards and store each chart on a
different server, the distribute workload,

201
00:11:04,715 --> 00:11:09,215
and increase both storage capacity and
process power distributed processing.

202
00:11:09,740 --> 00:11:14,630
To further speed up the query execution,
we can perform graph competitions in

203
00:11:14,630 --> 00:11:17,120
parallel across distributed systems.

204
00:11:17,449 --> 00:11:21,589
Instead of the mission working on the
query, multiple missions work on different

205
00:11:21,589 --> 00:11:25,880
parts of it simultaneously significantly
reducing the overall processing time.

206
00:11:26,550 --> 00:11:27,959
On storage optimization.

207
00:11:28,050 --> 00:11:32,729
Finally, we need to use efficient data
structures to store the graph data itself.

208
00:11:32,910 --> 00:11:37,110
Graph databases imply specializes
storage formats that are optimized

209
00:11:37,319 --> 00:11:39,180
for traveling relationships.

210
00:11:39,360 --> 00:11:42,329
This is very difficult from how
traditional relational databases

211
00:11:42,329 --> 00:11:44,245
store data and it's that allow.

212
00:11:44,635 --> 00:11:48,955
Graph databases to perform complex
relationships queries so quickly.

213
00:11:49,435 --> 00:11:53,814
The good news is that leading vendors in
graph database space, often enterprise

214
00:11:53,814 --> 00:11:57,655
grade solutions ally designed to
handle these massive workloads, these

215
00:11:57,655 --> 00:12:01,495
systems can cap off touring trillions
of edges, representing the connections

216
00:12:01,495 --> 00:12:05,605
between entities while still providing
millisecond level query response times.

217
00:12:05,845 --> 00:12:09,085
These response is crucial for
real time fraud detection.

218
00:12:10,199 --> 00:12:12,180
Streaming analytics for
real time detection.

219
00:12:12,329 --> 00:12:15,780
This involves analyzing data
as it's generated to identify

220
00:12:15,780 --> 00:12:17,489
suspicious activity immediately.

221
00:12:17,729 --> 00:12:20,099
Batch processing for
deeper network analysis.

222
00:12:20,310 --> 00:12:25,170
This involves processing large
amount of volumes, historical data to

223
00:12:25,170 --> 00:12:29,640
uncover complex fraud patterns that
might not be apparent in real time.

224
00:12:30,450 --> 00:12:35,130
By combining these techniques, financial
institutions can build robust and scalable

225
00:12:35,130 --> 00:12:39,540
fraud detection systems that can keep
pace with the ever increasing volume

226
00:12:39,540 --> 00:12:41,610
and complex of financial transactions.

227
00:12:43,105 --> 00:12:46,755
Now let's shift gears and discuss
graph neural networks, RGNS.

228
00:12:46,935 --> 00:12:51,405
If graph databases are foundations,
gns are arguably the most cutting

229
00:12:51,405 --> 00:12:54,525
edge, a technique built on top
of them for fraud detection.

230
00:12:54,645 --> 00:12:56,415
This is where things get really exact.

231
00:12:56,475 --> 00:12:59,355
Traditional Michel learning
algorithms typically operate on

232
00:12:59,535 --> 00:13:01,425
data and tables, row and columns.

233
00:13:01,755 --> 00:13:06,100
To use them with graph data, we often have
to do a lot of manual feature engineering.

234
00:13:06,465 --> 00:13:09,945
And as we discussed earlier,
calculating network metrics,

235
00:13:09,945 --> 00:13:11,805
part based features and so on.

236
00:13:12,075 --> 00:13:15,225
This can be time consuming and
require a lot of expertise.

237
00:13:16,305 --> 00:13:19,665
GNS on the other hand, are
designed directly to process

238
00:13:19,665 --> 00:13:21,104
the draft structures itself.

239
00:13:21,344 --> 00:13:25,094
They can automatically learn
meaningful representations from complex

240
00:13:25,094 --> 00:13:29,295
financial networks without us having
to hand in any of these features.

241
00:13:29,444 --> 00:13:33,675
Think of an A, seeing the network
in the same way we do, understanding

242
00:13:33,675 --> 00:13:35,415
the relationships and connections.

243
00:13:35,790 --> 00:13:39,120
A core concept of GNN is
message passing neural networks.

244
00:13:39,239 --> 00:13:42,390
Imagine each node in the
graph as a little messenger.

245
00:13:42,540 --> 00:13:46,155
It receives information from its
neighbors, combines it with its own

246
00:13:46,199 --> 00:13:48,089
information, and then pass on it.

247
00:13:48,270 --> 00:13:52,260
This process repeats with information
flowing through the network, allowing

248
00:13:52,260 --> 00:13:55,739
the GN Ns to learn the context
of each within the neighborhood.

249
00:13:56,880 --> 00:13:58,650
What does this enable us to do?

250
00:13:58,979 --> 00:14:03,870
Gen are particularly powerful for node
classifications and graph classifications.

251
00:14:04,380 --> 00:14:07,380
Comes to note classifications
predicting whether a specific

252
00:14:07,469 --> 00:14:09,180
account our customer is fraudulent.

253
00:14:09,449 --> 00:14:13,410
Graph classifications predicting
whether an anti-trans work is fraudulent

254
00:14:13,740 --> 00:14:15,930
and the results are compelling.

255
00:14:16,530 --> 00:14:20,550
Recent research demonstrate that GNS
can achieve significantly higher fraud

256
00:14:20,550 --> 00:14:25,050
detection rates up to 20% higher than the
traditional machine learning approaches.

257
00:14:25,229 --> 00:14:29,160
This is essentially true for
detecting sophisticated fraud schemes

258
00:14:29,160 --> 00:14:32,729
that involve complex coordination
between multiple entities.

259
00:14:34,470 --> 00:14:38,250
Furthermore, financial institutions that
are implementing GN N based detection

260
00:14:38,250 --> 00:14:42,240
systems are reporting significant
benefits reductions in false positives.

261
00:14:42,360 --> 00:14:46,170
This mean fear estimate transactions
are incorrectly flagged as suspicious,

262
00:14:46,290 --> 00:14:50,280
saving time on resources for fraud,
unleash improved detection for

263
00:14:50,310 --> 00:14:52,470
previously unidentified fraud patterns.

264
00:14:52,710 --> 00:14:57,240
GNS can uncover connections and
anomalies that are traditional systems

265
00:14:57,240 --> 00:14:59,400
miss helping to stay ahead of evolving.

266
00:14:59,470 --> 00:15:00,550
Fraud tactics.

267
00:15:00,700 --> 00:15:05,530
In essence, GNS represents the shift
in how we approach fraud detection.

268
00:15:05,740 --> 00:15:09,700
They move us from manually extracting
features to automatically learn

269
00:15:09,700 --> 00:15:13,000
from the rich relational information
within the financial network.

270
00:15:13,720 --> 00:15:16,510
Another real important technique in
this space is called graph embeds.

271
00:15:16,900 --> 00:15:20,980
Now, this might sound a bit technical,
but the core idea is quite interesting.

272
00:15:21,160 --> 00:15:25,210
Essentially, the graph embeds are a way
to translate the complex structure of

273
00:15:25,210 --> 00:15:29,170
network into a format that traditional
machine learning languages, algorithms.

274
00:15:29,180 --> 00:15:33,680
Can understand, think of as it's creating
fingerprints for each node that capture

275
00:15:33,680 --> 00:15:37,310
its essential characteristics and
relationships instead of representing

276
00:15:37,310 --> 00:15:41,329
a customer or an account as just
a set of individual attributes.

277
00:15:41,790 --> 00:15:44,790
Graph embeds create dense
vector representations.

278
00:15:44,910 --> 00:15:49,560
These vectors are like list of numbers
that encode the North's position

279
00:15:49,680 --> 00:15:51,569
and roll within oral the network.

280
00:15:51,780 --> 00:15:55,349
Why this is useful because it
allows us to cover the power

281
00:15:55,675 --> 00:15:56,834
filtration, mission learning.

282
00:15:57,620 --> 00:16:01,490
Things like clustering classification
and anomaly detection while still

283
00:16:02,150 --> 00:16:05,270
taking into account the rich
relational information contains.

284
00:16:05,270 --> 00:16:08,540
In the graph, there are several
different techniques that creates graph

285
00:16:08,540 --> 00:16:10,430
membranes each with its sworn stance.

286
00:16:10,610 --> 00:16:12,530
Here are a few key ones not to weak.

287
00:16:12,740 --> 00:16:16,765
This method uses random works to
explore the neighborhood of each node.

288
00:16:16,865 --> 00:16:17,855
Capturing both.

289
00:16:17,855 --> 00:16:21,455
Its local connections and its broader
structural role in the network.

290
00:16:21,665 --> 00:16:25,475
It's good to identify nodes that are
similar in terms of the network context.

291
00:16:25,745 --> 00:16:27,035
Graph auto encoders.

292
00:16:27,215 --> 00:16:30,065
These are neural networks that
lend to compress the graph

293
00:16:30,065 --> 00:16:34,295
structures into lower dimensional
representation and then reconstructed.

294
00:16:34,565 --> 00:16:38,075
They're effective at capturing the
overall structure of the graph.

295
00:16:38,475 --> 00:16:39,105
Transi.

296
00:16:39,225 --> 00:16:44,115
This technique is particular useful for
knowledge graphs where the relationship

297
00:16:44,115 --> 00:16:46,185
between entities have specific meaning.

298
00:16:46,515 --> 00:16:49,545
Transi preserves these relationships
in the embedding space.

299
00:16:50,850 --> 00:16:51,600
Graph stage.

300
00:16:51,689 --> 00:16:55,170
This is an index lending approach,
meaning it can generate embeddings

301
00:16:55,319 --> 00:16:57,510
for nodes it hasn't seen before.

302
00:16:57,630 --> 00:17:02,010
This is very valuable in dynamic
financial networks where new nodes and

303
00:17:02,010 --> 00:17:04,050
transactions are constantly being added.

304
00:17:04,440 --> 00:17:09,720
So to recap, by converting graph data
into vector representations, analyst can.

305
00:17:09,905 --> 00:17:14,105
Apply familiar mission learning techniques
to identify suspicious patterns.

306
00:17:14,195 --> 00:17:17,705
For example, you could use clustering
to group accounts with similar

307
00:17:17,705 --> 00:17:22,055
transaction behaviors or classifications
to predict the likelihood of

308
00:17:22,055 --> 00:17:23,825
fraud for a given transaction.

309
00:17:24,245 --> 00:17:26,945
And there are significant
practical benefits.

310
00:17:27,035 --> 00:17:31,240
Leading financial institutions report
substantial speed improvements, often

311
00:17:31,290 --> 00:17:37,595
40 to 60% of faster model training times
when using embed based approaches compared

312
00:17:37,595 --> 00:17:39,365
to directly processing the graph data.

313
00:17:40,514 --> 00:17:45,345
This efficiency gain is the crucial
in a fast phase environment where

314
00:17:45,405 --> 00:17:46,995
timely fraud detection is essential.

315
00:17:47,730 --> 00:17:51,419
A real world example of how this
technology was used to uncover a

316
00:17:51,419 --> 00:17:53,370
sophisticated money laundering operation.

317
00:17:53,429 --> 00:17:55,290
It all started with initial detection.

318
00:17:56,070 --> 00:18:00,030
Ment systems might have missed it, but
graph algorithms were able to identify

319
00:18:00,030 --> 00:18:01,710
suspicious transaction patterns.

320
00:18:02,460 --> 00:18:06,210
They involved accounts that on the
surface seemed to be unrelated.

321
00:18:06,360 --> 00:18:07,889
However, the graph database revealed.

322
00:18:08,420 --> 00:18:11,930
Connections in their transaction
behavior flagged them as potential

323
00:18:11,930 --> 00:18:13,250
involved in money laundering.

324
00:18:13,730 --> 00:18:17,870
They span across the financial
ecosystems making them even harder to

325
00:18:17,870 --> 00:18:19,370
detect with the traditional methods.

326
00:18:19,520 --> 00:18:23,810
The graph databases shows that these
accounts are connected by over 200

327
00:18:23,810 --> 00:18:28,010
individual transactions, carefully
structured and designed to obscure

328
00:18:28,130 --> 00:18:31,640
the flow of money and make it
difficult to trace graph databases.

329
00:18:31,655 --> 00:18:36,455
Shows these accounts were connected
by over 200 individual transactions.

330
00:18:36,635 --> 00:18:39,635
Carefully structured and designed
to obscure the flaw of money

331
00:18:39,785 --> 00:18:41,225
and make it difficult to trace.

332
00:18:42,325 --> 00:18:45,535
This is where graph database
accessibility to visualize and analyze

333
00:18:45,535 --> 00:18:49,525
relationships became crucial pattern
analysis of this network expose

334
00:18:49,735 --> 00:18:51,264
classic money laundering techniques.

335
00:18:51,415 --> 00:18:52,675
Most notably layering.

336
00:18:53,035 --> 00:18:56,845
Layering is a process where money is
moved through multiple accounts and

337
00:18:56,845 --> 00:18:58,975
transactions to distance it from its.

338
00:18:59,014 --> 00:19:00,304
Illicit source.

339
00:19:00,544 --> 00:19:04,294
The graph database clearly showed the
funds moving rapidly through a series

340
00:19:04,294 --> 00:19:08,854
of accounts, often in complex sequences,
making it incredibly difficult to follow

341
00:19:08,854 --> 00:19:10,864
the money trail using traditional methods.

342
00:19:11,074 --> 00:19:15,784
The temporal analysis capabilities of
graph database, its ability to analyze

343
00:19:15,784 --> 00:19:19,985
the times of transactions were essentially
in revealing this layering activity.

344
00:19:20,165 --> 00:19:22,564
So what was the investigation outcome?

345
00:19:22,685 --> 00:19:26,374
In short, a major success, the craft
databases enable investigators.

346
00:19:26,445 --> 00:19:29,205
To piece together the
entire Money LAU operation.

347
00:19:29,534 --> 00:19:34,725
This led to the recovery of $4.7
million in IC funds, a significant

348
00:19:34,725 --> 00:19:38,175
win for law enforcement and the
financial institutions involved.

349
00:19:38,845 --> 00:19:41,455
But the impact went beyond
just recovering the money.

350
00:19:41,544 --> 00:19:44,514
The investigation also led to
identification of previously

351
00:19:44,514 --> 00:19:45,655
unknown criminal network.

352
00:19:45,895 --> 00:19:49,435
By mapping the relationship between
account and individuals, the graph

353
00:19:49,435 --> 00:19:54,475
database provide crucial intelligence that
helped to disman the entire operation.

354
00:19:54,564 --> 00:19:55,254
This case study.

355
00:19:55,710 --> 00:20:00,210
Demonstrates the power of graph databases
In uncovering complex financial crime,

356
00:20:00,420 --> 00:20:04,410
it highlights their ability to see the
connections that traditional systems

357
00:20:04,410 --> 00:20:08,460
miss, to visualize the complex networks
and to analyze transactional patterns

358
00:20:08,550 --> 00:20:13,320
in the way they lead to successful
investigations and significant recoveries.

359
00:20:14,320 --> 00:20:18,304
So to wrap up the practical side of
things, let's recap the key implementation

360
00:20:18,304 --> 00:20:22,685
challenges and recommendation strategies
for financial organizations considering

361
00:20:22,685 --> 00:20:24,425
graph databases for fraud detection.

362
00:20:24,635 --> 00:20:28,175
First, we have the data integration
challenge as we discussed.

363
00:20:28,320 --> 00:20:31,470
Financial data is often
scattered across various systems.

364
00:20:31,620 --> 00:20:35,100
You have got customer data here,
transaction data there, account data

365
00:20:35,100 --> 00:20:38,970
somewhere else, getting all this
data into Unified Graph database.

366
00:20:39,510 --> 00:20:43,320
The solution to this is to
implement specialized ETL pipelines.

367
00:20:43,500 --> 00:20:45,899
ETL stands for Extract,
transformation and Load.

368
00:20:46,050 --> 00:20:49,710
These pipelines are designed to pull
data from these disparate systems,

369
00:20:49,860 --> 00:20:53,700
transform it into consistent format
and load it into the graph database.

370
00:20:53,909 --> 00:20:57,270
But it's not just about moving
the data, it's all about.

371
00:20:57,469 --> 00:20:58,699
The entity resolution.

372
00:20:59,029 --> 00:21:02,869
This is a crucial process of identifying
and merging records that are referred

373
00:21:02,869 --> 00:21:04,549
to the same real world entities.

374
00:21:04,759 --> 00:21:09,859
For example, making sure that John Smith
and j Smith are recognized as same person.

375
00:21:10,069 --> 00:21:12,949
This ensure the accuracy and
completeness of the graph.

376
00:21:13,689 --> 00:21:16,899
Coming to the performance optimization
challenge, graph databases,

377
00:21:16,899 --> 00:21:20,919
especially in the financial sector,
can grow to enamor sizes containing

378
00:21:20,919 --> 00:21:22,299
billions of notes and edges.

379
00:21:22,479 --> 00:21:26,349
Ensuring that queries on these massive
graphs are executed in real time is

380
00:21:26,349 --> 00:21:28,449
crucial for effective fraud detection.

381
00:21:28,599 --> 00:21:32,559
You can't wait house for a result when
you need to stop a fraud transaction Now.

382
00:21:33,129 --> 00:21:35,949
The solution here is to
employ hybrid architectures.

383
00:21:36,189 --> 00:21:41,169
The SA involves a combination of in-memory
process keeping the most frequently

384
00:21:41,319 --> 00:21:45,969
access data in the computer's main memory
for very fast retrieval, distributed

385
00:21:45,969 --> 00:21:51,099
storage, spreading the graph data across
multiple missions to handle the sheer

386
00:21:51,159 --> 00:21:53,229
volume on to allow the parallel process.

387
00:21:53,349 --> 00:21:56,679
Financial data is highly sensitive,
and we have strict regulations

388
00:21:56,679 --> 00:21:59,559
like GDPR and CCPA to add high two.

389
00:21:59,859 --> 00:22:01,899
We need to able to analyze the data.

390
00:22:02,004 --> 00:22:05,574
To detect fraud, but we also
need to protect customer privacy.

391
00:22:05,754 --> 00:22:09,804
The solution to this involving
implementing granular access controls,

392
00:22:09,955 --> 00:22:14,334
defining very specific permissions for
who we access, what data within the graph.

393
00:22:15,644 --> 00:22:19,154
The solution to this involves
implementing granular access controls,

394
00:22:19,304 --> 00:22:23,144
defining very specific permissions for
who can access what data within the

395
00:22:23,144 --> 00:22:27,794
graph, data anonymization techniques,
masking or removing personally

396
00:22:27,794 --> 00:22:31,665
identifiable information where
possible while still preventing the

397
00:22:31,665 --> 00:22:33,435
structure of the data for analysis.

398
00:22:33,495 --> 00:22:37,185
To effectively address the challenges and
successfully implement graph databases.

399
00:22:37,245 --> 00:22:40,334
Here are some key recommendations
for financial organizations.

400
00:22:40,604 --> 00:22:43,395
Begin by identifying specific
use cases where graph

401
00:22:43,395 --> 00:22:44,985
approaches often the most value.

402
00:22:45,195 --> 00:22:48,014
Don't try to implement graph
databases everywhere at once.

403
00:22:48,165 --> 00:22:51,705
Focus on areas where they have
to be biggest impact, such as

404
00:22:51,705 --> 00:22:52,814
money laundering, detection.

405
00:22:52,834 --> 00:22:56,434
Synthetic identity fraud are
complex transaction fraud schemes.

406
00:22:56,644 --> 00:23:00,514
Starting with a clear focus will
help you to define your requirements

407
00:23:00,514 --> 00:23:04,235
and measures your success, and
start with pilot implementations.

408
00:23:04,354 --> 00:23:08,764
Begin with smaller projects to test
the technology, learn best practices,

409
00:23:08,764 --> 00:23:10,264
and build internal expertise.

410
00:23:10,384 --> 00:23:14,374
It is crucial to invest not only the
necessary technical infrastructure, but

411
00:23:14,374 --> 00:23:16,894
also in comprehensive analyst training.

412
00:23:17,134 --> 00:23:20,614
Your third analyst need to
learn how to effectively query

413
00:23:20,614 --> 00:23:22,204
and interpret the graph data.

414
00:23:22,494 --> 00:23:24,654
The third one, ISPE Center of Excellence.

415
00:23:24,894 --> 00:23:28,374
This can be dedicated team at a
cross-functional group responsible

416
00:23:28,374 --> 00:23:32,124
for establishing best practices,
sharing knowledge, and providing

417
00:23:32,124 --> 00:23:35,484
support for graph databases,
initiatives across the organization.

418
00:23:35,694 --> 00:23:39,144
It is also essential to
establish robust governance.

419
00:23:39,369 --> 00:23:42,909
Frameworks to ensure data
quality, security, and compliance.

420
00:23:43,539 --> 00:23:47,079
Very importantly, integrated graph
solutions with existing systems.

421
00:23:47,259 --> 00:23:50,199
Graph databases are not
intended to replace all your

422
00:23:50,199 --> 00:23:51,609
existing fraud detection tools.

423
00:23:51,759 --> 00:23:55,809
Instead, they should be integrated
to complement or enhance your

424
00:23:55,869 --> 00:23:58,749
current capabilities, creating
a more comprehensive and

425
00:23:58,749 --> 00:24:00,489
layer defense against fraud.

426
00:24:01,109 --> 00:24:04,139
Let's wrap up by looking ahead
and summarizing both the feature

427
00:24:04,139 --> 00:24:07,529
trends in graph based fraud
detection and my key recommendations

428
00:24:07,529 --> 00:24:08,939
for financial organizations.

429
00:24:09,179 --> 00:24:13,139
The feature of graph based fraud
detection is being shaped by several key

430
00:24:13,139 --> 00:24:15,089
trends in time processing capabilities.

431
00:24:15,209 --> 00:24:18,869
The ability to detect and respond
to fraud activity as it happens.

432
00:24:19,109 --> 00:24:21,419
Is becoming increasingly crucial.

433
00:24:21,689 --> 00:24:25,589
This means moving beyond batch
processing of historical data to

434
00:24:25,589 --> 00:24:29,219
streaming analytics that can analyze
transactions in milliseconds.

435
00:24:29,399 --> 00:24:32,509
Feature systems will leverage
advantages in-memory computing,

436
00:24:32,689 --> 00:24:37,879
distributed processing, and a to provide
instantaneous fraud alerts and prevention.

437
00:24:38,355 --> 00:24:40,455
Federated learning across institutions.

438
00:24:40,785 --> 00:24:44,774
This is very promising area that
addresses the challenge of data privacy.

439
00:24:45,045 --> 00:24:48,945
Federal learning allows multiple financial
institutions to collaboratively train

440
00:24:48,945 --> 00:24:52,695
fraud detection models without actually
sharing their sense to customer data.

441
00:24:52,875 --> 00:24:56,475
Instead, models are trained
locally at each institution and

442
00:24:56,475 --> 00:24:58,305
only model updates are shared.

443
00:24:58,455 --> 00:25:01,425
Preserving privacy while improving
the overall effectiveness to

444
00:25:01,425 --> 00:25:05,205
fraud detection, improving
explainability of complex models.

445
00:25:05,300 --> 00:25:09,409
A fraud detection system become more
sophisticated, often employing complex

446
00:25:09,409 --> 00:25:11,360
AI techniques like graph neural networks.

447
00:25:11,600 --> 00:25:15,320
It's essential that these models
can explain their decisions.

448
00:25:15,649 --> 00:25:18,860
Detecting sophisticated fraud
schemes that involve multiple

449
00:25:18,860 --> 00:25:20,780
coordinated transactions and accounts.

450
00:25:20,990 --> 00:25:23,960
Focusing on these high impact
areas will maximize the on.

451
00:25:24,575 --> 00:25:27,845
Investment and demonstration
the value of graph technology.

452
00:25:28,325 --> 00:25:31,925
With pilot implementations, do attempt
your large scale enterprise wide

453
00:25:31,925 --> 00:25:36,215
deployments from outset Instead, begin
with a smaller, well-defined pilot project

454
00:25:36,245 --> 00:25:40,835
to test the technology and learn the best
practices and build internal expertise.

455
00:25:41,135 --> 00:25:44,075
This approach allows adjustments
and minimizes the risk.

456
00:25:44,225 --> 00:25:47,315
Crucially, invest in infrastructure
and analyst training.

457
00:25:47,495 --> 00:25:50,345
Graph databases require
specialized infrastructure.

458
00:25:50,615 --> 00:25:55,235
For fraud, analyst need to be trained
on how they effectively query,

459
00:25:55,235 --> 00:25:57,395
visualize, and interpret the graph data.

460
00:25:57,725 --> 00:26:01,385
By following these recommendations,
financial organizations can successfully

461
00:26:01,385 --> 00:26:06,245
adopt graph databases and position
themselves to effectively combat on

462
00:26:06,245 --> 00:26:08,105
evolving threat of financial fraud.

