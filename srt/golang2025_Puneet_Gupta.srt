1
00:00:00,840 --> 00:00:05,760
Hi everyone, my name is Punit, and
today I'm going to discuss and share

2
00:00:05,760 --> 00:00:10,980
some of the innovative methodologies
for timing ECO implementation

3
00:00:11,520 --> 00:00:13,590
during chip physical design phase.

4
00:00:14,070 --> 00:00:18,960
We can call it optimizing to timing
ECO implementation through Slack aware

5
00:00:18,960 --> 00:00:23,070
post routing cell legalization and why.

6
00:00:23,180 --> 00:00:26,630
this is an important aspect of PNR.

7
00:00:27,169 --> 00:00:35,540
The reason behind it when we apply any
ECU during the chip timing closure or any

8
00:00:35,599 --> 00:00:43,250
other phages tool, does legalization based
on the net length tool, does not consider

9
00:00:43,430 --> 00:00:50,629
any requirement of looking at Slack or
any other aspect of the design in such

10
00:00:50,629 --> 00:00:56,510
a scenario when tool through these cells
or anytime in critical cell far away.

11
00:00:57,200 --> 00:01:04,220
It loops or looms into a new timing
violation, which creates a necessity to

12
00:01:04,220 --> 00:01:10,970
discuss these kind of, things in a regular
day to day EC implementation approach.

13
00:01:11,960 --> 00:01:17,540
overall, if we look at this approach,
what we can do, we can divide the

14
00:01:17,540 --> 00:01:23,090
legalization process into multiple
steps and can control the legalize

15
00:01:23,450 --> 00:01:25,250
in a very sophisticated way.

16
00:01:25,750 --> 00:01:31,359
this methodology helps, prioritizing
some of the, negative slack cell.

17
00:01:31,929 --> 00:01:37,739
Strategically, we can legalize some of the
cells and we can optimize the design in a

18
00:01:37,739 --> 00:01:40,709
step by step, and we can maintain the QOR.

19
00:01:41,209 --> 00:01:46,729
so to do that, we first need to understand
from where the ECO requirement comes.

20
00:01:47,159 --> 00:01:52,229
ECO requirements can arise from
many places generally during

21
00:01:52,229 --> 00:01:53,849
the physical design phase.

22
00:01:54,539 --> 00:02:00,239
What we do, we run the p and r in
some of the dominant scenario, whereas

23
00:02:00,239 --> 00:02:05,399
there can be multiple scenarios for
the timing closure need to be utilized.

24
00:02:06,344 --> 00:02:10,305
If we are running our p and r,
in some scenarios, we may be

25
00:02:10,305 --> 00:02:13,875
having little bit timing closure
requirement in different scenarios.

26
00:02:14,625 --> 00:02:19,185
So at the end of the p and r, we
will be applying these timing, ECO,

27
00:02:20,084 --> 00:02:24,255
or let us say, when we started the
design, we had some functionality

28
00:02:24,825 --> 00:02:26,924
and during the design verification.

29
00:02:27,584 --> 00:02:31,724
The team finds out that there is
an issue with the design and there

30
00:02:31,724 --> 00:02:35,385
is a need of a logical CO to apply.

31
00:02:35,724 --> 00:02:39,114
such kind of scenario can
occur and we need to apply the

32
00:02:39,504 --> 00:02:44,734
CO and we need to do further,
optimization with respect to the CH.

33
00:02:45,514 --> 00:02:49,874
Also, at the same time, during the
D-R-C-L-V disclosure, we need to move

34
00:02:49,874 --> 00:02:54,934
sometimes cell here and there in the
design and these, requirements occur.

35
00:02:55,434 --> 00:02:58,104
So let's look at the details
of this presentation.

36
00:02:58,604 --> 00:03:02,795
And these, reaches to the
first of the, challenges of

37
00:03:02,795 --> 00:03:04,595
the timing EC implementation.

38
00:03:05,095 --> 00:03:11,335
So when we start, applying the
ECO and if in certain areas there

39
00:03:11,450 --> 00:03:16,015
are so many, cells, which are
densely sitting next to each other.

40
00:03:16,720 --> 00:03:22,420
And we need to insert some of the cells or
we need to upsize or downsize of the cell.

41
00:03:22,870 --> 00:03:28,530
In that scenario, there is a necessity
of, moving these cells, and if these cells

42
00:03:28,530 --> 00:03:35,010
moves from original location, these can
create some of the new timing violation.

43
00:03:35,670 --> 00:03:42,120
So in that scenario, if we can preserve
or fix those cells and move only other

44
00:03:42,120 --> 00:03:45,060
cells, we can reduce this challenge.

45
00:03:45,560 --> 00:03:50,480
The second thing, this comes from in a
conventional, pla placement algorithm.

46
00:03:50,480 --> 00:03:56,810
What we have noticed, generally, that
tool does not consider timing and it

47
00:03:56,810 --> 00:04:02,380
keep adding, the new violations when it
moves the cells here and there where it

48
00:04:02,380 --> 00:04:05,200
can find a place to move those cells.

49
00:04:06,020 --> 00:04:10,460
the third scenario can be where we
see that there are congested areas.

50
00:04:11,195 --> 00:04:15,545
Let us say to fix the whole timing
violation tool, need to insert one more

51
00:04:15,545 --> 00:04:21,265
buffer and tool cannot find it, and it
puts that cell pretty much far away.

52
00:04:21,295 --> 00:04:27,265
In that scenario, what can happen, the
net routed from that newly inserted

53
00:04:27,265 --> 00:04:30,175
cell can cause additional violation.

54
00:04:30,385 --> 00:04:33,715
It may be the set setup, or
either the whole violation.

55
00:04:33,955 --> 00:04:36,295
Sometimes you have seen
because of the crosstalk.

56
00:04:36,795 --> 00:04:40,815
So what are the ECO corrective
actions we take in that scenario?

57
00:04:40,865 --> 00:04:45,725
as I mentioned, we do sell up saging,
based on the setup requirement,

58
00:04:45,825 --> 00:04:47,565
to improve the timing margins.

59
00:04:48,135 --> 00:04:54,045
We do insert new cells based on,
if we need to insert the buffer or

60
00:04:54,075 --> 00:04:58,095
during the logical ECO, let us say,
we can introduce some logical gates.

61
00:04:58,695 --> 00:05:04,545
And we need to do very careful placement
if it is a congested region, even.

62
00:05:04,545 --> 00:05:09,015
In other case, we need to place next
to each other so that we can reduce

63
00:05:09,015 --> 00:05:10,635
the time enclosure requirement.

64
00:05:11,135 --> 00:05:17,395
And the third thing is, like we have seen
that there are cells sitting far away, and

65
00:05:17,395 --> 00:05:20,635
that path is creating a timing violation.

66
00:05:21,145 --> 00:05:24,355
Can we bring that cell
next to the driver cell?

67
00:05:24,685 --> 00:05:28,095
And can reduce the timing,
parasitics requirements so

68
00:05:28,095 --> 00:05:29,595
that we can improve that path.

69
00:05:30,045 --> 00:05:32,955
So these are the some ECO
corrective actions we take

70
00:05:33,015 --> 00:05:34,965
during our, p p and r phage.

71
00:05:35,465 --> 00:05:42,215
Now, what is different in this approach,
what I'm explaining here, the first

72
00:05:42,215 --> 00:05:48,895
thing is when tool sees, okay, there
is a buffer inserted or cell upsized.

73
00:05:49,390 --> 00:05:55,690
It looks for the narrowing empty spaces
and then place the cells in those areas.

74
00:05:55,750 --> 00:06:00,940
But if, let us say, if those species are
not available, what tool is going to do,

75
00:06:01,510 --> 00:06:07,440
tool can throw this cell very far away
where it can create some new violation.

76
00:06:07,890 --> 00:06:09,510
So how we can reduce that?

77
00:06:10,010 --> 00:06:16,340
So the approach here is, run a complete,
full timing analysis on that design.

78
00:06:17,090 --> 00:06:20,030
C in which area we are applying.

79
00:06:20,030 --> 00:06:25,840
The ECO cells nearby, areas
can be identified where the

80
00:06:25,840 --> 00:06:27,310
ECO cells will be placed.

81
00:06:28,150 --> 00:06:34,900
Tag the cells with all the slacks,
do the slack filtering based on that

82
00:06:35,020 --> 00:06:41,670
slack filtering, fix the critical
cells and now whatever the cells which

83
00:06:41,670 --> 00:06:44,490
are unfixed and need legalization.

84
00:06:44,865 --> 00:06:47,295
Move it by extreme algorithm.

85
00:06:47,895 --> 00:06:54,075
And extreme algorithm means if we need
to move cell by two track, move first

86
00:06:54,075 --> 00:06:57,945
cell, which is sitting nearby to the
next track, and then move this cell.

87
00:06:58,395 --> 00:07:02,865
So we are displacing all the
cells by relative placement.

88
00:07:03,705 --> 00:07:08,985
And then once this is done, we can go
with the IT refinement where we can.

89
00:07:09,485 --> 00:07:14,375
Take some loops and can legalize
you these cells by repositioning

90
00:07:14,375 --> 00:07:16,865
it again and again until less.

91
00:07:16,865 --> 00:07:24,365
We do not see that timing is completely
fixed, and here we are not creating

92
00:07:24,365 --> 00:07:29,555
new violations because we are
fixing most critical cells first.

93
00:07:29,945 --> 00:07:35,825
Then, we are moving the least
timing critical cells, then next

94
00:07:35,855 --> 00:07:38,045
level of cell, and then finally.

95
00:07:38,465 --> 00:07:41,345
When everything is legalized,
we are trying to legalize the

96
00:07:41,345 --> 00:07:43,235
critical cells, which were fixed.

97
00:07:44,015 --> 00:07:48,395
So in this approach, we are not
creating any new violations.

98
00:07:48,605 --> 00:07:54,665
Also, at the same time, we are taking care
of everything altogether without giving

99
00:07:54,725 --> 00:07:56,945
any cost function to any other function.

100
00:07:57,445 --> 00:08:01,925
So select based, self prioritization,
we can create, in four different

101
00:08:01,925 --> 00:08:03,485
categories, as I mentioned.

102
00:08:03,965 --> 00:08:07,565
The most critical slack, which are
the highest priority cells, like

103
00:08:07,625 --> 00:08:10,415
generally, we keep our flops fixed.

104
00:08:11,015 --> 00:08:17,015
And then moderate, critical, slack cells,
let us say if there are an end gate,

105
00:08:17,285 --> 00:08:22,745
which is a three input end gate, and have
a critical connection to multiple cells.

106
00:08:22,865 --> 00:08:27,515
So those can be, considered as a
secondary, critical slack cells.

107
00:08:28,085 --> 00:08:32,615
Then minor, negative, select cells
and noncritical select cells.

108
00:08:33,155 --> 00:08:37,265
So in this scenario, what we
can do, the category first

109
00:08:37,265 --> 00:08:38,945
one cell will be hard fixed.

110
00:08:39,545 --> 00:08:40,955
Second will be hard fixed.

111
00:08:41,495 --> 00:08:42,755
Third will be soft fixed.

112
00:08:42,755 --> 00:08:44,535
Fourth will be, unfixed.

113
00:08:44,535 --> 00:08:50,145
So we'll move first the noncritical
cell legalize it, then unfix the

114
00:08:50,505 --> 00:08:54,675
category, third cells legalize
it, then move the second.

115
00:08:54,775 --> 00:08:58,665
Category cells and I think,
first one, we should not move.

116
00:08:59,445 --> 00:09:04,595
We just can, change some of the tracks
here and there to make sure that there are

117
00:09:04,595 --> 00:09:07,145
no DRC violation because of those cells.

118
00:09:07,595 --> 00:09:14,455
So in such a methodology, what we can
bring that this progressive or looped

119
00:09:14,755 --> 00:09:21,165
enhancement can give us a very good,
placement of these critical cells.

120
00:09:21,570 --> 00:09:27,930
And we are not creating anything new
or any new violation in terms of DRC

121
00:09:27,930 --> 00:09:31,470
or timing, and we are maintaining
the performance of the design.

122
00:09:32,400 --> 00:09:39,740
In recent, experience, I have seen that
CPU designs or GPU designs where we are

123
00:09:39,740 --> 00:09:42,080
trying to post as much edge density.

124
00:09:42,320 --> 00:09:44,650
These algorithms are very useful.

125
00:09:45,150 --> 00:09:49,590
The iterative legalization process,
again, as I mentioned, that we can

126
00:09:49,590 --> 00:09:57,330
go fix the, all the hike, negative
slack or the critical slack cells.

127
00:09:58,050 --> 00:09:59,550
Legalize the moveable cells.

128
00:10:00,000 --> 00:10:04,320
Then again, we can go back,
evaluate timing, and we don't need

129
00:10:04,320 --> 00:10:06,210
to run the full update timing.

130
00:10:06,270 --> 00:10:12,440
We can run just some of the update cells,
which, based on the ECO cells we can run.

131
00:10:13,340 --> 00:10:18,760
And, unfixed less critical cells and
then move those and then we can, ably

132
00:10:19,030 --> 00:10:24,160
fix in three poor cycles, all these
timing violations and can move on.

133
00:10:25,060 --> 00:10:30,070
So this methodology is not only
taking care of the timing as

134
00:10:30,070 --> 00:10:32,470
well as what we can do, we can.

135
00:10:33,080 --> 00:10:38,630
create a such kind of grouping where we
are maintaining the critical part timing,

136
00:10:38,840 --> 00:10:41,630
as well as not creating any new DRC.

137
00:10:42,590 --> 00:10:46,070
let's see, what is stream
algorithm implementation age?

138
00:10:46,570 --> 00:10:50,680
We are sorting the cell based
on the priority and then

139
00:10:50,680 --> 00:10:52,060
creating the order queue.

140
00:10:52,090 --> 00:10:53,470
So this can be done.

141
00:10:53,570 --> 00:10:56,420
we can report the max
rise slack in any tool.

142
00:10:57,155 --> 00:11:01,295
Can tag it accordingly and
create a list of those cells.

143
00:11:01,835 --> 00:11:06,975
We can, look into the placement
analysis, can unfix and place

144
00:11:07,005 --> 00:11:12,735
the cells which are less critical
in the available ing empty area.

145
00:11:13,575 --> 00:11:19,805
Then we can go for the optimal, location
selection for the rest of the cells, which

146
00:11:19,805 --> 00:11:25,035
are critical so that we can other the
minimum wire length, algorithm as well.

147
00:11:25,455 --> 00:11:28,935
And then we can do the
incremental timing updates.

148
00:11:29,355 --> 00:11:33,825
In that scenario, we are taking care of
each and everything at the same time.

149
00:11:34,325 --> 00:11:39,725
So some of the quality results, what
I have seen in the designs, based

150
00:11:39,725 --> 00:11:45,395
on this approach, so WNS, which
is we call was negative slack, had

151
00:11:45,395 --> 00:11:51,555
improved by 15% by utilizing this,
approach for the legalization.

152
00:11:51,990 --> 00:11:58,620
So initially when, let's say design was
70% utilization, utilized and tool through

153
00:11:58,920 --> 00:12:03,600
the cell somewhere far away, created a
new slack to fix that slack, inserted

154
00:12:03,600 --> 00:12:05,580
some new cell, created a new slack.

155
00:12:05,940 --> 00:12:13,270
So that kind of it, process took very
long, time to close because of news slack.

156
00:12:13,840 --> 00:12:18,010
In this scenario, when we are
doing it very control and.

157
00:12:18,445 --> 00:12:20,995
Observing all the things at the same time.

158
00:12:21,385 --> 00:12:27,235
Thus, WNS improvement observed by
15% during the ECU application.

159
00:12:28,015 --> 00:12:31,595
And when we are seeing good,
TNS improvement, TNS will

160
00:12:31,655 --> 00:12:33,665
automatically will help improve.

161
00:12:34,055 --> 00:12:36,155
And these are the things we noticed.

162
00:12:37,055 --> 00:12:42,035
At the same time, when I'm taking
care of my ECO in one single sort.

163
00:12:42,575 --> 00:12:48,295
And not, looking for the new ECO,
which can arise from different

164
00:12:48,295 --> 00:12:50,255
kind of ECO, requirement.

165
00:12:50,705 --> 00:12:56,015
So I'm reducing the whole ECO
cycle to fewer iterations.

166
00:12:56,015 --> 00:13:02,885
So let us say I fixed one ECO, created
some new timing violation, fixed those,

167
00:13:02,885 --> 00:13:04,715
created some new timing violation.

168
00:13:05,075 --> 00:13:07,355
That process is not happening now.

169
00:13:08,060 --> 00:13:14,780
So I can reduce my ECO cycle
time by say 40 to 50%, and

170
00:13:14,780 --> 00:13:16,970
I'm applying fewer ecos now.

171
00:13:17,870 --> 00:13:22,940
Now the runtime overhead comes
from when I'm looking at only

172
00:13:22,940 --> 00:13:24,950
legalizing, only some cells.

173
00:13:25,710 --> 00:13:31,335
the placer can go and legalize those
cells very fast and can come back also.

174
00:13:32,200 --> 00:13:36,250
excuse me, not doing, the
complete, set of, update timing.

175
00:13:36,580 --> 00:13:40,750
So that is also giving me some of
the advantage when I'm doing the

176
00:13:41,250 --> 00:13:43,860
legalization or timing updates.

177
00:13:44,190 --> 00:13:49,880
So these are some of the QR checks, in
seven nanometer mobile SOC implementation.

178
00:13:49,930 --> 00:13:51,400
what I noticed that.

179
00:13:52,150 --> 00:13:55,690
When during the EC implementation,
these things are happening.

180
00:13:55,810 --> 00:14:00,530
I'm not stuffing new cells, not
putting, there is an, less need

181
00:14:00,530 --> 00:14:04,400
of, putting more buffers and other
things wide drafting this algorithm.

182
00:14:04,850 --> 00:14:10,640
So in those areas where ECO need
to apply, there is a huge amount

183
00:14:10,640 --> 00:14:12,290
of congestion reduction happening.

184
00:14:12,320 --> 00:14:19,530
By adopting these methodologies, the
violations are not ha as I mentioned that.

185
00:14:19,875 --> 00:14:23,595
If we will do it very carefully,
new violation will not come.

186
00:14:23,895 --> 00:14:26,475
So EC requirement also will reduce.

187
00:14:26,595 --> 00:14:30,015
In that scenario, I have seen
that I'm applying only half

188
00:14:30,015 --> 00:14:31,785
of the ECOS or less than that.

189
00:14:32,445 --> 00:14:38,355
Also, when I'm applying very fewer
ecos, my closure timing is much faster.

190
00:14:38,835 --> 00:14:44,415
So this kind of scenario I have seen,
like in CPU design, GPU design, I've

191
00:14:44,415 --> 00:14:46,425
worked on neural network accelerator.

192
00:14:46,425 --> 00:14:48,625
The designs were really, really congested.

193
00:14:49,150 --> 00:14:55,360
And these requirements must have been
adopted and implemented in such a way.

194
00:14:55,750 --> 00:15:02,110
So these are some of the advantages I
have seen in the designs, which definitely

195
00:15:02,110 --> 00:15:06,490
helped me to get the chip out on time.

196
00:15:06,850 --> 00:15:08,980
Yields were really nice.

197
00:15:09,030 --> 00:15:15,000
when the Sleen came back, we did not see
much of the problems since we have taken

198
00:15:15,000 --> 00:15:16,920
care of all these things at the same time.

199
00:15:17,420 --> 00:15:21,020
So some of the implementation
consideration for these kind of

200
00:15:21,020 --> 00:15:27,080
methodologies, what we can see that
when we are going, in partial EC

201
00:15:27,080 --> 00:15:32,600
implementation and doing step by
step partial implementation of,

202
00:15:32,650 --> 00:15:35,470
legalization and timing closure.

203
00:15:35,920 --> 00:15:39,150
And then, again, running
routing and looking it back.

204
00:15:39,900 --> 00:15:46,040
We have a runtime optimization, scenario
where we can, look at very specific

205
00:15:46,040 --> 00:15:52,220
area, target those for implementation,
and can definitely improve the accuracy.

206
00:15:52,720 --> 00:15:59,530
These, flows can be, or methodologies can
be, integrate in the flows very easily.

207
00:16:00,010 --> 00:16:05,770
So I have written some, tick script,
which tool can read and can write also.

208
00:16:06,250 --> 00:16:13,030
And then based on that we can write CSV
file to list the cells, slacks, and keep.

209
00:16:13,060 --> 00:16:16,870
We can do some kind of sorting
based on and tool can read it

210
00:16:16,870 --> 00:16:19,720
back and can apply the algorithm.

211
00:16:19,960 --> 00:16:21,880
So very easy to use.

212
00:16:22,270 --> 00:16:28,870
From the integration perspective or we
can apply in an existing flows as well

213
00:16:28,870 --> 00:16:31,780
as we can develop some new methodologies.

214
00:16:32,470 --> 00:16:38,570
Parameter tuning is another thing, like
lot of things, can be guided by the tool

215
00:16:38,570 --> 00:16:45,220
also, like some of the stream commands,
tool already hedged int inside, so we

216
00:16:45,220 --> 00:16:48,610
can call those commands and can utilize.

217
00:16:48,670 --> 00:16:51,040
To do these kind of ECO.

218
00:16:51,540 --> 00:16:56,980
conclusion here is, so in this scenario,
when we are doing this time enclosure, it

219
00:16:57,010 --> 00:17:00,790
significantly improves the predictivity.

220
00:17:00,850 --> 00:17:07,060
It definitely reduces a lot of
ECO attrition and that when we are

221
00:17:07,150 --> 00:17:10,900
looking at very high frequency,
highly congested designs.

222
00:17:11,305 --> 00:17:14,905
This is the only way to go
for any ECU application.

223
00:17:15,695 --> 00:17:16,625
in the industry.

224
00:17:16,625 --> 00:17:20,795
I have worked on seven nanometer
design, five nanometer design, and

225
00:17:20,855 --> 00:17:23,735
lower node of high performance designs.

226
00:17:24,365 --> 00:17:28,955
This is really, important and,
lot of industry applications are

227
00:17:28,955 --> 00:17:31,265
there in other designs as well.

228
00:17:32,235 --> 00:17:38,735
in future there can be, Lot of things
added on these, top of, this algorithm.

229
00:17:39,515 --> 00:17:44,975
so some of the things like if we are
looking at power, if we are looking

230
00:17:44,975 --> 00:17:51,575
at area, so these legalization schemes
can help in those aspects as well.

231
00:17:52,075 --> 00:17:57,235
So this methodology, overall
I'll say, presents a new era

232
00:17:57,235 --> 00:17:59,785
of legalization for ECO cells.

233
00:18:00,625 --> 00:18:07,295
Also helps in all kind of, PP aspect
of the designs and can be easily

234
00:18:07,295 --> 00:18:14,105
integrated and connected to any flow in
any technology based on the requirement.

235
00:18:14,605 --> 00:18:19,305
this is all, from my side for today and
thank you very much for listening to me.

236
00:18:19,785 --> 00:18:22,895
Please, feel free to reach out
to me if you have any question.

237
00:18:23,495 --> 00:18:24,005
Thanks.

238
00:18:24,065 --> 00:18:24,815
Have a great day.

239
00:18:25,175 --> 00:18:25,385
Bye.

