1
00:00:00,360 --> 00:00:01,230
Hi folks.

2
00:00:01,740 --> 00:00:02,790
Greetings of the day.

3
00:00:03,210 --> 00:00:04,620
This is pun Gupta here.

4
00:00:05,340 --> 00:00:10,530
Today I'm going to talk about adaptive
power calculation for low power

5
00:00:10,590 --> 00:00:13,320
or battery operated chips design.

6
00:00:13,820 --> 00:00:20,060
In today's scenario, when we look at
our live, we are using lot of systems or

7
00:00:20,060 --> 00:00:25,640
devices which are battery operated and
has become essential part of our life.

8
00:00:26,375 --> 00:00:30,995
Thus, it becomes very necessary
to make sure that those

9
00:00:30,995 --> 00:00:33,755
power runs longer on battery.

10
00:00:34,085 --> 00:00:39,215
You don't need to charge again and again,
and whenever you need it, the battery is

11
00:00:39,215 --> 00:00:42,005
available to supply the adequate coin.

12
00:00:42,255 --> 00:00:44,865
How we can make sure that's happening.

13
00:00:45,435 --> 00:00:47,535
We can design a system.

14
00:00:47,595 --> 00:00:49,060
We can design the chip.

15
00:00:49,905 --> 00:00:54,495
With the correct specification so
that we can deploy the battery,

16
00:00:54,555 --> 00:00:58,815
which can provide the adequate
current whenever it is needed.

17
00:00:59,805 --> 00:01:04,395
So a proper calculation is required
when we are designing the system.

18
00:01:04,395 --> 00:01:10,115
We are designing the shape or any
other part of this overall device.

19
00:01:10,595 --> 00:01:13,360
What we will be using
in our day to day life.

20
00:01:13,610 --> 00:01:17,450
Some of the examples of these
devices are smartphones.

21
00:01:17,630 --> 00:01:19,610
What we use day to day life.

22
00:01:20,000 --> 00:01:24,170
We want to charge it for a small time,
we want to use it for a longer time.

23
00:01:25,040 --> 00:01:29,060
Tablets are there cars,
are there many more things?

24
00:01:29,840 --> 00:01:35,600
So let's just go through this presentation
and see what are the components which

25
00:01:35,600 --> 00:01:38,750
are responsible for power calculation.

26
00:01:39,170 --> 00:01:41,660
What is the current state of power?

27
00:01:42,200 --> 00:01:49,010
How we are calculating nowadays, what
are the problems or flaws in our current

28
00:01:49,010 --> 00:01:54,770
methodology and flows right now during
the power calculation for the chips

29
00:01:55,009 --> 00:01:58,490
and how it impacts the overall process.

30
00:01:58,990 --> 00:02:00,630
So first slide.

31
00:02:01,130 --> 00:02:02,959
So power calculation challenge.

32
00:02:03,019 --> 00:02:08,420
What are the challenges which makes
this process a little bit difficult

33
00:02:08,870 --> 00:02:13,620
or insert the incu accuracies
when we calculate the power.

34
00:02:14,549 --> 00:02:17,620
So there are a lot of power parameters.

35
00:02:17,650 --> 00:02:21,550
What we need for power calculations
are dynamically change, like

36
00:02:21,580 --> 00:02:26,260
changing in day to day chip design
process, or they keep changing as

37
00:02:26,470 --> 00:02:28,300
chip design process progresses.

38
00:02:28,795 --> 00:02:33,674
So if we look at any holistic chip
design process, we can divide it into

39
00:02:33,734 --> 00:02:37,004
multiple sub persons, like architecture.

40
00:02:37,064 --> 00:02:42,404
Then we have RTL, then we have physical
design, and then we have final sign off.

41
00:02:42,654 --> 00:02:48,764
These parameters can be based on the
formula, the toggling file, the load cap.

42
00:02:49,634 --> 00:02:53,804
Sometimes we look at the frequency
and voltage variation level.

43
00:02:54,044 --> 00:02:54,334
Also.

44
00:02:55,009 --> 00:02:59,339
So all these parameters are
dynamically changing and when we try

45
00:02:59,339 --> 00:03:04,499
to calculate those things, if those
are changing, our power estimate

46
00:03:04,499 --> 00:03:06,369
for the power may not accurate.

47
00:03:06,869 --> 00:03:12,029
Early inaccuracies are the, another
set of components, like when we started

48
00:03:12,029 --> 00:03:18,089
with one of set of the architecture,
we did not consider few features.

49
00:03:18,089 --> 00:03:21,929
And if those features we are
adding at the later stage.

50
00:03:22,439 --> 00:03:26,789
And those are some high frequency
switching features that may

51
00:03:26,789 --> 00:03:29,659
change the power computation.

52
00:03:29,869 --> 00:03:35,279
And it can cascade with many other
things in the later stage of the design.

53
00:03:35,779 --> 00:03:37,849
The distributor network is huge.

54
00:03:37,849 --> 00:03:42,959
Also comes in the picture when
we calculated the power at some

55
00:03:42,959 --> 00:03:48,749
numbers and then we designed the
power network when we are using it.

56
00:03:49,289 --> 00:03:53,619
The lot of things has been changed
in terms of, let us say we added

57
00:03:53,619 --> 00:03:56,979
the feature, we changed the RTL,
that increased the area of the

58
00:03:56,979 --> 00:03:59,739
design and it need more current now.

59
00:04:00,129 --> 00:04:05,499
And when we more current, we need to
add, make the power network robust,

60
00:04:05,589 --> 00:04:09,399
and that will add the load cap stands,
so the total power of the design.

61
00:04:10,089 --> 00:04:13,149
So these are some of the
challenges, what we are seeing in

62
00:04:13,149 --> 00:04:15,129
day to day chip design process.

63
00:04:15,629 --> 00:04:19,254
Current state is the fixed
calculation, how we are doing it.

64
00:04:19,349 --> 00:04:22,499
We have some specification
based on the architecture.

65
00:04:22,979 --> 00:04:26,329
We are looking into it, say
we are doing CPO design.

66
00:04:26,329 --> 00:04:28,879
So batch will be happening in this cycle.

67
00:04:28,879 --> 00:04:33,859
So this logic will be switching only in
this particular cycle for two cycles.

68
00:04:33,919 --> 00:04:39,809
This amount of logic will be off, so
only leakage will be there and so on.

69
00:04:40,304 --> 00:04:47,234
So we have this kind of scenario,
but actually we cannot accumulatively

70
00:04:47,234 --> 00:04:52,344
look at the entire design switching
that, how this will be switching.

71
00:04:52,404 --> 00:04:55,734
So there is a possibility
that we are still leaving a

72
00:04:55,734 --> 00:04:57,594
significant margin of errors.

73
00:04:57,594 --> 00:05:00,804
Us, we are using aesthetic
design parameters like okay.

74
00:05:01,329 --> 00:05:06,779
We will be having this much area, the area
will grow by this much and this is how it

75
00:05:06,779 --> 00:05:09,539
is going to change our load curve stance.

76
00:05:09,599 --> 00:05:14,159
But there is a possibility that
when we are going through the design

77
00:05:14,159 --> 00:05:18,869
closure phase, these parameters may
change and if we will not include,

78
00:05:19,469 --> 00:05:23,489
we may see that the calculations,
what we have done for the power may

79
00:05:23,489 --> 00:05:25,829
be inaccurate or less approximate.

80
00:05:26,759 --> 00:05:28,499
Sometimes what we see that.

81
00:05:29,084 --> 00:05:34,334
During the late stage, when we are
done with all these things, we figure

82
00:05:34,334 --> 00:05:39,334
out, okay now whatever the power
we were estimating has changed.

83
00:05:39,454 --> 00:05:46,594
The reason maybe during area
conversions, what designer did, he did

84
00:05:46,624 --> 00:05:53,344
use lot of el leaky cells, ELBT, or
ELBT cells, which reduced the area,

85
00:05:53,344 --> 00:05:55,084
but actually increased the power.

86
00:05:55,584 --> 00:06:02,795
And all these things mixed and match
will result in a suboptimal designs where

87
00:06:03,185 --> 00:06:05,675
it can have higher power conjunction.

88
00:06:05,675 --> 00:06:10,295
It can have like lower performance
and at the same time the battery

89
00:06:10,295 --> 00:06:11,300
may be leaking really fast.

90
00:06:11,800 --> 00:06:16,735
So all these things are in the current
state of the chip design, how we

91
00:06:16,735 --> 00:06:18,715
can overcome of all these things.

92
00:06:19,285 --> 00:06:24,635
So we know that when we are starting
the design, we have some architecture,

93
00:06:25,205 --> 00:06:31,775
but can we account for some extra
feature if we know about it?

94
00:06:31,925 --> 00:06:32,315
Okay.

95
00:06:32,345 --> 00:06:36,575
Can we model such some kind of
additional margins when we are

96
00:06:36,605 --> 00:06:38,615
competing on the power initially?

97
00:06:39,395 --> 00:06:44,165
So actual toggling file based on
the design requirement we get at the

98
00:06:44,165 --> 00:06:46,995
end of the physical design closure.

99
00:06:47,520 --> 00:06:54,440
When we run gate level simulation, but
can we model these kind of FSDs in the

100
00:06:54,440 --> 00:06:59,419
starting so that have, we can calculate
the power in a more approximated way,

101
00:06:59,870 --> 00:07:04,340
so the calculation can be done based
on the comprehensive power estimate

102
00:07:04,490 --> 00:07:07,190
and using preliminary specification.

103
00:07:07,395 --> 00:07:12,130
Also, we can use some statistical
models based on the prior prior

104
00:07:12,130 --> 00:07:16,210
experience, prior design experience,
prior technology experience.

105
00:07:16,660 --> 00:07:21,780
And based on what we are thinking
that this feature will be

106
00:07:21,780 --> 00:07:23,340
adding or something like that.

107
00:07:24,090 --> 00:07:29,190
Now, at the same time, we can dynamically
incorporate these real time measurements

108
00:07:29,190 --> 00:07:32,130
data and can refine our parameters.

109
00:07:32,130 --> 00:07:37,020
So at the architecture level,
we estimated, okay, this much

110
00:07:37,229 --> 00:07:38,669
switching activity will be there.

111
00:07:39,090 --> 00:07:43,109
But when we are moving further, we are
not able to do enough clock getting.

112
00:07:43,484 --> 00:07:48,934
Can we change that kind of parameters
and can do the recomp computation

113
00:07:48,934 --> 00:07:53,484
of the power, adjusting those power
specification and then announcing the

114
00:07:53,484 --> 00:07:59,484
procession of those power computation
will help us to optimize the battery life.

115
00:08:00,205 --> 00:08:04,344
And then after that, we can
validate those results at the

116
00:08:04,344 --> 00:08:06,354
same time by benchmarking against.

117
00:08:07,075 --> 00:08:11,965
Whatever the test factors, we have
to see that whatever the improvements

118
00:08:11,965 --> 00:08:17,304
we have done are actually going to
meet the power requirement or not.

119
00:08:17,455 --> 00:08:23,364
Or still, we need to provide the feedback
to the architecture or to the RTL team

120
00:08:23,364 --> 00:08:28,465
or to the physical design team that we
are not meeting, and we can take this

121
00:08:28,524 --> 00:08:33,414
adaptive methodology and can go through
a couple of different cycles to close it.

122
00:08:33,914 --> 00:08:37,245
Now key milestone for
adaptive recalculation.

123
00:08:37,485 --> 00:08:42,284
So as I mentioned, based on the
architecture definition, that

124
00:08:42,284 --> 00:08:46,875
is the baseline power S where
we have a specification and we

125
00:08:46,875 --> 00:08:48,855
can use statistical modeling.

126
00:08:49,814 --> 00:08:52,335
We can do this through
the RTL development.

127
00:08:52,694 --> 00:08:57,705
So when we know that this is the RTL,
this is the activity will be there.

128
00:08:58,290 --> 00:09:03,510
We can do the some simulation at
that time and can do the all the

129
00:09:03,510 --> 00:09:08,190
analysis for the power based on the
workload analysis and available RTL.

130
00:09:08,690 --> 00:09:10,160
Next is the physical design.

131
00:09:10,190 --> 00:09:15,800
When design is placed off clock three,
synthesis is done, routing is done.

132
00:09:15,800 --> 00:09:19,010
We have more realistic
value of load cup stents.

133
00:09:19,595 --> 00:09:25,085
We can have a good quality of toggle
rate file and we can do much more

134
00:09:25,115 --> 00:09:30,085
accurate power profiling at physical
design stage, sleek and validation.

135
00:09:30,085 --> 00:09:35,215
When a design is ready to tap out,
ready to go to for masks generation

136
00:09:35,215 --> 00:09:39,775
to the foundry at that time, what
kind of power calculations are there?

137
00:09:39,775 --> 00:09:45,985
So we can do rigorous power computation
based on whatever FSDV we have.

138
00:09:46,064 --> 00:09:52,305
We can have functional FSDs, we can have
DFT based FSDs, and in those two scenarios

139
00:09:52,305 --> 00:09:54,494
also, there can be multiple modes.

140
00:09:54,824 --> 00:09:57,915
So for each and every mode,
whatever we were expecting, are

141
00:09:57,915 --> 00:09:59,505
we meeting those goals or not?

142
00:09:59,744 --> 00:10:05,134
So we can check at that time not tracking
input quality at each and every stage.

143
00:10:05,164 --> 00:10:05,795
As I mentioned that.

144
00:10:06,295 --> 00:10:09,594
When initially we are starting
the design, we can account for

145
00:10:09,594 --> 00:10:11,694
some of the factors toggling rate.

146
00:10:11,724 --> 00:10:12,204
Okay?

147
00:10:12,474 --> 00:10:18,264
That all the sequential and all
the input outputs should have

148
00:10:18,384 --> 00:10:21,534
at least 45% activity annotated.

149
00:10:22,284 --> 00:10:26,844
The parasitic data can be assumed
to be 80% based on the model,

150
00:10:26,844 --> 00:10:28,674
20% based on the real one.

151
00:10:29,214 --> 00:10:32,384
Same can be scaled going further.

152
00:10:32,774 --> 00:10:37,634
So during the Synthes stage, we
can consider, okay, 65% toggle rate

153
00:10:37,634 --> 00:10:43,295
should meet parasitic data can be
little bit more accurate beyond the

154
00:10:43,295 --> 00:10:48,175
55 or more percentage because we have
physical aware synthesis capabilities

155
00:10:48,175 --> 00:10:54,415
available place in route, we expect
80 to a hundred percent, or I'll say.

156
00:10:55,270 --> 00:11:01,360
In ballpark favor between 95 to a
hundred percent toggle rate to meet.

157
00:11:01,510 --> 00:11:05,890
And then the completeness of
parasitics should be 85 to a

158
00:11:05,890 --> 00:11:10,690
hundred percent, and then we can
calculate a more accurate power.

159
00:11:10,690 --> 00:11:15,260
And then why like here the numbers
are a little less because we are

160
00:11:15,260 --> 00:11:20,869
not considering the optimization,
so we can calculate these numbers.

161
00:11:21,245 --> 00:11:26,045
At the, just before, at the starting of
the place and route and at the end of

162
00:11:26,045 --> 00:11:28,045
the place and route at the final design.

163
00:11:28,045 --> 00:11:32,215
So that's where the 95%,
200% comes, and 80%.

164
00:11:32,905 --> 00:11:39,525
So when we have these kind of collateral
sub level, we can include few things

165
00:11:39,525 --> 00:11:45,635
based on the statistical models and few
inputs are the actual, and we can have a

166
00:11:45,635 --> 00:11:47,915
very much approximated power calculation.

167
00:11:48,415 --> 00:11:54,634
Automation spread, G so in trend we can
make our methodologies or process in

168
00:11:54,634 --> 00:11:59,605
such a way that we can intelligently
identify available and put parameters.

169
00:11:59,605 --> 00:12:00,444
So like flow.

170
00:12:00,834 --> 00:12:05,060
If this file exists, like
FSDV file exist, use it.

171
00:12:05,209 --> 00:12:08,125
Otherwise use a pessimistic toggle rate.

172
00:12:08,935 --> 00:12:13,944
Implementation mod opt implementation
of optimal co calculation models

173
00:12:14,004 --> 00:12:15,684
based on the data maturity.

174
00:12:15,924 --> 00:12:19,884
So how we'll be going for the, whatever
the data maturity will be there.

175
00:12:19,944 --> 00:12:27,554
Based on that, we can refine our models
and proactively we can flag Okay, FSDV

176
00:12:27,554 --> 00:12:32,079
is missing, this library is missing
the toggle rate looks really low.

177
00:12:32,655 --> 00:12:37,814
All these things we can flag and
can report it to the actual owner.

178
00:12:37,864 --> 00:12:42,364
If it need to be feedback to the
RTL or if need to feed back to the

179
00:12:42,844 --> 00:12:46,744
architecture or if need to be feedback
to the physical design engineer.

180
00:12:47,244 --> 00:12:52,775
Wherever there is a gap of
something missing, we can bridge

181
00:12:52,835 --> 00:12:54,875
with the help of predictive models.

182
00:12:54,875 --> 00:12:59,585
So let us say if initially
D-F-T-F-S-D-V is missing.

183
00:13:00,305 --> 00:13:06,344
Can we generate some kind of model which
can predict the activity and those can

184
00:13:06,344 --> 00:13:09,074
be leveraged in these competitions.

185
00:13:09,584 --> 00:13:15,494
Any historical data can also be
included and self prediction also

186
00:13:15,494 --> 00:13:18,194
available if we can utilize ai.

187
00:13:18,194 --> 00:13:23,856
I at the same time, when we are doing
all these computation, we can provide our

188
00:13:23,856 --> 00:13:26,826
feedback to all the cross team members.

189
00:13:27,331 --> 00:13:30,561
We can work with the like
design verification team.

190
00:13:30,861 --> 00:13:31,131
Okay.

191
00:13:31,131 --> 00:13:32,751
This is what we are seeing.

192
00:13:32,751 --> 00:13:37,401
This is what we should see where
is the mismatch, and can look at

193
00:13:37,581 --> 00:13:42,201
all these industry standard tools
to make sure that whatever the

194
00:13:42,471 --> 00:13:45,201
power analysis we have is accurate.

195
00:13:45,921 --> 00:13:50,031
Kind of dashboard also we created,
which can be shared across all

196
00:13:50,031 --> 00:13:54,671
the teams and they can look at
it at the same time and take the

197
00:13:54,671 --> 00:13:56,951
proactive and whatever is required.

198
00:13:57,451 --> 00:14:02,671
So power distribution, network
optimization is part, also part of it.

199
00:14:03,001 --> 00:14:08,371
So based on the initial computation,
we designed some kind of power network.

200
00:14:08,971 --> 00:14:13,051
So we need to precisely calibrate to
match the dynamic power requirements

201
00:14:13,051 --> 00:14:17,901
so that we can provide the adequate
current to all the circuits at the

202
00:14:17,901 --> 00:14:19,731
required frequency and voltage.

203
00:14:20,541 --> 00:14:25,131
We need to make sure that we
do not have any IR drop issues.

204
00:14:25,131 --> 00:14:27,231
We do not have any electro migration.

205
00:14:28,136 --> 00:14:33,216
We need to have a good network
which can supply adequate current.

206
00:14:33,306 --> 00:14:36,666
At the same time, we need to
make sure that we are leaving.

207
00:14:37,491 --> 00:14:42,501
Enough routing resources for the
clocks and for the signal routing

208
00:14:42,711 --> 00:14:46,551
so that we will not run into the
crunch or congestion situation.

209
00:14:47,421 --> 00:14:52,771
And that overall we will see that
we have enough power getting done at

210
00:14:52,841 --> 00:14:57,281
like when there is a certain amount
of logic doesn't need to switch.

211
00:14:57,611 --> 00:14:59,561
We have power getting done available.

212
00:15:00,281 --> 00:15:06,621
Or any kind of operation which can
provide more battery life, like

213
00:15:06,831 --> 00:15:09,141
dynamic voltage and frequency scaling.

214
00:15:09,621 --> 00:15:14,091
At the same time, let us say we can
reduce the frequency, reduce the voltage,

215
00:15:14,121 --> 00:15:21,321
and can perform that operation at a
slower rate or a kind of camera example.

216
00:15:21,321 --> 00:15:25,791
When we are not using it, the tool
or the system should automatically

217
00:15:25,791 --> 00:15:27,726
switch it off, so those kind of.

218
00:15:28,236 --> 00:15:31,866
Optimization can be done
to get better battery life.

219
00:15:32,366 --> 00:15:37,446
So when we use these kind of
techniques in real life, we see that

220
00:15:37,746 --> 00:15:41,206
we can save 30% to, for 30 to 40%.

221
00:15:41,266 --> 00:15:47,006
Or in my case, I have seen 37% power
saving during the chip operation.

222
00:15:47,486 --> 00:15:53,746
We saw that when we calculated the
accurate power and designed our network.

223
00:15:54,106 --> 00:16:01,636
We were able to improve the efficiency
in terms of performance by 42%

224
00:16:01,696 --> 00:16:08,776
without any area penalty and battery
longevity improved by 2.8 times.

225
00:16:09,346 --> 00:16:14,306
So all these things came coming from
one of the battery operated devices

226
00:16:14,306 --> 00:16:16,406
running at very high frequency.

227
00:16:16,906 --> 00:16:18,316
Implementation roadmap.

228
00:16:18,366 --> 00:16:24,806
As I mentioned that all these statistical
models or aesthetic models, excuse me,

229
00:16:25,106 --> 00:16:29,546
learning based on the prior designs
can be integrated in the tools and

230
00:16:29,546 --> 00:16:34,361
methodology and flow, the team or
of the engineers all the way from

231
00:16:34,401 --> 00:16:38,041
architecture to RTL and implementation.

232
00:16:38,821 --> 00:16:43,361
Can be trained on the adaptive power
calculation methodologies so that they

233
00:16:43,361 --> 00:16:49,421
can look at each and everything very
carefully and can provide the right

234
00:16:49,421 --> 00:16:51,881
input or they can do the right job.

235
00:16:52,161 --> 00:16:56,481
Or for a physical design engineer,
if they are looking at more power

236
00:16:57,211 --> 00:17:02,101
in their reports, they can analyze
and develop why the power is more,

237
00:17:02,221 --> 00:17:04,651
are they using the right toggling?

238
00:17:05,221 --> 00:17:11,451
Or they to open the leaky cells or
something else, process updates.

239
00:17:11,491 --> 00:17:16,681
At the same time, when we are implementing
these kind of methodologies, we need to

240
00:17:16,681 --> 00:17:21,841
have a checkpoints which automatically
triggers the power calculation and

241
00:17:21,841 --> 00:17:27,361
tells us so like in the flow itself,
when we are running synthesis, we

242
00:17:27,361 --> 00:17:31,021
need to write all the power reports
when we are running play soft.

243
00:17:31,486 --> 00:17:36,076
It should write power report at the end,
after the clock off and after the routing.

244
00:17:36,466 --> 00:17:42,046
So when we are tracking it through various
phases, we can see the difference and

245
00:17:42,046 --> 00:17:44,566
we can easily identify the root cause.

246
00:17:44,596 --> 00:17:48,526
If there is any differences
systematically, we can define

247
00:17:48,526 --> 00:17:53,536
these prediction models or fds
or any other required input for

248
00:17:53,536 --> 00:17:58,396
the computation, and that always
helps to have more accurate power.

249
00:17:58,896 --> 00:18:04,966
So key takeaways from here when we are
doing adaptive methodologies versus

250
00:18:04,966 --> 00:18:10,786
the aesthetic, we have more accurate
power computation at each and every

251
00:18:10,786 --> 00:18:15,976
stage, and we can collaborate with the
right team to provide the feedback so

252
00:18:15,976 --> 00:18:21,906
that they can enhance their process to
provide better inputs to the next stage.

253
00:18:21,906 --> 00:18:24,606
Like I have seen that.

254
00:18:25,476 --> 00:18:30,066
My, I have four cores, which are
switching simultaneously at the same

255
00:18:30,066 --> 00:18:33,746
time and consuming a lot of power.

256
00:18:34,436 --> 00:18:38,456
I provide this feedback to
the architecture team and they

257
00:18:38,456 --> 00:18:40,256
can came up with a solution.

258
00:18:40,646 --> 00:18:45,566
Okay, let's not turn on all
the core at the same time.

259
00:18:45,896 --> 00:18:51,176
We will turn on the cores based on the
load requirement so that we are not

260
00:18:51,176 --> 00:18:53,036
drawing the power at the same time.

261
00:18:53,756 --> 00:18:59,876
And if there is a need of all four
scores switching at the same time, we

262
00:18:59,996 --> 00:19:05,796
can distribute the load so that when
we distribute the load in such a way

263
00:19:06,126 --> 00:19:09,966
that based on the clock is queue, all
the switching will not be happening.

264
00:19:09,966 --> 00:19:15,606
At the same time, data driven approach
is always good for any kind of

265
00:19:15,606 --> 00:19:17,586
methodology and process in engineering.

266
00:19:17,961 --> 00:19:21,951
When we have comprehensive input,
quality tracking, what kind of

267
00:19:21,951 --> 00:19:26,391
qualities there is this going to
give us the correct computation or

268
00:19:26,391 --> 00:19:28,811
not, or anything else is missing?

269
00:19:29,111 --> 00:19:32,411
What kind of margins we
can have to avoid errors?

270
00:19:32,741 --> 00:19:37,181
So all these calculations based
on the data can assure that we

271
00:19:37,181 --> 00:19:38,771
have the right design choices.

272
00:19:39,581 --> 00:19:44,441
Automation, of course, when we
have AI and ML available today.

273
00:19:44,846 --> 00:19:50,836
We can fetch lot of data, we can
model missing gaps and can utilize

274
00:19:50,836 --> 00:19:53,596
it in a like a day to day process.

275
00:19:54,106 --> 00:19:59,336
And also at the same time, these can
be easily integrated in the EDF flows

276
00:19:59,696 --> 00:20:05,036
and can provide accuracies to our
implementation and other methodologies.

277
00:20:05,096 --> 00:20:08,066
Also, it makes really
fast when we are doing.

278
00:20:08,831 --> 00:20:14,821
These calculations using a IE and
machine learning, though there is a cost

279
00:20:14,821 --> 00:20:21,301
function of actually cost as well as
runtime and high computation requirement.

280
00:20:21,801 --> 00:20:24,521
So this is all from my side for today.

281
00:20:24,521 --> 00:20:27,486
Please reach out to me
if you have any question.

282
00:20:27,996 --> 00:20:28,651
Thank you very much.

283
00:20:28,921 --> 00:20:29,731
Have a great day.

