1
00:00:00,750 --> 00:00:00,960
Hey.

2
00:00:00,960 --> 00:00:01,800
Hi everyone.

3
00:00:01,800 --> 00:00:05,550
I am Sandid Gini, a technical
program manager with over 17 years

4
00:00:05,550 --> 00:00:09,540
of experience right now working in
Hitachi Digital Services here at Dallas.

5
00:00:09,810 --> 00:00:14,040
In my previous organizations, I have
worked acro, I have worked in large

6
00:00:14,040 --> 00:00:17,689
technology transformation banking
projects across multiple geographies.

7
00:00:17,990 --> 00:00:22,400
Today I'm here to talk about LLM
Power Banking Organization coming

8
00:00:22,400 --> 00:00:23,645
to, coming back to the slides.

9
00:00:24,319 --> 00:00:27,590
The first slide, I'm excited to
sh share with you a groundbreaking

10
00:00:27,590 --> 00:00:31,310
approach to one of the bank's
banking's most persistent challenges,

11
00:00:31,729 --> 00:00:33,650
LLM Powered Banking Modernization.

12
00:00:34,849 --> 00:00:38,690
Coming back to the next slide, when we
look at the banking industry today, we are

13
00:00:38,690 --> 00:00:40,819
facing that, what I call legacy burden.

14
00:00:41,060 --> 00:00:44,030
This pie chart tells us a stock story.

15
00:00:44,569 --> 00:00:48,144
Legacy maintenance is consuming
up to 65% of IT budgets in

16
00:00:48,150 --> 00:00:49,640
most financial institutions.

17
00:00:50,030 --> 00:00:51,890
Think about that for a moment.

18
00:00:52,069 --> 00:00:55,129
Two thirds of your technology
spend just keeping the lights on.

19
00:00:55,129 --> 00:00:59,690
Most banking systems still run
on cobol, a language developer

20
00:00:59,690 --> 00:01:01,129
before many of us were born.

21
00:01:01,250 --> 00:01:04,580
It's reliable, but it's becoming
increasingly difficult to maintain.

22
00:01:04,580 --> 00:01:07,490
The talent Pool of COBOL
developers is shrinking.

23
00:01:07,970 --> 00:01:12,080
While demand for new digital services
exponentially grown, I've seen

24
00:01:12,080 --> 00:01:15,020
this firsthand while working on
transformation projects across multiple

25
00:01:15,020 --> 00:01:17,760
banks across multiple geographies.

26
00:01:18,120 --> 00:01:21,630
One CIO told me we are spending so
much maintaining our legacy system

27
00:01:21,630 --> 00:01:27,390
that we can't invest in our innovation,
our customer's demand coming to the

28
00:01:27,450 --> 00:01:29,850
slide three, it's a modernization.

29
00:01:30,150 --> 00:01:32,100
It's talking about the
modernization paradox.

30
00:01:32,100 --> 00:01:33,390
So why not just modernize?

31
00:01:33,450 --> 00:01:37,195
The statistics on this slide, we, what
they call the modernization paradox,

32
00:01:37,225 --> 00:01:39,115
traditional transformation approaches.

33
00:01:39,225 --> 00:01:45,645
Have an 85% failure rate projects that
exceed budget missed deadlines, or simply

34
00:01:45,645 --> 00:01:48,075
fail to deliver and expected value.

35
00:01:48,495 --> 00:01:52,665
The average duration stretches beyond
24 months, and I have personally

36
00:01:52,665 --> 00:01:57,045
witness asked budget overturns of three
to five times the original speeds.

37
00:01:57,345 --> 00:02:01,755
One project I consulted on began with
an 18 month timeline and ended up

38
00:02:01,785 --> 00:02:03,555
taking over four years to complete.

39
00:02:04,155 --> 00:02:08,715
The reality is that financial institutions
need a fundamentally new approach.

40
00:02:09,225 --> 00:02:14,715
Of all methods, ofri rip and replace
man or manual code conversion simply

41
00:02:14,715 --> 00:02:19,485
cannot scale to meet modern demands,
especially given the criticality of these

42
00:02:19,485 --> 00:02:21,675
systems and zero tolerance for errors.

43
00:02:21,975 --> 00:02:24,645
Coming back to the next
slide, a new paradigm.

44
00:02:25,065 --> 00:02:26,745
This is where our new framework comes in.

45
00:02:26,805 --> 00:02:29,565
We have doubled three trial
approach that SSEs the core

46
00:02:29,565 --> 00:02:31,875
challenges of banking modernization.

47
00:02:31,965 --> 00:02:34,275
At the foundation, we have
a human AI partnership.

48
00:02:34,695 --> 00:02:38,625
This isn't about replacing human
expertise, it's about amplifying it.

49
00:02:39,045 --> 00:02:43,815
Banking domain experts work alongside
AI to ensure that business rules and

50
00:02:43,845 --> 00:02:45,615
regulatory requirements are preserved.

51
00:02:46,275 --> 00:02:49,155
Amelia Tire focuses on
accelerated modernization.

52
00:02:49,575 --> 00:02:54,285
By using LLMs, we can transform code
faster and more reliably than manual

53
00:02:54,285 --> 00:02:58,430
approaches, drastically reducing
project timelines at the top.

54
00:02:58,635 --> 00:03:02,595
We enable competitive advantage
through innovation capabilities.

55
00:03:03,710 --> 00:03:08,115
That were previously locked behind
Legacy Constraints One Bank using

56
00:03:08,325 --> 00:03:12,435
approach was able to reduce their future
deployment time from months to days.

57
00:03:12,675 --> 00:03:16,215
Our framework maintains regulatory
compliance while transforming legacy

58
00:03:16,215 --> 00:03:20,115
systems a critical requirement in the
highly regulated banking environment.

59
00:03:20,385 --> 00:03:26,054
Coming at the slide five, the results
we're seen are truly transformative.

60
00:03:26,579 --> 00:03:28,790
This circular diagram
highlights the key metrics.

61
00:03:29,340 --> 00:03:32,760
From our earlier implementations,
we have achieved an 80% reduction in

62
00:03:32,760 --> 00:03:37,619
human effort for code trans translation
Tasks that would take developers weeks

63
00:03:37,619 --> 00:03:40,019
can now be completed in days testing.

64
00:03:40,019 --> 00:03:42,209
Notification cycles are 60% faster.

65
00:03:42,299 --> 00:03:46,079
As our approach allows for automated
equivalence testing between all the

66
00:03:46,079 --> 00:03:51,480
new systems post implementation, we are
seeing 75% fewer regression defects.

67
00:03:51,510 --> 00:03:54,900
This is crucial for maintaining the
stability that banking customers expect.

68
00:03:55,470 --> 00:03:58,500
Perhaps most compelling
to execute is a 35%.

69
00:03:59,010 --> 00:04:00,480
Lower total cost of ownership.

70
00:04:00,869 --> 00:04:04,619
One regional bank I worked with projected
the savings of over $12 million or

71
00:04:04,619 --> 00:04:06,119
five years through this approach.

72
00:04:06,599 --> 00:04:09,659
These aren't the theoretical projections.

73
00:04:09,659 --> 00:04:14,275
They are the results that early
adopters are already experiencing.

74
00:04:15,275 --> 00:04:18,755
Coming back to the technical architecture,
this slide outlines the four stage

75
00:04:18,755 --> 00:04:20,765
process that powers our approach.

76
00:04:20,765 --> 00:04:22,175
First, legacy code ingestion.

77
00:04:22,565 --> 00:04:24,635
Handles COBOL passing and domain mapping.

78
00:04:24,725 --> 00:04:29,465
Next LLM translation applies banking
specialized model processing to the code.

79
00:04:29,855 --> 00:04:34,865
Third verification ensures
background and behavior equivalence

80
00:04:34,865 --> 00:04:36,035
through rigorous testing.

81
00:04:36,515 --> 00:04:39,575
Finally, human review provides
expert validation refinement.

82
00:04:39,575 --> 00:04:42,935
This framework successfully overcomes
key challenges while handling

83
00:04:42,940 --> 00:04:44,400
banking specific complexities.

84
00:04:45,245 --> 00:04:47,855
LLM coming back to the slides.

85
00:04:48,320 --> 00:04:49,940
Next slide is LLM Innovation.

86
00:04:49,940 --> 00:04:52,700
The technical innovations driving
this solution are threefold.

87
00:04:53,150 --> 00:04:56,510
Extended context windows
allow models to process entire

88
00:04:56,510 --> 00:04:58,040
banking module simultaneously.

89
00:04:58,640 --> 00:05:01,580
Previous reserving relationship
between functions and

90
00:05:01,580 --> 00:05:03,110
improving translation accuracy.

91
00:05:03,620 --> 00:05:07,400
Financial domain, fine tuning, ensures
model understandings, accounting

92
00:05:07,400 --> 00:05:10,400
principles, transaction processing
and regulatory requirements,

93
00:05:10,820 --> 00:05:12,170
multi-language processing.

94
00:05:12,855 --> 00:05:14,115
Our proficiency enables.

95
00:05:14,390 --> 00:05:18,740
A seamless translation between cobol,
Java, Python, and other modern languages

96
00:05:18,740 --> 00:05:20,510
while maintaining semantic equivalence.

97
00:05:21,050 --> 00:05:22,220
Coming back to the next slide.

98
00:05:22,670 --> 00:05:24,020
It's a human oversight system.

99
00:05:24,050 --> 00:05:27,020
Despite power of ai, human
expertise, domains essential.

100
00:05:27,470 --> 00:05:30,770
Our system incorporates role-based
reviews, where engineers, compliance

101
00:05:30,770 --> 00:05:35,210
offices, and domain exploit validate
different aspects of the transformation.

102
00:05:35,360 --> 00:05:39,050
Automated compliance flagging
identifies potential regulatory

103
00:05:39,050 --> 00:05:40,850
issues for human review.

104
00:05:41,360 --> 00:05:44,750
Performance verification
ensures equivalent behavior

105
00:05:44,750 --> 00:05:46,370
through side by side runtime.

106
00:05:47,690 --> 00:05:50,690
Finally, feedback loop integration
allows human corrections to

107
00:05:50,690 --> 00:05:52,310
continuously improve the AI model.

108
00:05:53,840 --> 00:05:56,540
Coming back to the next
slide, investment impact.

109
00:05:56,570 --> 00:05:59,960
This power shot demonstrates
the compelling business case.

110
00:05:59,960 --> 00:06:03,890
For this approach, we see dramatic
predictions and maintenance costs feature

111
00:06:03,890 --> 00:06:05,720
time to market and technical debt index.

112
00:06:05,750 --> 00:06:09,290
After implementation, these real
role metrics confirm that reduced

113
00:06:09,290 --> 00:06:10,585
cost and acceleration innovation.

114
00:06:11,480 --> 00:06:15,140
Creating lasting complete
competitive advantages for adopters.

115
00:06:16,670 --> 00:06:19,610
Coming back to the next slide this
is the transaction system where

116
00:06:19,610 --> 00:06:20,930
we wanted to show the case study.

117
00:06:21,560 --> 00:06:25,040
A major bank transformed this code
transaction system processing 3 million

118
00:06:25,040 --> 00:06:29,450
daily transactions from 10 million lines
of COBAL code, which is a 30-year-old.

119
00:06:29,520 --> 00:06:32,670
The process followed our framework,
legacy assessment, preparation,

120
00:06:32,670 --> 00:06:37,020
phase IT translation, and finally
successful migration to containerized

121
00:06:37,320 --> 00:06:40,050
microservices with improved
performance and its scalability.

122
00:06:40,965 --> 00:06:44,595
This case proves the varied viability
of our approach, even of for

123
00:06:44,595 --> 00:06:46,155
the most complex infrastructure.

124
00:06:47,235 --> 00:06:50,085
Coming back to the implementation
roadmap for our organization looking

125
00:06:50,085 --> 00:06:53,775
to adopt this approach, we need to
provide a clear four phase roadmap.

126
00:06:54,405 --> 00:06:55,995
Beginning with the
assessment of preparation.

127
00:06:55,995 --> 00:06:58,935
The process moves to pilot
transformation of non-critical

128
00:06:58,935 --> 00:07:03,345
modules, 10 to scale implementation
across larger systems and financially.

129
00:07:03,975 --> 00:07:07,005
And finally, continuous
improvement through ongoing

130
00:07:07,335 --> 00:07:09,045
refinement, this actionable path.

131
00:07:09,405 --> 00:07:14,505
Forward minimizes risk while maximizing
the benefits of AI powered modernization.

132
00:07:16,425 --> 00:07:19,965
Coming back to this next slide,
transform the banking future.

133
00:07:21,345 --> 00:07:25,065
This is the closing slide that emphasizes
the three key benefits, reducing

134
00:07:25,065 --> 00:07:29,985
technical gap by transforming legacy
systems from liability to advantage.

135
00:07:30,045 --> 00:07:34,545
Accelerate innovation by delivering
new features in days instead of months.

136
00:07:34,800 --> 00:07:37,330
Enhance compliance through
improved regulatory.

137
00:07:37,860 --> 00:07:38,850
And automated checks.

138
00:07:38,880 --> 00:07:43,470
This the time for AI powered modern
Magnetization is now offering a way to

139
00:07:43,470 --> 00:07:49,080
transform legacy systems while preserving
business logic and minimizing the risk.

140
00:07:50,080 --> 00:07:51,160
Any questions?

141
00:07:51,700 --> 00:07:52,450
Thank you so much.

