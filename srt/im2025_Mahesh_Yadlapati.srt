1
00:00:00,500 --> 00:00:01,250
Hello everyone.

2
00:00:01,490 --> 00:00:03,020
My name is Maheh Lati.

3
00:00:03,740 --> 00:00:07,159
Today we are going through a
concept called Cloud powered

4
00:00:07,159 --> 00:00:12,200
Retail Resilience and how AWS Drive
Customer centric Incident response.

5
00:00:12,860 --> 00:00:14,750
Let's jumping into the topic.

6
00:00:15,250 --> 00:00:15,580
Okay.

7
00:00:15,580 --> 00:00:18,820
Let's discuss about how the
our retail market works.

8
00:00:18,820 --> 00:00:19,060
Now.

9
00:00:19,690 --> 00:00:23,980
In today's digital first retail
landscape, customer expectations

10
00:00:23,980 --> 00:00:25,210
have fundamentally shifted.

11
00:00:26,170 --> 00:00:31,330
Shoppers demand seamless experience
across all touch points from mobile

12
00:00:31,390 --> 00:00:33,610
apps to in-store interactions.

13
00:00:34,150 --> 00:00:39,610
Any disruption whether a website crash
or inventory system failures during

14
00:00:39,640 --> 00:00:44,470
peak shopping hours directly impact
customer satisfaction and revenue.

15
00:00:45,250 --> 00:00:51,220
Modern retailers operate in an always
on economy where downtime is not just

16
00:00:51,280 --> 00:00:52,600
inconvenient, it's a business critical.

17
00:00:53,100 --> 00:00:59,460
The challenge extends when si simply
keeping systems running into ensuring

18
00:00:59,490 --> 00:01:05,160
optimal performance during traffic spike
seasonal suggests and unexpected events.

19
00:01:06,030 --> 00:01:12,150
So the main thing is that retail learn
how to maintain the product or website.

20
00:01:12,150 --> 00:01:17,250
Our backend infrastructure available
24 by seven and no matter what the

21
00:01:17,250 --> 00:01:21,025
season is like during, for example,
in Thanksgiving, we'll have.

22
00:01:21,720 --> 00:01:26,880
High sales where a lot of our clients,
our customers will log in and try to

23
00:01:26,880 --> 00:01:28,410
buy our products during that time.

24
00:01:28,770 --> 00:01:33,630
There should be no impact or no
downtime for the customers, which will

25
00:01:33,630 --> 00:01:36,720
be a bad reputation for the company.

26
00:01:37,220 --> 00:01:42,109
The main things which we need to
consider are customer experience,

27
00:01:42,229 --> 00:01:47,089
revenue impact, brand reputation
first, the customer experience.

28
00:01:47,494 --> 00:01:53,494
Every second of downtime erodes customer
trust and drive shoppers to competitors.

29
00:01:54,035 --> 00:01:57,845
Modern consumers expect instant
gratification and seamless

30
00:01:57,845 --> 00:01:59,945
interaction across all channels.

31
00:02:00,574 --> 00:02:03,964
We always think like a customer, even
though we are retailer, we have to

32
00:02:03,964 --> 00:02:09,095
think like a customer and how customer
will react if there is any issue, any

33
00:02:09,594 --> 00:02:15,265
impact or any downtime to our website
when we are trying to buy a product.

34
00:02:15,765 --> 00:02:21,494
Revenue impact system failures directly
translates to lost sale opportunity.

35
00:02:21,824 --> 00:02:27,254
Peak shopping periods amplify these
losses, making resilient infrastructure,

36
00:02:27,344 --> 00:02:29,204
a revenue protection strategy.

37
00:02:30,104 --> 00:02:31,934
Another thing is brand reputation.

38
00:02:32,384 --> 00:02:35,699
Service disruptions become
social media events.

39
00:02:36,209 --> 00:02:40,484
Poor incident response can damage
brand reputation built over years

40
00:02:40,874 --> 00:02:43,124
affecting long-term customer loyalty.

41
00:02:43,500 --> 00:02:47,364
You maybe see noticed recently that
lot of customers, if you, if they

42
00:02:47,364 --> 00:02:52,314
face any issue, they're directly
writing into the social media and

43
00:02:52,765 --> 00:02:57,295
which will impact the revenue and also
brand of the particular organization.

44
00:02:58,224 --> 00:02:59,994
So we need to be very careful.

45
00:03:00,494 --> 00:03:04,765
So I'm going to tell you
why I chose a cloud when it

46
00:03:04,944 --> 00:03:06,114
compared with the traditional.

47
00:03:06,295 --> 00:03:09,504
Here are the details I
consider multiple aspects.

48
00:03:10,029 --> 00:03:14,499
Before choosing cloud infrastructure,
these are the multiple reasons.

49
00:03:14,619 --> 00:03:16,089
First one is infrastructure.

50
00:03:16,389 --> 00:03:22,089
In traditional IT reli on physical data
center and static server environment.

51
00:03:22,479 --> 00:03:24,519
Scaling requires manual hardware.

52
00:03:24,789 --> 00:03:27,099
Ping makes it slow and costly.

53
00:03:27,729 --> 00:03:30,669
Whereas in cloud, it's
built on virtualized.

54
00:03:30,669 --> 00:03:35,499
Cloud-based infrastructure resources
are pro dynamically enabling

55
00:03:35,529 --> 00:03:37,569
rapid scaling across regions.

56
00:03:38,289 --> 00:03:44,149
Suppose there is any impact to any
hardware in traditional, and it'll,

57
00:03:44,209 --> 00:03:50,204
it has to monitor and it has to send
email or it alert some person and the

58
00:03:50,204 --> 00:03:54,704
person have to be available and how
to fix the issue manually, which may

59
00:03:55,124 --> 00:03:57,944
take hours and which may cost revenue.

60
00:03:58,575 --> 00:04:01,064
Whereas in cloud, everything is automated.

61
00:04:01,094 --> 00:04:06,554
Even there is impact to one hardware,
it'll automatically spin a new hardware.

62
00:04:06,944 --> 00:04:10,244
And ma make sure the website
is available for the customer.

63
00:04:11,054 --> 00:04:16,564
Scalability, which is very impacted
factor for any business in traditional

64
00:04:16,614 --> 00:04:21,144
method, li it Scalability is very
limited, requires capacity planning

65
00:04:21,144 --> 00:04:23,664
and or project to handle peak loads.

66
00:04:24,504 --> 00:04:28,554
Whereas in cloud, it's very
highly scalable and auto-scaling.

67
00:04:28,584 --> 00:04:32,379
Elastic load bands automatically
adjust as per demand in real time.

68
00:04:32,879 --> 00:04:37,649
What this mean is, suppose we are in a
traditional and on-prem infrastructure

69
00:04:38,069 --> 00:04:42,899
where generally there will be high
traffic flow during seasons, holiday

70
00:04:42,899 --> 00:04:47,189
seasons, whereas non-holiday season,
the traffic will be low or normal.

71
00:04:47,699 --> 00:04:51,089
So in order to maintain it in
traditional and no impact for the

72
00:04:51,089 --> 00:04:55,019
customer, we always have to go with
the high performance infrastructure.

73
00:04:55,409 --> 00:04:57,029
Whereas in cloud, we don't need to do it.

74
00:04:57,899 --> 00:05:01,739
The automation will take care of it in
such a way that where the business or

75
00:05:01,739 --> 00:05:07,429
traffic is normal, it'll go with the
regular resources and by in, in holiday

76
00:05:07,429 --> 00:05:13,909
season, by default it auto scale and scale
up all the resources to adjust the new

77
00:05:14,089 --> 00:05:16,779
and high traffic recovery time objective.

78
00:05:16,854 --> 00:05:21,474
It is long recovery, traditional,
whether it is a long recovery types

79
00:05:21,474 --> 00:05:25,704
can take hours a day depending on the
DR side and manual process and how

80
00:05:25,704 --> 00:05:31,314
we did the setup while as in cloud
native rapid recovery using automated

81
00:05:31,344 --> 00:05:36,834
failover, snapshot and cloud native
DR tools like a WS elastic disaster.

82
00:05:36,864 --> 00:05:40,344
With my personal experience, it
happened once and I am able to

83
00:05:40,344 --> 00:05:42,774
recover from the DR within minutes.

84
00:05:43,419 --> 00:05:47,589
So I prefer that is the reason why I
prefer cloud than the traditional way.

85
00:05:47,979 --> 00:05:52,509
In traditional way, disaster require
requires a secondary physical site

86
00:05:52,509 --> 00:05:56,979
with a duplicate infrastructure leading
to high maintenance and high cost.

87
00:05:57,549 --> 00:06:02,199
Whereas in cloud, we will host
our infrastructure in multiple

88
00:06:02,249 --> 00:06:06,929
region where the, everything will
be in a replication For every sec,

89
00:06:06,959 --> 00:06:08,519
every second, it'll be replicated.

90
00:06:08,879 --> 00:06:13,079
An automated failure and manual
service with significantly lower car

91
00:06:13,439 --> 00:06:16,649
and faster recovery incident response.

92
00:06:17,149 --> 00:06:22,009
Traditionally, the reaction is very
slow and often relit depend on the

93
00:06:22,009 --> 00:06:25,819
human intervention and communication
is manual and often delayed.

94
00:06:26,809 --> 00:06:30,979
But whereas in cloud is proactive
as an automated incident detection

95
00:06:30,979 --> 00:06:36,064
and response using AWS provider
service tools like AWS CloudWatch.

96
00:06:36,709 --> 00:06:41,539
It has Lambda and step function
functions, monitoring and

97
00:06:41,629 --> 00:06:46,029
observability in traditional, the
basic monitor tools, limited visibility

98
00:06:46,029 --> 00:06:47,559
into real time system health.

99
00:06:47,949 --> 00:06:51,669
Hard to trace route cost quickly, even
though if you want to monitor, we have

100
00:06:51,669 --> 00:06:55,689
to buy some third party tools and we
have to install the monitoring tools

101
00:06:55,689 --> 00:07:01,919
under our infrastructure, which will
consume more CPN, Ram and ram, and it

102
00:07:01,919 --> 00:07:03,629
results in a high cost of maintenance.

103
00:07:04,139 --> 00:07:08,919
Whereas in cloud, they will provide a
monitoring tool on their own, whereas

104
00:07:08,919 --> 00:07:13,929
full stack Ty using distributed tracing
and real-time dashboards and log via

105
00:07:13,929 --> 00:07:16,179
CloudWatch, X-Ray and Open Telemetry.

106
00:07:16,509 --> 00:07:22,389
And also a WSA dashboard where we
can check and the health and monitor

107
00:07:22,449 --> 00:07:24,339
the health checks every time.

108
00:07:25,119 --> 00:07:28,899
And also whenever there is issue,
it'll send trigger the email or alerts

109
00:07:28,899 --> 00:07:31,149
to the responsible team or person.

110
00:07:31,649 --> 00:07:34,289
And it's a model, it's
a capital expenditure.

111
00:07:34,289 --> 00:07:39,659
Heavy requires upfront infor investment
in hardware, power, cooling, and space.

112
00:07:40,289 --> 00:07:45,029
And whereas in cloud operational
expenditure model pay only for what you

113
00:07:45,029 --> 00:07:50,369
use with the ability to scale apart, down
on demand impacting power outage during

114
00:07:50,529 --> 00:07:55,599
failure, high outages may last long,
causing frustration and revenue loss.

115
00:07:56,034 --> 00:07:58,674
Manual failover can be
slow and error poor.

116
00:07:59,184 --> 00:08:04,344
Whereas in cloud, the failures are minimal
and are isolated with auto of healing.

117
00:08:04,344 --> 00:08:07,914
Redundancy and intelligent routing
to healthy instances are region.

118
00:08:08,334 --> 00:08:12,564
For example, if there are issue
in one region, other traffic will

119
00:08:12,564 --> 00:08:15,924
be rerouted to the other region
where we already confident other.

120
00:08:15,924 --> 00:08:19,314
Suppose we have an issue with one
server, all the traffic will be

121
00:08:19,314 --> 00:08:21,554
rerouted to the health healthy server.

122
00:08:22,054 --> 00:08:23,704
These are the key differences between.

123
00:08:24,124 --> 00:08:25,684
Traditional and native cloud.

124
00:08:26,184 --> 00:08:29,944
These, there are three three,
three concepts that I prefer

125
00:08:29,974 --> 00:08:32,324
AWS than any other cloud.

126
00:08:32,534 --> 00:08:33,314
These are the three.

127
00:08:33,524 --> 00:08:38,145
One is Amazon personalized, Amazon
Connect and Amazon Forecast.

128
00:08:38,954 --> 00:08:44,474
Amazon personalize delivers personal
experiences, then adapt during instance,

129
00:08:44,624 --> 00:08:49,905
maintaining customer engagement even when
primary systems face during disruption.

130
00:08:50,534 --> 00:08:55,454
Through the intelligent recommendation,
fallbacks Amazon Connect provides

131
00:08:55,544 --> 00:09:00,104
scalable contact center capabilities
that automatically route customer

132
00:09:00,104 --> 00:09:03,884
inquiries during incidents,
ensuring support quality remains

133
00:09:03,884 --> 00:09:06,344
consistent during high stress period.

134
00:09:06,794 --> 00:09:10,064
I want to give you one example,
which recently happened to me.

135
00:09:10,604 --> 00:09:15,564
Suppose we have a major infrastructure
failure where we don't know how to fix it.

136
00:09:16,144 --> 00:09:21,704
For, so we immediately contacted Amazon
Customer Services and they immediately

137
00:09:21,704 --> 00:09:26,964
connected to us and we all connected
in June call and they help us to

138
00:09:26,964 --> 00:09:28,794
troubleshoot the issue within minutes.

139
00:09:29,664 --> 00:09:34,044
I never expected Amazon to be available
within a minutes and help us to fix it.

140
00:09:34,944 --> 00:09:37,164
And one more thing is Amazon Forecast.

141
00:09:37,554 --> 00:09:42,654
This is an amazing service from Asia,
Amazon, which predicts demand patterns

142
00:09:42,774 --> 00:09:44,634
and potential system stress point.

143
00:09:45,264 --> 00:09:49,854
Which enables proactive capacity
planning and incident prevention

144
00:09:49,854 --> 00:09:51,744
before peak load cause failures.

145
00:09:52,164 --> 00:09:56,004
This is it'll review all the data from
the previous year here and will tell

146
00:09:56,004 --> 00:10:01,254
us how much traffic is going to come
in on the particular holiday season.

147
00:10:01,554 --> 00:10:06,704
And depending on that proactively, we
can either increase it manually or we

148
00:10:06,719 --> 00:10:09,474
can let the automation took care of it.

149
00:10:09,974 --> 00:10:14,244
These are the main automation and
intelligence layers from the AWS.

150
00:10:14,604 --> 00:10:20,004
The main service is AWS Lambda, which
executes automated response workflows

151
00:10:20,034 --> 00:10:25,164
instantly when incident occur, reducing
human response time, and ensuring

152
00:10:25,944 --> 00:10:27,804
consistent remediation process.

153
00:10:27,804 --> 00:10:31,584
What this means is whenever
there is system failure or some

154
00:10:31,614 --> 00:10:33,744
hardware failure, it immediately.

155
00:10:34,269 --> 00:10:35,049
Fixes the issue.

156
00:10:35,049 --> 00:10:37,899
If he is not able to fix the issue,
it'll shut down that particular

157
00:10:37,899 --> 00:10:39,789
system and spin the new system.

158
00:10:40,179 --> 00:10:44,889
Making sure that a customer set,
a customer traffic goes smoothly.

159
00:10:45,639 --> 00:10:46,810
Amazon recognition.

160
00:10:47,109 --> 00:10:50,439
This is a monitoring service
that monitors visual content and

161
00:10:50,439 --> 00:10:54,759
customer interactions for anomalies,
providing early warnings, signals

162
00:10:54,764 --> 00:10:57,264
for potential experience degradation.

163
00:10:57,984 --> 00:10:59,264
AWS aortic core.

164
00:11:00,175 --> 00:11:00,834
Connection.

165
00:11:00,864 --> 00:11:06,024
Connection to so instore devices and
sensor to provide real time operational

166
00:11:06,024 --> 00:11:10,224
intelligence, bridging physical
and digital retail environments.

167
00:11:10,724 --> 00:11:15,914
Building proactive resilience, which is
very important for any retail business.

168
00:11:16,304 --> 00:11:20,264
Proactive related MO moves beyond
reactive incident response to

169
00:11:20,264 --> 00:11:24,074
anticipate and prevent issues
before they impact customers.

170
00:11:24,494 --> 00:11:26,324
AWS services work together.

171
00:11:26,744 --> 00:11:31,724
To create a comprehensive early
warning system by analyzing patterns

172
00:11:31,724 --> 00:11:35,984
in customer behavior, a system
performance, and external factors,

173
00:11:36,344 --> 00:11:41,714
retailers can identify potential stress
point and automatically just resources.

174
00:11:42,044 --> 00:11:46,424
This approach transform incident
management from damage control into

175
00:11:46,424 --> 00:11:48,674
customers experience optimization.

176
00:11:49,004 --> 00:11:51,869
The key is creating intelligent systems.

177
00:11:52,604 --> 00:11:57,194
That learn from historical data and adapt
to changing conditions in real time.

178
00:11:57,584 --> 00:11:59,864
This is, I gave you one example.

179
00:12:00,404 --> 00:12:03,584
So how this works is it'll go back.

180
00:12:03,614 --> 00:12:08,264
Suppose we have Thanksgiving coming
and we don't know how much traffic is

181
00:12:08,264 --> 00:12:13,214
going to come, how many customers are
going to hit our website at that time.

182
00:12:13,214 --> 00:12:17,894
We have this proactive resilience
where it'll go and check the data

183
00:12:17,894 --> 00:12:19,574
from last year, last few years.

184
00:12:20,369 --> 00:12:24,629
And it'll analyze and it'll tell us
that so and so many customers are

185
00:12:24,629 --> 00:12:27,059
coming this every holiday season.

186
00:12:27,689 --> 00:12:32,509
And this will be the traffic, depending
on the requirement, either we can

187
00:12:32,509 --> 00:12:36,749
manually it, we can automate it to
scale up the resources during that

188
00:12:36,749 --> 00:12:39,180
time sheet, during that holiday season.

189
00:12:39,680 --> 00:12:40,370
Seamless.

190
00:12:40,879 --> 00:12:42,619
Omnichannel during disruption.

191
00:12:42,920 --> 00:12:45,859
There are basically four
stages during the disruption.

192
00:12:46,219 --> 00:12:48,090
One is detect detection.

193
00:12:48,660 --> 00:12:53,130
AWS monitoring identifies
performance degradation across any

194
00:12:53,130 --> 00:12:55,530
channel, web, mobile, or in store.

195
00:12:56,400 --> 00:13:01,155
Basically, there is a service called AWS
CloudWatch, where it'll monitor all the.

196
00:13:01,655 --> 00:13:03,875
Infrastructure and also application.

197
00:13:04,115 --> 00:13:08,074
And it's no, if it sees anything
related to infra application

198
00:13:08,074 --> 00:13:10,025
issue, it'll immediately alert.

199
00:13:10,775 --> 00:13:14,314
And if it is application, it'll
alert the application owner.

200
00:13:14,314 --> 00:13:19,475
And if it's a infra, it'll call lambda,
which will be Lambda will trigger some

201
00:13:19,475 --> 00:13:23,750
automated functional functions, which
will take care of the issue, for example.

202
00:13:24,515 --> 00:13:28,595
We have a high, we have total four
servers in a customer, and one of the

203
00:13:28,595 --> 00:13:30,655
server has high CPU and high memory.

204
00:13:31,015 --> 00:13:36,225
And for that one to fix it Lambda
will either add a new server, which

205
00:13:36,225 --> 00:13:40,185
we, which it'll share the traffic
and which will reduce CPN memory.

206
00:13:40,605 --> 00:13:45,274
And if we don't, if we cannot
set that one, what it can do is

207
00:13:45,274 --> 00:13:49,664
spin up a new server and delete
the server, which has issues.

208
00:13:50,009 --> 00:13:53,689
This way it'll make sure customer
has a seamless transaction.

209
00:13:54,319 --> 00:13:56,209
Second one is adaptation.

210
00:13:56,659 --> 00:13:57,079
Yeah.

211
00:13:57,139 --> 00:14:01,489
Lambda functions automatically read out
traffic and adjust service levels to

212
00:14:01,879 --> 00:14:03,979
maintain customer experience quality.

213
00:14:04,789 --> 00:14:09,780
So whenever there is a issue right, and it
the automatically it'll Lambda will always

214
00:14:09,780 --> 00:14:11,339
do the health checks on the servers.

215
00:14:11,639 --> 00:14:16,170
If there is an issue with any server,
it'll remove the traffic will be not

216
00:14:16,170 --> 00:14:20,769
related to the problematic server,
but only to the server where it

217
00:14:20,769 --> 00:14:23,259
has a good health communication.

218
00:14:23,680 --> 00:14:27,969
Amazon Connect ensures customer support
teams have real time visibility into

219
00:14:27,969 --> 00:14:32,785
issues and resolution status, even if
it is after the, when it it resolves

220
00:14:32,785 --> 00:14:37,974
on its own, but it'll share the data to
the customer and how it fixes the issue

221
00:14:38,185 --> 00:14:39,714
and what happened during that time.

222
00:14:40,030 --> 00:14:44,740
That will help us to analyze and make sure
that it'll not happen again in the future.

223
00:14:45,240 --> 00:14:50,910
Recovery automated scaling and failover
process restore full functionality while

224
00:14:50,910 --> 00:14:55,130
maintain the transaction integrity,
intelligent demand anticipation.

225
00:14:55,580 --> 00:15:00,415
Amazon forecast, transform
historical sales data, external

226
00:15:00,435 --> 00:15:04,610
events, and market signals into
actionable capacity planning inside.

227
00:15:05,405 --> 00:15:09,995
By understanding demand patterns before
they're materialize, retailers can prevent

228
00:15:09,995 --> 00:15:12,815
system overload during peak hour periods.

229
00:15:13,235 --> 00:15:17,655
So this is an amazing service from
Amazon that is a forecast which

230
00:15:17,655 --> 00:15:22,305
not only helps us to maintain
infrastructure, but also the application.

231
00:15:22,755 --> 00:15:27,235
And it'll help us to review
the customer satisfaction.

232
00:15:27,385 --> 00:15:30,655
And depending on the challenges
which customer is facing, we can

233
00:15:30,655 --> 00:15:32,875
update our application to make.

234
00:15:33,100 --> 00:15:35,590
Seamless transactions to the customer.

235
00:15:36,310 --> 00:15:40,660
This predictive approach enables
automatic resource scaling ahead of

236
00:15:40,720 --> 00:15:45,760
anticipated traffic spikes, whether
from marketing campaigns, seasonal

237
00:15:45,760 --> 00:15:48,189
events, or viral social media moments.

238
00:15:48,610 --> 00:15:52,480
This result is maintaining
optimal performance exactly

239
00:15:52,480 --> 00:15:54,670
when customers expect it most.

240
00:15:55,170 --> 00:16:00,380
The main key roles, three things
in demand of is data integration.

241
00:16:00,709 --> 00:16:01,880
And pattern recognition.

242
00:16:02,209 --> 00:16:06,170
The pattern recognition, identify
demand signals and capacity

243
00:16:06,170 --> 00:16:10,270
requirements using machine
learning, real world impact metrics.

244
00:16:10,450 --> 00:16:15,430
Therefore, metrics that will determine the
customer satisfaction and also how we need

245
00:16:15,430 --> 00:16:17,169
to maintain our retail infrastructure.

246
00:16:17,619 --> 00:16:21,000
The first one is and critical
one is reduced downtime.

247
00:16:21,630 --> 00:16:24,990
Cloud native architectures with
automated failure capability.

248
00:16:25,845 --> 00:16:30,225
Significantly minimize service
interactions, distributed systems,

249
00:16:30,225 --> 00:16:31,785
and redundant infrastructure.

250
00:16:32,025 --> 00:16:35,475
Ensure continuous availability
during component failures.

251
00:16:35,975 --> 00:16:38,435
Next one is enhance support quality.

252
00:16:38,915 --> 00:16:43,115
Amazon conducts intelligent
routing and real time dashboards.

253
00:16:43,205 --> 00:16:49,655
Empower support teams with context aware
customer interaction, reducing resolution

254
00:16:49,655 --> 00:16:52,265
times, and improving satisfaction scores.

255
00:16:52,765 --> 00:16:56,964
Automated incident response workflow
eliminates manual intervention delays.

256
00:16:57,384 --> 00:17:02,394
Lambda Power Runbook execute predetermined
recovery action within a second sub

257
00:17:02,394 --> 00:17:10,474
detection AWS Security Services protects
the data and it also secure services and

258
00:17:10,474 --> 00:17:14,194
compliance frameworks ensure customer
data remains protected throughout

259
00:17:14,194 --> 00:17:17,164
incident response and recovery process.

260
00:17:17,479 --> 00:17:23,909
All these four are real world metrics
that will help us business wise and also

261
00:17:23,909 --> 00:17:29,599
to help to keep our customer base and
other thing, the security is very critical

262
00:17:29,599 --> 00:17:31,759
part where Amazon will take care of it.

263
00:17:31,759 --> 00:17:36,229
We don't need to depend on any additional
resources, are any additional tools

264
00:17:36,799 --> 00:17:39,439
to make sure our data is secure,

265
00:17:39,939 --> 00:17:42,159
turning disruptions into opportunities.

266
00:17:43,044 --> 00:17:44,724
Learning from event incidents.

267
00:17:45,054 --> 00:17:49,224
Every disruption provides valuable
data for enhancing system resilience.

268
00:17:49,704 --> 00:17:54,984
AWS services meticulously capture
detailed telemetry during incident,

269
00:17:55,494 --> 00:18:01,104
enabling in-depth post event analysis to
significantly strength and future response

270
00:18:01,104 --> 00:18:03,924
capabilities through continuous learning.

271
00:18:04,424 --> 00:18:07,364
Machine learning models refine
their understanding of normal

272
00:18:07,634 --> 00:18:08,955
and abnormal system behavior.

273
00:18:09,809 --> 00:18:15,029
Constantly improving detection, accuracy,
and minimize false positives over time.

274
00:18:15,419 --> 00:18:18,629
I will go with one example recently,
what happened to our system.

275
00:18:18,929 --> 00:18:24,279
We recently install installed a
new antivirus, which is consuming

276
00:18:24,279 --> 00:18:27,030
lot of CPU on our servers.

277
00:18:27,659 --> 00:18:33,190
And because of this monitoring it it sent
an e alert stating that they're seeing

278
00:18:33,190 --> 00:18:35,630
abnormal CPU spikes because of the.

279
00:18:36,505 --> 00:18:37,435
New antivirus.

280
00:18:37,525 --> 00:18:42,235
We immediately determined the issue
and we immediately rolled, uninstall

281
00:18:42,235 --> 00:18:47,335
that antivirus and came up with a
new virus, which is CPU, which congen

282
00:18:47,365 --> 00:18:49,315
less CPU than the previous one.

283
00:18:50,005 --> 00:18:54,075
In this way, we are able to save
ourself and save the systems

284
00:18:54,575 --> 00:18:55,955
implementation strategy.

285
00:18:56,405 --> 00:19:01,685
Their total main four strategy for
implementing cloud-based retail.

286
00:19:02,135 --> 00:19:04,025
First one is assessment phase.

287
00:19:04,445 --> 00:19:08,405
Evaluate current incident
response capabilities and identify

288
00:19:08,975 --> 00:19:12,545
critical customer touchpoint
that require enhanced resilience.

289
00:19:13,055 --> 00:19:15,395
Second one is foundation building.

290
00:19:15,905 --> 00:19:21,425
Establish core AWS services for monitoring
automation and customer communication,

291
00:19:21,995 --> 00:19:26,675
which will and implement the basic
observability across all the key systems.

292
00:19:27,545 --> 00:19:29,645
Intel, inter intelligence layer.

293
00:19:30,170 --> 00:19:34,460
Integrate predictive services like
forecast and Personalize to enable

294
00:19:34,550 --> 00:19:39,020
proactive response and maintain
customer experience during disruptions.

295
00:19:39,800 --> 00:19:45,500
Continuous optimization, use incident
data and customer feedback to refine

296
00:19:45,500 --> 00:19:49,370
automated responses and improve
overall system resilience over time.

297
00:19:49,870 --> 00:19:53,710
These are the, there are some best
practices for any retail teams.

298
00:19:54,370 --> 00:19:56,140
Below four we'll give you the details.

299
00:19:56,170 --> 00:19:59,200
Let's go through one by
one reason for failure.

300
00:19:59,560 --> 00:20:03,550
Don't think that your system is
robust and it can handle any traffic

301
00:20:03,550 --> 00:20:06,120
or any kind of customer's flow.

302
00:20:06,780 --> 00:20:10,070
Always prepare for the
worst, so build your systems.

303
00:20:10,070 --> 00:20:14,270
Assuming components will fail, implement
graceful degradation that maintains

304
00:20:14,270 --> 00:20:19,595
core customer functionality, even when
non-essential services experience issues.

305
00:20:20,095 --> 00:20:20,655
Automate everything.

306
00:20:21,364 --> 00:20:25,415
Reduce human error and response time
by automating incident detection,

307
00:20:25,745 --> 00:20:28,205
escalation, and initial response actions.

308
00:20:28,774 --> 00:20:32,824
Reserve human intervention for
complex decision making focus.

309
00:20:33,215 --> 00:20:38,044
Monitor the customer impact focus
monitoring on customer face ethics, not

310
00:20:38,044 --> 00:20:40,084
just technical performance indicators.

311
00:20:40,445 --> 00:20:44,314
Understanding business impact guides,
prioritization during incidents.

312
00:20:45,004 --> 00:20:46,235
Practice regularly.

313
00:20:46,850 --> 00:20:51,260
Conduct regular cos engineering
exercises and incident responders to

314
00:20:51,260 --> 00:20:55,580
validate automated system and train
team members on emergency producer.

315
00:20:56,080 --> 00:20:58,689
It's none other than
practicing disaster require.

316
00:20:59,139 --> 00:21:01,629
Think that there is some
issue happened on one region,

317
00:21:01,659 --> 00:21:02,949
immediately switched to second.

318
00:21:03,010 --> 00:21:07,929
Second region to test if the second region
has all the data and working as expected.

319
00:21:08,230 --> 00:21:10,860
Similar to the ion, you are part two.

320
00:21:10,860 --> 00:21:11,580
Resilience.

321
00:21:12,080 --> 00:21:15,420
Cloud power resilience isn't
just about preventing downtime.

322
00:21:15,570 --> 00:21:19,890
It's about creating competitive advantage
through superior customer experience.

323
00:21:20,340 --> 00:21:25,500
During challenging moments, AWS
provides the tools and services needed

324
00:21:25,500 --> 00:21:30,510
to transform incident response from
reactive firefighting into proactive

325
00:21:30,540 --> 00:21:32,070
customer experience management.

326
00:21:32,970 --> 00:21:37,105
Start your journey by assessing
current capabilities, identifying

327
00:21:37,465 --> 00:21:38,225
critical customer touch points.

328
00:21:38,909 --> 00:21:43,860
And implementing foundational monitoring
and automation, build intelligence into

329
00:21:43,860 --> 00:21:49,200
your system gradually learning from each
incident to strengthen future resilience.

330
00:21:49,680 --> 00:21:53,220
Ready to build retail resilience
that drives customer satisfaction

331
00:21:53,280 --> 00:21:54,570
and business continuity.

332
00:21:55,080 --> 00:21:59,340
The cloud native approach to incident
responses waiting for your implementation.

333
00:21:59,840 --> 00:22:00,409
Thank you.

334
00:22:00,469 --> 00:22:04,669
Thank you all, and if you have
any questions, please clear to.

335
00:22:05,524 --> 00:22:07,685
Please feel free to
reach out to me anytime.

336
00:22:08,195 --> 00:22:08,675
Thank you.

