1
00:00:00,500 --> 00:00:01,280
Hello everyone.

2
00:00:01,580 --> 00:00:06,830
I'm Var, the lead full stack engineer
company agency with more than something

3
00:00:06,830 --> 00:00:08,480
years of experie in the tech industry.

4
00:00:09,020 --> 00:00:12,170
I'm passionate about creating
seamless and secure solutions.

5
00:00:12,380 --> 00:00:16,010
I may work focus on key areas
like full stack development, cloud

6
00:00:16,010 --> 00:00:21,140
technologies, application security,
risk analysis, and a integration.

7
00:00:21,710 --> 00:00:23,840
With that, let's get started
with the today's topic.

8
00:00:24,439 --> 00:00:28,310
Automating infrastructure to scale
for enhanced developer experience.

9
00:00:28,810 --> 00:00:32,170
With the advent of cloud technology,
multi applications are divided

10
00:00:32,170 --> 00:00:36,489
into multiple microservices, which
of which runs multiple instances.

11
00:00:37,119 --> 00:00:40,390
Managing such a huge number
of instances creates a

12
00:00:40,390 --> 00:00:42,699
administrative overhead platform.

13
00:00:42,699 --> 00:00:47,140
Teams are struggling to manage
increasingly complex cloud native

14
00:00:47,140 --> 00:00:50,229
infrastructure while supporting
thousands of developers.

15
00:00:50,649 --> 00:00:53,379
And applications across
distributed environments.

16
00:00:53,830 --> 00:00:58,239
The recent research across one point, some
proper engineering team shows that almost

17
00:00:58,239 --> 00:01:02,860
seven three percentage report difficulties
in balancing infrastructure complexity

18
00:01:03,039 --> 00:01:07,590
with the developer experience traditional
manual approach, proving inadequate for

19
00:01:07,590 --> 00:01:14,100
the modern scale requirements and growing
technical depth from quick fix solutions.

20
00:01:14,600 --> 00:01:18,499
The impact of infrastructure
complexity, we can categorize

21
00:01:18,999 --> 00:01:20,350
mainly into three groups.

22
00:01:20,859 --> 00:01:24,699
First one is developer productivity,
and secondly, operational burden.

23
00:01:24,970 --> 00:01:26,470
And finally, business agility.

24
00:01:27,190 --> 00:01:30,880
Other developer productivity developers
often spend the valuable time in

25
00:01:31,479 --> 00:01:37,000
infrastructure, resources, and navigating
complex system and platform tools on

26
00:01:37,000 --> 00:01:41,859
an average of almost 4.7 hours per
week lasting to infrastructure release.

27
00:01:42,684 --> 00:01:47,784
And almost 42% of feature data are
attributed to platform bottlenecks

28
00:01:48,284 --> 00:01:52,694
and platform disor, made by manual
processes and support tickets.

29
00:01:53,084 --> 00:01:57,154
Almost 60 big percentage of
platform engineer Spain and

30
00:01:57,154 --> 00:02:00,755
react to troubleshooting, growing
backlog of platform improvements.

31
00:02:01,255 --> 00:02:04,910
Slow infrastructure provisioning and
scaling directly impacts time to market.

32
00:02:05,410 --> 00:02:11,019
Infrastructure delays contribute towards
38% longer recycles and competitive

33
00:02:11,019 --> 00:02:12,850
disadvantage in fast moving markets.

34
00:02:13,660 --> 00:02:16,870
Traditional platform approaches
cannot scale to meet the demand of

35
00:02:16,870 --> 00:02:18,220
modern cloud native development.

36
00:02:18,220 --> 00:02:19,090
At enterprise scale,

37
00:02:19,590 --> 00:02:23,780
the AA port platform engineering
opportunity, 58% of faster

38
00:02:23,780 --> 00:02:26,365
development is achieved by
reducing the deployment cycle time.

39
00:02:26,865 --> 00:02:33,105
Through a power automation and
intelligent orchestration, 67 percentage

40
00:02:33,105 --> 00:02:37,575
of provisioning speeds achieved by
decrease in infrastructure provisioning

41
00:02:37,575 --> 00:02:42,975
time with the intelligent resource
allocation and predictive scaling, and

42
00:02:42,975 --> 00:02:47,115
70 on percentage of system liability
improvement in overall system reliability

43
00:02:47,175 --> 00:02:52,425
through predictive maintenance and
automated remediation analysis of AI

44
00:02:52,425 --> 00:02:54,135
enhance platform implementation shows.

45
00:02:54,510 --> 00:02:58,350
Remarkable improvements in operational
efficiency compared to traditional

46
00:02:58,350 --> 00:02:59,730
platform management approaches.

47
00:03:00,230 --> 00:03:03,800
AA driven developer experience
transformation platform teams

48
00:03:03,800 --> 00:03:08,000
implementing a power self-service
capabilities, report dramatic improvements

49
00:03:08,000 --> 00:03:09,530
and developer experience metrics.

50
00:03:09,860 --> 00:03:13,790
Almost 64% of production in the
developer rate times for infrastructure

51
00:03:13,790 --> 00:03:19,550
resources, and 52% decreasing support
tickets and platform related questions.

52
00:03:20,050 --> 00:03:23,170
And 78% of improvement in
developer satisfaction scores

53
00:03:23,170 --> 00:03:24,970
across EA implementation.

54
00:03:25,900 --> 00:03:28,270
These improvements directly
correlate with the increased

55
00:03:28,270 --> 00:03:32,200
development velocity and reduce
time to market for any new features.

56
00:03:32,700 --> 00:03:37,821
Addressing the scalability challenge
with the EAA manual scaling in initial

57
00:03:37,821 --> 00:03:41,780
cloud data is manually adjust the
resources based on the anticipated need.

58
00:03:42,771 --> 00:03:47,031
And now leading towards that, all
provisioning are performance issues.

59
00:03:47,691 --> 00:03:52,881
This approach has the hours of response
time on inefficient research utilization.

60
00:03:53,381 --> 00:03:55,691
Let's talk about inefficient
research utilization.

61
00:03:56,110 --> 00:04:01,751
When an instance is finding with the
zero percentage use of CPU and memory

62
00:04:02,340 --> 00:04:07,530
multiple instance of same surfaces
running with the low ation in this case,

63
00:04:07,831 --> 00:04:09,570
are, these resources can reuse for.

64
00:04:10,396 --> 00:04:13,516
Any the services that needs
additional insurance to be spinned up.

65
00:04:14,016 --> 00:04:15,546
Let's about the manual scaling.

66
00:04:15,816 --> 00:04:17,616
Let's talk about rule based automation.

67
00:04:18,036 --> 00:04:21,306
This is a very common approach in
the current market time, and this

68
00:04:21,306 --> 00:04:26,376
actually, this is actually providing
basic automation with fixed thresholds

69
00:04:26,706 --> 00:04:31,056
and predetermined scaling rules, and
it provides very good implements, but

70
00:04:31,056 --> 00:04:33,996
lack, adaptability, rule-based approach.

71
00:04:34,496 --> 00:04:37,676
Resulted in moderate
improvement, but still records

72
00:04:37,676 --> 00:04:38,996
significant human intervention.

73
00:04:39,496 --> 00:04:42,016
Then finally, let's talk
about a port orchestration.

74
00:04:42,976 --> 00:04:46,666
This is an advanced approach with
intelligent system that can learn

75
00:04:46,666 --> 00:04:50,986
from the usage patterns, predict
needs and autonomously optimize

76
00:04:51,015 --> 00:04:55,445
infrastructure in real time, a
orchestration results in minutes instead

77
00:04:55,445 --> 00:05:00,906
of spending hours of scaling, that's
providing almost 99.9 availability.

78
00:05:01,311 --> 00:05:06,381
During peak months case studies from
high growth organization, RAM said that

79
00:05:06,710 --> 00:05:12,770
a platform engineering team dramatically
reduces infras scaling response time

80
00:05:12,770 --> 00:05:14,455
while maintaining exceptional reliability.

81
00:05:14,955 --> 00:05:19,270
Kubernetes optimization through EA
Kubernetes orchestration enhance with

82
00:05:19,270 --> 00:05:23,801
EA driven resource management, delivers
significant operational and cast benefits.

83
00:05:24,301 --> 00:05:29,581
We can get intelligent pod placement
based on historical performance data,

84
00:05:30,061 --> 00:05:34,921
automated node scaling that anticipate
workload changes, self feeling

85
00:05:34,921 --> 00:05:38,731
capability that reduce mean time
to respond by almost 61 percentage.

86
00:05:38,971 --> 00:05:42,961
And finally, proactive detection
of potential cluster level issues.

87
00:05:43,741 --> 00:05:46,261
So these are some of the operation
improvement that we can achieve.

88
00:05:46,951 --> 00:05:48,971
And 40, so 43 percentage of.

89
00:05:49,666 --> 00:05:54,216
Better reduction in the resource
utilization cluster and 56 percentage

90
00:05:54,216 --> 00:05:57,756
of reduction in the infrastructure
cost by maximum resource utilization

91
00:05:58,596 --> 00:06:03,486
and 37 percentage of increase in
application performance, and finally

92
00:06:03,726 --> 00:06:07,776
able to handle almost three times
of workloads on the same hardware.

93
00:06:08,466 --> 00:06:11,436
These are some of the business
outcomes that we can achieve

94
00:06:11,936 --> 00:06:14,246
a power self service
platform capabilities.

95
00:06:14,861 --> 00:06:19,241
Intelligence infrastructure provision,
automated configuration management,

96
00:06:19,781 --> 00:06:23,651
adaptive developer portals,
proactive security compliance.

97
00:06:23,711 --> 00:06:27,456
These are some of the major capabilities
of a power cell service platform.

98
00:06:28,416 --> 00:06:32,136
We can use a natural language
infrastructure code, which are again

99
00:06:32,136 --> 00:06:35,876
translated to properly configured
resources with the AI systems

100
00:06:35,936 --> 00:06:39,776
that detect any configuration
drips and such as optimizations.

101
00:06:40,276 --> 00:06:43,186
And automatically remediating
new issues before they impact

102
00:06:43,186 --> 00:06:44,506
even the production environments.

103
00:06:45,006 --> 00:06:48,696
Personal interfaces that learn
from the downer behavior to surface

104
00:06:49,086 --> 00:06:54,276
relevant resources, documentations,
and optimization suggestions based

105
00:06:54,276 --> 00:06:59,196
on project context and continuous
scanning of infrastructure as a code

106
00:06:59,196 --> 00:07:00,846
for any security vulnerabilities.

107
00:07:01,821 --> 00:07:04,191
It'll provide remediation solutions.

108
00:07:04,731 --> 00:07:07,851
So these capabilities starts of the
developer experience from frustration to

109
00:07:07,851 --> 00:07:12,351
friction productivity, while maintaining
the anthrop grade security and reliability

110
00:07:12,851 --> 00:07:18,131
case study, global financial servicing
firm, almost supporting 28 hundreds

111
00:07:18,131 --> 00:07:22,226
of developers across three for the
application teams with a critical

112
00:07:22,226 --> 00:07:26,261
ability requirement and very strict
regulatory compliance needed.

113
00:07:26,756 --> 00:07:27,806
Very big challenge.

114
00:07:28,306 --> 00:07:33,736
NA platform solution was implemented by,
started with implementing in self-service

115
00:07:33,736 --> 00:07:38,446
infrastructure provisioning, followed
by applying NA based anomaly direction

116
00:07:38,446 --> 00:07:42,466
for performance issues, and finally
creating automatic compliance validation

117
00:07:42,466 --> 00:07:47,116
for all the deployments that result
almost eight to 3% reduction in the

118
00:07:47,116 --> 00:07:53,926
infrastructure promotion time, and 43
percentage of, I'm sorry, almost 47%

119
00:07:53,926 --> 00:07:55,246
of decrease in production incidents.

120
00:07:55,306 --> 00:08:01,456
And our four millions in annual
savings per cloud infrastructure cost.

121
00:08:01,956 --> 00:08:03,336
Let's talk about implementation.

122
00:08:03,756 --> 00:08:05,556
Implementation has four phased.

123
00:08:06,096 --> 00:08:09,096
First starts with assessment and
opportunity identification phase

124
00:08:09,456 --> 00:08:13,626
and foundation building phase,
targeted a implementation phase, and

125
00:08:13,626 --> 00:08:16,476
finally scaling optimization phase.

126
00:08:16,986 --> 00:08:18,936
How to assess and identify opportunities.

127
00:08:19,626 --> 00:08:22,986
Start with the evaluate current
platform capabilities and bottlenecks

128
00:08:23,826 --> 00:08:28,536
and analyst developer experience
pain points followed by identify

129
00:08:28,536 --> 00:08:30,816
high impact automating opportunities.

130
00:08:31,416 --> 00:08:35,766
This is something we will actually
start with and finally define

131
00:08:35,826 --> 00:08:37,686
clear success metrics and KPIs.

132
00:08:38,226 --> 00:08:39,425
This is to progress.

133
00:08:39,876 --> 00:08:42,806
This is to track the
progress for the process.

134
00:08:43,306 --> 00:08:47,056
How to build a foundation, implement
comprehensive observability for

135
00:08:47,056 --> 00:08:50,956
ai, turning data, standardize
infrastructure as code practice,

136
00:08:51,526 --> 00:08:56,266
develop AP first approach for all
platform services, and create platform

137
00:08:56,266 --> 00:09:00,965
team AI capability development plan,
and how to implement target daily.

138
00:09:01,465 --> 00:09:06,085
Start with deploy intelligent resource
provisioning capabilities, then implement

139
00:09:06,085 --> 00:09:07,975
predictive scaling for critical workloads.

140
00:09:08,475 --> 00:09:12,825
Create a power developer self service
portal, and finally establish feedback

141
00:09:12,825 --> 00:09:14,445
loops for continuous improvements.

142
00:09:14,945 --> 00:09:17,045
Next, how to scale and optimize.

143
00:09:17,545 --> 00:09:23,185
First, extend a capabilities across all
the platform services, then implement

144
00:09:23,245 --> 00:09:24,370
advance predict to maintenance.

145
00:09:24,870 --> 00:09:29,805
Integrate with continuous integration
and continuous deployment for intelligent

146
00:09:29,805 --> 00:09:31,905
deployment pipelines and file develop.

147
00:09:32,880 --> 00:09:37,460
Organization specific GA models these
phase approach and choose measurable

148
00:09:37,460 --> 00:09:41,840
progress while building the foundation
for comprehensive AI platform engineering.

149
00:09:42,340 --> 00:09:46,150
Let's talk about what are the common
implementing challenges and how,

150
00:09:46,150 --> 00:09:48,580
what are the mitigation strategies?

151
00:09:49,080 --> 00:09:54,855
Insufficient quality data for AI training
skills gap in platform engineering team.

152
00:09:55,355 --> 00:09:57,185
Assistance to automation from operations.

153
00:09:57,185 --> 00:10:00,755
Team integration, complexity
with legacy systems.

154
00:10:01,295 --> 00:10:03,545
Concerns about ai decision transparency.

155
00:10:04,235 --> 00:10:06,755
These are some of the common
implementation challenges.

156
00:10:07,535 --> 00:10:09,965
Let's talk about how
we can mitigate these.

157
00:10:10,655 --> 00:10:12,755
Begin with enhanced observ implementation.

158
00:10:13,355 --> 00:10:17,285
Use synthetic data and simulations
while building real data set.

159
00:10:17,785 --> 00:10:22,075
Establish a education program
partner with specialized consultants.

160
00:10:22,575 --> 00:10:25,036
Manage a services as a
transaction strategy.

161
00:10:25,536 --> 00:10:27,185
Start with human loop approach.

162
00:10:27,756 --> 00:10:31,955
Demonstrate the value through
metrics, create clear upskilling

163
00:10:31,955 --> 00:10:36,025
pathways, then create abstraction
layers with the well different APAs.

164
00:10:36,595 --> 00:10:41,545
Implement incremental monetization use
of AI to generate integration adapters,

165
00:10:42,025 --> 00:10:44,575
implement explainable area approaches.

166
00:10:45,265 --> 00:10:46,975
Maintain comprehensive logging.

167
00:10:47,470 --> 00:10:50,141
And create capabilities
for any critical systems.

168
00:10:50,641 --> 00:10:53,371
Key takeaways, the future
of a driven platform.

169
00:10:53,371 --> 00:10:58,291
Engineering organizations implementing
AI platforms, seeing dramatic I

170
00:10:58,291 --> 00:11:02,401
improvements and developer productivity,
operation efficiency, and business

171
00:11:02,461 --> 00:11:06,991
agility begin with targeted AI
capabilities that address your most

172
00:11:06,991 --> 00:11:10,891
stream pain point by building the
foundation for comprehensive automation.

173
00:11:11,391 --> 00:11:15,021
AI adapter, a power platform engineering
are achieving almost two to three

174
00:11:15,021 --> 00:11:19,401
times of better developer productivity
and significant no operation cost.

175
00:11:19,901 --> 00:11:23,320
The international AI into platform
engineering is not just optimization.

176
00:11:23,920 --> 00:11:26,800
It's a funda, fun, fundamental shift.

177
00:11:27,550 --> 00:11:29,980
How do we deliver and scale
infrastructure for the.

178
00:11:30,480 --> 00:11:32,280
Thank you so much for
joining for my session.

179
00:11:32,610 --> 00:11:36,480
I truly enjoyed sharing my insights
on Adrian Quantum Engineering,

180
00:11:36,840 --> 00:11:39,870
automating infrastructure at Scale
for enhanced developer experience.

181
00:11:40,380 --> 00:11:44,010
Thank you again for the invitation and
for organizing such a well done event.

182
00:11:44,760 --> 00:11:45,210
Thank you.

