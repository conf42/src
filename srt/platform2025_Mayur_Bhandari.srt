1
00:00:00,500 --> 00:00:01,340
Hello everyone.

2
00:00:01,400 --> 00:00:04,910
My name is meu and I'm a software
engineer working with Microsoft.

3
00:00:05,900 --> 00:00:09,830
Today we are going to talk about
building resilient, smart city platforms

4
00:00:10,370 --> 00:00:15,200
and how engineering distributed
system going to help at urban scale.

5
00:00:16,160 --> 00:00:22,549
So by 2030, about 60% of global population
is projected to live in cities and

6
00:00:22,549 --> 00:00:28,240
providing an infrastructure which supports
mobility, energy, safety, and governance.

7
00:00:29,125 --> 00:00:34,814
Is going to be digitally backbone by
distributed systems, and it's going

8
00:00:34,814 --> 00:00:36,614
to support the millions of residents.

9
00:00:37,094 --> 00:00:38,954
So let's deep dive into it.

10
00:00:39,454 --> 00:00:40,624
The engineering challenges.

11
00:00:41,164 --> 00:00:45,844
Now with the conventional enterprise
platform, smart city systems must

12
00:00:45,844 --> 00:00:50,305
operate in real time, but that doesn't
happen with the conventional enterprise

13
00:00:50,305 --> 00:00:53,375
platform because we do want cities.

14
00:00:54,215 --> 00:00:59,495
To have their data process in real time,
and this requires distributed system

15
00:00:59,495 --> 00:01:04,955
architecture that can support massive
concurrency fault tolerance, and high

16
00:01:04,955 --> 00:01:10,585
availability while upholding security,
compliance and sustainability with the

17
00:01:10,585 --> 00:01:15,525
monolithic system, it is not possible
to provide this, not the distributed

18
00:01:15,525 --> 00:01:18,255
system as the urban operating system.

19
00:01:18,810 --> 00:01:23,130
So it comprises with the four
different pillars, which includes

20
00:01:23,130 --> 00:01:29,010
decentralization, elastic scalability,
fall tolerance and redundancy, and

21
00:01:29,010 --> 00:01:30,990
data-driven resource optimization.

22
00:01:31,490 --> 00:01:36,530
Smart city platform functions as an urban
operating system coordinating multiple

23
00:01:36,530 --> 00:01:41,270
systems such as transports, utilities,
emergency responses, and citizen services.

24
00:01:42,080 --> 00:01:46,970
At this scale, monolithic architecture
collapses under the weight of complexity.

25
00:01:47,660 --> 00:01:51,050
And that's when distributed
system comes to provide the aid.

26
00:01:51,800 --> 00:01:55,010
What the distributed system has
it, as we discussed, that it

27
00:01:55,010 --> 00:01:56,630
provides the decentralization.

28
00:01:57,440 --> 00:02:01,460
Critical services cannot depend
on a single control point.

29
00:02:02,150 --> 00:02:06,650
Distributed system ensures
that there is autonomously.

30
00:02:07,575 --> 00:02:11,055
These decisions can be made a
autonomously and even in the

31
00:02:11,055 --> 00:02:12,945
central hub if it's offline.

32
00:02:13,445 --> 00:02:14,075
Elastic.

33
00:02:14,075 --> 00:02:18,635
Scalability platforms must
handle unpredictable spikes.

34
00:02:18,815 --> 00:02:23,975
For example, during festivals,
emergencies, or any peak time.

35
00:02:24,875 --> 00:02:29,555
The auto-scaling based on the workload for
casting, ensures performance, scalability.

36
00:02:30,055 --> 00:02:31,645
Fall tolerance and redundancy.

37
00:02:32,305 --> 00:02:37,855
Redundant services across multiple regions
ensures resilience against outages.

38
00:02:38,465 --> 00:02:44,345
Active congregation minimizes downtime,
so we do need a lot of fall tolerance and

39
00:02:44,345 --> 00:02:47,435
redundancy to support the realtime system.

40
00:02:47,935 --> 00:02:50,005
Data-driven resource optimization.

41
00:02:50,305 --> 00:02:56,965
Distributed architectures have pro
improved operational efficiency by 67.8%,

42
00:02:57,085 --> 00:03:03,295
and the infrastructure cost has been
reduced by 34.2% in real-time deployments.

43
00:03:03,925 --> 00:03:08,585
This is all thanks to the dynamic
resource and schedule dynamic resource

44
00:03:08,585 --> 00:03:10,505
scheduling and predictive analytics.

45
00:03:11,005 --> 00:03:14,615
Now let's talk a little bit more
about intelligent transport system

46
00:03:15,115 --> 00:03:16,975
for the intelligent transport system.

47
00:03:16,975 --> 00:03:21,494
We have seen with the smart cities,
which are driven by the distributed

48
00:03:21,494 --> 00:03:28,065
network, they have about 91.7 data
consistency, 91.7% data consistency,

49
00:03:28,605 --> 00:03:32,834
which is distributed across nodes
leading to synchronized signaling,

50
00:03:32,834 --> 00:03:34,575
routing, and congestion management.

51
00:03:35,075 --> 00:03:40,654
And we have also seen that about 76.2%
commuters benefit with this structure.

52
00:03:40,984 --> 00:03:46,484
They get direct benefits from improved
trans transit efficiency through

53
00:03:46,484 --> 00:03:50,924
adoptive scheduling, multi-model
integration, and predictive rerouting.

54
00:03:51,424 --> 00:03:55,414
And again, with this transportation
system, there are engineering

55
00:03:55,414 --> 00:03:56,944
strategies which we follow to it.

56
00:03:57,814 --> 00:04:03,024
So there, so the basically are the message
oriented middleware in this structure.

57
00:04:03,024 --> 00:04:08,364
We need a way that all these
messagings are getting transferred

58
00:04:08,544 --> 00:04:11,364
or through real time pipeline.

59
00:04:11,364 --> 00:04:15,234
So for example, Kafka and
Puls, they ensure the reliable

60
00:04:15,234 --> 00:04:16,494
real time data streaming.

61
00:04:16,674 --> 00:04:22,254
From traffic sensors, ZPS devices,
transit apps, or maybe from incident

62
00:04:22,254 --> 00:04:24,695
reports by customers, service smash.

63
00:04:24,905 --> 00:04:30,685
This is something which helps to
decouple the microservices, which helps

64
00:04:30,805 --> 00:04:35,570
in routing, ticketing, scheduling,
while also maintaining observability.

65
00:04:35,900 --> 00:04:40,135
We'll talk about observability little
bit more detail in the next slides.

66
00:04:40,635 --> 00:04:44,895
Now predictive AI models, this
strategy really helps the machine

67
00:04:45,025 --> 00:04:46,465
through machine learning models.

68
00:04:46,734 --> 00:04:50,934
We can forecast the congestion and
we can adopt the traffic signals

69
00:04:50,965 --> 00:04:52,254
accordingly and dynamically.

70
00:04:53,064 --> 00:04:58,189
That definitely helps reduce the
travel time, the congestion duration.

71
00:04:58,399 --> 00:04:59,839
It helps us reducing that.

72
00:05:00,339 --> 00:05:04,419
These engineering strategies work
together to create a cohesive,

73
00:05:04,419 --> 00:05:09,309
responsive transit system that adopts
to changing condition in real time.

74
00:05:09,809 --> 00:05:14,269
Now, reliability through AI powered
incidents response with the traditional

75
00:05:14,269 --> 00:05:18,919
I it incident management model, it
fails to scale at the city level.

76
00:05:19,549 --> 00:05:23,569
The integration with AI-driven
incidences responses into the micro

77
00:05:23,569 --> 00:05:27,399
city microservices architecture
has transformed the reliability

78
00:05:27,399 --> 00:05:29,289
management system in a huge way.

79
00:05:30,189 --> 00:05:38,289
We have seen the, there has a 20, a 42.6%
reduction in MTTR which is nothing but

80
00:05:38,294 --> 00:05:43,449
predictive monitoring identifies anomalies
before they escalate into outages.

81
00:05:43,949 --> 00:05:48,859
Automated remediation, self-healing
workloads a workflow offers

82
00:05:48,859 --> 00:05:54,154
automatically remote work workloads
reroute workloads, restart failing

83
00:05:54,154 --> 00:05:58,154
parts or provision, addition
provision additional compute notes.

84
00:05:58,784 --> 00:06:03,824
So with this automation way where the
nodes are getting readjusted or the

85
00:06:03,824 --> 00:06:09,524
resource are getting allocated or rerouted
of the information, that has helped a lot.

86
00:06:10,214 --> 00:06:16,274
And we have seen with this the distributed
network, we have seen that about 63.8%

87
00:06:16,274 --> 00:06:21,134
improved resource allocation where
the AI allocates commute bandwidth

88
00:06:21,284 --> 00:06:25,454
or transit resources dynamically
based on evolving city conditions.

89
00:06:25,954 --> 00:06:28,744
Now let's just talk about AI
incidents response like a,

90
00:06:28,809 --> 00:06:30,219
with a real world example.

91
00:06:30,899 --> 00:06:36,059
In this case study, we will talk about a
large metropolitan smart city development.

92
00:06:36,469 --> 00:06:40,999
An AI driven observability platform
predicted and prevented a potential

93
00:06:40,999 --> 00:06:45,379
blackout by detecting anomaly
pattern in good telemetry, isolating

94
00:06:45,379 --> 00:06:50,059
failing systems and auto reallocating
power loads before outage cascaded.

95
00:06:50,914 --> 00:06:56,434
This example demonstrated how AI powered
systems cannot only detect problems,

96
00:06:56,434 --> 00:07:02,254
but take autonomous action to prevent
cascading failures that could affect

97
00:07:02,254 --> 00:07:04,684
thousands or millions of residents.

98
00:07:05,184 --> 00:07:10,224
With this internet of Things telemetry
pipeline, we know that it process data

99
00:07:10,224 --> 00:07:14,044
from about 5,000 plus IOT sensors.

100
00:07:14,544 --> 00:07:19,734
The smart cities in general need to
rely on the information of energy usage,

101
00:07:19,734 --> 00:07:24,524
traffic, air quality, water system, and
security, and these in info And this,

102
00:07:24,524 --> 00:07:29,664
these information needs to process
and through the sensors which we have

103
00:07:29,664 --> 00:07:33,654
placed in, in the smart cities, the
da if you talk about the data volume,

104
00:07:34,044 --> 00:07:39,434
the terabytes of telemetry flow daily
from the heterogeneous devices there's

105
00:07:39,434 --> 00:07:41,414
a huge, that's a huge chunk of data.

106
00:07:41,914 --> 00:07:47,584
We also have seen that the low latency
in this process, delays can com

107
00:07:47,734 --> 00:07:52,154
compromise safety critical functions like
traffic lights and emergency responses.

108
00:07:52,154 --> 00:07:54,224
That's why we need low
latency of the system.

109
00:07:54,724 --> 00:07:58,954
The Edge computing has helped us
processing the data at the sensor of the

110
00:07:58,954 --> 00:08:03,334
gateway, which reduces network strain
and enables local decision making.

111
00:08:04,204 --> 00:08:08,494
And we have seen with this architecture
and with this the overall strategies,

112
00:08:08,974 --> 00:08:12,874
that's about 78.4% anomaly.

113
00:08:13,299 --> 00:08:17,829
Detection has been improved with
these AI models, which detects popula

114
00:08:17,879 --> 00:08:23,099
pollution spikes, structural traces,
and bus bridges, or unusual water

115
00:08:23,099 --> 00:08:28,619
pressures are the few examples, which
helps us to detect like which which

116
00:08:28,619 --> 00:08:30,389
are needed to be detect quickly.

117
00:08:30,889 --> 00:08:36,279
Now with this all AI driven, machine
learning driven and the distributed

118
00:08:36,279 --> 00:08:42,069
system, it has always been a concern
of privacy, compliance and how we are

119
00:08:42,069 --> 00:08:48,549
going to do the governments at scale,
smart city platform, manage sensitive

120
00:08:48,549 --> 00:08:51,619
personal and behavioral data of 82 point.

121
00:08:52,054 --> 00:08:57,174
82% of residents about without
robust privacy net frameworks,

122
00:08:57,324 --> 00:09:01,734
trust and adoption collapses
without doing getting into all that.

123
00:09:02,234 --> 00:09:06,414
We have also seen with this, the data
minimization, secure multi-tenancy

124
00:09:06,414 --> 00:09:07,884
and the consent frameworks.

125
00:09:07,884 --> 00:09:11,444
This all is something which
provides with the whole flow.

126
00:09:11,944 --> 00:09:15,664
Let's just talk about the rev
The, the privacy and governance

127
00:09:15,664 --> 00:09:16,804
result with the whole system.

128
00:09:17,304 --> 00:09:19,644
We have seen the improvement
in data protection.

129
00:09:19,794 --> 00:09:25,704
It has about 34.8% improvement across
deployments, implementing privacy by

130
00:09:25,704 --> 00:09:28,274
design principles, higher public trust.

131
00:09:28,274 --> 00:09:33,464
We have seen about 67% of higher public
trust in the city that deployed governance

132
00:09:33,464 --> 00:09:35,539
dashboards with transference auditing.

133
00:09:36,039 --> 00:09:40,739
So when we have so much transparency
in the system, it really helps to build

134
00:09:40,739 --> 00:09:44,749
the trust and if you have dashboards,
all the information that, hey, this

135
00:09:44,749 --> 00:09:48,589
is the situation, or this is what is
happening, these are the incidences,

136
00:09:48,589 --> 00:09:49,999
or this is the current scenario.

137
00:09:50,269 --> 00:09:55,579
All these information being transparent
to the public has increased the

138
00:09:55,579 --> 00:09:58,359
trust and higher service integration.

139
00:09:58,929 --> 00:10:02,469
Success rates as privacy concern
is no longer block adoptation of

140
00:10:02,469 --> 00:10:07,779
new civic services because the
service integration has become easy.

141
00:10:07,779 --> 00:10:10,899
It's like 45% with all different services.

142
00:10:11,399 --> 00:10:15,359
This metrics is demonstrate that privacy
is not just an ethical concentration,

143
00:10:15,359 --> 00:10:19,304
but a practical requirement for
successful smart city implementations.

144
00:10:19,804 --> 00:10:22,384
Now let's just talk a little
bit more about the observability

145
00:10:22,384 --> 00:10:23,314
and deployment pattern.

146
00:10:23,564 --> 00:10:27,804
Observability is nothing but looking into
the system through dashboards or knowing

147
00:10:27,804 --> 00:10:33,794
that what's happening with the centralized
dashboard, ingest telemetry from diverse

148
00:10:33,794 --> 00:10:39,134
platform, it has helped us to provide a
one off the stack in the observability way

149
00:10:39,524 --> 00:10:42,769
because this is something which is more
important to have a centralized dashboard.

150
00:10:43,269 --> 00:10:47,409
We also need like a proactive
alerting with AI correlation across

151
00:10:47,409 --> 00:10:51,209
multiple services, end to end
tracing for a complex transactions.

152
00:10:51,209 --> 00:10:55,629
Yes, this is something which is part
of our observability stack and it

153
00:10:55,629 --> 00:11:00,949
helps to build nothing but trust
start and make an efficient system.

154
00:11:01,449 --> 00:11:05,259
Now, the deployment patterns,
the blue green deployment,

155
00:11:05,259 --> 00:11:07,239
safe rollouts without downtime.

156
00:11:07,419 --> 00:11:08,559
This is something which is.

157
00:11:08,949 --> 00:11:12,149
Requirement as part of DevOps
can, it releases testing

158
00:11:12,149 --> 00:11:13,589
with a small set of users.

159
00:11:13,589 --> 00:11:18,439
It's definitely needed, if you have a
system which you are placing you, if you

160
00:11:18,444 --> 00:11:23,434
do a testing done with a small set of
users is definitely helps to know the

161
00:11:23,434 --> 00:11:28,734
issues in the end and see the feedback
from the users and make more decisions if

162
00:11:28,734 --> 00:11:30,264
we need to change something in the system.

163
00:11:30,764 --> 00:11:35,419
Kubernetes orchestration, centralized
workloads for elastic scaling.

164
00:11:35,509 --> 00:11:39,469
So with this as for an example,
Kubernetes orchestration has

165
00:11:39,469 --> 00:11:45,059
helped that you can containerized
workload for elastic scaling.

166
00:11:45,059 --> 00:11:49,804
If you want to scale based on the
traffic p cars or different cities,

167
00:11:49,994 --> 00:11:51,924
different scenarios, this can help.

168
00:11:52,224 --> 00:11:55,674
With this distributed system, let's
talk about the sustainability and

169
00:11:55,674 --> 00:11:57,774
carbon footprint, which it's making.

170
00:11:58,614 --> 00:12:03,524
Smart cities are not just judged by
not only by the service delivery,

171
00:12:03,974 --> 00:12:06,104
but also their environmental impact.

172
00:12:06,974 --> 00:12:12,674
We have seen the carbon footprint
reduction of about 28.9%.

173
00:12:13,174 --> 00:12:18,094
We are compute task shifts to data centers
with renewable energy availability.

174
00:12:18,594 --> 00:12:24,024
Resource utilization has seen improvement
about 35% by adopting sev serverless

175
00:12:24,024 --> 00:12:26,584
patents and adaptive orchestration.

176
00:12:26,834 --> 00:12:28,185
Circular data practicing.

177
00:12:28,435 --> 00:12:31,534
This is one of the thing
which we use in the system.

178
00:12:31,685 --> 00:12:35,314
It definitely helps reduce the carbon
footprint and increase the sustainability

179
00:12:35,764 --> 00:12:39,724
where reusing telemetry data across
departments reduces duplication,

180
00:12:39,935 --> 00:12:42,395
cutting both cost and emissions.

181
00:12:42,895 --> 00:12:45,590
Now, let's see, of how a
practical framework look like.

182
00:12:46,090 --> 00:12:50,320
For platform engineers designing
next generation urban system, a

183
00:12:50,320 --> 00:12:51,970
structured approach is essential.

184
00:12:52,750 --> 00:12:59,050
So we, here are the building blocks to
form a smart city network, foundational

185
00:12:59,050 --> 00:13:04,150
layer, distributed service, mass identity
and access management, data governance.

186
00:13:04,570 --> 00:13:09,680
You need a form, a foundation layer, which
is nothing but a distributed service mash.

187
00:13:10,310 --> 00:13:15,690
You have a data access and data management
data governance, that's one of the

188
00:13:15,690 --> 00:13:17,430
foundation layer, which we really need.

189
00:13:17,930 --> 00:13:18,680
The data layer.

190
00:13:18,890 --> 00:13:24,940
The data layer helps in the real time
ingestion which helps distribute the data

191
00:13:24,940 --> 00:13:28,420
lakes and the ML interface engine engines.

192
00:13:28,750 --> 00:13:30,185
Those are the part of the data layers.

193
00:13:30,685 --> 00:13:34,675
Now once you have the data layer with
the pipeline, you want the application

194
00:13:34,675 --> 00:13:38,905
layer, which is nothing but the
microservices for Transport, energy,

195
00:13:38,905 --> 00:13:44,785
safety, and Civic Services or any other
where you would use this data to, to

196
00:13:44,785 --> 00:13:47,605
do a prediction or analyze the data.

197
00:13:48,555 --> 00:13:51,390
Now the, another building
block is observability, layout

198
00:13:51,480 --> 00:13:53,360
layer, unified telemetry.

199
00:13:53,660 --> 00:13:56,480
Observability, unified
Telemetry, ai, power monitoring

200
00:13:57,020 --> 00:13:58,640
and automated remediation.

201
00:13:59,630 --> 00:14:02,720
This is something which provides
through observability layer that

202
00:14:02,720 --> 00:14:06,910
you have, monitoring dashboards and
everything, not the governance layer.

203
00:14:06,910 --> 00:14:10,030
With all this data and information,
you need a governance layer

204
00:14:10,510 --> 00:14:12,190
where the privacy is by design.

205
00:14:12,690 --> 00:14:16,290
Compliance automation, citizen engagement
dashboard, all these things, if you

206
00:14:16,290 --> 00:14:21,970
make your system transplants, going
to help design an urban system and a

207
00:14:21,970 --> 00:14:27,910
sustainability layer where you are working
on how you can reduce and make people

208
00:14:28,090 --> 00:14:33,150
or the system carbon aware and help with
the green infrastructure utilization.

209
00:14:33,650 --> 00:14:38,010
This is something which we need to all
these, like all these building blocks

210
00:14:38,010 --> 00:14:42,630
are very much important when we are
thinking as part of platform designers.

211
00:14:43,130 --> 00:14:45,290
When we wanna create
a smart city networks.

212
00:14:45,790 --> 00:14:47,190
Now measurable outcomes.

213
00:14:47,690 --> 00:14:49,760
Resilient smart city platform.

214
00:14:50,300 --> 00:14:54,759
Em embodied the convergence of
distributed systems, engineering, civic

215
00:14:54,759 --> 00:14:56,590
responsibility and sustainability.

216
00:14:57,189 --> 00:15:02,890
The measurable outcomes are compelling
about 1.2 million concurrent operations

217
00:15:02,890 --> 00:15:06,850
we have seen with about 99.7 uptime.

218
00:15:07,350 --> 00:15:13,410
We've also seen 67.8% operational
efficiency gains and 34.2 cost

219
00:15:13,410 --> 00:15:14,400
reduction with the system.

220
00:15:14,900 --> 00:15:21,080
91.7% data consistency, which
has held about 76.2 commuters

221
00:15:21,580 --> 00:15:22,930
in the transport system.

222
00:15:23,430 --> 00:15:29,279
42.6% reduction in MTTR and 78.4.

223
00:15:29,410 --> 00:15:30,759
Better anomaly detection.

224
00:15:31,259 --> 00:15:34,650
Now we are at the part of
our conclusion of this.

225
00:15:35,069 --> 00:15:39,390
By leveraging microservices,
event-driven architecture, AI powered

226
00:15:39,390 --> 00:15:43,229
incidences, sponsors, and privacy by
design frameworks, it is can achieve

227
00:15:43,229 --> 00:15:48,900
a balance of reliability, performance,
public trust for platform engineers.

228
00:15:48,900 --> 00:15:53,489
These figures demonstrate that
resilient, smart cities performs are

229
00:15:53,489 --> 00:15:56,160
not aspirational, they're achievable.

230
00:15:56,775 --> 00:16:01,425
The future of urban living depends
on how we scale, govern, and sustain

231
00:16:01,425 --> 00:16:05,475
this distributed infrastructure
to serve millions responsibly.

232
00:16:05,975 --> 00:16:10,114
The smart city is not something
in future, it's here now.

233
00:16:10,145 --> 00:16:13,775
The only question is how
are we going to adopt it?

234
00:16:14,275 --> 00:16:18,084
So let's ask these questions to
ourselves when we are thinking to

235
00:16:18,084 --> 00:16:20,785
design a smart city infrastructure.

236
00:16:21,624 --> 00:16:22,074
Thank you.

