1
00:00:00,000 --> 00:00:01,170
Hey, hello everyone.

2
00:00:01,260 --> 00:00:02,940
Thank you for joining for my talk today.

3
00:00:03,420 --> 00:00:07,350
So good morning, good afternoon,
good evening, wherever you are from.

4
00:00:07,400 --> 00:00:08,360
a quick disclaimer.

5
00:00:08,420 --> 00:00:11,930
so the presentation includes some
research points which are purely based

6
00:00:11,930 --> 00:00:15,559
on my research and is not including
any of the organizational review.

7
00:00:16,129 --> 00:00:20,320
And as an attendee, you are encouraged
to conduct your own research and.

8
00:00:20,740 --> 00:00:24,270
Basically, look into some of these
things before you start implementing in

9
00:00:24,270 --> 00:00:26,310
any of the years, in your organization.

10
00:00:26,789 --> 00:00:28,950
So let's move on to the next slide.

11
00:00:28,979 --> 00:00:31,079
So this is about speaker introduction.

12
00:00:31,079 --> 00:00:32,489
So my name is Santosh Bompally.

13
00:00:33,010 --> 00:00:37,785
I am basically, a cybersecurity
professional with background in computer

14
00:00:37,785 --> 00:00:39,945
science and master's in cybersecurity.

15
00:00:40,435 --> 00:00:42,625
pretty much, since childhood,

16
00:00:42,680 --> 00:00:45,110
I was basically like a hacker.

17
00:00:45,210 --> 00:00:49,620
I started my journey as a hacker like
way early on in my life when I first

18
00:00:49,670 --> 00:00:53,830
was trying to crack a bios password,
basically removed a battery 

19
00:00:53,830 --> 00:00:56,190
and basically, explored it by myself.

20
00:00:56,220 --> 00:00:59,910
So I had that exploration mindset
pretty much baked us since my childhood.

21
00:01:00,180 --> 00:01:02,699
So that basically gave
me opportunities to.

22
00:01:02,770 --> 00:01:03,370
Think through.

23
00:01:03,460 --> 00:01:08,440
And while acquiring, doing all of that, I
was able to acquire all these multi-cloud

24
00:01:08,440 --> 00:01:12,910
certifications and some of these,
different certifications in cybersecurity.

25
00:01:12,910 --> 00:01:14,290
So I was wearing different hats.

26
00:01:14,540 --> 00:01:17,420
I worked in instant response
GRC and all the different

27
00:01:17,420 --> 00:01:19,100
areas in inside cybersecurity.

28
00:01:19,350 --> 00:01:22,650
that's what gave me a knowledge to
acquire some of the certifications.

29
00:01:22,650 --> 00:01:24,150
And I do contributing to the.

30
00:01:24,415 --> 00:01:25,105
industry too.

31
00:01:25,105 --> 00:01:28,785
for example, some of the research
publications for CSAI was

32
00:01:28,845 --> 00:01:32,915
able to contribute, there and
pretty much Coming back here.

33
00:01:32,915 --> 00:01:38,285
So I basically like exploring cloud,
and I'm very passionate about threat

34
00:01:38,285 --> 00:01:42,815
hunting because it basically gives me an
opportunity to think like a bad actor.

35
00:01:43,205 --> 00:01:46,785
And as an engineer, I basically
try to build controls around

36
00:01:46,785 --> 00:01:48,345
detection side and prevention side.

37
00:01:48,345 --> 00:01:52,265
So it, it's really fun, playing
capture the flag even sometimes

38
00:01:52,565 --> 00:01:54,185
because it gives you opportunities to.

39
00:01:54,210 --> 00:01:57,300
Think a different perspective
rather than your spelling controls.

40
00:01:57,630 --> 00:02:01,530
And I do participate in different home
automation projects out there, so I do

41
00:02:01,530 --> 00:02:03,120
collaborate in some of those things.

42
00:02:03,200 --> 00:02:07,830
and I enjoy connecting with people,
and share insights into cybersecurity.

43
00:02:07,920 --> 00:02:11,680
And, if you would like to connect,
this is my LinkedIn profile, please

44
00:02:11,680 --> 00:02:15,620
feel free to connect and, you can
also scan the QR code out there.

45
00:02:15,670 --> 00:02:18,700
you can, if you have any questions
around the chat or any of this topic.

46
00:02:19,125 --> 00:02:19,905
You can always connect.

47
00:02:20,405 --> 00:02:22,475
So moving on to today's topic, right?

48
00:02:22,535 --> 00:02:26,600
So today's topic is about cloud
security, posture management, and.

49
00:02:27,100 --> 00:02:30,580
We are gonna be talking about what are
some of the strategies that you can

50
00:02:30,580 --> 00:02:36,310
take to basically improve the per cloud
security posture and at the same time

51
00:02:36,370 --> 00:02:38,800
drive innovation through shift left.

52
00:02:38,860 --> 00:02:41,230
So that's the core point today on the.

53
00:02:41,410 --> 00:02:43,810
Talking about some of the
strategies and how do we do it.

54
00:02:44,170 --> 00:02:47,140
So by the end of the presentation,
you should be able to understand what

55
00:02:47,140 --> 00:02:51,140
CSPM is, and at the same time, you
should be able to understand, what

56
00:02:51,170 --> 00:02:55,440
cloud NATO technologies are out there,
which would basically help you, to get

57
00:02:55,440 --> 00:02:57,740
maximum benefit, in cloud security.

58
00:02:58,520 --> 00:02:59,900
So this is a quick agenda.

59
00:03:00,230 --> 00:03:04,220
What we have today is we are gonna be
starting by analyzing a threat landscape.

60
00:03:04,560 --> 00:03:05,550
what are the current.

61
00:03:05,595 --> 00:03:07,515
Threats out there and things like search.

62
00:03:07,515 --> 00:03:10,185
And then we are going to be
talking about building blocks of,

63
00:03:10,235 --> 00:03:11,645
cloud security push management.

64
00:03:12,105 --> 00:03:15,345
we are gonna be able to doing a deeper
dive and also a demo in this area for

65
00:03:15,345 --> 00:03:19,005
the three where we are gonna be talking
about IAC and how that is incorporated.

66
00:03:19,485 --> 00:03:22,215
And we are gonna talk about cloud
native security policies, what they

67
00:03:22,215 --> 00:03:23,805
are and why you need to apply them.

68
00:03:24,195 --> 00:03:27,855
And then we talk about even driven
architecture, p management, exception

69
00:03:27,855 --> 00:03:30,195
management, and key takeaways today.

70
00:03:30,975 --> 00:03:31,905
So really.

71
00:03:32,250 --> 00:03:36,000
When you look into the current challenges
for cloud security industry, right?

72
00:03:36,420 --> 00:03:39,420
So you all might have already
heard right from different

73
00:03:39,420 --> 00:03:40,620
breaches and all these things.

74
00:03:40,965 --> 00:03:42,255
These are expensive, right?

75
00:03:42,585 --> 00:03:44,145
So attack service is growing.

76
00:03:44,215 --> 00:03:47,605
we use see nation state actors
and all these different entities

77
00:03:47,935 --> 00:03:50,815
trying to target critical
infrastructures and all those things.

78
00:03:50,815 --> 00:03:55,105
So attack service keeps on changing, and
at the same time, the different status

79
00:03:55,225 --> 00:04:00,035
should also enhance, and change every
day to protect for some of these attacks.

80
00:04:00,095 --> 00:04:02,425
So if we do a quick, research right?

81
00:04:02,720 --> 00:04:03,560
which is out there.

82
00:04:03,560 --> 00:04:05,570
So if, you see my screen here?

83
00:04:05,810 --> 00:04:08,590
So the report here basically says Hey.

84
00:04:09,190 --> 00:04:12,190
If you basically go and check
the real world, real world

85
00:04:12,310 --> 00:04:16,250
cloud security scenarios, the
impact of it is really huge.

86
00:04:16,360 --> 00:04:22,000
So a study performed by CSA in 2024 says
like majority of these are because of

87
00:04:22,030 --> 00:04:24,760
misconfigurations right inside the cloud.

88
00:04:25,075 --> 00:04:27,205
so these min configurations are huge.

89
00:04:27,315 --> 00:04:28,695
for example, think about it, right?

90
00:04:28,855 --> 00:04:33,325
you might be a manufacturing company
who is like basically manufacturing cars

91
00:04:33,325 --> 00:04:36,835
and all these, and basically collecting
the data from all these iot things,

92
00:04:37,195 --> 00:04:38,340
and you're sending it to the cloud.

93
00:04:38,940 --> 00:04:42,445
I. And you have a misconfiguration
in the cloud, and that could be

94
00:04:42,445 --> 00:04:46,615
exploited by a bad actor, and that
actor can potentially expose all

95
00:04:46,615 --> 00:04:48,865
the information out there, right?

96
00:04:49,045 --> 00:04:52,465
Or do any kind of malicious
things if the pro service that

97
00:04:52,465 --> 00:04:53,845
you're using for iot is not.

98
00:04:53,915 --> 00:04:55,265
Configured in a secure way.

99
00:04:55,565 --> 00:05:00,215
So there are so many use cases out
there from a attacker perspective that

100
00:05:00,215 --> 00:05:02,555
an attacker could basically exploit.

101
00:05:02,585 --> 00:05:06,035
So we also need to make sure like all
of those things are properly configured.

102
00:05:06,395 --> 00:05:09,845
And the other report, what
you see here, is by CIO.

103
00:05:10,295 --> 00:05:14,555
So what we see here is like Gartner
is also coming out and saying, Hey.

104
00:05:14,580 --> 00:05:19,730
Majority of the times when you see cloud
security misconfigurations, these, would

105
00:05:19,730 --> 00:05:24,200
be on the rise and at the same time
these would be the customer's fault.

106
00:05:24,320 --> 00:05:27,979
because the misconfiguration happened,
because think about the cloud, right?

107
00:05:27,979 --> 00:05:32,539
So it's a shared responsibility order
where a provider is responsible for

108
00:05:32,539 --> 00:05:34,039
certain kind of security things.

109
00:05:34,364 --> 00:05:37,304
And as a customer, protecting
some of these things is also

110
00:05:37,575 --> 00:05:38,684
something that we have to do.

111
00:05:39,104 --> 00:05:42,044
Either it could be with IEM
or either it could be with

112
00:05:42,044 --> 00:05:46,064
some security configurations,
encryption, all these things, right?

113
00:05:46,114 --> 00:05:49,025
going back to the slide, we talked
about some of the risks, which

114
00:05:49,025 --> 00:05:53,195
are out there, and configuration
complexity is huge because.

115
00:05:53,695 --> 00:05:57,625
Think about a confi, think about
like an organization using tens

116
00:05:57,625 --> 00:05:58,945
and hundreds of services, right?

117
00:05:58,975 --> 00:06:03,415
Protecting all those services would
require different configuration settings.

118
00:06:03,475 --> 00:06:07,045
And this configuration settings
keeps on changing every time when

119
00:06:07,045 --> 00:06:09,655
the new version comes are, so
staying updated as very important.

120
00:06:09,715 --> 00:06:11,125
So compliance.

121
00:06:11,125 --> 00:06:12,865
Compliance is a huge, right?

122
00:06:13,095 --> 00:06:16,845
if you see my screen here, so you
might have been seeing it right?

123
00:06:17,645 --> 00:06:21,365
Compliance is something that
companies would have to abide to.

124
00:06:21,545 --> 00:06:26,255
And if you see the growing fines here,
it basically tells a story, right?

125
00:06:26,555 --> 00:06:31,535
It basically, we can see majority
of these fines are because lack of

126
00:06:31,535 --> 00:06:33,095
proper controls in place, right?

127
00:06:33,145 --> 00:06:36,655
People tend to understand, and
interpret compliance and different

128
00:06:36,655 --> 00:06:38,305
means and how that should be done.

129
00:06:38,315 --> 00:06:42,155
all of these, what is what you see
here is because of failing to have

130
00:06:42,155 --> 00:06:46,325
those proper controls in place
and, for example, GDPR, right?

131
00:06:46,325 --> 00:06:51,215
we need to make sure certain kind of data
attribute data set should not leave a

132
00:06:51,215 --> 00:06:52,955
specific geographical location, right?

133
00:06:53,255 --> 00:06:54,545
So you have all those.

134
00:06:54,559 --> 00:06:59,359
Things in play when we talk
about like compliance and when we

135
00:06:59,359 --> 00:07:02,239
talk about when you're violating
with compliance or any of such.

136
00:07:02,629 --> 00:07:04,309
So coming back to.

137
00:07:05,045 --> 00:07:06,725
The foundational pillars, right?

138
00:07:07,085 --> 00:07:11,635
So what exactly is cloud security
foundational pillar, right?

139
00:07:11,844 --> 00:07:14,305
So we have four different components here.

140
00:07:14,335 --> 00:07:18,474
So the first component is
infrastructure as code scanning.

141
00:07:18,505 --> 00:07:20,245
So what that basically is.

142
00:07:20,669 --> 00:07:24,309
When you're trying to deploy your
infrastructures, through code, it really

143
00:07:24,309 --> 00:07:27,369
helps you with lot of things, which we
are gonna be doing a deeper dive shortly.

144
00:07:27,699 --> 00:07:31,329
So that is, you might be having
different languages like Terraform, JCB

145
00:07:31,329 --> 00:07:34,124
Deployment Manager, which you're gonna
be using for Terraform, which you're

146
00:07:34,149 --> 00:07:36,109
gonna be using for, deploying resources.

147
00:07:36,319 --> 00:07:38,090
And that is really a key in.

148
00:07:38,124 --> 00:07:41,524
Stopping, misconfiguration so
that you can enable some of

149
00:07:41,524 --> 00:07:43,294
those policies right in IAC.

150
00:07:43,534 --> 00:07:46,234
So the second thing is cloud
native security validation, right?

151
00:07:46,234 --> 00:07:49,844
So for example, if you have a specific
use case where your deployment is not

152
00:07:49,844 --> 00:07:54,284
going through IAC, you need to have
controls in place, which are cloud native.

153
00:07:54,539 --> 00:07:57,949
So think about, cloud to
cloud collaboration, right?

154
00:07:57,949 --> 00:08:01,249
Maybe a third party is talking to
your cloud and you need to have

155
00:08:01,249 --> 00:08:02,539
certain kind of controls in place.

156
00:08:02,539 --> 00:08:03,709
So that's the second pillar.

157
00:08:03,989 --> 00:08:07,769
Azure policies, GCB org policies,
AWS organization policies

158
00:08:07,769 --> 00:08:08,999
would basically help you.

159
00:08:09,199 --> 00:08:13,470
To build some of the cloud native policies
to ensure hey, if a resource is basically

160
00:08:13,470 --> 00:08:17,130
getting provisioned, it gets provisioned
with some security settings baked in or

161
00:08:17,130 --> 00:08:19,080
with a specific configuration baked in.

162
00:08:19,530 --> 00:08:22,470
And the third thing, the third
pillar, what you see there is an

163
00:08:22,470 --> 00:08:24,180
ontime for remediation, right?

164
00:08:24,490 --> 00:08:27,200
for example, if you're trying
to deploy something, it's not

165
00:08:27,200 --> 00:08:28,430
meeting the configuration.

166
00:08:28,770 --> 00:08:31,570
for some reason the, the pillar
two basically didn't catch it.

167
00:08:32,140 --> 00:08:35,920
The third thing is basically sees the,
what happens in the third thing is it

168
00:08:35,920 --> 00:08:37,990
basically does a runtime remediation.

169
00:08:38,020 --> 00:08:42,880
It sees the events in the real time and it
basically goes and starts remediating it

170
00:08:42,880 --> 00:08:48,070
with any of the native functionality, like
Azure functions or GCP functions or AWS

171
00:08:48,125 --> 00:08:50,015
or, config policies or things like such.

172
00:08:50,255 --> 00:08:52,865
So having a complete
understanding about the.

173
00:08:53,180 --> 00:08:54,680
For sure is really important.

174
00:08:55,010 --> 00:08:57,860
That's where compliance, monitoring
and reporting comes into play.

175
00:08:57,920 --> 00:09:01,260
So we have majority of the tools
out there, which you can do,

176
00:09:01,500 --> 00:09:02,820
which you could do research.

177
00:09:02,870 --> 00:09:05,330
Gartner basically ranks
them with different quads.

178
00:09:05,330 --> 00:09:08,840
So you can be scared to do some
research and get some information

179
00:09:08,840 --> 00:09:10,590
about, the best players out there.

180
00:09:11,490 --> 00:09:14,130
So moving on to the topic of IAC, right?

181
00:09:14,580 --> 00:09:19,410
So we talked about like pre-deployment
scanning, so that is really a core, right?

182
00:09:19,560 --> 00:09:24,810
You need to have your infrastructure going
through the IAC that basically helps you

183
00:09:25,020 --> 00:09:30,560
to basically scan those misconfigurations
and do a policy integration.

184
00:09:31,005 --> 00:09:35,385
So that anytime when con, when this
conation goes through it, you basically

185
00:09:35,385 --> 00:09:40,365
catch it and having an integration
with VCS, maybe GitHub, you can have or

186
00:09:40,365 --> 00:09:42,865
any, any of the VVCS systems out there.

187
00:09:42,895 --> 00:09:47,605
You can have integrations natively so that
whenever you check the code automatically

188
00:09:47,605 --> 00:09:52,585
it scan happens and it'll basically
show you if, the proper template is.

189
00:09:52,650 --> 00:09:54,330
Configured in proper way or not.

190
00:09:55,020 --> 00:09:57,480
So moving on to the demo, this
is a demo of what we are gonna

191
00:09:57,480 --> 00:09:58,920
be doing a deeper dive into.

192
00:09:59,010 --> 00:10:01,650
So what we're gonna be doing is
we are gonna go through, we are

193
00:10:01,650 --> 00:10:05,640
gonna try to deploy a misconfigured
application into the cloud.

194
00:10:06,150 --> 00:10:11,520
And you're gonna see a opa, a open policy
agent, which is gonna be deployed inside

195
00:10:11,520 --> 00:10:17,250
the docker and how that basically scans
it and how we are writing policies and

196
00:10:17,250 --> 00:10:19,020
how the misconfiguration is stopped.

197
00:10:19,600 --> 00:10:21,100
Before it moves into the cloud.

198
00:10:21,280 --> 00:10:23,530
So if you see my screen here,

199
00:10:24,030 --> 00:10:24,930
gimme a second.

200
00:10:24,930 --> 00:10:27,390
I'm just switching the screen.

201
00:10:27,890 --> 00:10:33,580
So if you see my screen here,
so this basically is what?

202
00:10:34,080 --> 00:10:36,330
We have for IAC, right?

203
00:10:36,570 --> 00:10:37,920
So think about it, right?

204
00:10:37,920 --> 00:10:40,650
So we have a app name Insights ai.

205
00:10:40,710 --> 00:10:43,380
So this app basically has
different modules in it.

206
00:10:43,860 --> 00:10:47,310
So we have code in Terraform and
we have code in Bicep, right?

207
00:10:47,640 --> 00:10:51,390
So if you, in Terraform
we had different modules.

208
00:10:51,390 --> 00:10:54,030
For example, let's do go
inside a storage module.

209
00:10:54,570 --> 00:10:57,855
Let's see a. Terraform template.

210
00:10:58,185 --> 00:10:58,245
Yeah.

211
00:10:58,245 --> 00:10:59,415
This is the Terraform template.

212
00:10:59,745 --> 00:11:02,355
And you can see, hey, this
is a misconfiguration, right?

213
00:11:02,415 --> 00:11:08,225
You really don't want to allow any of
these things, without properly configured

214
00:11:08,255 --> 00:11:12,335
and see public network access is
enabled, which again, for any storage

215
00:11:12,335 --> 00:11:14,705
account, you should not be doing it and.

216
00:11:15,035 --> 00:11:17,195
TT PS traffic is also disabled.

217
00:11:17,255 --> 00:11:20,665
So this is something, which
needs to be enabled in order

218
00:11:20,665 --> 00:11:21,955
for encryption to happen, right?

219
00:11:22,375 --> 00:11:26,035
And we also see a tax problems
going on inside the environment.

220
00:11:26,575 --> 00:11:30,695
And some of these things are
misconfigurations, which should be

221
00:11:30,785 --> 00:11:33,785
getting caught during the deployment time.

222
00:11:34,475 --> 00:11:35,735
So this is a storage account.

223
00:11:35,795 --> 00:11:40,825
likewise, I think we also have, Subnet,
I think this is pretty straightforward,

224
00:11:40,825 --> 00:11:44,665
getting the information out, from the
variables and it's basically deploying

225
00:11:44,665 --> 00:11:49,745
it, but it does not have any kind
of, elaborated security controls.

226
00:11:49,995 --> 00:11:51,075
same thing here.

227
00:11:51,225 --> 00:11:53,175
So this is what we have for Terraform.

228
00:11:53,755 --> 00:11:55,585
let's go also see a bicep template.

229
00:11:55,585 --> 00:11:58,255
So we talked about, so Terraform
is one way of deploying it.

230
00:11:58,345 --> 00:12:01,375
So bicep is a secondary mechanism
of deploying the same code.

231
00:12:01,795 --> 00:12:03,655
So this is a bicep code
for the similar thing.

232
00:12:03,655 --> 00:12:04,915
So if you look into it, right?

233
00:12:05,155 --> 00:12:08,995
So again, you see here we have
huge misconfigurations, right?

234
00:12:09,295 --> 00:12:12,085
So this, these should
not be allowed, right?

235
00:12:12,445 --> 00:12:17,455
So for example, for this one, where
you have it open to the world.

236
00:12:17,755 --> 00:12:22,645
And you also have draw access, which is
open to the world, which basically means

237
00:12:22,645 --> 00:12:27,305
like, any entity out there can reach
out to this particular storage account.

238
00:12:27,905 --> 00:12:31,145
Again, if you're basically
having keys and all that, and you

239
00:12:31,205 --> 00:12:34,175
basically have any of this open.

240
00:12:34,715 --> 00:12:37,685
So basically with the keys, they can
basically access it from anywhere.

241
00:12:37,775 --> 00:12:42,665
So some of the incidents or some of the
major, Breaches, which happened over a

242
00:12:42,665 --> 00:12:47,655
period of time, did include some of those
patterns where keys were, not rotated,

243
00:12:47,655 --> 00:12:52,455
and keys were saved inside a platform
which was available across, and which was

244
00:12:52,455 --> 00:12:56,545
not properly authenticated, which led to
potentially data breaches and all of such.

245
00:12:56,815 --> 00:13:01,855
So anyways, coming back to those, so you
can see a list of, again, you can see a

246
00:13:01,855 --> 00:13:03,745
list of misconfigurations going on here.

247
00:13:04,285 --> 00:13:08,305
So what we will do is we
will also do a deep dive.

248
00:13:08,620 --> 00:13:10,810
into what we have from there.

249
00:13:11,310 --> 00:13:12,150
CI perspective, right?

250
00:13:12,150 --> 00:13:16,140
So this is what is happening
during the, build process.

251
00:13:16,140 --> 00:13:18,880
So we are basically getting
an image, inside Docker.

252
00:13:19,240 --> 00:13:22,540
So kicks again is a platform which
you're gonna be using, or which we

253
00:13:22,540 --> 00:13:27,320
have RO Opi agent, where we basically
have all the policies written here.

254
00:13:27,575 --> 00:13:31,385
And this is an image from Check Mark
and we are doing a security scan stage.

255
00:13:31,415 --> 00:13:34,755
What's happening here is like
we basically, inside a query,

256
00:13:35,115 --> 00:13:37,485
we are basically what we are
doing is like performing a scan.

257
00:13:37,605 --> 00:13:44,175
And in the scan is basically passing out
the path where the custom policies are.

258
00:13:44,515 --> 00:13:47,105
we are gonna be touching
about, these in a bit here.

259
00:13:47,510 --> 00:13:50,600
And we are also doing a print screen.

260
00:13:50,690 --> 00:13:55,390
And at the same time, we are exporting
all the results, onto the screen,

261
00:13:55,510 --> 00:13:58,960
which you can see what's gonna
happen in that particular stage.

262
00:13:59,020 --> 00:14:00,340
Okay, let's go back here.

263
00:14:00,400 --> 00:14:03,100
So here is what, so you have
seen misconfiguration so far.

264
00:14:03,100 --> 00:14:05,850
Right now what you're
gonna see is, Policies.

265
00:14:05,850 --> 00:14:07,890
For example, we talked
about IAC policies, right?

266
00:14:08,160 --> 00:14:12,120
So in order for IAC policies to
work, you need to be very specific

267
00:14:12,180 --> 00:14:16,020
about which platform you would like
to have this tailored to, right?

268
00:14:16,020 --> 00:14:19,630
So here what you have is, again,
inside the same repository.

269
00:14:19,690 --> 00:14:22,820
I have IAC policies here
for, for the demo purposes.

270
00:14:23,180 --> 00:14:24,770
And here we have Terraform.

271
00:14:25,090 --> 00:14:29,440
And if you go through Terraform,
you have list of, positive

272
00:14:29,440 --> 00:14:31,540
and negative, like templates.

273
00:14:31,540 --> 00:14:32,980
So if you look into this one, right?

274
00:14:32,980 --> 00:14:35,860
So this is something, an
expected thing, right?

275
00:14:35,920 --> 00:14:38,860
So for example, if you're trying to
deploy something, this is how the

276
00:14:38,860 --> 00:14:40,510
expected configuration should look like.

277
00:14:40,600 --> 00:14:44,680
And this is how the expectation
con the, this is how the

278
00:14:44,680 --> 00:14:45,880
misconfiguration should be.

279
00:14:46,170 --> 00:14:49,890
So this will basically train the
particular, OPA agent to basically

280
00:14:49,890 --> 00:14:53,010
identify what is confi misconfigured
and what is not misconfigured.

281
00:14:53,160 --> 00:14:55,110
And then you come into the query.

282
00:14:55,260 --> 00:14:58,510
We write queries here, in
the opa in the rego format.

283
00:14:58,640 --> 00:15:03,590
what happens is, it the example for this
query is like, it's going have been.

284
00:15:04,195 --> 00:15:07,795
Packed with this compliance pack,
and it is gonna be searching for

285
00:15:07,795 --> 00:15:11,435
some of the misconfigurations here,
which are inside storage accounts.

286
00:15:11,525 --> 00:15:13,505
and it's gonna check for these attributes.

287
00:15:13,775 --> 00:15:17,765
And if any of these attributes are
missing, it's basically, or if it's

288
00:15:17,765 --> 00:15:22,465
not or it's not meeting the expected
value, it's going to throw out an error.

289
00:15:22,525 --> 00:15:25,475
And it's also throw out,
it's also gonna show which.

290
00:15:25,540 --> 00:15:28,900
Specific storage account is having
this issue with, so that is the

291
00:15:28,900 --> 00:15:30,190
reason why we use this percentile.

292
00:15:30,250 --> 00:15:34,150
you might be having tens and hundreds
of resources which are getting deployed.

293
00:15:34,210 --> 00:15:37,930
So only a specific set might be
having this misconfiguration.

294
00:15:37,930 --> 00:15:40,150
So this will basically
help us to get that.

295
00:15:40,150 --> 00:15:42,550
So I already have a build, which was run.

296
00:15:43,060 --> 00:15:45,250
So let me go back here.

297
00:15:45,580 --> 00:15:48,250
Let me, let's go to the build jobs.

298
00:15:48,750 --> 00:15:52,050
So if you look at the recent
build, which was failed, right?

299
00:15:52,110 --> 00:15:55,800
So if you look into the scan, so
you can see here, okay, now this

300
00:15:55,800 --> 00:15:59,625
water basically says is okay, this,
these are the misconfigurations and

301
00:15:59,790 --> 00:16:01,200
this is the reason why it failed.

302
00:16:01,750 --> 00:16:02,860
I'm just highlighting it here.

303
00:16:03,070 --> 00:16:08,700
So again, the risk rating and
all these would come based on.

304
00:16:09,315 --> 00:16:13,485
Either how you define it inside
the configuration file or either

305
00:16:13,485 --> 00:16:14,775
it might be coming from the vendor.

306
00:16:14,835 --> 00:16:18,735
So whenever you scan these, so what
I did is like I included like base

307
00:16:18,735 --> 00:16:22,515
policies, which are out of the box and
also I included with the custom policies.

308
00:16:22,815 --> 00:16:25,245
So all, what you can see here
is like there are a list of

309
00:16:25,305 --> 00:16:26,435
bunch of misconfigurations like.

310
00:16:26,450 --> 00:16:27,680
Whatever you have seen here.

311
00:16:28,430 --> 00:16:31,780
And it basically tells you like, okay,
these are some things that you'll have

312
00:16:31,780 --> 00:16:37,150
to fix in order for this technology
or in order for this app to basically

313
00:16:37,150 --> 00:16:39,160
be getting deployed inside the cloud.

314
00:16:39,530 --> 00:16:42,940
So what we see here is Terraform
configuration and also what we see

315
00:16:43,000 --> 00:16:47,020
here is the bicep configuration
for, whenever it goes and scans.

316
00:16:47,020 --> 00:16:49,540
It basically gets everything inside.

317
00:16:49,590 --> 00:16:53,790
this particular IAC scan, so inside
the stage what is happening is.

318
00:16:54,235 --> 00:16:57,655
It's basically scanning for
everything, for all the built

319
00:16:57,655 --> 00:16:59,065
in policies and custom policies.

320
00:16:59,065 --> 00:17:04,525
And it's basically showing you the results
stating Hey, you're not complying with any

321
00:17:04,525 --> 00:17:07,825
of these configurations, and that is the
reason why the pipeline is getting failed.

322
00:17:08,125 --> 00:17:12,295
So this is really crucial because hey,
this is gonna give you the feedback

323
00:17:12,565 --> 00:17:17,005
in the scans from the kind of,
phase itself to basically say, Hey.

324
00:17:17,280 --> 00:17:18,630
These are the misconfigurations.

325
00:17:18,660 --> 00:17:22,200
This is a policy violation and
this is a reason why the pipeline

326
00:17:22,200 --> 00:17:24,270
is getting failed and all such.

327
00:17:24,630 --> 00:17:26,250
So this is a demo of what we have.

328
00:17:26,310 --> 00:17:28,990
Let's switch back, to the main thing.

329
00:17:29,680 --> 00:17:31,870
So what we have seen here
is like we have seen a demo.

330
00:17:32,305 --> 00:17:35,615
The configuration did not go, did
not go through the cloud because

331
00:17:35,615 --> 00:17:39,725
it basically failed and we all,
we captured the misconfigurations.

332
00:17:39,725 --> 00:17:41,165
We have seen custom policies.

333
00:17:41,405 --> 00:17:44,855
We have seen how we need, we can
write custom policies in rego.

334
00:17:44,855 --> 00:17:47,345
Again, we have seen how
we can use it with opa.

335
00:17:47,945 --> 00:17:49,325
So let's move to the next one.

336
00:17:49,415 --> 00:17:54,365
So again, deploying these things inside
cloud in a DevSecOps model is really

337
00:17:54,365 --> 00:17:56,055
crucial, for any enterprise, right?

338
00:17:56,565 --> 00:18:01,155
if you do a proper integration with
CICD, it gives you two benefits.

339
00:18:01,455 --> 00:18:05,205
The benefit one is like it's gonna
give you a good developer experience.

340
00:18:05,590 --> 00:18:08,780
And a good collaborator,
team, effort, right?

341
00:18:08,780 --> 00:18:12,050
For example, security team knows
really what's happening before

342
00:18:12,050 --> 00:18:13,400
it is an issue on the runtime.

343
00:18:13,890 --> 00:18:17,460
and at the same time, developers
will get a chance to review the code.

344
00:18:18,005 --> 00:18:22,155
Rather than security forcefully fixing
some of these things, on the runtime,

345
00:18:22,395 --> 00:18:25,785
which is gonna be causing drift, and
sometimes to application failures.

346
00:18:26,205 --> 00:18:29,145
So having a proper integration
inside the pipeline.

347
00:18:29,235 --> 00:18:32,085
So as soon as the developer
writes the code, whenever he.

348
00:18:32,705 --> 00:18:36,335
Basically mergers into the main,
or when, whenever a branch is

349
00:18:36,335 --> 00:18:41,225
created, we can have security enabled
there itself within the pipeline.

350
00:18:41,225 --> 00:18:46,385
So that, after every kind of merge
request, automatically scan happens,

351
00:18:46,445 --> 00:18:50,045
and if it tries to see if a particular.

352
00:18:50,485 --> 00:18:54,445
Configuration file or any kind
of, your IAC infrastructure

353
00:18:54,445 --> 00:18:57,235
configuration deployment file
is meeting the configuration.

354
00:18:57,235 --> 00:19:00,475
If it's not, then you basically
feel the bill there itself so that

355
00:19:00,745 --> 00:19:02,125
people basically know about it.

356
00:19:02,695 --> 00:19:05,935
So the second pillar, what
we are now talking about is

357
00:19:05,935 --> 00:19:07,315
cloud native security policies.

358
00:19:07,555 --> 00:19:11,140
So what these are, resource
specific, policy specific, for

359
00:19:11,170 --> 00:19:13,000
each specific cloud environment.

360
00:19:13,420 --> 00:19:16,120
If you have any cloud to
cloud integrations, right?

361
00:19:16,510 --> 00:19:19,570
So you might be having an app or
something, which is sitting in the

362
00:19:19,570 --> 00:19:21,790
other cloud, talking to this cloud.

363
00:19:22,030 --> 00:19:24,880
Or you might be having a vendor out there
connecting you to your cloud and providing

364
00:19:24,880 --> 00:19:28,900
some services by basically provisioning
infrastructure in your, so in your.

365
00:19:29,115 --> 00:19:30,195
Our cloud environment.

366
00:19:30,525 --> 00:19:34,995
So if you have any of that areas or
if you, for some reason you don't have

367
00:19:35,295 --> 00:19:40,125
the capability to do an IAC deployment,
but rather you have a capability to

368
00:19:40,125 --> 00:19:41,655
directly log into the portal and do it.

369
00:19:41,715 --> 00:19:46,435
So the second, one which talks about the
cloud native security policies are really

370
00:19:46,435 --> 00:19:51,325
important because you're gonna be applying
policies inside the native cloud provider.

371
00:19:51,595 --> 00:19:57,045
So in this case, you're gonna be
using like tools like, AWS S, Azure

372
00:19:57,105 --> 00:19:58,995
Policies on a p work policies.

373
00:19:59,025 --> 00:20:03,415
So these basically restrict, what
kind of things you can deploy

374
00:20:03,535 --> 00:20:06,385
and what, when you deploy those
things, how those things should be

375
00:20:06,385 --> 00:20:08,545
configured in a cloud native way.

376
00:20:08,905 --> 00:20:10,465
So having these.

377
00:20:10,505 --> 00:20:14,975
In those environments, we'll give you
centralized policy management control.

378
00:20:15,335 --> 00:20:19,175
Again, mapping back to your standards on
how you would like to get this deployed

379
00:20:19,505 --> 00:20:22,955
and how you would basically mapping back
to security requirements and all those.

380
00:20:23,195 --> 00:20:25,895
So compliance automation
is another portion of it.

381
00:20:25,895 --> 00:20:29,855
For example, for few cloud
services, there are specifics.

382
00:20:30,245 --> 00:20:34,205
Services, for example, Azure
Blueprint as a service will basically

383
00:20:34,205 --> 00:20:39,065
enable you to deploy a specific
application if it only meets certain

384
00:20:39,065 --> 00:20:40,745
kind of regulatory standard, right?

385
00:20:40,805 --> 00:20:44,445
So you can always, have those
kind of things configured, inside

386
00:20:44,445 --> 00:20:45,735
those specific cloud providers.

387
00:20:45,735 --> 00:20:48,145
So that is, cloud native security policy.

388
00:20:48,645 --> 00:20:50,010
Moving on to the next one.

389
00:20:50,500 --> 00:20:53,440
so we are gonna talk about even
driven security automation, right?

390
00:20:53,440 --> 00:20:57,300
So for instance, for some
reason I easy to not work.

391
00:20:58,035 --> 00:21:00,075
Cloud data policy did not work, right?

392
00:21:00,435 --> 00:21:04,755
So you have an ability to
read events in real time.

393
00:21:05,145 --> 00:21:07,365
Whatever is happening in the cloud.

394
00:21:07,395 --> 00:21:11,535
So what's going on happen here is You're
gonna see the event in the real time.

395
00:21:11,655 --> 00:21:15,195
You're gonna perform an analysis
of each event, which hap

396
00:21:15,255 --> 00:21:17,665
happens in the cloud, activity.

397
00:21:17,845 --> 00:21:22,155
And then you're gonna be having a
configuration, which you can configure

398
00:21:22,575 --> 00:21:28,770
inside a cloud native applications like
for example, Azure functions or Lambda

399
00:21:29,050 --> 00:21:34,665
functions, or Google functions or any of
such to basically, if the configuration

400
00:21:34,665 --> 00:21:36,225
is not meeting the security key.

401
00:21:36,635 --> 00:21:41,315
A requirement then basically responded
and trigger an event, which is

402
00:21:41,315 --> 00:21:44,975
nothing but just trigger a function
to basically go and correct it.

403
00:21:45,215 --> 00:21:48,925
And after the particular thing
happens, again, it goes through the

404
00:21:48,925 --> 00:21:53,905
verification loop to ensure that a
proper misconfiguration is corrected.

405
00:21:53,905 --> 00:21:58,165
Maybe you turned on a storage
account to public access and

406
00:21:58,165 --> 00:21:59,815
automatically an event is seen.

407
00:22:00,205 --> 00:22:03,325
You trigger a function
automatically based on that event.

408
00:22:03,695 --> 00:22:06,215
And that e function goes and corrects it.

409
00:22:06,215 --> 00:22:08,405
And again, a verification happens.

410
00:22:08,765 --> 00:22:12,815
Again, all of these are something
that we'll have to look into and we

411
00:22:12,815 --> 00:22:14,405
need to understand and balance this.

412
00:22:14,405 --> 00:22:18,315
for example, we need to understand
what's the, MTTR for remediation,

413
00:22:18,435 --> 00:22:20,895
and things like that because
sometimes some of these solutions

414
00:22:20,895 --> 00:22:22,995
get costly over a period of time.

415
00:22:23,275 --> 00:22:25,165
If they're not deployed
in a proper format.

416
00:22:25,665 --> 00:22:29,235
So again, when you're stitching
everything together, for example,

417
00:22:29,235 --> 00:22:32,655
from a monitoring perspective,
so this is a crucial key, right?

418
00:22:32,685 --> 00:22:34,875
So we have seen IAC blocking it.

419
00:22:35,355 --> 00:22:39,015
We have seen if IAC is not blocking
it, at least the proactive security

420
00:22:39,015 --> 00:22:40,215
blocks it, the cloud native.

421
00:22:40,530 --> 00:22:43,980
The third thing even that does not
go through, you have your reactor

422
00:22:43,980 --> 00:22:45,330
way of, basically correcting it.

423
00:22:45,630 --> 00:22:47,490
Now the last part is
compliance monitoring, right?

424
00:22:47,700 --> 00:22:49,200
So how do you tell a story?

425
00:22:49,200 --> 00:22:53,850
For example, if you want to, are having
an app and you sometimes what's, you

426
00:22:53,850 --> 00:22:55,545
basically gonna be more, should basically.

427
00:22:56,275 --> 00:23:00,565
Benchmark that app with a specific
compliance standard, or you have

428
00:23:00,565 --> 00:23:03,235
an industry wide standard that
you're complying with, how do

429
00:23:03,235 --> 00:23:05,035
you check information about it?

430
00:23:05,035 --> 00:23:10,185
So this particular compliance monitoring
portion of the cloud tool basically will

431
00:23:10,185 --> 00:23:12,975
help you to basically create policies.

432
00:23:13,860 --> 00:23:16,680
Tailored for monitoring
and also would help you to

433
00:23:16,680 --> 00:23:19,350
prioritize which risks are high.

434
00:23:19,350 --> 00:23:24,000
For example, if you're trying to remediate
any of these, misconfigurations gonna give

435
00:23:24,000 --> 00:23:27,930
you information about what are the things
that you need to prioritize first based

436
00:23:27,930 --> 00:23:32,190
on the risk, or basically it's also gonna
help you with anomaly detection, right?

437
00:23:32,190 --> 00:23:36,150
For example, you can have some of these
things turned on where it's easier.

438
00:23:36,540 --> 00:23:39,150
Some of these tools have visibility
into network traffic and things

439
00:23:39,150 --> 00:23:43,020
like those, It's gonna help you to
paint a holistic story around the

440
00:23:43,020 --> 00:23:46,740
risk when you're trying to go and
chase and fix some of these things.

441
00:23:47,430 --> 00:23:52,620
So again, all of these tools, majority
one, have certain kind of AI capabilities,

442
00:23:52,680 --> 00:23:57,470
which will help you to identify if
there is an act of, threat going on.

443
00:23:57,520 --> 00:24:00,730
some of these things are itegrated
into IAM and those kind of

444
00:24:00,730 --> 00:24:05,680
things where it sees a behavioral
analysis of a specific entity.

445
00:24:06,235 --> 00:24:12,295
If it's not something, it's deviating from
certain, like baseline, it automatically

446
00:24:12,295 --> 00:24:16,945
triggers a incident response,
incident to go ahead and investigate.

447
00:24:16,945 --> 00:24:20,245
So some of these AI driven insights
are really gaining popularity,

448
00:24:20,795 --> 00:24:22,205
with the tools out there.

449
00:24:22,595 --> 00:24:26,255
So all this information, if you would
like to get information about CSPM, I

450
00:24:26,255 --> 00:24:30,270
would highly suggest you to look into
the sale, the Gartner, which basically.

451
00:24:30,680 --> 00:24:33,350
Checks at all the four different
coordinates to check out which

452
00:24:33,350 --> 00:24:35,390
one is leading and all of such.

453
00:24:36,170 --> 00:24:40,010
So again, so when you do talking
about how do you implement it, right?

454
00:24:40,010 --> 00:24:43,560
So the first step really is to,
think about your approach, right?

455
00:24:43,590 --> 00:24:46,200
You need to start with
discovery assessment.

456
00:24:46,200 --> 00:24:50,370
So you need to understand what
are the current cloud assets

457
00:24:50,370 --> 00:24:53,610
you currently have, and if the
tool currently supports all the.

458
00:24:53,635 --> 00:24:56,785
For cloud all your
requirements too, right?

459
00:24:56,785 --> 00:25:00,015
For example, you have Alibaba
or any of those clouds, right?

460
00:25:00,225 --> 00:25:03,195
So check for any of the tools which
support those kind of environments

461
00:25:03,195 --> 00:25:07,265
too, rather than just like going with
the traditional, the widely used ones.

462
00:25:07,475 --> 00:25:11,105
And the same time, the policy needs
to be clearly defined from security

463
00:25:11,105 --> 00:25:15,715
perspective, which basically says
okay, what are the benchmarks or

464
00:25:15,745 --> 00:25:17,365
what are the things that you'll have?

465
00:25:17,710 --> 00:25:19,300
To comply with no matter what.

466
00:25:19,720 --> 00:25:25,200
And what are some of the things that
you are willing to do it, but you are

467
00:25:25,700 --> 00:25:27,680
having some of the business requirements?

468
00:25:28,010 --> 00:25:31,430
In a way, like you should be
deviating slightly from a policy

469
00:25:31,430 --> 00:25:33,860
as an exception, and still you
should still be able to do it.

470
00:25:34,250 --> 00:25:38,270
So again, the tool implementation comes
with different kind of strategies.

471
00:25:38,270 --> 00:25:41,750
you need to ensure like proper
rpac is implemented and proper

472
00:25:41,750 --> 00:25:44,810
kind of controls are in place
and you need to have automated.

473
00:25:44,870 --> 00:25:49,260
Or, automation also integrated with CSPM,
the CI ICD pipelines and all of those.

474
00:25:49,260 --> 00:25:52,860
So currently we have different kind of
type terminologies and means for it.

475
00:25:52,860 --> 00:25:55,320
C-C-S-P-M is one, CMAP is one.

476
00:25:55,590 --> 00:25:58,470
So please do your research, when
you're picking of any of these

477
00:25:58,470 --> 00:26:02,690
tools, because majority of the tools
provide good kind of coverage for

478
00:26:02,690 --> 00:26:04,340
some of these integrations out there.

479
00:26:04,400 --> 00:26:08,360
So again, continuous optimization
is a core for any of this platform

480
00:26:08,360 --> 00:26:10,250
because cloud providers keep.

481
00:26:10,670 --> 00:26:15,230
Keep on changing, updating the
services as they keep on updating it.

482
00:26:15,290 --> 00:26:19,310
It's, again, something that we'll have to
refine policies based on either updated

483
00:26:19,310 --> 00:26:24,435
security settings or sometimes, if you
don't update it, it may lead to a failure,

484
00:26:24,885 --> 00:26:26,925
which you would definitely want to avoid.

485
00:26:26,925 --> 00:26:29,385
For example, if you're trying to,
if someone's trying to provision a

486
00:26:29,385 --> 00:26:33,555
service and a specific category is not
supported, but your policy defines it.

487
00:26:33,940 --> 00:26:35,830
And that is gonna be a block.

488
00:26:36,330 --> 00:26:39,570
So again, exception management
key for everything, right?

489
00:26:39,720 --> 00:26:42,810
So you will be having exceptions
that you'll have to manage.

490
00:26:42,810 --> 00:26:46,830
Either it's a business trip and exception
where either you don't have the capability

491
00:26:46,830 --> 00:26:51,500
supported today to ensure like it's
meeting the security requirement, or you

492
00:26:51,500 --> 00:26:53,240
are willing to accept the risk, right?

493
00:26:53,480 --> 00:26:56,870
Even in these two scenarios, those
exceptions should be monitored.

494
00:26:57,080 --> 00:27:00,680
and should be approved by the
business and the application owner,

495
00:27:00,990 --> 00:27:02,790
in coordination with security, right?

496
00:27:02,820 --> 00:27:06,420
So we need to have a documented
approval pattern for it, and once we

497
00:27:06,420 --> 00:27:11,010
have it, you will have to consistently
apply across all your tools, right?

498
00:27:11,310 --> 00:27:12,060
Beginning with IAC.

499
00:27:13,040 --> 00:27:14,390
do like proactive security.

500
00:27:14,390 --> 00:27:16,430
Reactive security and monitoring.

501
00:27:16,430 --> 00:27:20,720
So you need to have all of those
things clearly defined and clearly

502
00:27:20,780 --> 00:27:22,850
applied across all the platforms.

503
00:27:23,540 --> 00:27:27,830
key takeaways here are like, shift
left is a key as what we have seen

504
00:27:28,100 --> 00:27:32,890
that really helps to prevent a lot of
sprawl in the cloud and, leverage cloud

505
00:27:32,890 --> 00:27:36,010
native controls and embrace automation.

506
00:27:36,385 --> 00:27:40,975
And adopt CSPM with AI Insights,
which will help you to drive

507
00:27:40,975 --> 00:27:44,815
some of these conversations a
lot easier with your customers.

508
00:27:44,905 --> 00:27:49,810
So in today's topic, we did a deep,
we did a deep dive into shift left.

509
00:27:50,180 --> 00:27:53,450
in the future topic, we are
gonna be doing a deep dive into.

510
00:27:54,080 --> 00:27:57,830
Some of the core native security controls
where we are gonna be doing a demo of it.

511
00:27:57,890 --> 00:27:59,060
So this is a pattern.

512
00:27:59,450 --> 00:28:02,990
So at some point of time you're gonna
be doing a part two where we are

513
00:28:02,990 --> 00:28:06,260
gonna be covering topics about cloud
native security control, deep dive.

514
00:28:06,830 --> 00:28:10,400
how do you embrace automation and
how do you basically look into

515
00:28:10,400 --> 00:28:12,110
the AI driven security insights?

516
00:28:12,260 --> 00:28:14,330
So this is what we have for today.

517
00:28:14,460 --> 00:28:18,050
thank you very much for joining me
in and if you have any questions,

518
00:28:18,050 --> 00:28:19,340
please reach out to me on LinkedIn.

519
00:28:19,880 --> 00:28:20,900
Have a good conference.

520
00:28:20,930 --> 00:28:21,230
Thank you.

