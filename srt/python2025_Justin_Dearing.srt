1
00:00:00,140 --> 00:00:01,090
Hi, I'm Justin Deering.

2
00:00:01,090 --> 00:00:04,650
Welcome to my talk on setting
up Docker on a Windows desktop,

3
00:00:04,750 --> 00:00:08,859
without a, without Docker desktop,
and without a Docker license.

4
00:00:09,130 --> 00:00:13,890
So basically, the problem here, in many
situations, if you are a corporation

5
00:00:13,890 --> 00:00:16,870
of a certain size, I believe it,
certain money or certain number of

6
00:00:16,870 --> 00:00:20,670
employees, you cannot, use Docker
desktop without paying for a license.

7
00:00:20,740 --> 00:00:24,530
Now, my company, my employer, Nudesic,
does happen to provide us with Docker

8
00:00:24,530 --> 00:00:28,539
licenses, but we are also consultants,
and sometimes we get, sent off and

9
00:00:28,539 --> 00:00:32,789
have to use a laptop of one of our
clients, or a virtual desktop of one

10
00:00:32,789 --> 00:00:36,069
of our clients, and they don't have
Docker licenses on their machines.

11
00:00:36,469 --> 00:00:38,510
so anyway, we're going to go
through the setup over here.

12
00:00:38,510 --> 00:00:41,430
just some prerequisites, you want
to have a Windows machine, you want

13
00:00:42,150 --> 00:00:45,970
You need to have WSL set up on this
laptop so you can do Linux containers.

14
00:00:45,970 --> 00:00:47,350
You need to have Hyper V support.

15
00:00:47,750 --> 00:00:50,220
and container support, as
well, set up on the lab.

16
00:00:50,220 --> 00:00:51,960
So you need those features
set up as part of Windows.

17
00:00:51,960 --> 00:00:53,799
If you're not a local admin,
you need those features set up.

18
00:00:53,799 --> 00:00:56,480
Containers, local containers,
and you need WSL set up.

19
00:00:56,850 --> 00:01:00,190
once, an unprivileged user can install
all the WSL distributions they want.

20
00:01:00,600 --> 00:01:02,650
so let's start off with
the basic situation here.

21
00:01:02,660 --> 00:01:04,060
Okay, I'm a Python developer.

22
00:01:04,300 --> 00:01:05,250
I'm in Visual Studio Code.

23
00:01:05,250 --> 00:01:06,760
I have this blank
project over here, right?

24
00:01:06,760 --> 00:01:08,670
And I want to start developing
Python stuff, but I want to do

25
00:01:08,670 --> 00:01:10,850
it inside a container, right?

26
00:01:11,285 --> 00:01:14,195
honestly, the easiest way to do
that is, make sure you have the

27
00:01:14,195 --> 00:01:15,415
DevContainer feature installed.

28
00:01:15,995 --> 00:01:21,205
Okay, so install this feature and
just go and build a DevContainer.

29
00:01:21,705 --> 00:01:24,575
Okay, so we're going to say 3, hold on,

30
00:01:25,075 --> 00:01:27,715
let's say zsh, we want it
in, let's say we want zsh.

31
00:01:27,715 --> 00:01:29,225
Keep defaults.

32
00:01:29,725 --> 00:01:30,754
I depend a lot.

33
00:01:31,735 --> 00:01:34,895
Okay, and what this is going to do is
this is going to create the DevContainer.

34
00:01:34,905 --> 00:01:35,405
Now, here's the thing.

35
00:01:35,415 --> 00:01:37,425
If you don't have Docker installed
the first time, and actually that's

36
00:01:37,505 --> 00:01:40,515
how I got Docker installed in this
is going to set up your default.

37
00:01:41,300 --> 00:01:45,550
WSL distribution, and if it, if you don't
have a WSL distribution set up, it's

38
00:01:45,550 --> 00:01:48,830
going to sit there and say, hey, do you
want to install WSL, WSL distribution,

39
00:01:48,830 --> 00:01:53,590
and it will install Ubuntu, and it will
install Docker in Ubuntu, and, basically

40
00:01:53,590 --> 00:01:57,310
your Visual Studio code will be set up
to, to use those for dev containers.

41
00:01:57,560 --> 00:01:59,800
And if you ever want to access those
dev containers over here, you can just

42
00:01:59,800 --> 00:02:03,020
go, here, and we can go into Ubuntu.

43
00:02:03,730 --> 00:02:04,080
Okay,

44
00:02:04,580 --> 00:02:07,230
okay And boom, there's our
there are the containers.

45
00:02:07,230 --> 00:02:09,450
I have some wordpress containers
running with how I do this, right?

46
00:02:09,920 --> 00:02:11,210
so it's going to go inside of here

47
00:02:11,710 --> 00:02:14,320
Anyway, like I said when you did
this the first time you did this

48
00:02:14,320 --> 00:02:16,160
and restarted the container it
would just set that up for you.

49
00:02:16,160 --> 00:02:18,710
Okay, so that's your first That's
your first setup over here.

50
00:02:18,740 --> 00:02:19,520
just very simple.

51
00:02:19,780 --> 00:02:24,040
Just go in visual studio code Create a
dev container any dev container you want.

52
00:02:24,200 --> 00:02:28,870
It will set up linux for you now You
cannot access this You Without doing any

53
00:02:28,870 --> 00:02:33,090
other, without doing a bunch of other
socket files and configuration, you're not

54
00:02:33,090 --> 00:02:37,220
going to access this docker from outside
of W, outside of your WSL distribution.

55
00:02:37,680 --> 00:02:38,700
but this is, good enough.

56
00:02:38,750 --> 00:02:41,200
if you want to play with containers,
just go into Ubuntu and just do

57
00:02:41,210 --> 00:02:42,600
it that way, plain and simple.

58
00:02:42,610 --> 00:02:44,450
that's the, that's the
best way to do this, right?

59
00:02:44,870 --> 00:02:46,010
Now what about Windows containers?

60
00:02:46,070 --> 00:02:47,680
Now I have it set up,
actually, on my machine.

61
00:02:48,180 --> 00:02:51,910
As you can see, I have it set up
for Windows containers, and my

62
00:02:51,910 --> 00:02:53,630
Docker over there is over there.

63
00:02:53,840 --> 00:02:56,970
you can install the, what's called
Docker Community Edition and it's

64
00:02:56,980 --> 00:02:58,495
free, and it's available for free.

65
00:02:59,015 --> 00:03:02,765
On the Docker website, they hide it a
little bit, but if you just Google or

66
00:03:02,925 --> 00:03:06,685
Bing or whatever, use your favorite search
engine, look for Docker Community Edition,

67
00:03:06,895 --> 00:03:10,735
you can find your way to get a zip file
that has just two binaries, docker.

68
00:03:10,735 --> 00:03:11,495
exe and dockerd.

69
00:03:11,865 --> 00:03:12,505
exe.

70
00:03:12,545 --> 00:03:13,715
Now, how do we install this, right?

71
00:03:14,015 --> 00:03:15,985
we just unzip the file over here,
and I'm going to show you how to

72
00:03:15,985 --> 00:03:17,035
do that from the command line.

73
00:03:17,295 --> 00:03:19,735
And I'm not even going to, actually,
I'm going to show you the website.

74
00:03:19,745 --> 00:03:22,225
So you end up on that, you're going to
end up, if you search for Docker Community

75
00:03:22,225 --> 00:03:23,395
Edition, you'll end up over here.

76
00:03:24,080 --> 00:03:27,340
and you'll end up going to this link,
you'll go download the last, you'll go all

77
00:03:27,480 --> 00:03:30,800
the way to the bottom, you'll download the
latest zip file of the day, now it's 27.

78
00:03:31,050 --> 00:03:34,090
5. 1, and then you can run
these PowerShell commands.

79
00:03:34,370 --> 00:03:35,180
I'm gonna do it old school.

80
00:03:35,180 --> 00:03:38,210
I'm gonna do it, I'm gonna do it,
from, the command shell, okay?

81
00:03:39,000 --> 00:03:42,760
because you can unzip files in the
command shell because Windows ships with

82
00:03:42,850 --> 00:03:49,585
two Unix utilities, curl and tar, but
it's not Linux tar, it's BSD tar, which

83
00:03:49,595 --> 00:03:52,625
for whatever reason can unzip a zip
file, which is why they went with that.

84
00:03:52,945 --> 00:03:54,085
it's BSD tar.

85
00:03:54,155 --> 00:03:54,535
Anyway,

86
00:03:55,035 --> 00:03:57,845
so xvf, I already downloaded it, so okay.

87
00:03:58,345 --> 00:03:59,755
And we're gonna, oh,

88
00:04:00,255 --> 00:04:01,385
third time recording this demo.

89
00:04:01,885 --> 00:04:03,055
Okay, now,

90
00:04:03,555 --> 00:04:04,725
and then you can go add that to the path.

91
00:04:04,735 --> 00:04:07,655
So to add it to the path, we already have
it set up in the path, as you can see.

92
00:04:08,045 --> 00:04:09,615
But you can just go in the registry.

93
00:04:10,135 --> 00:04:11,895
You can do this via PowerShell,
you can do this via reg.

94
00:04:11,895 --> 00:04:15,085
exe, but I'm just going to show you
the registry version, and you want

95
00:04:15,085 --> 00:04:19,425
to go to, You can either go to HKEY
current user slash environment, which

96
00:04:19,425 --> 00:04:22,315
is the path just for your user, or if
you want to add it to all the users.

97
00:04:22,725 --> 00:04:26,755
HKEY current, HKEY local machines,
current control set, control

98
00:04:26,755 --> 00:04:28,745
session management environment,
and it has all these variables,

99
00:04:28,745 --> 00:04:30,005
including this one path over here.

100
00:04:30,435 --> 00:04:33,755
And there's a million ways, and you'll
see SQL and Docker in the path over there.

101
00:04:33,965 --> 00:04:35,745
And that's the way to permanently
add it to the path, right?

102
00:04:36,575 --> 00:04:38,924
and it's in the path, right?

103
00:04:38,954 --> 00:04:44,344
So then we're going to go C colon
slash docker three slash docker D.

104
00:04:44,844 --> 00:04:46,394
Oh, it's actually going to
make that folder for me.

105
00:04:46,894 --> 00:04:48,654
Okay, so it actually made
that in a separate folder.

106
00:04:48,794 --> 00:04:49,164
Anyway.

107
00:04:49,664 --> 00:04:54,044
and you can say dash register service,
that will register the service.

108
00:04:54,104 --> 00:04:56,094
And you can see this
docker runs the service.

109
00:04:56,594 --> 00:04:57,814
Okay, it's running as a service.

110
00:04:57,814 --> 00:05:00,914
you can go, in the service list
over there, and this is a service

111
00:05:00,914 --> 00:05:04,044
you can start or stop just like
IIS or any other Windows service.

112
00:05:04,424 --> 00:05:08,634
you can also just run Docker D by
itself, and where the configuration

113
00:05:08,644 --> 00:05:11,414
for this store, the configuration for
this is stored in, and we'll actually

114
00:05:11,914 --> 00:05:15,454
program data slash docker, and
this is, you need to be local

115
00:05:15,454 --> 00:05:16,864
admin to get these files over here.

116
00:05:17,364 --> 00:05:20,384
And so just, so basically, to install
this, you're going to definitely need

117
00:05:20,384 --> 00:05:23,754
local admin, To install the docker,
but if you want to just, if you just

118
00:05:23,754 --> 00:05:27,234
want, if you have WSL in your system
already, you can install docker on your

119
00:05:27,234 --> 00:05:29,444
WSL system for your Linux containers.

120
00:05:30,354 --> 00:05:32,884
And we need UAC activation

121
00:05:33,384 --> 00:05:34,214
to activate this.

122
00:05:34,714 --> 00:05:36,134
And we're going to show you how to,
basically we're going to show you

123
00:05:36,134 --> 00:05:37,184
how to configure this from here.

124
00:05:37,184 --> 00:05:40,074
So this is a few configuration
options which are rather

125
00:05:40,074 --> 00:05:41,264
important for Windows containers.

126
00:05:41,764 --> 00:05:42,424
Config daemon.

127
00:05:42,424 --> 00:05:43,234
json, right?

128
00:05:43,734 --> 00:05:44,064
Okay.

129
00:05:44,524 --> 00:05:46,644
Now the important thing is here you
make a group called dockerusers.

130
00:05:46,694 --> 00:05:50,214
Okay, now this group called dockerusers
are the users of the, are the users.

131
00:05:50,214 --> 00:05:53,574
So basically if you have UACs set up in
your machine like I do, so even an admin

132
00:05:53,584 --> 00:05:56,734
user, doesn't by default have privileged
access, they can't run the docker command.

133
00:05:57,024 --> 00:05:57,944
So you have to sit there.

134
00:05:58,204 --> 00:06:02,534
And go and make this file and
add this to the docker theaters.

135
00:06:02,764 --> 00:06:05,404
there's another setting you might
want to set in here that you might

136
00:06:05,404 --> 00:06:06,944
want to look into if you want to run.

137
00:06:07,444 --> 00:06:13,424
2019 Windows containers on a 2025,
on server 2025, or basically like

138
00:06:13,424 --> 00:06:16,794
Windows, Windows 11 Insider Edition,
basically, to get to that version.

139
00:06:17,044 --> 00:06:19,354
you're going to have to set
up, Hyper V isolation as

140
00:06:19,354 --> 00:06:20,484
opposed to process activation.

141
00:06:20,484 --> 00:06:22,604
There's another setting you want to set
in here, but there's a better setting.

142
00:06:22,654 --> 00:06:24,244
The main setting you're going to want
to set in here, you're going to want to

143
00:06:24,244 --> 00:06:25,704
set a group called Docker Users, right?

144
00:06:26,024 --> 00:06:28,574
And then you're going to want to
type, local group docker users add.

145
00:06:29,564 --> 00:06:32,714
Over here to add the user, it's
going to say at the very end, user.

146
00:06:33,214 --> 00:06:35,044
And then you're gonna, so
that's gonna make the group.

147
00:06:35,544 --> 00:06:37,854
And that can be any group name you want,
but I want it to tag with convention.

148
00:06:38,214 --> 00:06:40,914
and you can say group name, and
then you can say, and then you

149
00:06:40,914 --> 00:06:43,024
can say, local group over there.

150
00:06:43,524 --> 00:06:44,644
Okay, and that's gonna sit there.

151
00:06:44,884 --> 00:06:47,974
And obviously you have to run that at the
admin over here, so you're gonna have to,

152
00:06:48,474 --> 00:06:50,594
you'll have to go do that command
over here, By the way, that weird

153
00:06:50,594 --> 00:06:54,014
thing I'm pasting on the keyboard is
actually, OBS Studio, how to install OBS

154
00:06:54,024 --> 00:06:57,054
Studio, wouldn't get it, the Microsoft
Store thing, it's not a password.

155
00:06:57,154 --> 00:06:59,664
don't worry, not sharing
my password over there.

156
00:07:00,164 --> 00:07:04,004
Okay, no such user group, some user,
so anyway, you type that command,

157
00:07:04,004 --> 00:07:07,874
you set that up, and then, you would
register that service, and then you

158
00:07:07,874 --> 00:07:10,314
would type, Ultimately, after you
register that service, you would

159
00:07:10,524 --> 00:07:13,044
type start service to start that up,
and then you have Docker running.

160
00:07:13,344 --> 00:07:16,204
So that's how you get in Windows, so
that's how you get the Docker daemon, so

161
00:07:16,204 --> 00:07:20,634
you're, the Docker daemon on Windows, to
do Windows containers, the Docker daemon

162
00:07:20,664 --> 00:07:25,214
on, Linux via WSL, those is, and those are
the two things you're going to want to do.

163
00:07:25,244 --> 00:07:27,364
You have some other options here
I'm going to show you, and one

164
00:07:27,364 --> 00:07:29,594
of them is called Podman, okay?

165
00:07:30,284 --> 00:07:30,694
And

166
00:07:31,194 --> 00:07:33,164
I have this set up, It's not running now.

167
00:07:33,164 --> 00:07:34,624
It's going to tell me the
Podman is not running.

168
00:07:35,124 --> 00:07:38,374
But basically, to install Podman,
and once again, you can go use Winget

169
00:07:38,374 --> 00:07:42,394
or something to install this more
easily, but you can go install Podman.

170
00:07:42,394 --> 00:07:45,184
So Podman is a open source
re implementation of Docker.

171
00:07:45,184 --> 00:07:47,074
It's a daemon less re
implementation of Docker.

172
00:07:47,354 --> 00:07:48,944
It is sponsored by IBM.

173
00:07:48,964 --> 00:07:50,964
I'm not part of the
group that sponsored it.

174
00:07:50,974 --> 00:07:54,694
I'm part of a new death hit company
that, is owned by IBM, but I don't

175
00:07:54,704 --> 00:07:56,284
know the Podman people at all.

176
00:07:56,909 --> 00:08:00,799
or anything like that, we tend not to, my,
my group tends not to deal with Podman,

177
00:08:00,809 --> 00:08:04,479
but I think it's a perfectly fine tool
to use, but anyway, Podman is if you live

178
00:08:04,479 --> 00:08:07,914
in Red Hat, that's what, is your guided
towards, using, Podman is daemonless.

179
00:08:08,135 --> 00:08:09,945
Podman does not support
Windows containers.

180
00:08:10,035 --> 00:08:12,395
Podman only supports Linux containers.

181
00:08:12,885 --> 00:08:15,795
Okay, but you can go
install, this UI here.

182
00:08:15,795 --> 00:08:17,695
And, you can also install Podman on Linux.

183
00:08:17,745 --> 00:08:18,615
it seems to work just fine.

184
00:08:18,925 --> 00:08:22,735
My main, caution against using Podman
is, if you want to use dev containers

185
00:08:22,735 --> 00:08:25,385
and you want to use Visual Studio with
dev containers, and you're using Podman,

186
00:08:25,425 --> 00:08:26,575
you're going to have some trouble.

187
00:08:26,575 --> 00:08:30,725
You can go and sit there and, rename the
Podman executable to Docker and then, it

188
00:08:30,725 --> 00:08:32,274
should mostly work except when it doesn't.

189
00:08:32,275 --> 00:08:36,925
But, you're probably better off just
installing docker personally if you

190
00:08:36,955 --> 00:08:40,345
if your main thing is I want to run
dev containers and, do that, right?

191
00:08:40,395 --> 00:08:44,354
but anyway, Podman does give you a,
desktop edition, like a GUI version

192
00:08:44,354 --> 00:08:45,934
as well as CLI version over here.

193
00:08:46,344 --> 00:08:47,604
so anyway, we're going to do Podman.

194
00:08:48,104 --> 00:08:49,594
Let's see if we can do
Podman machine start.

195
00:08:50,094 --> 00:08:54,304
and just Podman will run inside of the,
there's a concept, Podman has a concept

196
00:08:54,304 --> 00:08:57,284
of running these containers rootless,
which is, gives you some more security

197
00:08:57,294 --> 00:08:58,664
and it generally works just fine.

198
00:08:58,854 --> 00:09:01,914
And by the way, for running containers,
they work, I run a Minecraft server.

199
00:09:02,704 --> 00:09:07,094
on Podman, and it works just fine,
and it's as close to production, I've

200
00:09:07,094 --> 00:09:10,454
never used, I've never used Podman
for a work related thing, but it

201
00:09:10,944 --> 00:09:13,744
runs my kid's Minecraft server, so
that's pretty close to production.

202
00:09:14,014 --> 00:09:18,054
Anyway, you go set that up, and you do,
and the Podman command is completely

203
00:09:18,054 --> 00:09:22,454
compatible with the Docker command,
so I can go to, just to show you,

204
00:09:22,954 --> 00:09:25,894
Let's go, pull Azure right
down here, or, Podman, and

205
00:09:26,394 --> 00:09:27,424
it's going to pull that down,

206
00:09:27,924 --> 00:09:28,694
right, so here we go.

207
00:09:28,744 --> 00:09:30,054
we've got, that works just fine.

208
00:09:30,064 --> 00:09:30,844
So that's another way to do it.

209
00:09:30,844 --> 00:09:34,314
The final way I'm going to show you,
actually the second final way, is

210
00:09:34,334 --> 00:09:35,684
there is Rancher Desktop by SUSE.

211
00:09:36,074 --> 00:09:39,324
this is a GUI that, that, that wraps
around, some other options over here.

212
00:09:39,564 --> 00:09:43,644
Rancher is a, basically, so Rancher is
a nice, another alternative to using the

213
00:09:43,654 --> 00:09:45,484
Podman Desktop if you want to try this.

214
00:09:45,754 --> 00:09:47,624
I've used this before, it works just fine.

215
00:09:47,664 --> 00:09:48,224
I'm not going to.

216
00:09:48,509 --> 00:09:50,969
Demo it, because you're just
gonna install the Gooeys.

217
00:09:51,299 --> 00:09:55,399
this gives you, some more options with
Kubernetes, and nerd control that, which

218
00:09:55,399 --> 00:09:56,719
finally brings us to our final option.

219
00:09:56,719 --> 00:10:01,379
So if you want another, open source,
container, solution, you can use

220
00:10:01,379 --> 00:10:02,579
container D and Nerd Control.

221
00:10:02,579 --> 00:10:07,174
ner Container D is a container,
Damon and Nerd Control is a docker.

222
00:10:08,119 --> 00:10:11,549
Reimplementation of the docker
CLI, basically, to do that, right?

223
00:10:11,549 --> 00:10:12,829
So you can install these options.

224
00:10:12,859 --> 00:10:14,519
there's some support
for windows containers.

225
00:10:14,889 --> 00:10:17,929
Not the most, the Windows container
support is not the most mature here.

226
00:10:18,129 --> 00:10:21,059
I don't see much of an advantage of
doing this, locally in your dev machine,

227
00:10:21,089 --> 00:10:23,909
unless you're already dealing with Neural
Control and Container D, and then that

228
00:10:24,019 --> 00:10:25,869
part of your whole Kubernetes setup.

229
00:10:25,899 --> 00:10:27,959
If that's the case, then
totally go for this.

230
00:10:27,989 --> 00:10:30,129
Ben, you probably know more
about this, than I can show

231
00:10:30,129 --> 00:10:31,299
you inside of Lightning Talk.

232
00:10:31,599 --> 00:10:32,949
But those are your options over here.

233
00:10:32,959 --> 00:10:35,669
you can go here and you can
download, This, this has some,

234
00:10:35,679 --> 00:10:38,369
certainly some advantages to
doing this on Windows Server.

235
00:10:38,369 --> 00:10:40,539
Maybe if you want to go with,
Container D inert controls

236
00:10:40,539 --> 00:10:41,269
as opposed to Docker server.

237
00:10:41,299 --> 00:10:42,130
but anyway, that's about it.

238
00:10:42,600 --> 00:10:43,699
thanks for coming to my talk.

239
00:10:43,730 --> 00:10:44,420
Thanks for watching.

240
00:10:44,480 --> 00:10:46,989
And enjoy the rest of the, conference.

241
00:10:46,989 --> 00:10:48,439
Check out some of the many other talks.

