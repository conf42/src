1
00:00:00,500 --> 00:00:02,000
Hi, my name is Mark Zu.

2
00:00:02,500 --> 00:00:09,100
I'm a lead infrastructure engineer at
Bottas Labs, an L two Bitcoin startup.

3
00:00:09,790 --> 00:00:15,340
I'm here today to speak about seeing
beyond signatures and how we set up

4
00:00:15,400 --> 00:00:17,890
a federated motorcycle of mobility.

5
00:00:18,389 --> 00:00:21,644
So the first question
is, what are multi six?

6
00:00:22,364 --> 00:00:27,874
A popular saying by Bitcoin MAL would
be your keys, not your keys, your

7
00:00:27,874 --> 00:00:31,144
Bitcoin, not your Keys, not your Bitcoin.

8
00:00:31,924 --> 00:00:35,344
We ask ourselves, what is the
true purpose of a multisig?

9
00:00:35,844 --> 00:00:39,925
The purpose of a multisig is spread out
your tax surface by requiring things

10
00:00:39,925 --> 00:00:44,724
like visits between multiple locations
to sign a transaction, possibly multiple

11
00:00:44,724 --> 00:00:46,195
states, multiple hardware vendors.

12
00:00:46,915 --> 00:00:51,385
Deployed across different
validator sets across the globe.

13
00:00:52,015 --> 00:00:54,144
That is what multis seeds are expressed.

14
00:00:54,194 --> 00:00:59,494
The attack surface of that enhances
the security of users funds, basically,

15
00:00:59,584 --> 00:01:00,875
that is what multis seeds are.

16
00:01:01,375 --> 00:01:05,485
The problem here is the
invincible complexity when

17
00:01:05,485 --> 00:01:07,285
signatures are needed from 12.

18
00:01:07,315 --> 00:01:11,145
F. Once seven signatures are needed
from 12 validators across four

19
00:01:11,145 --> 00:01:15,675
continents and only three show up, how
do you even begin to monitor for that?

20
00:01:15,675 --> 00:01:16,935
How do you debug that?

21
00:01:17,025 --> 00:01:20,295
Or do you actually need to know
what validators are online?

22
00:01:20,295 --> 00:01:22,245
Are they receiving the transaction?

23
00:01:22,455 --> 00:01:23,895
Is the man filled up?

24
00:01:23,895 --> 00:01:25,215
Are you under attack?

25
00:01:25,715 --> 00:01:27,485
These are the questions you ask yourself.

26
00:01:27,485 --> 00:01:29,195
Is there a network of prob problem?

27
00:01:29,244 --> 00:01:31,045
Is there a problem within the protocol?

28
00:01:31,285 --> 00:01:34,104
And you do not know the answers to
this question if you do not have

29
00:01:34,104 --> 00:01:36,714
enhanced monitoring and observability.

30
00:01:36,714 --> 00:01:42,794
The multisig mage just details what
basically happens with within the mo.

31
00:01:42,854 --> 00:01:46,544
It's three out of three mode sleep
between Alex, Bob, and Charlie.

32
00:01:46,800 --> 00:01:48,450
To get the transaction signed.

33
00:01:48,750 --> 00:01:52,350
We see the transaction being
initialized, the hash being generated,

34
00:01:52,620 --> 00:01:56,460
the signature collection process, the
signature aggregation process, and the

35
00:01:56,460 --> 00:02:01,020
signature verification process before
the transaction is being executed.

36
00:02:01,350 --> 00:02:04,799
That's what is actually happening
and for all of this to happen, we

37
00:02:04,799 --> 00:02:06,210
need our operators to be active.

38
00:02:06,210 --> 00:02:10,650
We need unload to be healthy
for these to actually, so we can

39
00:02:10,650 --> 00:02:13,050
actually have an IMO League up time.

40
00:02:13,550 --> 00:02:14,930
What do we actually monitor for?

41
00:02:14,930 --> 00:02:18,950
Currently, we monitor for transactions
such as we monitor for signature

42
00:02:18,950 --> 00:02:20,750
accounts, wallet balances.

43
00:02:20,750 --> 00:02:22,550
What is the current
state of the hot wallet?

44
00:02:22,610 --> 00:02:24,470
What is the current
state of the core wallet?

45
00:02:24,860 --> 00:02:29,900
But the things that remain hidden
across multiple network and protocols,

46
00:02:30,140 --> 00:02:34,490
as have seen is we do not actually
know how we can monitor for the

47
00:02:34,490 --> 00:02:35,660
signature collection pattern.

48
00:02:36,160 --> 00:02:37,030
Who signs what and when.

49
00:02:37,315 --> 00:02:38,635
What node has been active?

50
00:02:38,665 --> 00:02:42,984
What node has signed the most blocks
and pushed for the most transaction?

51
00:02:42,984 --> 00:02:45,084
What is the network topology held?

52
00:02:45,325 --> 00:02:49,225
What is the cryptographic performance
and what bottlenecks currently exist

53
00:02:49,225 --> 00:02:51,204
in the proof generation process?

54
00:02:51,204 --> 00:02:54,445
These are things we need
to monitor for and observe.

55
00:02:54,505 --> 00:02:57,124
These are very key indicators here.

56
00:02:57,184 --> 00:03:00,269
We discussed the Anto
of Refrige signature.

57
00:03:00,480 --> 00:03:05,369
It just shows the two steps that dance
nobody sees because basically users just.

58
00:03:05,820 --> 00:03:10,320
They have the idea that, yes, my funds
are secured and protected, and yes,

59
00:03:10,320 --> 00:03:15,029
that's idea, but this just, those are
the technical implementation across

60
00:03:15,029 --> 00:03:16,619
different networks and protocols.

61
00:03:16,980 --> 00:03:24,299
We just have the 12 step down that entails
the verification process and transaction

62
00:03:24,629 --> 00:03:26,819
flow within a multi sleek operation.

63
00:03:27,319 --> 00:03:31,039
Now we ask ourselves a
question, why does observability

64
00:03:31,039 --> 00:03:33,199
matter in federated networks?

65
00:03:34,009 --> 00:03:37,879
We've, we have the issue of fragmented
systems across operators where node

66
00:03:37,879 --> 00:03:43,459
operators are, we have the ability to run
isolated node in different environments.

67
00:03:43,729 --> 00:03:48,829
That act of decentralization where
nodes are completely isolated.

68
00:03:49,309 --> 00:03:52,339
We have a, when operational
silence equals slow recovery time.

69
00:03:52,339 --> 00:03:56,239
If you do no monitor for
operational excellence and

70
00:03:56,239 --> 00:03:59,674
operational resilience, then you'll
definitely have slow recovery time.

71
00:03:59,704 --> 00:04:02,584
You would not be able to get
your network up and running.

72
00:04:02,929 --> 00:04:07,849
With failures that you do not track
caused by timeout or slow signers

73
00:04:08,269 --> 00:04:13,249
result in slow block production
as a result of block chain holds.

74
00:04:13,639 --> 00:04:15,289
These are things you need to observe for.

75
00:04:15,289 --> 00:04:18,589
These are things, this is why
of Ability matter because of

76
00:04:18,589 --> 00:04:19,909
the stability of the network.

77
00:04:20,299 --> 00:04:23,844
Essentially the true, a
true federated of ability.

78
00:04:24,469 --> 00:04:28,760
Would mean it operator maintains
independence while contributing

79
00:04:28,760 --> 00:04:30,289
to a shared availability layer.

80
00:04:30,620 --> 00:04:36,620
What U utility can we can be used
to enhance that shared availability

81
00:04:36,620 --> 00:04:40,189
layer where the goal is to ensure
real time insights, identifi

82
00:04:40,189 --> 00:04:44,200
bottlenecks, and increasing the
flexability without out sacrificing

83
00:04:44,200 --> 00:04:46,119
the true core of decentralization.

84
00:04:46,929 --> 00:04:48,640
We introduced Grafana Alloy.

85
00:04:49,420 --> 00:04:54,820
Here as the tool you being used,
tested, and proven as the documentation

86
00:04:54,820 --> 00:04:58,630
suggests, Grafana Alloy combines the
strength of leading collectors in one

87
00:04:58,630 --> 00:05:03,370
place, whether observing applications,
infrastructure, or boots, Grafana

88
00:05:03,400 --> 00:05:08,349
Alloy can collect it process and export
telemetry signals to skill and future

89
00:05:08,349 --> 00:05:10,240
proof your observability approach.

90
00:05:10,570 --> 00:05:15,219
This is picked up and referenced
directly from your application, be it

91
00:05:15,280 --> 00:05:17,800
profiling your applications or knowing.

92
00:05:18,300 --> 00:05:20,610
The telemetry flow
within the applications.

93
00:05:20,700 --> 00:05:23,130
Grafana Allo is the
tool for this and this.

94
00:05:23,400 --> 00:05:24,780
It's vendor friendly.

95
00:05:24,780 --> 00:05:27,080
It's it can be used as open source.

96
00:05:27,159 --> 00:05:29,140
It can be loaded as a side card.

97
00:05:29,199 --> 00:05:33,094
This is basically the approach
you would want to take in run when

98
00:05:33,094 --> 00:05:35,704
trying to get federated of ability.

99
00:05:36,064 --> 00:05:37,204
How can we utilize it?

100
00:05:37,444 --> 00:05:38,974
Grafana alloy with its features.

101
00:05:38,974 --> 00:05:42,454
Here we discuss the features of
Grafana Alloy, where it comes to

102
00:05:42,454 --> 00:05:44,194
centralized logging with low key.

103
00:05:45,020 --> 00:05:45,830
Metrics.

104
00:05:46,010 --> 00:05:50,840
Getting the metrics which permits
remote ability traces with open

105
00:05:50,840 --> 00:05:53,750
telemetry and also inbuilt profilers.

106
00:05:54,080 --> 00:05:59,870
So these show us deep visibility into
our systems and show the visibility into

107
00:05:59,870 --> 00:06:06,109
our networks and can be configured to
feed our specific use cases as we do

108
00:06:06,109 --> 00:06:10,550
not have control of these independent
and isolated operators Essentially.

109
00:06:11,104 --> 00:06:12,715
What is the deployment architecture?

110
00:06:12,744 --> 00:06:17,034
As I earlier said, as we do not
have control of these independent

111
00:06:17,034 --> 00:06:21,114
operators, each operator is allowed
to dare own our, with its own

112
00:06:21,114 --> 00:06:26,484
configuration, fine tuned to it, to its
infrastructure, whether it Kubernetes,

113
00:06:26,575 --> 00:06:29,005
dock bare metal or cloud native.

114
00:06:29,335 --> 00:06:33,999
The operator is fine tuned to run
their own particular configuration.

115
00:06:34,449 --> 00:06:36,249
We have centralized loss of ability.

116
00:06:36,640 --> 00:06:40,484
Despite the local confi, all
data flow shared are good, are

117
00:06:40,484 --> 00:06:42,520
shared, good shared endpoint.

118
00:06:42,820 --> 00:06:47,020
Basically, we have a centralized look
key endpoint for getting all of the, and

119
00:06:47,080 --> 00:06:51,640
aggregating all of the logs for Loki,
getting and aggregating all of the metrics

120
00:06:51,640 --> 00:06:53,799
for perimeters and also temp for tracing.

121
00:06:54,340 --> 00:06:59,289
We utilize security and autonomy
well in, we use to cognize access

122
00:06:59,289 --> 00:07:02,289
to the secure endpoint of getting
all of the logs and metrics.

123
00:07:02,439 --> 00:07:07,329
For or for the, for pure visibility
and autonomy into the system,

124
00:07:07,829 --> 00:07:09,809
what can you see and do From this?

125
00:07:09,809 --> 00:07:13,199
We are able to get live
operational insight from knowing

126
00:07:13,199 --> 00:07:14,879
who is the slower sign and.

127
00:07:15,379 --> 00:07:15,589
It.

128
00:07:15,679 --> 00:07:18,619
It's detecting the internal
life of each participant.

129
00:07:18,649 --> 00:07:23,929
Each mo, each operator in the multi end
Tories show how requests propagate that

130
00:07:23,929 --> 00:07:28,189
cross signer highlighting performance
and pointing out failures in real time.

131
00:07:28,249 --> 00:07:30,859
With this, we're able to monitor
for failures in real time with

132
00:07:31,489 --> 00:07:35,599
and fine tuning the rights alert
system as service level indicators.

133
00:07:36,439 --> 00:07:41,539
Before the problem, we had blind spots in
signature collection hours of debugging.

134
00:07:41,809 --> 00:07:46,909
Field transaction, trying to get
individual logs sent over various form.

135
00:07:47,089 --> 00:07:51,289
The logs and are unstructured network
issues are discovered too late and

136
00:07:51,289 --> 00:07:56,449
malicious notes are allowed to participate
in the network while being unchecked.

137
00:07:56,779 --> 00:07:58,699
But with this we have full visibility.

138
00:07:58,699 --> 00:08:00,409
We have real time insights into the.

139
00:08:00,904 --> 00:08:05,324
Into the system we have, we are now
proactive with our issues detection.

140
00:08:05,564 --> 00:08:11,264
We ensure complete transaction life cycle
and we ensure security all of the network.

141
00:08:11,384 --> 00:08:11,864
Basically.

142
00:08:12,464 --> 00:08:17,234
Here we discuss the key benefits delivered
the operational excellence, security,

143
00:08:17,234 --> 00:08:18,944
trust, and the federated approach.

144
00:08:19,224 --> 00:08:24,974
We just highlight a few feature a few key
points on all of these key benefits of.

145
00:08:25,474 --> 00:08:30,544
Federated approach, monitoring and
getting pure visibility into your systems.

146
00:08:30,814 --> 00:08:36,145
Basically, I'll let us discuss with
questions and possible questions that

147
00:08:36,145 --> 00:08:40,285
can come up when setting up these, like
what are the, what are our external

148
00:08:40,285 --> 00:08:42,140
big validators operational pain points?

149
00:08:42,140 --> 00:08:43,460
What are their biggest pain points?

150
00:08:43,570 --> 00:08:46,765
What more monitoring gaps
do we have in our network?

151
00:08:46,825 --> 00:08:50,245
Because the net monitoring
gaps are network specific.

152
00:08:50,245 --> 00:08:53,575
How do we analyze the monitoring
gap within us, our federated

153
00:08:53,575 --> 00:08:57,475
network, and how can we customize
this open source approach?

154
00:08:58,045 --> 00:08:59,395
To our infrastructure.

155
00:08:59,995 --> 00:09:03,895
I'll end it here and I would leave
my email attached for any more

156
00:09:03,895 --> 00:09:07,765
questions you might have, and I'm
always happy to discuss this further.

157
00:09:07,825 --> 00:09:08,935
Thank you very much.

