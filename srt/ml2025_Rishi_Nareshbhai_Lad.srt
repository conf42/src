1
00:00:01,920 --> 00:00:02,700
Hello everyone.

2
00:00:03,030 --> 00:00:06,150
Welcome to my session
on today's presentation.

3
00:00:06,270 --> 00:00:10,710
I'm gonna be talking about API
architecture, and the goal of this

4
00:00:10,710 --> 00:00:15,420
presentation is to show you how API
driven integration architecture,

5
00:00:15,660 --> 00:00:18,030
help pharmaceutical operations.

6
00:00:18,750 --> 00:00:20,610
My name is ard.

7
00:00:21,180 --> 00:00:25,770
I have a nine years of experience
leading enterprise integration

8
00:00:25,770 --> 00:00:30,090
initiative, currently working as
a principal integration engineer.

9
00:00:30,150 --> 00:00:30,900
At Moderna.

10
00:00:31,380 --> 00:00:34,950
I work into life science,
pharmaceuticals, manufacturing,

11
00:00:35,040 --> 00:00:36,900
and supply chain industries.

12
00:00:39,269 --> 00:00:44,550
Before we deep dive into the technical
architecture, let's first understand

13
00:00:44,640 --> 00:00:46,980
how mRNA vaccines are getting developed.

14
00:00:48,044 --> 00:00:52,155
It all starts by identifying
the virus and decoding.

15
00:00:52,214 --> 00:00:53,114
Its RNA.

16
00:00:53,805 --> 00:01:00,614
Think of it as a long instruction
manual made up of four letters, A, CGT.

17
00:01:02,025 --> 00:01:07,095
It is adenine, uracil, ging, n cytosine.

18
00:01:07,845 --> 00:01:09,914
Once they identify the virus sequence.

19
00:01:10,365 --> 00:01:17,685
The next step is the mRNA design scientist
creates mRNA instruction that teach our

20
00:01:17,685 --> 00:01:23,595
body, which can fight through the virus
so that we get immunized after that

21
00:01:23,745 --> 00:01:25,695
vaccine goes into the clinical trial.

22
00:01:27,210 --> 00:01:32,160
This clinical trial vaccine get tested
with diver population and once the

23
00:01:32,160 --> 00:01:38,070
vaccine is proven and safe and effective,
they start manufacturing production

24
00:01:38,070 --> 00:01:43,830
scales up quickly and agencies like FDA
checks everything before approving it.

25
00:01:44,700 --> 00:01:49,225
And the last and important steps
is supply chain and distributions.

26
00:01:50,145 --> 00:01:55,785
Special cold storage and transportation
systems are required to deliver

27
00:01:55,785 --> 00:02:00,375
vaccines safely to hospital
clinics and around the world.

28
00:02:01,215 --> 00:02:06,315
So this is just a high level overview,
but in general, vaccine development

29
00:02:06,315 --> 00:02:11,865
goes through many phases across the
enterprise, and it is very important for

30
00:02:11,865 --> 00:02:17,565
pharmaceutical industry to stay connected
across enterprise, to track the progress

31
00:02:17,565 --> 00:02:19,725
and move forward into the process.

32
00:02:22,020 --> 00:02:27,990
So now let's take a look at the
digital transformation journey we had

33
00:02:27,990 --> 00:02:32,970
gone through to support the vaccine
development and the distribution.

34
00:02:33,810 --> 00:02:39,540
The problem is pharmaceutical industries
uses so many different software and tool

35
00:02:39,600 --> 00:02:45,330
across their different department to
perform their job because there is no one

36
00:02:45,330 --> 00:02:48,000
software available, which does everything.

37
00:02:49,215 --> 00:02:53,805
Also pharmaceutical industries
has a old systems manual processes

38
00:02:53,805 --> 00:02:55,905
and lots of disconnected data.

39
00:02:56,204 --> 00:02:59,265
They slow down everything to fix it.

40
00:02:59,385 --> 00:03:06,975
We develop API integration with over
300 and integration to connect 110

41
00:03:06,975 --> 00:03:11,625
plus systems across the enterprise,
internally and externally.

42
00:03:12,105 --> 00:03:17,774
By developing those API, it helped us
broke down silos and build a connected

43
00:03:17,864 --> 00:03:20,624
digital setup across the enterprise.

44
00:03:21,254 --> 00:03:26,414
This led us to acceleration
Information becomes available across

45
00:03:26,414 --> 00:03:31,034
all the systems, reducing delays,
and helping team move faster.

46
00:03:32,054 --> 00:03:36,969
Finally, we focus on the continuous
improvement using the real time data.

47
00:03:37,590 --> 00:03:41,850
We keep adjusting, improving
how we work, staying flexible

48
00:03:41,910 --> 00:03:43,679
and ready for future need.

49
00:03:44,399 --> 00:03:48,570
This wasn't just a small upgrade,
it's completely changed how

50
00:03:48,570 --> 00:03:52,500
operations work, making everything
faster and more connected.

51
00:03:55,079 --> 00:03:56,250
So when it.

52
00:03:58,230 --> 00:04:02,519
When it comes to the connecting
different system, there is no

53
00:04:02,519 --> 00:04:05,070
one size fits all solution.

54
00:04:05,250 --> 00:04:08,280
Different situation needs
different API pattern.

55
00:04:08,880 --> 00:04:14,609
So first is rest, API, rest API is a
simple, secure way for such systems

56
00:04:14,609 --> 00:04:17,039
to share information in real time.

57
00:04:18,029 --> 00:04:19,825
Then we have a pub sub model.

58
00:04:20,414 --> 00:04:25,604
Pops up is a event driven updates, send
information as soon as something happens.

59
00:04:26,025 --> 00:04:31,434
This pattern generally helps in
a real time data integration,

60
00:04:31,525 --> 00:04:34,204
especially manufacturing use cases.

61
00:04:35,134 --> 00:04:40,614
The E and third one is E-T-L-E-T-L
is extract, transfer and load this.

62
00:04:41,004 --> 00:04:44,394
Pattern of the integration
used for the batch processing.

63
00:04:44,424 --> 00:04:50,274
Whenever the huge data load is
required and required to sync two

64
00:04:50,274 --> 00:04:55,585
different systems, it generally goes
through ETL processes such as use

65
00:04:55,585 --> 00:04:58,284
case like financial and clinical data.

66
00:04:58,599 --> 00:05:01,120
Processing that requires ETL processes.

67
00:05:01,510 --> 00:05:06,130
And finally, the hybrid approach, which
is API plus file based integration.

68
00:05:06,760 --> 00:05:13,969
So this approach requires when, or we
use this this approach when the partner

69
00:05:14,000 --> 00:05:18,979
can't fully use their API or they are
not capable of integrating with API.

70
00:05:18,979 --> 00:05:20,150
We combine.

71
00:05:20,519 --> 00:05:25,590
With the file transfer integration, which
is a very traditional way of doing Integra

72
00:05:26,369 --> 00:05:32,309
integrations, each method help create
a strong and flexible digital system.

73
00:05:33,599 --> 00:05:35,099
So how it help,

74
00:05:37,439 --> 00:05:40,019
so integration layer is a enabler.

75
00:05:40,019 --> 00:05:45,629
Think of it as a enabler of the
business and across the enterprise.

76
00:05:45,729 --> 00:05:46,959
It goes through different.

77
00:05:47,474 --> 00:05:53,414
Saxons and integration helps as a
enabler to perform all those actions.

78
00:05:55,185 --> 00:05:59,325
API integration layer becomes
enabler into each of our vaccine

79
00:05:59,325 --> 00:06:01,484
manufacturing and distribution journey.

80
00:06:01,575 --> 00:06:06,465
Because of integration, we had unified
data connectivity across enterprise.

81
00:06:06,809 --> 00:06:11,580
Connected data from research,
manufacturing supply chain so that

82
00:06:11,580 --> 00:06:13,530
information can flow smoothly.

83
00:06:14,400 --> 00:06:18,299
This helps collaborate with
teams, partners, and regulators.

84
00:06:18,390 --> 00:06:22,109
It allowed them to work together
in real time, making better

85
00:06:22,169 --> 00:06:24,150
decision and faster decision.

86
00:06:24,659 --> 00:06:29,069
It allow automated audit and
easier to meet regulations.

87
00:06:29,280 --> 00:06:31,830
And lastly, innovative
workflow automation.

88
00:06:32,969 --> 00:06:38,099
With AI and smart processes, we boost
productivity and speed up innovations.

89
00:06:38,580 --> 00:06:41,859
The integration layer isn't
just about the connection.

90
00:06:41,950 --> 00:06:42,659
It's help.

91
00:06:42,719 --> 00:06:47,845
It's about helping companies move faster,
adapt easier, and innovate better.

92
00:06:48,845 --> 00:06:53,225
So now let's talk about the manufacturing
transformation we had gone through when

93
00:06:53,225 --> 00:06:57,815
we implemented this API integration
architecture across the enterprise.

94
00:06:58,745 --> 00:07:03,215
In previous and legacy setup,
manufacturing was manual

95
00:07:03,275 --> 00:07:04,895
and it was disconnected.

96
00:07:04,955 --> 00:07:10,895
Data entries between system were causing
lots of delays and it also having a

97
00:07:11,255 --> 00:07:17,605
human errors because it was manually
entering into different system it was

98
00:07:17,605 --> 00:07:22,915
difficult to track anything because
each systems are not integrated or

99
00:07:22,915 --> 00:07:24,895
are not in a sync with each other.

100
00:07:25,270 --> 00:07:28,960
So it is hard to scale
operation when demand grows.

101
00:07:29,559 --> 00:07:34,169
So now with the digital manufacturing
excellence, how we imple after the

102
00:07:34,169 --> 00:07:40,770
implementation of the API architecture,
now it is very, all the systems are fully

103
00:07:40,770 --> 00:07:43,140
integrated and connected with each other.

104
00:07:43,510 --> 00:07:48,080
It eliminate all the paper
based workflows as well in.

105
00:07:49,535 --> 00:07:54,515
Event driven architecture also helps
us decision making and compliance build

106
00:07:54,605 --> 00:07:59,285
right into the system, making audit
tracking and validation much easier.

107
00:07:59,705 --> 00:08:02,315
This upgrade isn't just
about moving faster.

108
00:08:02,315 --> 00:08:06,575
It is about building stronger, smarter,
and future proof manufacturing.

109
00:08:06,845 --> 00:08:11,935
So whenever they can require to
scale, they can scale with this

110
00:08:11,935 --> 00:08:14,995
architecture, or they can scale
down with this architecture.

111
00:08:17,224 --> 00:08:21,715
Because we develop API integration
talk with each other systems.

112
00:08:21,715 --> 00:08:28,245
So it reduce the human effort to to enter
any kind of data manually into systems.

113
00:08:29,245 --> 00:08:34,194
Another use case we have seen where
we got a lot of boost using this

114
00:08:34,194 --> 00:08:36,984
API architecture is clinical trial.

115
00:08:37,600 --> 00:08:41,520
So think of it clinical trial
happen across the globe.

116
00:08:41,630 --> 00:08:47,600
Other different horizons and CROs perform
generally this kind of clinical trial.

117
00:08:47,660 --> 00:08:53,250
So it is very important to integrate with
the CROs systems on a real time basis.

118
00:08:53,550 --> 00:08:57,090
Otherwise we don't get the data
on a real time and then it.

119
00:08:57,480 --> 00:09:01,500
Cause lots of additional delays
with having this architecture

120
00:09:01,500 --> 00:09:07,530
implementation with directly with CROs
externally and to our internal system.

121
00:09:07,560 --> 00:09:10,830
It cut delays by 30 to 40%.

122
00:09:11,940 --> 00:09:13,395
It also help.

123
00:09:14,520 --> 00:09:18,420
Make decision faster so that
scientists can look at the data

124
00:09:18,600 --> 00:09:23,130
of whatever the clinical trial
data comes from, the CROs system.

125
00:09:23,520 --> 00:09:29,050
They can make the decision whether this
vaccine is working effectively, or what

126
00:09:29,050 --> 00:09:33,760
are, what kind of doses required to
do, or what kind of diverse population

127
00:09:33,760 --> 00:09:37,220
required to get into clinical trials.

128
00:09:37,220 --> 00:09:40,550
So those kind of decision
they can make faster.

129
00:09:42,560 --> 00:09:53,840
And it also help reduce 14 days
under four days and be because of

130
00:09:53,840 --> 00:09:56,000
this all integration architecture.

131
00:09:56,070 --> 00:09:58,680
It maintain the GXP compliance.

132
00:09:58,800 --> 00:10:03,690
Together, this change make clinical
trial faster, cheaper, and safer.

133
00:10:04,755 --> 00:10:08,805
Because all it's going is through
the same integration architecture.

134
00:10:09,805 --> 00:10:14,675
So with all these patterns and
integration, we have seen very

135
00:10:14,735 --> 00:10:21,540
huge work over saving because all
the manual process are gone First.

136
00:10:22,175 --> 00:10:26,945
It was required to do manual data entry,
which was eliminated, and we have seen

137
00:10:26,975 --> 00:10:35,005
90,000 hours a year cutting a year of
saving and it reduced error by 78%.

138
00:10:35,755 --> 00:10:39,785
Then automated workflow with
24 smart automation, which we

139
00:10:40,465 --> 00:10:45,085
save an extra 35 minute on every
protocol which get executed.

140
00:10:45,900 --> 00:10:48,660
And this led to strategic relocation.

141
00:10:49,230 --> 00:10:57,330
So with saving of 90,000 hours
of manual work hour, scientists

142
00:10:57,330 --> 00:11:01,470
can now focus on the research and
new ideas instead of paperwork.

143
00:11:02,490 --> 00:11:07,895
In the end, enhanced productivity
means researchers now spend 40% more

144
00:11:07,895 --> 00:11:10,170
time doing important scientific work.

145
00:11:10,620 --> 00:11:13,470
Saving our isn't just about being faster.

146
00:11:13,905 --> 00:11:17,655
It's about letting people
focus on what really matters.

147
00:11:18,655 --> 00:11:23,525
This API architecture we
develop on the cloud native.

148
00:11:23,555 --> 00:11:28,445
Everything is AWS We scale
up using molecule cluster.

149
00:11:28,445 --> 00:11:33,435
We set up all the molecule cluster
and EC2 instance to support

150
00:11:33,435 --> 00:11:35,775
GXP and enterprise workload.

151
00:11:37,685 --> 00:11:42,815
We use mod modular architecture
with reusable component building

152
00:11:42,815 --> 00:11:47,105
API and template that speed up
deployment by file times faster.

153
00:11:47,495 --> 00:11:52,965
And we made sure that even with the
all the securities founds found essence

154
00:11:52,965 --> 00:11:59,575
are strong separating GXP and non GXP
and SOX related workflows separately

155
00:11:59,635 --> 00:12:01,675
validating compliance with 21.

156
00:12:02,275 --> 00:12:07,435
CFR part 11 and securing
everything through Okta 2.0.

157
00:12:07,775 --> 00:12:11,645
Sorry, OO 2.0, Okta and
web application firewall.

158
00:12:12,155 --> 00:12:17,165
So security we take consider
as a important part of

159
00:12:17,165 --> 00:12:19,205
our architecture because.

160
00:12:20,180 --> 00:12:21,350
To stay compliant.

161
00:12:21,350 --> 00:12:26,030
And in the regulated industry, it is very
important to stay compliant and secure.

162
00:12:26,480 --> 00:12:31,550
This setup helped us stay
fast, secure, and compliant as

163
00:12:31,550 --> 00:12:33,680
we scale operation globally.

164
00:12:35,720 --> 00:12:41,065
So with this final takeaways
are speed and efficiency.

165
00:12:41,425 --> 00:12:42,425
API helpless.

166
00:12:43,360 --> 00:12:49,750
Cut time to market by 60% and
reduce clinical trial by 38%.

167
00:12:50,660 --> 00:12:53,510
Reduce clinical trials cycle by 38%.

168
00:12:54,020 --> 00:12:55,190
Quality and safety.

169
00:12:55,700 --> 00:13:03,080
Automated validation, improved accuracy
by 99% and cut compliance issues by 94%.

170
00:13:03,695 --> 00:13:09,575
Patient-centric innovation, AI power
systems and automation feed up over 90,000

171
00:13:09,575 --> 00:13:12,395
hours a year for research breakthrough.

172
00:13:13,145 --> 00:13:20,255
And the next steps is build secure modular
cloud native systems to drive innovation

173
00:13:20,255 --> 00:13:22,655
and transform pharmaceutical operations.

174
00:13:23,045 --> 00:13:28,175
At the end of the day, it's not just about
better systems, it's about building a

175
00:13:28,175 --> 00:13:31,685
faster, safer, and more patient centric.

176
00:13:32,205 --> 00:13:34,665
Systems for the future of healthcare.

177
00:13:35,665 --> 00:13:40,615
Thank you everyone for listening to
me, and if you have any questions

178
00:13:40,675 --> 00:13:45,565
related to this architecture, API
pattern or anything, please feel free

179
00:13:45,565 --> 00:13:47,755
to reach out to me on a LinkedIn.

180
00:13:47,785 --> 00:13:50,125
You can find me by typing my name.

181
00:13:50,735 --> 00:13:51,985
And, one second.

182
00:13:52,135 --> 00:13:53,335
Thank you very much.

183
00:13:53,525 --> 00:13:56,315
I looking forward to hear back from you.

184
00:13:57,305 --> 00:13:57,605
Thank you.

