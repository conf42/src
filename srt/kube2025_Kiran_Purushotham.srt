1
00:00:00,500 --> 00:00:01,130
Hi everyone.

2
00:00:01,310 --> 00:00:02,240
I'm honored to be here.

3
00:00:02,420 --> 00:00:06,200
My name is Kiran Otti, and today
I'll be talking about swarming LLM

4
00:00:06,200 --> 00:00:11,240
agents for real time market insight
in cloud native trading systems.

5
00:00:11,690 --> 00:00:17,030
This talk brings together three key areas,
financial markets, large language models,

6
00:00:17,210 --> 00:00:19,070
and Kubernetes native architectures.

7
00:00:19,430 --> 00:00:23,630
My goal is to show you how cloud
native swarming agents can transform

8
00:00:23,630 --> 00:00:27,200
the way we process and act on
financial data in real time.

9
00:00:27,275 --> 00:00:29,185
Okay, let's start with the challenge.

10
00:00:29,394 --> 00:00:32,665
Financial markets generate
more than 2.5 quintillion

11
00:00:32,665 --> 00:00:34,224
bytes of data every single day.

12
00:00:34,735 --> 00:00:38,665
What's more striking is that nearly
80% of this data is unstructured.

13
00:00:39,165 --> 00:00:44,204
Think about news articles, social media
chatter, analyst reports, or SCC filings.

14
00:00:44,204 --> 00:00:45,614
Traditional models struggle here.

15
00:00:46,114 --> 00:00:47,920
They can't keep up with the scale.

16
00:00:48,010 --> 00:00:52,900
They are, don't adapt well to complexity,
and the latency of analysis often means.

17
00:00:53,540 --> 00:00:55,670
Opportunities are lost in trading.

18
00:00:55,760 --> 00:00:59,990
Seconds matter and missing
signals buried in noise translates

19
00:00:59,990 --> 00:01:02,389
directly into missed opportunities.

20
00:01:03,380 --> 00:01:06,949
To address these challenges
we developed self adapting

21
00:01:06,949 --> 00:01:08,780
financial sentiment, Oracles.

22
00:01:09,350 --> 00:01:14,210
It's built as a cloud native framework
designed to ingest massive streams of

23
00:01:14,210 --> 00:01:16,100
unstructured financial data in real time.

24
00:01:16,639 --> 00:01:20,074
It uses warm intelligence,
meaning multi LLM agents.

25
00:01:20,945 --> 00:01:25,175
Each with its own specialization
working together to generate insights.

26
00:01:25,475 --> 00:01:29,885
Think of it as a team of experts,
collaborating instead of single

27
00:01:30,005 --> 00:01:35,015
generalist agent, and importantly,
the self adapting financial sentiment.

28
00:01:35,015 --> 00:01:39,285
Oracle provides privacy,
preserving, federated learning,

29
00:01:39,765 --> 00:01:41,835
powered by homomophic encryption.

30
00:01:42,195 --> 00:01:47,025
This allows institutions to collaborate
without ever sharing sensitive raw data

31
00:01:47,415 --> 00:01:49,755
a must in today's regulatory environment.

32
00:01:49,875 --> 00:01:49,905
Okay.

33
00:01:50,405 --> 00:01:53,765
Now looking at the technical
architecture, at the heart of the

34
00:01:53,765 --> 00:01:57,545
self adapting financial sentiment,
Oracles is the dual model architecture.

35
00:01:58,025 --> 00:02:04,115
Finberg is used to extract precise domain
specific sentiment from financial texts,

36
00:02:04,115 --> 00:02:06,665
such as earnings calls and reports.

37
00:02:07,085 --> 00:02:12,335
Robot large complement it by providing
broad contextual understanding

38
00:02:12,335 --> 00:02:13,985
from market news and social media.

39
00:02:14,495 --> 00:02:18,725
The system runs this containerized
microservices orchestrated by Kubernetes.

40
00:02:19,225 --> 00:02:21,735
HPA handles dynamic
scaling while Kubernetes.

41
00:02:21,735 --> 00:02:23,535
A self-healing ensures reliability.

42
00:02:24,075 --> 00:02:29,334
As a result, we continue, we consistently
achieve sub fortify millisecond latency

43
00:02:29,364 --> 00:02:31,475
even during extreme market volatility.

44
00:02:31,975 --> 00:02:35,155
The agent swarm itself
is structured like this.

45
00:02:35,215 --> 00:02:40,505
We have the news agents which analyzes
breaking news and press releases.

46
00:02:40,955 --> 00:02:44,525
We have the social media
sentiment analysis agents.

47
00:02:45,095 --> 00:02:48,685
Tracking investor conversations
across social media and different

48
00:02:48,685 --> 00:02:53,785
other forums, regulatory filing
agents passes, SEC, filings and

49
00:02:53,785 --> 00:02:55,555
disclosures for critical updates.

50
00:02:55,795 --> 00:03:00,565
Market data agents link the sentiment
to actual price, action and order flow.

51
00:03:01,105 --> 00:03:05,310
Each agent is domain specific, like I
mentioned, but together they provide a

52
00:03:05,310 --> 00:03:07,785
rich multidimensional view of the market.

53
00:03:08,285 --> 00:03:11,865
Because of this distributed
architecture, the self adapting

54
00:03:11,935 --> 00:03:16,675
financial sentiment, Oracles processes
around 1200 documents every second.

55
00:03:17,005 --> 00:03:21,595
Equally important, the end-to-end
latency from ingestion to insight is

56
00:03:21,595 --> 00:03:26,295
still under fortify milliseconds in
the world of high frequency trading

57
00:03:26,355 --> 00:03:27,945
where every millisecond counts.

58
00:03:28,125 --> 00:03:31,845
This combination of throughput and
speed is really transformative.

59
00:03:32,345 --> 00:03:34,715
But how do we bring all
of these agents together?

60
00:03:35,045 --> 00:03:36,605
That's the role of the consensus.

61
00:03:36,745 --> 00:03:40,435
Oracle, it uses a 16 head
attention mechanism to weigh

62
00:03:40,495 --> 00:03:42,445
predictions from different agents.

63
00:03:42,745 --> 00:03:47,085
It applies dynamic confidence
scoring to quantify uncertainty,

64
00:03:47,745 --> 00:03:51,435
and it continuously self calibrates
as the market conditions shift.

65
00:03:52,005 --> 00:03:55,395
This means our predictions
are not only fasted, but also

66
00:03:55,395 --> 00:03:57,045
robust and adaptive in nature.

67
00:03:57,545 --> 00:04:02,015
We've also implemented these self
adapting financial sentiment, oracles

68
00:04:02,015 --> 00:04:04,835
across 47 financial institutions.

69
00:04:05,105 --> 00:04:08,725
Each institution's train models
locally on their private data.

70
00:04:09,144 --> 00:04:12,535
Instead of sharing raw data, only
encrypted model weights as sent

71
00:04:12,535 --> 00:04:13,885
back to the central orchestrator.

72
00:04:14,485 --> 00:04:19,385
This federated setup improved accuracy
by almost 15% compared to isolated

73
00:04:19,385 --> 00:04:24,150
models, all while meeting the strictest
of privacy and compliance requirements.

74
00:04:24,650 --> 00:04:29,070
In terms of the performance metrics,
here's what the system is able to achieve.

75
00:04:29,580 --> 00:04:33,090
We are able to achieve around 95%
directional accuracy, predicting

76
00:04:33,090 --> 00:04:35,520
whether the market goes up or down.

77
00:04:36,099 --> 00:04:41,080
We all also achieved 87% magnitude
accuracy, estimating how the markets move.

78
00:04:41,739 --> 00:04:47,409
21% analyzed returns over five years of
back testing a sharper ratio of 1.67.

79
00:04:47,559 --> 00:04:50,059
A strong measure of risk
adjusted performance.

80
00:04:50,269 --> 00:04:52,099
In short, the self adapting.

81
00:04:52,409 --> 00:04:53,219
Financial sentiment.

82
00:04:53,219 --> 00:04:57,629
Oracles is in just theoretical,
it consistently outperforms

83
00:04:57,809 --> 00:04:59,799
traditional sentiment systems.

84
00:05:00,759 --> 00:05:04,270
All of this is, of course, made
possible by cloud native design.

85
00:05:04,419 --> 00:05:09,060
Each agent runs in a lightweight
container, auto-scaling, adjust

86
00:05:09,060 --> 00:05:13,840
to incoming data surges and STO
service mesh provides a secure,

87
00:05:14,229 --> 00:05:16,060
resilient interservice communication.

88
00:05:16,405 --> 00:05:19,674
And Prometheus monitoring is
used that delivers real time

89
00:05:19,705 --> 00:05:21,325
health and performance metrics.

90
00:05:22,015 --> 00:05:25,684
It's a Kubernetes first design
ensuring both scalability and

91
00:05:25,684 --> 00:05:30,054
resiliency beyond just prediction,
self adapting financial sentiment.

92
00:05:30,054 --> 00:05:32,664
Oracles also act as an
early warring system.

93
00:05:33,234 --> 00:05:37,405
It can identify market stress
events up to 36, 36 hours in advance

94
00:05:37,824 --> 00:05:40,044
with over 96, 90 2% precision.

95
00:05:40,494 --> 00:05:42,775
It also detects coordinated
manipulation patterns.

96
00:05:43,270 --> 00:05:47,729
For example, when the social media
campaign attempts to influence the

97
00:05:47,729 --> 00:05:51,749
market sentiment, this makes it
powerful tool not just for profit,

98
00:05:51,749 --> 00:05:54,239
but also for risk management purposes.

99
00:05:54,739 --> 00:05:55,849
Of course, it wasn't easy.

100
00:05:55,879 --> 00:06:00,280
We faced four key challenges, latency
management, balancing model complexity

101
00:06:00,280 --> 00:06:03,699
with speed, data privacy and compliance.

102
00:06:04,129 --> 00:06:06,679
Meeting the G-D-P-R-C-C-P-A
and other regulations.

103
00:06:07,039 --> 00:06:10,459
The model drift, keeping models
accurate as the data was.

104
00:06:11,029 --> 00:06:15,389
And resource optimization when it comes to
tuning Kubernetes clusters to balance out

105
00:06:15,389 --> 00:06:20,159
cost with performance, these challenges
pushed us to innovate not just in models,

106
00:06:20,489 --> 00:06:22,829
but also in the infrastructure space.

107
00:06:23,329 --> 00:06:28,859
In terms of looking ahead for the future
development roadmap, we are expanding

108
00:06:29,079 --> 00:06:30,909
the self adapting financial sentiment.

109
00:06:30,909 --> 00:06:35,169
Oracles with multi-language support,
cross asset correlation, audio

110
00:06:35,169 --> 00:06:36,729
sentiment analysis from earnings calls.

111
00:06:37,674 --> 00:06:41,454
ESG factor integration and
few other innovative features.

112
00:06:41,754 --> 00:06:45,514
The goal is to make the sentiment the
self adapting financial sentiment.

113
00:06:45,514 --> 00:06:48,724
Oracles not only smarter,
but also future proof.

114
00:06:49,224 --> 00:06:53,854
To summarize swarming LLM agents
outperform single monolithic models.

115
00:06:54,454 --> 00:06:59,584
The cloud native architecture is essential
for the scale and speed of modern trading.

116
00:06:59,974 --> 00:07:03,799
Federated learning delivers
accuracy while protecting privacy.

117
00:07:04,694 --> 00:07:09,554
And the consensus mechanisms ensure
more reliable predictive insights.

118
00:07:09,944 --> 00:07:14,894
Together these elements provide the speed,
intelligence, and trustworthiness needed

119
00:07:15,284 --> 00:07:17,504
for the next generation trading system.

120
00:07:18,074 --> 00:07:18,764
Thank you all.

121
00:07:19,274 --> 00:07:20,714
Please let me know if
there are any questions.

