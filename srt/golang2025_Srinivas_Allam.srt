1
00:00:00,000 --> 00:00:01,230
Hey everyone.

2
00:00:01,730 --> 00:00:02,420
Have a good day.

3
00:00:03,320 --> 00:00:08,530
I'm, and I bring over 21 years of
experience in I series development,

4
00:00:08,950 --> 00:00:13,300
project management, and enterprise
software solutions with a deep focus

5
00:00:13,300 --> 00:00:15,760
on banking, retail, and ERP systems.

6
00:00:16,260 --> 00:00:19,350
It's a pleasure to be here today to
discuss a critical transformation

7
00:00:19,350 --> 00:00:22,540
happening in the financial industry,
modern engineer, legacy banking

8
00:00:22,540 --> 00:00:25,090
systems who meet with the demands of.

9
00:00:25,590 --> 00:00:29,090
So in this session, the
bridging banking generations

10
00:00:29,179 --> 00:00:30,950
go Power iSeries Modernization.

11
00:00:31,609 --> 00:00:35,360
We'll explore how Golang is playing
a pivotal role in revitalizing

12
00:00:35,869 --> 00:00:40,800
decades old iSeries platforms as
a financial institutions, face,

13
00:00:40,880 --> 00:00:43,135
increasing pressure to enhance agility.

14
00:00:43,985 --> 00:00:46,925
Scalability and responsiveness.

15
00:00:46,925 --> 00:00:52,175
Leveraging modern programming languages
like Book can bring the gap between the

16
00:00:52,175 --> 00:00:56,735
traditional core banking systems and the
evolving the needs of digital finance.

17
00:00:57,234 --> 00:01:01,974
Join me today as we dive into
the strategies, challenges,

18
00:01:02,094 --> 00:01:03,774
and solutions seamlessly.

19
00:01:03,774 --> 00:01:06,445
Integration modern technologies
into legacy banking

20
00:01:06,445 --> 00:01:09,024
infrastructure, ensuring system.

21
00:01:09,524 --> 00:01:11,774
Secure and future Ready.

22
00:01:12,274 --> 00:01:16,294
Let's see, in this one, the next
slide, the banking technology gap.

23
00:01:16,794 --> 00:01:22,035
as we all know, legacy banking,
system remain the backbone of

24
00:01:22,035 --> 00:01:23,509
financial operations worldwide.

25
00:01:24,460 --> 00:01:28,409
Many institutions still
rely on I series, a four.

26
00:01:28,909 --> 00:01:32,869
Mainframes that have been running
uninterrupted over many years.

27
00:01:33,679 --> 00:01:40,729
These platforms process millions of
transactions daily, but they operate

28
00:01:40,789 --> 00:01:47,659
on aging COBOL and RPG core basis,
making it necessarily difficult to

29
00:01:47,659 --> 00:01:50,089
adopt to the modern FinTech needs.

30
00:01:50,589 --> 00:01:51,129
So what is.

31
00:01:51,629 --> 00:01:55,529
Built on realtime processing,
seamless customer facing APIs,

32
00:01:56,189 --> 00:02:00,269
omnichannel experiences, and
cloud narrative architecture.

33
00:02:01,259 --> 00:02:05,129
So banks and financial insurance
institutions must meet these

34
00:02:05,339 --> 00:02:10,619
evolving expectations, but legacy
systems often struggle to keep it up

35
00:02:10,679 --> 00:02:12,265
without exponential modifications.

36
00:02:12,765 --> 00:02:15,674
So this creates a technology
gap that must be addressed.

37
00:02:16,174 --> 00:02:17,884
So what is the next challenge here?

38
00:02:17,884 --> 00:02:21,514
the integration challenge we will
see here, the biggest challenge in

39
00:02:21,514 --> 00:02:27,114
the financial institutions space is
modernizing these legacy systems without

40
00:02:27,114 --> 00:02:29,544
disrupting 24 by seven operations.

41
00:02:30,044 --> 00:02:35,234
So downtime is a not an option here,
and security should be, remain our top

42
00:02:35,234 --> 00:02:40,064
priority and the regulatory complex
must be maintained at all times.

43
00:02:40,564 --> 00:02:45,574
Finding the right approach to
modernization on these balances.

44
00:02:45,574 --> 00:02:49,764
Innovation with the stability
is the key, of staying ahead in

45
00:02:49,764 --> 00:02:51,204
today's financial ecosystems.

46
00:02:52,014 --> 00:02:57,199
So in, in the next part of the session,
we will explore how the leveraging the

47
00:02:57,199 --> 00:03:02,839
modern technologies, like Golan can help
with just this gap, enabling a smooth and

48
00:03:02,839 --> 00:03:04,849
secure transition into the future banking.

49
00:03:05,349 --> 00:03:09,609
So let's see why the Golang in
for the banking modernization.

50
00:03:09,939 --> 00:03:10,809
So why Golan?

51
00:03:11,109 --> 00:03:11,529
Let's see.

52
00:03:11,529 --> 00:03:13,659
And the see the this, why the Golang here?

53
00:03:14,379 --> 00:03:20,649
So go brings several advantages that
making it an ideal choice for the

54
00:03:20,649 --> 00:03:22,599
modernizing the banking infrastructures.

55
00:03:22,689 --> 00:03:23,199
Let's see what all.

56
00:03:23,699 --> 00:03:25,414
So go lightweight.

57
00:03:25,594 --> 00:03:30,544
Go ratings efficiently handle thousands of
in transactions with minimal memory usage.

58
00:03:31,534 --> 00:03:33,724
How performing traditional
threading models.

59
00:03:34,224 --> 00:03:36,474
And second one is a strong type system.

60
00:03:36,974 --> 00:03:42,194
So go compiled time type checking
ensures transaction integrity and system

61
00:03:42,614 --> 00:03:45,134
reliability, preventing costly error.

62
00:03:45,634 --> 00:03:47,074
Next one is built in security.

63
00:03:47,574 --> 00:03:51,899
So the gross automatic memory management
eliminates vulnerabilities like the

64
00:03:51,899 --> 00:03:56,489
buffer workflows and memory leaks,
protecting sense, two financial data.

65
00:03:56,989 --> 00:03:59,649
And next one is a compilation
to the single binary.

66
00:04:00,279 --> 00:04:06,954
So go application replies, standalone
executables with no external dependencies,

67
00:04:07,584 --> 00:04:09,354
streamlining compliance, and.

68
00:04:09,854 --> 00:04:14,264
Our next slide is based on the
microservices architecture implementation.

69
00:04:14,264 --> 00:04:15,224
How we implemented here.

70
00:04:15,724 --> 00:04:16,444
We see here now.

71
00:04:17,134 --> 00:04:20,874
First one is, So for the successful
or before that, we will see actually

72
00:04:20,874 --> 00:04:24,354
for successful modernization
I series systems, we use a

73
00:04:24,354 --> 00:04:26,064
microservice driven approach here.

74
00:04:26,724 --> 00:04:30,434
We all know that in today's you of
FinTech era, everybody in the micro,

75
00:04:30,484 --> 00:04:35,534
they are in microservice are playing the
major role in, modernizing any system.

76
00:04:36,314 --> 00:04:39,704
So let's see the, what is the fire,
legacy I series here, traditional

77
00:04:39,704 --> 00:04:43,304
mainframes continue running or
as one continue running in this

78
00:04:43,304 --> 00:04:44,654
mission critical operations.

79
00:04:45,154 --> 00:04:48,844
And the go API layer, the
lightweight microservices in the

80
00:04:48,844 --> 00:04:53,794
Golan transform legacy data models
and securely route transactions.

81
00:04:54,784 --> 00:04:56,104
Next one is the integration hub.

82
00:04:57,094 --> 00:05:01,204
Integration hub via enterprise
grade message brokers ensure

83
00:05:01,204 --> 00:05:04,294
reliable communication between
the world and the new systems.

84
00:05:04,794 --> 00:05:05,214
Next one, our

85
00:05:05,714 --> 00:05:05,834
a.

86
00:05:06,334 --> 00:05:09,964
Expose banking functions, but the
web and the mobile applications while

87
00:05:09,964 --> 00:05:11,734
maintaining the security protocols.

88
00:05:12,634 --> 00:05:16,154
Let's see the word the next, you
know the case study where, the

89
00:05:16,664 --> 00:05:18,434
banking transformation happens here.

90
00:05:19,004 --> 00:05:21,134
Let's look at this realtime
world example here.

91
00:05:21,634 --> 00:05:26,634
A tire banking transformation,
to modernize its ICD system while

92
00:05:26,634 --> 00:05:32,534
ensuring that the zero downtime and
compliance, let's see, assessment.

93
00:05:33,034 --> 00:05:34,144
Assessment here actually.

94
00:05:34,774 --> 00:05:41,934
So we audited, 15 plus years of,
customizations identifying over two

95
00:05:41,934 --> 00:05:43,944
hot team mission critical processes.

96
00:05:44,754 --> 00:05:49,509
The architecture design we use here
is we build a go based processing

97
00:05:49,539 --> 00:05:57,459
framework, handling 3000 plus
transactions per second with 99.999%.

98
00:05:57,959 --> 00:05:58,979
Migration strategy.

99
00:05:58,979 --> 00:05:59,969
We use Aries.

100
00:06:00,149 --> 00:06:05,409
We developed a secure data
transformation, pipelines, migrating

101
00:06:05,409 --> 00:06:10,269
millions of financial records with
the complete audit traceability.

102
00:06:10,769 --> 00:06:15,544
The next one is the implementation
50 plus goal line power microservices

103
00:06:15,739 --> 00:06:21,339
for deployed, reducing the transaction
processing time by 78 percentage

104
00:06:21,339 --> 00:06:22,989
while ensuring the compliance.

105
00:06:23,489 --> 00:06:24,989
Let's see what the next slide is.

106
00:06:24,989 --> 00:06:26,129
A performance improvement.

107
00:06:26,629 --> 00:06:30,394
here if you see that the results are,
really remarkable here, if you see or

108
00:06:30,814 --> 00:06:32,194
what is the performance improvement here?

109
00:06:32,244 --> 00:06:38,154
96 percentage faster processing
means transaction now execute in

110
00:06:38,154 --> 00:06:40,314
milliseconds instead of seconds.

111
00:06:40,814 --> 00:06:47,054
And, the system availability is, as
we discussed in the last, slide, 99.99

112
00:06:47,054 --> 00:06:48,644
percentage of the system availability.

113
00:06:48,824 --> 00:06:52,484
That is a seamless migration
with near perfect uptime

114
00:06:52,984 --> 00:06:54,534
and the throughput increase.

115
00:06:54,684 --> 00:06:59,399
The new system handles significantly
higher traffic, especially during

116
00:06:59,399 --> 00:07:00,989
the peak financial periods.

117
00:07:01,589 --> 00:07:03,929
So this is really whole improvement here.

118
00:07:04,394 --> 00:07:09,219
And now if you see that the 75 percentage
of the resource reduction is happens

119
00:07:09,219 --> 00:07:12,759
here, the lower infrastructure cost
while maintaining the compliance.

120
00:07:13,259 --> 00:07:17,019
So let's see the next slide, the
key technical implementations, here.

121
00:07:17,519 --> 00:07:19,859
Okay, the, what are the key
technical implementation we see?

122
00:07:19,859 --> 00:07:23,999
We achieved these results by,
through key technical, enhancements

123
00:07:23,999 --> 00:07:26,339
including, database connectors.

124
00:07:26,839 --> 00:07:32,059
Optimize Go drivers for I
series DB two integration with

125
00:07:33,019 --> 00:07:34,879
asset compliant transactions.

126
00:07:35,379 --> 00:07:40,819
The message transformation efficient
binary processes to convert, legacy

127
00:07:41,299 --> 00:07:48,259
E-B-C-D-I-C data to the modern formats
like the J XML without any data loss.

128
00:07:49,249 --> 00:07:50,929
And next one is the authentication.

129
00:07:51,429 --> 00:07:56,069
Securely linking legacy access
control with RIDC authentication

130
00:07:56,069 --> 00:07:59,599
frameworks, and next, when the
modern monitoring, the integration.

131
00:08:00,379 --> 00:08:04,709
So Unified telemetry providing
these, realtime observability across

132
00:08:04,709 --> 00:08:07,500
the legacy and modern component.

133
00:08:08,000 --> 00:08:10,310
So what is the I know deployment approach?

134
00:08:10,580 --> 00:08:10,909
Okay.

135
00:08:11,510 --> 00:08:15,340
So here is the, zero downtime
deployment approach, pattern we use.

136
00:08:16,070 --> 00:08:18,490
there are, to ensuring
these continuous operations.

137
00:08:19,370 --> 00:08:22,925
we implemented a zero downtime,
deployment strategy, using,

138
00:08:22,925 --> 00:08:24,005
these are the four methods.

139
00:08:24,125 --> 00:08:26,075
The first one is the
blue green deployment.

140
00:08:26,885 --> 00:08:30,005
What is the blue green deployment
is nothing but this a parallel

141
00:08:30,005 --> 00:08:34,300
production environment with
instant, instantaneous failovers.

142
00:08:35,180 --> 00:08:37,580
So the power process will
always help us here actually.

143
00:08:37,940 --> 00:08:42,680
And now go for the staged rollout, the
canary deployments for the progressive

144
00:08:42,680 --> 00:08:44,810
traffic migration and realtime monitoring.

145
00:08:45,060 --> 00:08:45,720
we use real.

146
00:08:46,590 --> 00:08:49,410
And next one is the continuous validation.

147
00:08:50,280 --> 00:08:51,240
So real, right?

148
00:08:51,290 --> 00:08:56,840
verification ensures the continuous
across the both system, the world legacy,

149
00:08:56,840 --> 00:08:58,430
as well as the new modern systems.

150
00:08:59,100 --> 00:09:00,750
next one is automated rollback.

151
00:09:01,250 --> 00:09:05,455
So automated rollback the circuit,
breaker, patterns, detect failures

152
00:09:05,455 --> 00:09:07,915
instantly and record automatically.

153
00:09:08,415 --> 00:09:09,015
So let's see.

154
00:09:09,045 --> 00:09:12,065
the next slide, is, that this
is the key slide actually, the

155
00:09:12,065 --> 00:09:13,565
regulatory compliance solutions.

156
00:09:14,355 --> 00:09:17,960
we will see here the compliance
is critical in banking.

157
00:09:18,460 --> 00:09:24,290
To keep, regulations, our, solutions are
tailored to meet these demand needs to

158
00:09:24,290 --> 00:09:29,440
modern, financial landscape, particularly
focusing on the data protection

159
00:09:29,940 --> 00:09:33,660
audit trails and processing Ls, SLS.

160
00:09:33,895 --> 00:09:36,310
So let's begin with the data protection.

161
00:09:36,810 --> 00:09:41,040
Our system leverages the
robust memory safety.

162
00:09:41,540 --> 00:09:45,770
Which effectively eliminates the risk
of buffer workflow vulnerabilities.

163
00:09:46,370 --> 00:09:50,870
This is crucial for the protecting
sensitive financial data and

164
00:09:51,770 --> 00:09:57,130
preventing unauthorized access
with our solution so you can rest

165
00:09:57,130 --> 00:09:58,900
assure that your data is secure.

166
00:09:59,400 --> 00:10:03,390
Moreover, our implementation
satisfies the leading data

167
00:10:03,390 --> 00:10:06,030
protection standards, including GD.

168
00:10:06,530 --> 00:10:08,720
P-C-I-D-S-S and base three.

169
00:10:09,530 --> 00:10:15,710
This means that not only is your
data is secure, but it also means

170
00:10:15,710 --> 00:10:20,900
the strict regulatory requirements
demanded by the financial authorities.

171
00:10:21,400 --> 00:10:22,870
Next one is the audit trials.

172
00:10:23,370 --> 00:10:28,205
So in today's, regulatory
environment, critical to trace.

173
00:10:28,705 --> 00:10:33,715
So our solutions, cryptographically
secured immutable logging system, which

174
00:10:33,775 --> 00:10:39,685
captures all across system transaction
flow with nanosecond precision.

175
00:10:40,405 --> 00:10:47,635
This means you can be certain that no
transaction goes unrecorded, provisioning

176
00:10:47,695 --> 00:10:49,705
unbreakable chain of evidence.

177
00:10:50,395 --> 00:10:52,045
These solutions guarantees.

178
00:10:52,545 --> 00:10:59,135
Compliance with critical regulations
such as, so my FID two, and various,

179
00:10:59,185 --> 00:11:01,495
regional financial requirements.

180
00:11:01,585 --> 00:11:06,385
This gives you complete assurance that
the all transactions are traceable

181
00:11:06,925 --> 00:11:09,595
and auditable at any given time.

182
00:11:10,095 --> 00:11:11,625
Next, go for the processing.

183
00:11:11,675 --> 00:11:12,305
left final talk.

184
00:11:12,305 --> 00:11:13,660
This one about the processing s ls.

185
00:11:14,645 --> 00:11:20,135
So our solution includes realtime
performance monitoring with automated

186
00:11:20,735 --> 00:11:25,025
altering, ensuring that your
transaction processing constantly

187
00:11:25,025 --> 00:11:28,025
meatless, strict priming thresholds.

188
00:11:28,525 --> 00:11:34,105
This realtime monitoring helps you to stay
on top of performance, minimizing risk,

189
00:11:34,525 --> 00:11:37,435
and improving operational efficiency.

190
00:11:38,395 --> 00:11:44,515
Compliance with key payment processing
regulations like Swift, sepa, and Fed

191
00:11:45,015 --> 00:11:50,325
these guarantees that all transaction
process in accordance with the

192
00:11:50,325 --> 00:11:53,025
most demanding global standards.

193
00:11:53,025 --> 00:11:57,345
So here in conclusion, we say our
regulatory compliance solutions

194
00:11:57,345 --> 00:12:03,015
are designed to offer comprehensive
realtime protection and transparency

195
00:12:03,015 --> 00:12:04,695
across your financial systems.

196
00:12:05,195 --> 00:12:11,135
Robust data protection, auditable
transaction logs and stringent processing.

197
00:12:11,135 --> 00:12:11,645
SLS.

198
00:12:12,155 --> 00:12:16,775
We ensure that your operations
are always in compliance with

199
00:12:16,955 --> 00:12:18,695
most financial regulations.

200
00:12:19,195 --> 00:12:22,985
So let's see the next slide,
the code examples in the I

201
00:12:22,985 --> 00:12:24,455
series integration metrics.

202
00:12:24,545 --> 00:12:26,495
We'll see how the
performance metrics are here.

203
00:12:27,320 --> 00:12:30,095
So here is the performance
comparison between the traditional

204
00:12:30,120 --> 00:12:31,460
as well as the go based.

205
00:12:31,590 --> 00:12:32,340
integrations.

206
00:12:33,030 --> 00:12:39,790
So here, 96, percentage lower response
time compared, to the legacy system.

207
00:12:40,510 --> 00:12:44,880
So processing time reduced from the
milliseconds, reduced from seconds to

208
00:12:44,880 --> 00:12:50,130
the milliseconds year and throughput is,
has been increased high times faster,

209
00:12:50,730 --> 00:12:53,850
and 65 percentage have lower CPU usage.

210
00:12:54,495 --> 00:12:57,735
Also 74 percentage of the memory usage.

211
00:12:58,275 --> 00:13:00,495
So this is a dramatic
efficiency improvement.

212
00:13:00,605 --> 00:13:02,465
lead to of course, the cost savings here.

213
00:13:02,965 --> 00:13:03,355
Let's say.

214
00:13:03,415 --> 00:13:04,375
What is the future?

215
00:13:04,615 --> 00:13:05,215
Next slide.

216
00:13:05,265 --> 00:13:08,355
we will discuss about the future
banking integration roadmap here.

217
00:13:09,045 --> 00:13:12,835
So let's, looking ahead, we
are focusing on four key areas

218
00:13:12,835 --> 00:13:14,365
of banking modernization here.

219
00:13:15,325 --> 00:13:20,245
This roadmap outlines our commitment
to the creating the seamless.

220
00:13:20,665 --> 00:13:24,145
Scalable and innovative
banking's ecosystems.

221
00:13:24,595 --> 00:13:29,735
Let's take a look at each of e pillar
that will drive, this transformation.

222
00:13:30,185 --> 00:13:33,335
Let's first talk about
the cloud native banking.

223
00:13:34,145 --> 00:13:38,405
So we are moving, towards the future
where the banking operations are

224
00:13:38,405 --> 00:13:44,785
powered by the scalable, microservices
built with go an efficient and high

225
00:13:44,785 --> 00:13:46,555
performance programming language.

226
00:13:47,055 --> 00:13:52,435
So these microservices are designed,
with auto-scaling capabilities,

227
00:13:52,495 --> 00:13:57,275
ensuring that your, banking systems
can easily handle, dynamic workloads

228
00:13:58,025 --> 00:14:00,095
growing our shrinking as needed.

229
00:14:00,995 --> 00:14:05,475
So this cloud native approach
enables us to provide, greater

230
00:14:05,475 --> 00:14:08,005
flexibility, faster, deployment cycles.

231
00:14:08,885 --> 00:14:13,985
And improve operational efficiency,
ultimately driving the future of banking

232
00:14:13,985 --> 00:14:15,815
with the speed and the scalability.

233
00:14:16,685 --> 00:14:20,295
So the next one is, API,
economy participations here.

234
00:14:21,015 --> 00:14:25,330
So the banking ecosystem will
fully, leverage open banking APIs,

235
00:14:26,285 --> 00:14:30,485
creating opportunities for the third
party integrations, and fostering

236
00:14:30,485 --> 00:14:32,485
collaboration with innovators.

237
00:14:33,475 --> 00:14:39,455
So this participation opens the door to,
world of the new in innovative financial

238
00:14:39,455 --> 00:14:44,375
products offering greater choice for
the personalizations to the customers.

239
00:14:44,875 --> 00:14:51,325
So these APIs will allow for seamless
integration across platforms driving the

240
00:14:51,715 --> 00:14:57,175
development of modern customer centric
financial services that are built for.

241
00:14:57,675 --> 00:15:02,630
Okay, next for the realtime processing,
is another key component for our, roadmap.

242
00:15:03,410 --> 00:15:09,480
So we are introducing, high pu event
driven architecture that enables the

243
00:15:09,480 --> 00:15:11,550
sub millisecond transaction processing.

244
00:15:12,510 --> 00:15:18,240
So this ensures that the transactions
are process instantly improving customer

245
00:15:18,240 --> 00:15:22,085
experience and meeting the demands
of today's financial environment.

246
00:15:22,400 --> 00:15:26,950
So with real time processing, we can
offer faster payments and quicker

247
00:15:26,950 --> 00:15:31,900
approval and immediate response to
the customer actions, ultimately

248
00:15:31,900 --> 00:15:34,690
eliminating the entire banking experience.

249
00:15:35,350 --> 00:15:38,420
So lastly, the, legacy integration layer.

250
00:15:38,920 --> 00:15:42,750
so our legacy integration layer
is connectivity foundation.

251
00:15:43,250 --> 00:15:47,630
Which facilitate bidirectional data
synchronization between the legacy

252
00:15:47,630 --> 00:15:49,640
systems and the modern platforms.

253
00:15:50,570 --> 00:15:54,230
So this ensures that the transaction
to new technologies, that doesn't

254
00:15:54,230 --> 00:15:59,990
disrupt existing operations, and it
also allows for the smooth, continuous

255
00:15:59,990 --> 00:16:01,940
data flow across the systems.

256
00:16:02,930 --> 00:16:06,680
So by bridging this gap between the
world and the new technologies, we.

257
00:16:07,180 --> 00:16:10,570
Your customization to move
forward without losing value

258
00:16:10,570 --> 00:16:12,400
of your legacy infrastructure.

259
00:16:12,900 --> 00:16:15,930
So here in this slide, we can conclude
that our future banking integration

260
00:16:15,930 --> 00:16:21,600
roadmap represents a holistic approach
for transforming the banking systems

261
00:16:22,440 --> 00:16:26,190
for the digital age, with the cloud
narrative architecture, participation

262
00:16:26,190 --> 00:16:30,490
in the econ a p economy, realtime
processing capabilities, and the

263
00:16:30,490 --> 00:16:32,050
seamless legacy integration layer.

264
00:16:32,845 --> 00:16:37,410
We are setting a stage for the truly
next generation banking experience.

265
00:16:37,910 --> 00:16:42,440
So the, the final year, the final
conclusion, we say that actually the go

266
00:16:42,440 --> 00:16:47,520
along offers a powerful solution for the
modernizing I series banking systems.

267
00:16:48,030 --> 00:16:51,720
It bridges the gap between the legacy
infrastructure and the modern FinTech

268
00:16:51,720 --> 00:16:57,480
requirements delivering the agility,
performance, security, and compliance.

269
00:16:58,110 --> 00:17:02,150
So by leveraging this, Golan infras,
financial, Golang financial institutions

270
00:17:02,960 --> 00:17:07,020
can future proof, their operations
while maintaining the reliability

271
00:17:07,560 --> 00:17:09,120
of their core banking systems.

272
00:17:09,900 --> 00:17:12,210
So finally, I can thank you all.

273
00:17:12,960 --> 00:17:14,100
Thank you all for your time.

274
00:17:14,600 --> 00:17:19,700
I look forward to your questions
and discussions, how we can drive

275
00:17:19,700 --> 00:17:21,080
banking modernation together.

276
00:17:21,860 --> 00:17:23,360
Feel free to reach me out.

277
00:17:23,860 --> 00:17:26,800
Triva alum us at gmail com.

278
00:17:27,790 --> 00:17:33,280
I repeat it again, please reach me
out on triva alum us at gmail com.

279
00:17:33,780 --> 00:17:35,730
Wishing you all a great day ahead.

280
00:17:36,120 --> 00:17:38,610
Thank you and thank you everyone.

281
00:17:39,450 --> 00:17:39,750
Bye.

