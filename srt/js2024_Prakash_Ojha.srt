1
00:00:00,360 --> 00:00:01,070
Hello, everyone.

2
00:00:01,670 --> 00:00:06,050
A warm welcome to CON42 JavaScript 2024.

3
00:00:06,990 --> 00:00:09,020
Thank you for joining me
today for my presentation.

4
00:00:09,930 --> 00:00:11,520
I'm honored to be speaking here.

5
00:00:12,230 --> 00:00:17,370
My name is Prakash Oja, and the topic
of my presentation today is AI driven

6
00:00:17,400 --> 00:00:22,210
code review and quality assurance
revolutionizing software development.

7
00:00:22,710 --> 00:00:28,799
In the last few years, AI capabilities
have grown rapidly and they have, now been

8
00:00:28,799 --> 00:00:34,919
applied to various fields from medicine
to self driving cars to even farming.

9
00:00:35,419 --> 00:00:38,759
And it offers a promise to
revolutionize software development

10
00:00:39,249 --> 00:00:41,479
and quality assurance in particular.

11
00:00:41,979 --> 00:00:45,029
My presentation will cover the
following develop contents.

12
00:00:46,014 --> 00:00:50,534
Introduction, the shift in software
development, the current state of

13
00:00:50,534 --> 00:00:52,704
code review and quality assurance.

14
00:00:53,204 --> 00:00:58,474
How is AI revolutionizing code review
and QA, the key benefits of AI driven

15
00:00:58,494 --> 00:01:03,474
code review, its real world impacts,
what are the quantifiable improvements.

16
00:01:03,974 --> 00:01:08,124
How is AI used in quality assurance
and how is it transforming testing?

17
00:01:08,644 --> 00:01:12,144
we'll go through some case studies,
success stories with AI driven code.

18
00:01:12,644 --> 00:01:15,534
Then we'll discuss challenges
and consideration in AI adoption.

19
00:01:16,454 --> 00:01:20,034
And finally, I'll be
presenting concluding remarks.

20
00:01:20,534 --> 00:01:22,934
Introduction, the shift
in software development.

21
00:01:23,434 --> 00:01:27,844
The software industry is witnessing a
fundamental shift driven by advances in

22
00:01:28,094 --> 00:01:30,174
AI and machine learning technologies.

23
00:01:30,674 --> 00:01:34,414
Traditional development methods
involve manual code reviews and

24
00:01:34,424 --> 00:01:39,204
QA processes, which are time
consuming and prone to errors.

25
00:01:39,704 --> 00:01:44,554
AI is not just enhancing these
processes, it's transforming

26
00:01:44,564 --> 00:01:47,004
them by automating code analysis.

27
00:01:47,674 --> 00:01:51,534
predictive issues and providing
insights that are difficult

28
00:01:51,564 --> 00:01:53,014
for human reviewers to catch.

29
00:01:53,514 --> 00:01:59,284
This shift represents a move towards
more intelligent and data driven

30
00:01:59,284 --> 00:02:00,864
software engineering practices.

31
00:02:01,364 --> 00:02:04,204
The current state of code
review and quality assurance.

32
00:02:04,704 --> 00:02:09,894
Manual code review relies heavily
on individual expertise, leading to

33
00:02:09,944 --> 00:02:13,154
inconsistencies and varying qualities
because different individuals

34
00:02:13,154 --> 00:02:17,194
may have different skill sets and
level of quality and expertise.

35
00:02:17,694 --> 00:02:21,864
The bug detection rates are limited,
with studies showing that around

36
00:02:22,824 --> 00:02:28,234
60 to 70 percent of defects are
found using the traditional methods.

37
00:02:28,684 --> 00:02:32,864
Which means 30 to 40
percent are not found.

38
00:02:33,364 --> 00:02:38,604
And the cost of fixing this defects
grows exponentially when the issues

39
00:02:38,604 --> 00:02:43,184
are discovered later in the development
life cycle, and especially post release.

40
00:02:43,684 --> 00:02:47,174
QA is a resource intensive process.

41
00:02:47,184 --> 00:02:51,904
It requires significant manual effort
to maintain and update the test switch.

42
00:02:52,404 --> 00:02:57,694
An example, a study by Cisco systems found
that traditional code reviews typically

43
00:02:57,724 --> 00:03:04,514
uncover only about 60 percent of defects
leading to significant technical deaths.

44
00:03:05,014 --> 00:03:07,544
How is AI revolutionizing
code review and QA?

45
00:03:08,044 --> 00:03:13,034
AI tools can analyze fast amounts
of code with speed and accuracy

46
00:03:13,104 --> 00:03:15,314
that far exceeds human capabilities.

47
00:03:15,814 --> 00:03:20,824
Techniques like natural language
processing, NLP, allow AI to understand

48
00:03:20,824 --> 00:03:22,284
code documentation and comments.

49
00:03:23,149 --> 00:03:24,959
which enhances the review process.

50
00:03:25,939 --> 00:03:30,549
Pattern recognition helps identify both
common coding issues like memory leaks

51
00:03:31,049 --> 00:03:32,879
and more subtle security vulnerabilities.

52
00:03:33,379 --> 00:03:39,359
Real time feedback that AI offers
enables developers to detect and fix

53
00:03:39,359 --> 00:03:44,399
problems as they code, reducing the
chances of technical deaths piling up.

54
00:03:44,899 --> 00:03:48,829
The key point here is that AI
doesn't just automate tasks.

55
00:03:49,459 --> 00:03:54,749
It enhances them by applying
sophisticated analysis to detect

56
00:03:55,569 --> 00:03:57,809
issues earlier and more effectively.

57
00:03:58,309 --> 00:04:00,749
What are the key benefits
of AI driven code review?

58
00:04:01,249 --> 00:04:04,259
AI driven code review
enhances code quality.

59
00:04:05,069 --> 00:04:10,399
AI tools can identify potential bugs,
vulnerabilities, and code smells

60
00:04:11,019 --> 00:04:12,639
leading to higher quality code.

61
00:04:13,139 --> 00:04:17,159
Accelerated development life cycles
By automating code review and testing,

62
00:04:17,919 --> 00:04:21,669
AI reduces the time needed for
this task, allowing for more rapid

63
00:04:21,779 --> 00:04:23,929
iteration of development iterations.

64
00:04:24,429 --> 00:04:25,749
Reduction in technical debt.

65
00:04:26,249 --> 00:04:30,609
Early reduction of issues means
fewer problems down the road, saving

66
00:04:30,609 --> 00:04:32,129
cost and time in the long run.

67
00:04:32,629 --> 00:04:33,829
Predictive analytics.

68
00:04:34,779 --> 00:04:39,559
AI can anticipate potential bottlenecks
and project completion times more

69
00:04:39,559 --> 00:04:43,259
accurately, allowing for better
planning and resource allocation.

70
00:04:43,759 --> 00:04:44,949
Personalized assistance.

71
00:04:45,449 --> 00:04:49,749
AI driven development tools offer real
time solutions and auto completions.

72
00:04:50,564 --> 00:04:54,174
Helping developers maintain
consistent coding standards.

73
00:04:54,674 --> 00:04:58,024
Real world impact, what are
the quantifiable improvements?

74
00:04:58,524 --> 00:05:00,044
First of all, bug detection rate.

75
00:05:00,544 --> 00:05:07,714
Using AI increases detection rates of bugs
from 70 percent to 95%, which is a 35.

76
00:05:08,374 --> 00:05:09,534
7 percent improvement.

77
00:05:10,034 --> 00:05:12,764
Demonstrating more comprehensive
issue identification.

78
00:05:13,264 --> 00:05:15,044
Development life cycle time.

79
00:05:15,544 --> 00:05:20,494
AI was found to reduce development
cycle from 12 weeks to 8 weeks,

80
00:05:20,844 --> 00:05:22,424
accelerating time to market by

81
00:05:22,924 --> 00:05:22,994
33%.

82
00:05:22,994 --> 00:05:23,824
Code review time.

83
00:05:24,324 --> 00:05:28,864
AI cut code review from 8 hours to
2 hours per 1, 000 lines of code,

84
00:05:28,984 --> 00:05:31,144
showing a 75 percent time saving.

85
00:05:31,644 --> 00:05:36,834
Test generation time was decreased
from 24 hours to 6 hours.

86
00:05:37,344 --> 00:05:40,814
which resulted in 75 percent
reduction in the time it took

87
00:05:41,084 --> 00:05:42,354
to generate the test cases.

88
00:05:42,854 --> 00:05:44,994
Prediction accuracy for
project bottlenecks.

89
00:05:45,494 --> 00:05:49,564
It improved from 60 percent to
85 percent helping avoid delays.

90
00:05:50,064 --> 00:05:55,264
Developer productivity increased
from 100 to 150 lines of code

91
00:05:55,264 --> 00:05:57,434
per day, boosting output by 50%.

92
00:05:57,934 --> 00:05:58,664
Test coverage.

93
00:05:59,164 --> 00:06:02,004
The test coverage was raised
from 75 percent to 95%.

94
00:06:02,504 --> 00:06:03,924
achieving a 26.

95
00:06:04,014 --> 00:06:06,684
7 percent increase in
comprehensive testing.

96
00:06:07,184 --> 00:06:10,934
The key takeaway here is that the
integration of AI significantly

97
00:06:11,044 --> 00:06:15,074
enhances efficiency and quality
across software development metrics.

98
00:06:15,574 --> 00:06:19,294
How is AI in QA transforming testing?

99
00:06:19,295 --> 00:06:22,944
AI automates test generation.

100
00:06:23,494 --> 00:06:26,104
It can automatically create test
cases based on code changes.

101
00:06:26,604 --> 00:06:29,324
Ensuring thorough coverage
with minimal effort.

102
00:06:29,554 --> 00:06:32,904
Like we don't have to keep on
going back and adding, code,

103
00:06:32,994 --> 00:06:34,114
as the code base changes.

104
00:06:34,444 --> 00:06:36,064
AI can do that for us.

105
00:06:36,834 --> 00:06:37,764
Self healing test.

106
00:06:38,264 --> 00:06:42,544
As the user interface changes, AI
power tools can update test scripts

107
00:06:42,894 --> 00:06:47,444
to reflect these changes, which
reduces the need for manual update.

108
00:06:47,944 --> 00:06:49,374
Intelligent test execution.

109
00:06:49,874 --> 00:06:55,399
AI can prioritize test cases based
on the likelihood of bugs, optimizing

110
00:06:55,439 --> 00:06:57,239
testing efforts and reducing time.

111
00:06:57,739 --> 00:06:59,279
Predictive analytics in testing.

112
00:06:59,779 --> 00:07:04,499
By analyzing historical test results, AI
can predict the areas that are most likely

113
00:07:04,499 --> 00:07:09,469
to have defects, which allows QA teams
to focus on critical parts of the code.

114
00:07:09,969 --> 00:07:11,079
Finally, the impact.

115
00:07:11,989 --> 00:07:16,049
Organizations using AI for QA
have reported up to 50 percent

116
00:07:16,049 --> 00:07:19,589
reduction in testing time and
a significant decrease in bugs.

117
00:07:20,079 --> 00:07:21,029
reaching production.

118
00:07:21,529 --> 00:07:23,949
Case study involving some tools.

119
00:07:24,449 --> 00:07:25,859
Amazon CodeGuru.

120
00:07:26,359 --> 00:07:31,299
This AI powered code review tool helped
Amazon reduce application downtime by

121
00:07:31,539 --> 00:07:36,439
50 percent by detecting critical issues
that would have otherwise gone unnoticed.

122
00:07:36,939 --> 00:07:39,899
Static code analysis in
continuous integration pipelines.

123
00:07:40,399 --> 00:07:44,719
By integrating AI tools in CI
CD processes, companies have

124
00:07:44,719 --> 00:07:47,519
seen a 60 percent increase
in defect detection rates.

125
00:07:48,019 --> 00:07:49,829
leading to more stable deployments.

126
00:07:50,329 --> 00:07:52,969
Deployment failures reduced by 60%.

127
00:07:53,469 --> 00:07:56,659
Organizations using AI powered
analysis to monitor code changes

128
00:07:56,659 --> 00:08:01,669
have reported significantly lower
failure rates in production releases.

129
00:08:02,169 --> 00:08:07,429
Takeaway, AI is not just a theoretical
solution, it is delivering concrete

130
00:08:07,559 --> 00:08:09,709
measurable results in the real world.

131
00:08:10,209 --> 00:08:13,299
What are the challenges and
considerations in AI adoption?

132
00:08:13,879 --> 00:08:18,389
The initial challenges are initial
setup cost, implementing AI tools,

133
00:08:18,439 --> 00:08:22,509
required investment, upfront investment
in new technology and testing,

134
00:08:23,009 --> 00:08:24,619
and training, which is expensive.

135
00:08:25,149 --> 00:08:29,509
Learning curve, development teams
will need to, they will need time

136
00:08:29,509 --> 00:08:34,559
to ramp up and learn new ways
of, testing and adapting to new

137
00:08:34,559 --> 00:08:36,129
workflow and AI powered tools.

138
00:08:36,629 --> 00:08:37,969
Data quality requirement.

139
00:08:38,809 --> 00:08:44,259
The effectiveness of AI tool depends
on the quality of AI data available.

140
00:08:44,609 --> 00:08:49,259
initially we will need a good quality
and quantity of data for training.

141
00:08:49,759 --> 00:08:53,259
What are the solutions to overcome
these challenges in early adoption?

142
00:08:53,979 --> 00:08:54,739
Start small.

143
00:08:55,239 --> 00:09:00,759
Start by with small automated simple
tasks like coding, code linting,

144
00:09:00,769 --> 00:09:02,289
or generating small test cases.

145
00:09:02,789 --> 00:09:03,799
Continuous learning.

146
00:09:04,089 --> 00:09:05,939
Choose AI tools that improve as more.

147
00:09:06,574 --> 00:09:10,154
Data becomes available, ensuring
better accuracy over time.

148
00:09:10,754 --> 00:09:11,744
Hybrid approach.

149
00:09:12,664 --> 00:09:15,224
Combine AI automation with human
oversight to achieve better results.

150
00:09:15,614 --> 00:09:19,544
The best of both worlds in code
review and quality assurance.

151
00:09:20,424 --> 00:09:25,024
Conclusion, while there are
challenges, the benefit of AI in

152
00:09:25,024 --> 00:09:28,934
software development outweigh the
challenges and, make, overcoming

153
00:09:28,934 --> 00:09:31,144
these challenges worthwhile pursuit.

154
00:09:31,644 --> 00:09:34,454
Conclusion, the future
of AI driven development.

155
00:09:34,894 --> 00:09:39,454
The key takeaways, AI is revolutionizing
software development by enhancing

156
00:09:39,454 --> 00:09:44,494
quality, accelerating cycles, and
enabling more productive insights.

157
00:09:44,494 --> 00:09:44,624
Thanks.

158
00:09:45,124 --> 00:09:50,944
Development teams can focus on creative
problem solving and innovation as AI

159
00:09:50,954 --> 00:09:52,764
handles routine and complex tasks.

160
00:09:53,264 --> 00:09:58,284
Early adopters of AI driven methodologies
gain a significant competitive advantage

161
00:09:59,114 --> 00:10:01,784
in the rapidly evolving tech landscape.

162
00:10:02,524 --> 00:10:03,334
Call to action.

163
00:10:03,834 --> 00:10:06,694
Embrace AI to revolutionize your
software development process

164
00:10:07,174 --> 00:10:08,664
and stay ahead of competition.

165
00:10:09,164 --> 00:10:11,274
Thank you for joining me
today for my presentation.

