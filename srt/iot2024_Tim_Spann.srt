1
00:00:00,040 --> 00:00:03,320
Hi, Tim Spann here, senior sales engineer.

2
00:00:03,840 --> 00:00:08,040
today I'm going to be doing building
IOT applications with open source

3
00:00:08,530 --> 00:00:11,559
and we'll cover some different
options, different things you can

4
00:00:11,560 --> 00:00:13,430
do in different, technologies.

5
00:00:13,830 --> 00:00:15,779
And again, just give
you a little sampling.

6
00:00:16,189 --> 00:00:19,180
If you look through my back catalog,
there's a lot of different things.

7
00:00:19,510 --> 00:00:21,000
This will just get you started.

8
00:00:21,470 --> 00:00:23,270
And when you're ready, contact me.

9
00:00:23,270 --> 00:00:28,470
And we can explore some other
areas of cool technology.

10
00:00:28,819 --> 00:00:30,700
that we find interesting.

11
00:00:31,440 --> 00:00:37,719
Every week I do AI, streaming, data, all
kinds of stuff, NiFi, Polaris, Flink,

12
00:00:38,150 --> 00:00:43,970
Kafka, ML, AI, Streamlit, Jupiter,
Iceberg, all the cool stuff out there.

13
00:00:44,179 --> 00:00:47,840
You could either subscribe and
get it automatically, or just

14
00:00:47,870 --> 00:00:55,000
come out to my GitHub, or Medium,
or Dev2, or Hashnode, Sub stack.

15
00:00:55,320 --> 00:00:57,850
I put this everywhere so you
don't have to look for it.

16
00:00:57,850 --> 00:01:02,769
It'll find you So check that out if you're
interested in this kind of technology

17
00:01:02,769 --> 00:01:07,030
mostly open source, but also covering
my employer snowflake So you can see

18
00:01:07,030 --> 00:01:09,970
some cool stuff there I'm tim span.

19
00:01:10,049 --> 00:01:11,480
My blog is at data in motion.

20
00:01:11,690 --> 00:01:15,019
Dev I'm at twitter or
whatever it is there.

21
00:01:15,270 --> 00:01:19,300
I got to add my Blue sky for you
worked at a bunch of interesting

22
00:01:19,310 --> 00:01:23,640
data companies I'm based in the
New York, New Jersey, Philly area.

23
00:01:24,110 --> 00:01:28,569
Always looking to, collaborate in the
community in an open source and at

24
00:01:28,569 --> 00:01:32,260
different, events, conferences, meetups.

25
00:01:32,260 --> 00:01:33,660
I run a couple of meetups.

26
00:01:34,070 --> 00:01:36,509
If you're looking for a speaker
or you want to collaborate on an

27
00:01:36,510 --> 00:01:38,510
event in those areas, let me know.

28
00:01:38,860 --> 00:01:41,570
If it's virtual, I can
collaborate with you anywhere.

29
00:01:42,150 --> 00:01:44,960
I am one of the top IoT experts at D Zone.

30
00:01:45,480 --> 00:01:46,819
Love working with devices.

31
00:01:46,820 --> 00:01:49,010
I love working with my friends at NVIDIA.

32
00:01:49,410 --> 00:01:57,490
We do some cool stuff, whether that's
AI at the edge or data streaming, rag,

33
00:01:58,370 --> 00:02:01,170
vector databases, whatever you have there.

34
00:02:01,570 --> 00:02:02,380
So check it out.

35
00:02:02,640 --> 00:02:03,919
My medium is here.

36
00:02:04,419 --> 00:02:06,760
Ton of different examples at my GitHub.

37
00:02:07,259 --> 00:02:10,470
So we'll do an intro, look at
some devices, look at some apps,

38
00:02:10,540 --> 00:02:12,790
messaging, get some ideas there.

39
00:02:13,300 --> 00:02:15,920
NiFi from Apache Project.

40
00:02:16,250 --> 00:02:18,470
It helps us do a lot of
the different stuff there.

41
00:02:19,060 --> 00:02:24,840
Now one of the cooler things out there
is the new Raspberry Pi 8 gig of RAM.

42
00:02:25,390 --> 00:02:28,750
They've also added a AI kit.

43
00:02:28,950 --> 00:02:30,480
And there's two different versions.

44
00:02:30,850 --> 00:02:34,030
Now right now I'm running
the older one but I have the

45
00:02:34,030 --> 00:02:37,660
newer one sitting right here.

46
00:02:38,090 --> 00:02:42,530
So at some point hopefully soon
we'll get a little break in

47
00:02:42,530 --> 00:02:43,920
the action maybe for Christmas.

48
00:02:44,260 --> 00:02:49,120
of an AI powered Christmas tree
with that 26 tops instead of the 13.

49
00:02:49,310 --> 00:02:50,510
13 is pretty good.

50
00:02:50,980 --> 00:02:54,900
just a couple of years ago, you
got a powerful NVIDIA device.

51
00:02:54,950 --> 00:02:55,850
It only had 10.

52
00:02:55,850 --> 00:02:58,800
13 and 26, pretty amazing.

53
00:02:59,090 --> 00:03:03,250
we're also gonna be looking pretty
shortly at the Raspberry AI camera.

54
00:03:03,750 --> 00:03:06,450
As soon as I figure
out, different projects.

55
00:03:06,450 --> 00:03:11,470
Again, if you've got some interesting,
IOT plus Edge AI use cases.

56
00:03:11,930 --> 00:03:12,640
Let me know.

57
00:03:12,640 --> 00:03:16,990
I'm always looking for stuff, especially
if you're someone using Snowflake.

58
00:03:16,990 --> 00:03:22,040
I'm going to show you one of
the examples, is on the AI side,

59
00:03:22,590 --> 00:03:25,440
ML side, is pose estimation.

60
00:03:25,450 --> 00:03:26,600
We're going to look at a person.

61
00:03:27,275 --> 00:03:28,445
I guess that includes me.

62
00:03:28,965 --> 00:03:32,295
And it's going to figure out
where my eyes, ears, shoulders,

63
00:03:32,295 --> 00:03:33,665
and joints are in motion.

64
00:03:33,895 --> 00:03:34,725
Pretty cool.

65
00:03:35,005 --> 00:03:39,885
Now you combine this with an NVIDIA device
and a robot, and you could collaborate.

66
00:03:39,985 --> 00:03:41,205
Maybe it could follow along.

67
00:03:41,215 --> 00:03:42,735
Maybe we could do a group dance.

68
00:03:42,955 --> 00:03:47,035
Probably pretty expensive to do that
with some robots, but pretty cool.

69
00:03:47,395 --> 00:03:51,695
Now this Halo 8 is on the
Raspberry Pi AI kit already.

70
00:03:52,425 --> 00:03:54,335
And it finds all these 17 points.

71
00:03:54,835 --> 00:03:59,465
right now I'm sending out the, eyes,
but there's a lot of new stuff coming.

72
00:04:00,135 --> 00:04:04,035
And again, I'll probably do that in
the, hopefully over the holiday break.

73
00:04:04,445 --> 00:04:07,245
We'll see, how the weather
is and how much time we have.

74
00:04:07,825 --> 00:04:12,845
Highly recommend you get this,
especially get the new one with, 26 tops.

75
00:04:13,425 --> 00:04:17,725
Really easy, really, designed
well for the Raspberry Pi 5.

76
00:04:18,185 --> 00:04:23,135
I'm curious if it will work on the
new, keyboard verse, version, 500.

77
00:04:23,135 --> 00:04:24,325
I haven't tried that yet.

78
00:04:25,135 --> 00:04:26,145
something to think about.

79
00:04:26,185 --> 00:04:28,815
Probably need some kind of
adapter to get, that going.

80
00:04:28,815 --> 00:04:32,205
But, knowin the community,
someone's probably workin on it.

81
00:04:32,785 --> 00:04:35,385
clip zero shot, I gotta
work on that one next.

82
00:04:36,135 --> 00:04:38,725
Again, 26 tops for the new one.

83
00:04:39,275 --> 00:04:41,965
looking at some of the
other, options out there.

84
00:04:42,365 --> 00:04:50,835
If we look at the, Jetson AGX Orin,
it's 275 tops, 64 gig of RAM and 2000

85
00:04:50,885 --> 00:04:55,515
cores, and this is today, December, 2024.

86
00:04:55,905 --> 00:05:01,275
By next year, I would not be
surprised if there's edge devices with

87
00:05:01,365 --> 00:05:03,445
double those, performance numbers.

88
00:05:04,105 --> 00:05:06,265
And that could keep going on for a while.

89
00:05:06,265 --> 00:05:09,855
I know the temperature and keeping
in the small package, but they are

90
00:05:09,855 --> 00:05:12,595
advancing these units pretty quickly.

91
00:05:13,095 --> 00:05:14,375
I have an old Xavier.

92
00:05:14,545 --> 00:05:16,345
That's only at 21 tops.

93
00:05:16,445 --> 00:05:19,715
Now we mentioned this new
Raspberry Pi is at 26.

94
00:05:20,095 --> 00:05:22,665
the speed of, innovation here is moving.

95
00:05:23,005 --> 00:05:26,115
There's also specialized cameras, which
I've been playing with from Mufti.

96
00:05:26,615 --> 00:05:29,095
Again, they do some things
that you can pair that.

97
00:05:29,595 --> 00:05:30,625
with Raspberry Pi.

98
00:05:30,625 --> 00:05:33,175
I'm trying to see if you can
combine that with the new AI

99
00:05:33,185 --> 00:05:35,305
kit for one of the AI cameras.

100
00:05:35,495 --> 00:05:36,395
A bunch of different things.

101
00:05:36,395 --> 00:05:38,225
There's also specialty devices.

102
00:05:38,665 --> 00:05:40,395
This is going to be coming soon.

103
00:05:40,735 --> 00:05:42,615
This is the Synthcap Watcher.

104
00:05:43,575 --> 00:05:47,995
Lots of stuff going on in AI,
in IoT and AI and Edge stuff.

105
00:05:48,925 --> 00:05:53,635
Now you can make an Edge server
and these can be running anywhere.

106
00:05:53,855 --> 00:05:56,845
Now with the new Jetson.

107
00:05:57,345 --> 00:05:59,365
You can run a lot of containers of apps.

108
00:05:59,705 --> 00:06:01,365
You got 64 bit processor.

109
00:06:01,365 --> 00:06:02,345
You got a lot of RAM.

110
00:06:02,965 --> 00:06:04,595
You got fast Wi Fi, Bluetooth.

111
00:06:04,595 --> 00:06:09,185
So you're just running a server that
can be in a moving vehicle and a robot.

112
00:06:09,795 --> 00:06:14,445
So the thought of IoT is just
the, the little teeny small

113
00:06:14,455 --> 00:06:16,765
powered devices is over.

114
00:06:17,025 --> 00:06:19,695
Certainly those are extremely
important, especially in a

115
00:06:19,695 --> 00:06:23,905
mesh where they can communicate
over a lighter weight protocol.

116
00:06:24,410 --> 00:06:29,650
and feed you in a whole bunch of data and
you have one of these edge servers doing

117
00:06:29,650 --> 00:06:34,700
a lot of workload to you know aggregate
that for you and then maybe you send

118
00:06:34,700 --> 00:06:43,410
that out over Kafka or MQTT or Pulsar
or a different protocol up to you and

119
00:06:43,410 --> 00:06:47,830
one of those little devices sitting next
to me I'm not going to touch that one's

120
00:06:47,830 --> 00:06:49,985
plugged in There's a little warm in here.

121
00:06:49,985 --> 00:06:53,835
I got to check my temperature
is, Adafruit Funhaus.

122
00:06:53,995 --> 00:06:55,765
This returns it as Jason.

123
00:06:56,165 --> 00:07:00,795
Now, since it's Jason, I could just, and
this is going over MQTT, which can go

124
00:07:00,795 --> 00:07:08,835
right into a Pulsar, server or into Kafka
over a proxy or to a regular MQTT server.

125
00:07:09,075 --> 00:07:12,225
Then you'd have NiFi or
someone else decide if I want

126
00:07:12,225 --> 00:07:14,375
to take it raw, convert it.

127
00:07:14,795 --> 00:07:19,735
Aggregate it, maybe drop it into S3,
or push it into, Configure Connect,

128
00:07:19,755 --> 00:07:25,985
go right into Snowflake, or go through
one of the various, Snowpipe channels.

129
00:07:26,445 --> 00:07:27,555
Lots of options here.

130
00:07:27,805 --> 00:07:28,875
This one is fun.

131
00:07:28,885 --> 00:07:34,075
This does not update too frequently,
so this isn't huge data, but if I

132
00:07:34,085 --> 00:07:39,185
had hundreds of these over multiple
facilities, giving me updates every few

133
00:07:39,185 --> 00:07:41,645
seconds, the data starts to pile up.

134
00:07:41,675 --> 00:07:47,755
You can see this is one of the more
traditional small devices, not too much

135
00:07:47,755 --> 00:07:55,005
RAM, pretty slow processor, but that's
great for doing this simple, read a couple

136
00:07:55,005 --> 00:08:02,135
of sensors, push that out to you, and do
that either over CircuitPython or some C

137
00:08:02,135 --> 00:08:05,025
variants, a couple of options out there.

138
00:08:05,525 --> 00:08:07,015
Raspberry Pi can do a lot.

139
00:08:07,800 --> 00:08:10,660
I have one that has some thermal sensors.

140
00:08:10,660 --> 00:08:16,630
If you haven't seen the garden breakouts,
they are inexpensive from UK and

141
00:08:16,630 --> 00:08:18,090
they've got lots of different sensors.

142
00:08:18,110 --> 00:08:21,150
Very easy to add them
and pop that stuff out.

143
00:08:21,850 --> 00:08:24,920
Those are pretty fun and the thermal
camera on there is really cool.

144
00:08:25,240 --> 00:08:29,930
I take a lot of pictures with that one and
again you can put this on various versions

145
00:08:29,930 --> 00:08:35,360
of the Raspberry Pi, whether it's the one,
two gig, eight gig, ten gig, expecting

146
00:08:35,360 --> 00:08:40,400
a 16 gig to come out soon and I'm like,
I got to save some money for that one.

147
00:08:41,210 --> 00:08:43,020
So data and cat.

148
00:08:43,950 --> 00:08:44,820
I like cats.

149
00:08:45,020 --> 00:08:51,640
So we're gonna take IOT data, open source,
get it into Apache spread it around.

150
00:08:52,080 --> 00:08:56,110
But if you're in some enterprise
environment, use those IOT open

151
00:08:56,110 --> 00:09:00,150
source tools, either land it right in.

152
00:09:00,805 --> 00:09:03,025
An S3 bucket and have it processed.

153
00:09:03,705 --> 00:09:08,965
Send that in directly over
JDBC into Data Warehouse.

154
00:09:09,895 --> 00:09:13,105
Send that into Kafka to get
pushed into Kafka Connect.

155
00:09:13,785 --> 00:09:16,725
I have Navi push it right into Snowflake.

156
00:09:16,985 --> 00:09:18,775
There's a lot of different options there.

157
00:09:19,285 --> 00:09:26,185
But suffice to say taking IoT data
using open source tools to get that into

158
00:09:26,765 --> 00:09:28,605
your production and cloud data lakes.

159
00:09:29,435 --> 00:09:30,575
Pretty straightforward.

160
00:09:31,185 --> 00:09:35,725
Now I'm going to recommend that
one of your main tools here,

161
00:09:36,025 --> 00:09:38,255
let me update this right here.

162
00:09:38,895 --> 00:09:39,955
This is like 200.

163
00:09:40,795 --> 00:09:42,355
I keep forgetting to update that.

164
00:09:42,625 --> 00:09:43,485
And it's annoying.

165
00:09:43,545 --> 00:09:44,075
let's get back in there.

166
00:09:44,295 --> 00:09:44,920
Apache 9.

167
00:09:44,920 --> 00:09:48,475
5, if you haven't tried it download
it now, version 2 and greater,

168
00:09:48,815 --> 00:09:50,885
or use a provider like Datavolo.

169
00:09:51,875 --> 00:09:57,555
This lets you ingest, move, route,
enrich data, especially IoT data, which

170
00:09:57,555 --> 00:10:02,285
can be sparse, which can come in very
fast, which can sometimes be broken,

171
00:10:02,285 --> 00:10:04,775
partially broken or come in weird formats.

172
00:10:05,645 --> 00:10:10,445
NiFi guarantees you get delivery, make
sure things are buffered appropriately,

173
00:10:10,745 --> 00:10:15,815
allows for back pressure, slow thing down
so you don't break things downstream,

174
00:10:16,335 --> 00:10:20,325
lets you prioritize messages, so if
there's A message coming from one of your

175
00:10:20,325 --> 00:10:22,685
devices that says, Hey, I'm overheating.

176
00:10:22,765 --> 00:10:24,895
That's more important
than the standard data.

177
00:10:24,895 --> 00:10:25,835
That's yeah.

178
00:10:26,255 --> 00:10:29,195
Temperature is 70, 70, 70.

179
00:10:29,195 --> 00:10:31,475
So you could push that through faster.

180
00:10:32,165 --> 00:10:36,535
You can control latency and
throughput, change your tolerance.

181
00:10:36,795 --> 00:10:39,355
You can play around with a
lot of settings, just in the

182
00:10:39,355 --> 00:10:41,195
GUI, depending on your needs.

183
00:10:41,195 --> 00:10:43,095
For most people, you'll
never have to do that.

184
00:10:43,525 --> 00:10:47,375
It's just those features you may
need once in a while come in handy.

185
00:10:48,095 --> 00:10:48,415
And.

186
00:10:49,090 --> 00:10:49,850
The killer.

187
00:10:50,090 --> 00:10:50,990
That's awesome.

188
00:10:51,350 --> 00:10:56,120
Data governance, data lineage, data
provenance is part of your data

189
00:10:56,120 --> 00:10:58,470
management and quality and security.

190
00:10:58,740 --> 00:10:59,990
Hugely important.

191
00:11:00,720 --> 00:11:03,770
So that you know who owns the data,
where it came from, where it's

192
00:11:03,780 --> 00:11:06,810
going, especially in the day of AI.

193
00:11:07,280 --> 00:11:12,280
When any kind of source that you could
prove where you got it is going to become

194
00:11:12,280 --> 00:11:15,800
important when they start questioning,
how did you train these models?

195
00:11:15,800 --> 00:11:15,820
That's awesome.

196
00:11:16,390 --> 00:11:18,210
why, where did this data come from?

197
00:11:18,210 --> 00:11:19,430
Why are decisions made?

198
00:11:19,680 --> 00:11:23,720
You could say, hey, I could take
this data provenance and lineage

199
00:11:23,720 --> 00:11:27,410
from NiFi that shows me when it was
consumed, how big it was, what it

200
00:11:27,410 --> 00:11:31,620
looked like, where it came from and
push that into, say, Snowflake Tables.

201
00:11:31,630 --> 00:11:36,550
So I have a huge, data warehouse that
I could offload into Apache Iceberg.

202
00:11:37,060 --> 00:11:41,600
Keep that in cold storage
on S3 in your data lake.

203
00:11:42,015 --> 00:11:44,875
So when someone goes, Hey, where
did this data came from, where

204
00:11:44,875 --> 00:11:50,005
I need to rebuild my, data that
trained a model, you could do that.

205
00:11:50,815 --> 00:11:53,645
Lots of different processors,
lots of different sources,

206
00:11:54,105 --> 00:11:58,705
fully secure, fully clustered to
run as many nodes as you need.

207
00:11:59,065 --> 00:12:00,835
Version control on your data.

208
00:12:01,305 --> 00:12:08,105
And what's really cool in the day of,
RAG and AI is support for binary and

209
00:12:08,105 --> 00:12:14,645
unstructured data, images, tabular
data, PDFs, documents, email, slack,

210
00:12:14,685 --> 00:12:22,495
discord, whatever that data is, be able
to ingest it, enrich it, process that,

211
00:12:22,515 --> 00:12:26,765
and do that with a visual environment,
be able to work with event processing,

212
00:12:26,775 --> 00:12:32,055
route data, connect to, any kind of
central messaging, whether it's MQTT.

213
00:12:32,680 --> 00:12:39,820
Rabbit, Pulsar, Kafka, even old MQ series,
any of those, messaging protocols you

214
00:12:39,820 --> 00:12:45,130
might want to do, Redis, and be able to
get things through Kafka really easy.

215
00:12:45,130 --> 00:12:51,010
NiFi 2 had some really important
things for, AI, being able to

216
00:12:51,010 --> 00:12:56,070
run Python processors, easily
parameterize your data using Redis.

217
00:12:56,320 --> 00:13:01,070
Some of the newer JDKs, which are faster,
better performance, better threads.

218
00:13:01,070 --> 00:13:04,690
JDK 21 and beyond, it's a game changer.

219
00:13:04,690 --> 00:13:07,960
If you're like, I don't know
about Java, Java is back.

220
00:13:08,510 --> 00:13:09,380
This is awesome.

221
00:13:09,800 --> 00:13:12,670
Again, that lineage we mentioned,
there's a rules engine there

222
00:13:12,670 --> 00:13:13,920
to help you with development.

223
00:13:14,350 --> 00:13:17,530
And some specialized features
if you use the Datavolo version.

224
00:13:18,010 --> 00:13:19,020
Everything to connect to Azure.

225
00:13:20,020 --> 00:13:23,030
Integration with Slack and
Zendesk and a ton of things.

226
00:13:23,405 --> 00:13:27,065
Be able to look at a table and
say, Snowflake through JDBC

227
00:13:27,425 --> 00:13:30,965
and use those as schemas to
validate data through the system.

228
00:13:31,225 --> 00:13:35,015
So someone creates a table which you
could do really easy in Snowflake

229
00:13:35,225 --> 00:13:39,865
by uploading like an example JSON
of what this IoT data looks like

230
00:13:40,205 --> 00:13:45,095
and then have NiFi automatically use
that table as the schema to let you

231
00:13:45,095 --> 00:13:46,345
know what things should look like.

232
00:13:46,575 --> 00:13:48,985
Or you could use Amazon
Glue if you use that.

233
00:13:49,605 --> 00:13:54,125
Support for OpenTelemetry
if that's your, environment.

234
00:13:54,125 --> 00:14:00,245
NiFi runs as a cluster right now with
Zookeeper to decide who's primary one

235
00:14:00,245 --> 00:14:06,045
running things, coordinates the cluster,
keeps some provenances in there, and

236
00:14:06,045 --> 00:14:12,185
it has a great way of keeping all the
different workloads isolated very fast.

237
00:14:12,205 --> 00:14:17,080
Now I wrote, as I've been going
through different example code, The

238
00:14:17,080 --> 00:14:19,160
thing that's going to come up in IOT.

239
00:14:19,400 --> 00:14:20,700
Beside you, I got a sensor.

240
00:14:20,700 --> 00:14:21,570
What type of sensor?

241
00:14:21,580 --> 00:14:22,410
What's the value?

242
00:14:23,360 --> 00:14:24,320
Where is it?

243
00:14:24,820 --> 00:14:29,080
These are real world
devices, real world systems.

244
00:14:29,300 --> 00:14:30,590
They exist somewhere.

245
00:14:31,200 --> 00:14:36,400
And that somewhere is important based on
how you might want to join data locality.

246
00:14:36,850 --> 00:14:40,920
So knowing the lat long, I'm
able to process that really big.

247
00:14:41,490 --> 00:14:42,310
So I wrote a.

248
00:14:42,810 --> 00:14:46,830
Library that takes an address, converts
it to lat long, so say I'm walking

249
00:14:46,830 --> 00:14:51,130
down the street and I want to see
what sensors are reporting near me.

250
00:14:51,780 --> 00:14:55,730
Again, if that's, you subscribe
to the service or you can build

251
00:14:55,730 --> 00:14:58,040
your own and have friends do this.

252
00:14:58,040 --> 00:15:02,920
There's also some open source
sensors for air quality out there

253
00:15:03,050 --> 00:15:04,620
that you could communicate to.

254
00:15:04,870 --> 00:15:09,080
But having where you are, being
able to do that, really cool.

255
00:15:09,355 --> 00:15:13,145
So I created a Python little
script here to do that and

256
00:15:13,145 --> 00:15:15,145
made that a processor for NiFi.

257
00:15:15,545 --> 00:15:20,145
Again, you could also use that regular
Python inside of a Jupyter Notebook.

258
00:15:20,645 --> 00:15:24,945
Now if I've got all these things
in a stream and I want to do some

259
00:15:24,985 --> 00:15:29,115
SQL analytics on them before they
land in your cloud data lake.

260
00:15:29,655 --> 00:15:33,265
Or before I push it to the
next layer, with Cortex AI

261
00:15:33,265 --> 00:15:34,465
or wherever it happens to be.

262
00:15:35,105 --> 00:15:39,195
Being able to do streaming
analytics with Flink SQL, again,

263
00:15:39,205 --> 00:15:41,695
open source, pretty powerful.

264
00:15:42,405 --> 00:15:46,215
And we'll take a look at that
in the next talk, or you can

265
00:15:46,215 --> 00:15:47,605
look at some of my old ones.

266
00:15:47,965 --> 00:15:52,845
I've been looking at different Edge models
here, and we don't have a lot of time to

267
00:15:52,845 --> 00:15:56,385
talk about them, but I wanted to mention
a couple ones that have been showing up.

268
00:15:56,775 --> 00:16:02,535
Hugging Face has A new SMOL, which is
cute, language model that's only 1.

269
00:16:02,535 --> 00:16:07,755
7 billion parameters, runs pretty,
quick, doesn't take up too much

270
00:16:07,755 --> 00:16:10,165
resources, so I can run this on the Pi.

271
00:16:10,435 --> 00:16:14,515
Certainly NVIDIA has bigger models,
and it could run, it could support

272
00:16:14,515 --> 00:16:19,835
some incredible stuff, and so can
that, our AI, kit there can run a

273
00:16:19,835 --> 00:16:23,465
little better, but there's a ton of
SMOL language models, check it out.

274
00:16:24,200 --> 00:16:28,840
them on Hugging Face, where you can get
a lot of work done in these constrained

275
00:16:28,840 --> 00:16:34,120
environments and get work done locally
before it's sent out, because you might

276
00:16:34,120 --> 00:16:37,880
need to make decisions right away,
especially for something that's in

277
00:16:37,880 --> 00:16:41,490
movement, like a vehicle or a robot.

278
00:16:42,300 --> 00:16:46,480
The future is here now, so
run as many of these models.

279
00:16:46,980 --> 00:16:49,340
We'll go through some code here.

280
00:16:49,675 --> 00:16:50,905
and some things running.

281
00:16:51,265 --> 00:16:53,735
Yeah, I should probably do that
before I give you links to everything

282
00:16:53,745 --> 00:16:55,495
because things may time out.

283
00:16:56,105 --> 00:16:59,155
I am, let me run my consumer here.

284
00:16:59,765 --> 00:17:03,255
I have, a device running over here.

285
00:17:03,255 --> 00:17:03,865
Did I stop?

286
00:17:04,325 --> 00:17:05,025
I stopped it.

287
00:17:05,025 --> 00:17:09,945
So I have an environment
agent running over there.

288
00:17:10,355 --> 00:17:14,945
And this is one of those, sensors
that I got on a Raspberry Pi.

289
00:17:15,540 --> 00:17:18,690
You can see here it's getting
a bunch of different values,

290
00:17:18,700 --> 00:17:21,470
humidity, pressure, something.

291
00:17:21,470 --> 00:17:28,070
So I'm sending those into Kafka and you
can see if you wanted to be in a Snowflake

292
00:17:28,070 --> 00:17:32,600
Notebook, Jupyter Notebook, somewhere
as a data scientist or data engineer,

293
00:17:32,830 --> 00:17:35,110
you can grab this data immediately.

294
00:17:35,300 --> 00:17:39,310
You can certainly wait till it lands
in a table or it's somewhere else

295
00:17:39,310 --> 00:17:44,310
where I can consume it and I could
start using it to train models.

296
00:17:44,830 --> 00:17:46,760
as part of an application.

297
00:17:46,760 --> 00:17:50,450
I could put this into a Streamlit
app just to get you some ideas

298
00:17:50,450 --> 00:17:53,330
and maybe I could just consume
a couple and then start working.

299
00:17:53,720 --> 00:17:58,330
Or I could have Flink SQL consume
it, do some kind of aggregate

300
00:17:58,380 --> 00:18:02,070
and push it somewhere else like
S3 or directly into Iceberg.

301
00:18:02,490 --> 00:18:03,790
Read the Iceberg table.

302
00:18:03,790 --> 00:18:05,910
You got a lot of options there.

303
00:18:06,680 --> 00:18:07,870
makes it pretty easy.

304
00:18:08,300 --> 00:18:17,810
Now I took a one JSON file and I
loaded it here, which was pretty

305
00:18:17,870 --> 00:18:21,300
easy and had it build a table for me.

306
00:18:22,060 --> 00:18:26,610
And you could see it automatically,
created all the types and got it

307
00:18:26,610 --> 00:18:29,230
ready for me, which is pretty awesome.

308
00:18:29,520 --> 00:18:33,290
And then I loaded it and
now I have this available.

309
00:18:33,570 --> 00:18:37,180
So now I can use different
connection to load more.

310
00:18:37,420 --> 00:18:41,660
Now I could land a file
S3 and have it loaded in.

311
00:18:41,660 --> 00:18:45,380
I can push it to Kafka, use
JDBC, call right into there.

312
00:18:45,940 --> 00:18:50,190
I've got a couple of options there,
depending on what we could do.

313
00:18:50,630 --> 00:18:53,220
I can also have, NiFi do that.

314
00:18:53,720 --> 00:18:56,820
Of course that timed out,
everything times out eventually.

315
00:18:57,570 --> 00:19:03,880
I can also have NiFi consume
that from that same topic, get

316
00:19:03,880 --> 00:19:06,310
that data and push it to an edge.

317
00:19:07,100 --> 00:19:10,620
And we can see we got a lot of
data here, but it's, the one's

318
00:19:10,620 --> 00:19:14,890
coming off there and with its
provenance, we can see the data here.

319
00:19:14,890 --> 00:19:19,340
Yeah, I know this is Jason, Shelby
and Jason, and you can see we got the,

320
00:19:19,340 --> 00:19:21,230
all the different sensors on there.

321
00:19:21,915 --> 00:19:27,145
And I like to say, get the time in
there, what server I came off of, put

322
00:19:27,145 --> 00:19:32,195
a unique ID in there, all the different
sensor readings, plus what host was

323
00:19:32,245 --> 00:19:36,495
it's one of my Raspberry Pis, what's the
MAC address, if you're concerned about

324
00:19:36,495 --> 00:19:41,375
that, certainly people can fudge that,
how much disk is left on my devices, I

325
00:19:41,375 --> 00:19:43,825
tend to put those in the raw messages.

326
00:19:44,165 --> 00:19:47,914
If you want to pull those
out, or take them out.

327
00:19:48,265 --> 00:19:52,755
Some of the values or break this up into
individual values, whether you do that

328
00:19:52,865 --> 00:19:59,725
on the device or do that in say NiFi,
or do you do that when it lands, you

329
00:19:59,725 --> 00:20:04,555
have a raw table, then you put it into
a table specific to where you're going.

330
00:20:05,285 --> 00:20:07,165
That's up to you there.

331
00:20:07,595 --> 00:20:12,425
Now we can look at the data provenance
to see, when the data arrived.

332
00:20:13,325 --> 00:20:19,265
And we could see the details, size,
what component touched it, when,

333
00:20:19,645 --> 00:20:21,585
all the different, data there.

334
00:20:22,125 --> 00:20:24,005
we could see the Kafka offset.

335
00:20:24,665 --> 00:20:27,845
You could see, if it had multiple
partitions, the timestamp.

336
00:20:28,365 --> 00:20:30,785
All that kind of, important
information there.

337
00:20:31,265 --> 00:20:34,365
Pretty, useful to give you an idea.

338
00:20:34,475 --> 00:20:36,405
Now we've got another IoT app.

339
00:20:37,000 --> 00:20:38,690
We'll keep this running
because that's fun.

340
00:20:39,030 --> 00:20:41,190
I'm going to run the pose estimation one.

341
00:20:41,560 --> 00:20:46,450
This is on a different Raspberry Pi,
that's got a camera right in front of me.

342
00:20:46,950 --> 00:20:50,680
I'm doing that because it's grabbing
that, though it looks, pretty silly.

343
00:20:50,980 --> 00:20:52,620
It's sampling some of those.

344
00:20:52,820 --> 00:20:58,760
I was sending every single picture,
every single time, and it was too much.

345
00:20:59,210 --> 00:21:00,050
So I learned my lesson.

346
00:21:00,470 --> 00:21:03,680
That's just, into my own
little local network here.

347
00:21:04,020 --> 00:21:06,110
So we got a bunch of those coming in.

348
00:21:06,410 --> 00:21:08,850
those are going to a
different Kafka topic.

349
00:21:09,180 --> 00:21:12,650
And it's also going, as you can
see here, into my Slack channel.

350
00:21:13,390 --> 00:21:16,940
And it's a picture of me
waving my hands around.

351
00:21:17,360 --> 00:21:20,970
obviously in different environments,
it could be more interesting.

352
00:21:20,970 --> 00:21:23,500
But just, it is an example
of what you can do.

353
00:21:24,385 --> 00:21:26,095
Pretty cool there.

354
00:21:26,645 --> 00:21:34,465
Now we've got our Kafka data coming in and
it's JSON with all these fields like we

355
00:21:34,465 --> 00:21:37,285
saw and we could have pushed it to Avro.

356
00:21:37,295 --> 00:21:40,895
We could push it into other formats,
out of schema, what have you.

357
00:21:41,705 --> 00:21:47,035
again, if you're doing a more in depth
app, you've got a lot of options there.

358
00:21:47,910 --> 00:21:49,960
So let's look at some of these resources.

359
00:21:50,130 --> 00:21:52,840
This is more on that
pose estimation stuff.

360
00:21:53,430 --> 00:21:57,650
I've got an article, got source
code, everything you need there.

361
00:21:58,150 --> 00:22:01,400
Then we got another one that
does a little, more on that.

362
00:22:02,380 --> 00:22:06,237
I've got the code separate, code for
the other piece, walkthrough article.

363
00:22:06,237 --> 00:22:11,490
I also have a group, how to
be an AI engineer, walk you

364
00:22:11,490 --> 00:22:14,400
through some of the basics and
different open source tech there.

365
00:22:14,400 --> 00:22:15,590
You might want to check that out.

366
00:22:16,090 --> 00:22:23,670
This one is combining AI and IoT,
talking about air quality and how

367
00:22:23,670 --> 00:22:25,310
you could do rag against that.

368
00:22:25,810 --> 00:22:27,140
It's still interesting.

369
00:22:27,440 --> 00:22:30,350
I do another one with
street cameras in New York.

370
00:22:30,350 --> 00:22:32,370
They have a lot of them
publicly available.

371
00:22:32,780 --> 00:22:37,580
As long as you sign up, you can see what's
happening in the streets of New York and

372
00:22:37,580 --> 00:22:42,410
as if we've seen recently, potentially
very interesting things going on.

373
00:22:42,910 --> 00:22:43,980
I'm Tim Spann.

374
00:22:44,890 --> 00:22:46,280
check my code out.

375
00:22:46,780 --> 00:22:48,390
Make sure we automate everything.

376
00:22:48,460 --> 00:22:52,050
But as long as we have enough cats
involved, we'll be in a good place.

377
00:22:52,890 --> 00:22:55,570
thank you for, attending this virtually.

378
00:22:56,190 --> 00:23:00,070
Oh, I got some other
example here on, GTFS.

379
00:23:00,070 --> 00:23:01,940
If you haven't heard about that.

380
00:23:02,250 --> 00:23:04,430
This is not exactly IoT.

381
00:23:04,810 --> 00:23:10,960
But this is where, different transport
systems, give you access to data, and

382
00:23:10,960 --> 00:23:16,380
you can, see where, for example, this one
where the Boston buses are, and I wrote

383
00:23:16,380 --> 00:23:23,510
a Python processor here that takes, a
GTFS URL, converts it into JSON, and then

384
00:23:23,510 --> 00:23:28,720
we could split it up, convert it just
to fields we want, get it into format we

385
00:23:28,720 --> 00:23:33,530
want, and then I could do a lookup Now I
can probably convert that into a snowflake

386
00:23:33,550 --> 00:23:35,670
lookup and we'll be pretty cool there.

387
00:23:36,070 --> 00:23:39,680
But if you like anything you see
here and you're looking for more,

388
00:23:40,410 --> 00:23:42,520
definitely take a look at my newsletter.

389
00:23:42,520 --> 00:23:44,350
There's always all the examples.

390
00:23:44,410 --> 00:23:48,710
When this video comes out, I'll
have it here with the slides here.

391
00:23:48,970 --> 00:23:49,890
Everything you need.

392
00:23:50,040 --> 00:23:50,430
Thank you.

