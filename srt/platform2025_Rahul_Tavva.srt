1
00:00:00,500 --> 00:00:01,080
Hello everyone.

2
00:00:01,080 --> 00:00:02,070
This is Tawa.

3
00:00:02,070 --> 00:00:05,220
I'm a senior network engineer, senior
network delivery lead at Cairos

4
00:00:05,220 --> 00:00:07,470
Technologies based out of Dallas, Texas.

5
00:00:07,979 --> 00:00:11,040
Today I'm going to talk about
building prediction ready,

6
00:00:11,040 --> 00:00:12,299
ML based network routing,

7
00:00:12,799 --> 00:00:17,360
and we discuss about traditional
routing, ML based routing, compare

8
00:00:17,600 --> 00:00:19,700
both ML and the traditional routing.

9
00:00:19,730 --> 00:00:24,240
Also, I'll talk about, how to train
models and the real case studies.

10
00:00:24,740 --> 00:00:26,509
And then also ROI.

11
00:00:26,720 --> 00:00:29,509
And in implementing ML based routing,

12
00:00:30,009 --> 00:00:35,380
the evolving network routing landscape
routing protocols like B-G-P-O-S-P-F

13
00:00:35,590 --> 00:00:37,630
have been around for decades.

14
00:00:37,990 --> 00:00:41,920
They are reliable, but they were
designed for a different time.

15
00:00:42,790 --> 00:00:45,130
They use fixed rules.

16
00:00:45,220 --> 00:00:49,480
They take too long to recover
when something breaks and still.

17
00:00:50,125 --> 00:00:53,125
Rely a lot on manual
tuning from engineers.

18
00:00:53,455 --> 00:00:57,055
In today's world of cloud
microservices and real time

19
00:00:57,055 --> 00:00:59,905
application, that's not good enough.

20
00:01:00,175 --> 00:01:05,544
We need something smarter, faster, and
more adaptive to the current scenarios.

21
00:01:06,044 --> 00:01:08,954
ML based routing coming
to the core concept.

22
00:01:09,374 --> 00:01:14,294
ML based routing brings flexibility,
which is the key, instead of

23
00:01:14,294 --> 00:01:18,854
relying on the fixed rules, ML
system learns from network data.

24
00:01:19,354 --> 00:01:23,524
They watch traffic spot
patterns and make predictions.

25
00:01:23,764 --> 00:01:28,475
That means they can route traffic
more intelligently, balance, speed,

26
00:01:28,475 --> 00:01:31,175
cost, and reliability all at once.

27
00:01:31,624 --> 00:01:35,499
They can even direct
unusual patterns that might.

28
00:01:36,169 --> 00:01:40,969
Mean a failure or a system or a
security issue, and the best part,

29
00:01:41,479 --> 00:01:45,559
they get better as they learn and
adapt to the current environment.

30
00:01:46,059 --> 00:01:48,579
Coming to the technical
architecture of the ML based

31
00:01:48,579 --> 00:01:50,859
routing, let's see how it works.

32
00:01:51,129 --> 00:01:53,409
First, collect data collection.

33
00:01:53,459 --> 00:01:57,869
We collect telemetry, all the
signals from the network, like

34
00:01:57,869 --> 00:02:00,619
latency packet loss, and throughput.

35
00:02:01,039 --> 00:02:06,109
That data goes into a pipeline that
cleans it up and makes it usable.

36
00:02:06,609 --> 00:02:12,220
Then we have the ML training system where
models are built, tested, and stored.

37
00:02:12,489 --> 00:02:17,920
Finally, we have inference system,
which applies those models in real

38
00:02:17,920 --> 00:02:20,109
time to make routing decisions.

39
00:02:20,140 --> 00:02:26,260
And of course, we always keep fallbacks
and safety switches so that the network

40
00:02:26,260 --> 00:02:28,450
stays stable if something goes wrong.

41
00:02:28,950 --> 00:02:32,434
Let's compare ML based routing
versus traditional routing.

42
00:02:32,934 --> 00:02:34,674
Traditional routing is rule-based.

43
00:02:34,734 --> 00:02:37,674
It reacts only after a problem happens.

44
00:02:38,064 --> 00:02:39,474
ML routing is smarter.

45
00:02:39,924 --> 00:02:40,959
It took it.

46
00:02:40,964 --> 00:02:45,684
It looks at hundreds of factors,
predicts issues before they even happen

47
00:02:46,075 --> 00:02:48,355
and can reroute traffic proactively.

48
00:02:48,594 --> 00:02:52,134
So instead of waiting for
something to break, the network

49
00:02:52,134 --> 00:02:53,904
can fix itself in advance.

50
00:02:54,404 --> 00:02:57,075
Coming to data collection and
model training approaches.

51
00:02:58,005 --> 00:02:59,534
Data is the fuel here.

52
00:03:00,255 --> 00:03:06,105
We need to collect everything, link
usage, latency, packet loss, application

53
00:03:06,105 --> 00:03:10,755
patterns, and even things like time of
the day and scheduled maintenance when

54
00:03:10,755 --> 00:03:16,874
it comes to training data options like
supervised learning, using parts, past

55
00:03:16,964 --> 00:03:21,920
best practices to train the models and
reinforcement learning where the model

56
00:03:22,040 --> 00:03:24,980
tries things and learns by feedback.

57
00:03:25,939 --> 00:03:31,699
Or the hybrid approach, we can mixing m
by mixing ml with traditional routing,

58
00:03:31,939 --> 00:03:34,519
the this is the better and most diverse.

59
00:03:34,939 --> 00:03:37,469
Diverse the data and the smarter the model

60
00:03:37,969 --> 00:03:40,099
coming to the production
deployment patterns.

61
00:03:40,549 --> 00:03:46,279
You don't just slip a switch and hand
over your network to ML just overnight.

62
00:03:46,699 --> 00:03:52,054
It actually need to go rolled out
through a phased manner, coming to the

63
00:03:52,054 --> 00:03:54,184
first phase, which is the shadow mode.

64
00:03:54,244 --> 00:03:58,355
ML makes decisions, but only on papers.

65
00:03:58,595 --> 00:04:00,785
Advisory mode, ML suggests routes.

66
00:04:01,085 --> 00:04:03,665
And when, and the engineers
need to approve them.

67
00:04:04,085 --> 00:04:08,374
And selective automation, which
is a third phase ml, takes over

68
00:04:08,374 --> 00:04:13,085
certain traffic, like critical
data, non-critical data and certain

69
00:04:13,085 --> 00:04:16,535
regions which are of low criticality.

70
00:04:17,045 --> 00:04:21,095
And then coming to the final phase,
which is a full automation ml, runs the

71
00:04:21,095 --> 00:04:23,795
show with all protocols as a backup.

72
00:04:24,185 --> 00:04:27,875
This step-by-step approach builds
trust and avoids surprises.

73
00:04:28,375 --> 00:04:34,285
Coming to monitoring observability
challenges monitoring ml routing isn't

74
00:04:34,285 --> 00:04:36,805
just about checking if links are up.

75
00:04:37,225 --> 00:04:41,815
We also need to see how the model
is doing, how accurate it is,

76
00:04:42,085 --> 00:04:46,645
whether it's drifting, and how
confident it is in each decision.

77
00:04:47,034 --> 00:04:52,104
Dashboards need to show side-by-side
comparisons of ML and traditional

78
00:04:52,104 --> 00:04:55,794
routes and explain why the
model picked a certain path.

79
00:04:56,215 --> 00:05:01,465
This transparency builds confidence
and helps operators trust their system.

80
00:05:01,965 --> 00:05:07,575
Coming to security consideration for
ML routing, security is a very key.

81
00:05:08,385 --> 00:05:12,104
If someone poisons your data,
they can mess with your routes.

82
00:05:12,244 --> 00:05:15,064
If they figure out your
model, they can exploit it.

83
00:05:15,394 --> 00:05:16,744
So we need to product.

84
00:05:17,149 --> 00:05:23,209
En encrypt the telemetry, validate
inputs, use anomaly detection, and make

85
00:05:23,209 --> 00:05:25,789
sure there's always a human override.

86
00:05:25,849 --> 00:05:30,289
In short, the smarter the system,
the smarter the security has to be.

87
00:05:30,789 --> 00:05:32,019
Operational considerations.

88
00:05:32,739 --> 00:05:36,419
Running ML routing day to
day brings new challenges.

89
00:05:36,749 --> 00:05:40,859
What happens if the model suddenly
starts making weird choices?

90
00:05:41,129 --> 00:05:42,689
What if conference drops?

91
00:05:42,899 --> 00:05:44,429
What if telemetry breaks?

92
00:05:44,699 --> 00:05:50,639
We need run books for all these things,
like how to roll back to a safer

93
00:05:50,789 --> 00:05:55,769
version, how to gradually shift traffic,
how to retrain after an incident.

94
00:05:56,159 --> 00:05:59,694
Think of it like adding a
new playbook to your knock.

95
00:06:00,344 --> 00:06:06,104
But m but for ML in specific
failures, real world case studies,

96
00:06:06,604 --> 00:06:08,524
let's look at the real examples.

97
00:06:08,554 --> 00:06:15,394
In financial services, ML routing cut
latency spikes by almost 70% and saved

98
00:06:15,394 --> 00:06:18,154
millions in circuit costs in e-commerce.

99
00:06:18,544 --> 00:06:23,104
ML reduced page load time by
30% during traffic peaks and

100
00:06:23,104 --> 00:06:25,894
cut manual interventions by 95%.

101
00:06:26,254 --> 00:06:29,974
But they were challenges,
compliance concern, false

102
00:06:29,974 --> 00:06:34,714
alarms and model performance
dropping during unusual events.

103
00:06:35,214 --> 00:06:40,464
The payoff is real, but you need patience
and good planning to for a success.

104
00:06:40,464 --> 00:06:41,574
ML implementation.

105
00:06:42,074 --> 00:06:42,524
RI.

106
00:06:42,524 --> 00:06:44,174
Assessment and risk management.

107
00:06:44,444 --> 00:06:46,244
Leaders always ask two things.

108
00:06:46,514 --> 00:06:47,654
What do we gain?

109
00:06:47,864 --> 00:06:48,914
What do we risk?

110
00:06:49,224 --> 00:06:54,864
On the gain side, we see faster recovery,
low la, lower latency, less manual

111
00:06:54,864 --> 00:06:57,204
work, which means real cost savings.

112
00:06:57,384 --> 00:07:02,394
On the other side, there are skill
gaps, data issues, model drift.

113
00:07:02,754 --> 00:07:08,384
The answer is balanced, failed, phase
rolled rollouts, strong fallbacks,

114
00:07:08,504 --> 00:07:12,944
and training your team to handle both
ML and traditional routing together.

115
00:07:13,444 --> 00:07:16,474
Implementation, roadmap
and best practices.

116
00:07:17,044 --> 00:07:20,854
Phase one, get the telemetry
and baseline in place.

117
00:07:21,164 --> 00:07:26,684
Coming to the phase two shadow model
testing and phase three limited

118
00:07:26,684 --> 00:07:28,634
rollout for non-critical traffics.

119
00:07:28,964 --> 00:07:33,824
And phase four is the full deployment
with automation and retraining pipelines

120
00:07:34,324 --> 00:07:35,224
coming to the team.

121
00:07:35,224 --> 00:07:36,574
Structure and skills.

122
00:07:36,964 --> 00:07:39,754
This only works if you have right people.

123
00:07:39,814 --> 00:07:43,474
You need network engineers, data
scientists, platform engineers and

124
00:07:43,954 --> 00:07:49,384
ops teams all working together, each
bringing in different skill sets

125
00:07:49,594 --> 00:07:54,214
and and you need cross training so
they understand each other's world.

126
00:07:54,814 --> 00:07:55,564
To close.

127
00:07:55,564 --> 00:07:57,274
Here are key points.

128
00:07:57,334 --> 00:08:01,144
ML routing is ready enough
for the real use cases.

129
00:08:01,324 --> 00:08:07,564
Hybrid approaches like ML plus traditional
routing work best in today's scenario.

130
00:08:08,014 --> 00:08:12,274
Operations monitoring and people
matter as much as the tech.

131
00:08:12,844 --> 00:08:14,404
The future is very clear.

132
00:08:14,584 --> 00:08:17,854
Networks will become
self-healing and adaptive.

133
00:08:18,154 --> 00:08:22,084
The teams that start now will
be the ones leading the future.

134
00:08:22,324 --> 00:08:23,794
Thank you for this opportunity.

