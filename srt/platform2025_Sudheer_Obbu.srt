1
00:00:00,750 --> 00:00:01,470
Hello everyone.

2
00:00:01,500 --> 00:00:02,820
My name is bu.

3
00:00:03,420 --> 00:00:08,520
As a DevSecOps and multi-cloud
architect, I spent the last 19 years

4
00:00:08,520 --> 00:00:12,959
helping companies architects secure and
optimize their cloud infrastructure.

5
00:00:13,830 --> 00:00:17,430
I have had the opportunity to
lead some incredible projects

6
00:00:17,820 --> 00:00:22,560
from innovating JA based solutions
for AIOps to re-engineering high

7
00:00:22,560 --> 00:00:24,360
performance payment systems.

8
00:00:25,080 --> 00:00:27,125
The topic I'm here to discuss today is.

9
00:00:27,855 --> 00:00:28,245
One.

10
00:00:28,245 --> 00:00:32,295
I am deeply passionate about
building secure AI platforms,

11
00:00:33,135 --> 00:00:37,514
especially as they become more
central to our work these days.

12
00:00:38,475 --> 00:00:44,824
The rapid adoption of a is not just
a technical technology shift, it's a

13
00:00:44,824 --> 00:00:50,935
fundamental change how we operate and with
it comes a new set of security challenges.

14
00:00:51,265 --> 00:00:53,470
The traditional models
simply can't handle.

15
00:00:53,970 --> 00:00:58,800
The race to deploy a at scale
is on, but it's creating some

16
00:00:58,800 --> 00:01:00,390
major security challenges.

17
00:01:01,290 --> 00:01:06,180
We have always relied on traditional
perimeter based security model,

18
00:01:06,630 --> 00:01:09,810
which assumes that anything
inside our network is safe.

19
00:01:10,770 --> 00:01:15,570
That approach is simply not
enough anymore, especially when a

20
00:01:15,570 --> 00:01:20,669
platforms span multiple clouds, edge
locations and hybrid environments.

21
00:01:21,169 --> 00:01:27,050
The world way of thinking where we
built a strong wall around our data

22
00:01:27,050 --> 00:01:32,089
center is completely inadequate when
our data and models are everywhere.

23
00:01:32,589 --> 00:01:34,419
A workloads also introduce new.

24
00:01:35,394 --> 00:01:39,804
And unique threats that targets
the very heart of the technology.

25
00:01:40,554 --> 00:01:46,555
These includes model poisoning where
malicious data is used to corrupt a

26
00:01:46,555 --> 00:01:52,345
model during training data poisoning,
which involves injecting bad data

27
00:01:52,345 --> 00:01:58,615
into the training set to manipulate
the output advisable attacks, which

28
00:01:58,615 --> 00:02:04,465
are specially crafted input designed
to cause a model to de misclassify.

29
00:02:04,965 --> 00:02:11,625
And model extraction attacks where an
attacker reconstructs a proprietary model.

30
00:02:11,685 --> 00:02:17,895
By observing its outputs, the
risk is where risks are high.

31
00:02:18,795 --> 00:02:23,685
A security incident could lead
to compromised models, stolen

32
00:02:23,805 --> 00:02:27,795
intellectual property, and
serious regulatory violations.

33
00:02:28,665 --> 00:02:32,145
The stakes are, have been higher.

34
00:02:32,645 --> 00:02:38,855
The solution is a fundamental shift
to a zero trust model, security model.

35
00:02:39,725 --> 00:02:44,215
The model operates on principle
of never trust, always verify.

36
00:02:44,695 --> 00:02:49,405
Instead of trusting based on the
location, we verify every single

37
00:02:49,405 --> 00:02:54,255
transaction and interaction, we
will explore how this perm shift.

38
00:02:54,885 --> 00:03:00,045
Can help us to build a resilient
and secure platform that we need.

39
00:03:00,545 --> 00:03:03,575
As the diagram on the slide suggest zero.

40
00:03:03,575 --> 00:03:04,985
Trust is complete.

41
00:03:05,165 --> 00:03:12,635
Parm shift instead of the old method
trust, but verify mindset, we now must

42
00:03:12,635 --> 00:03:17,585
assume every component, service and
data flow is potentially compromised.

43
00:03:18,085 --> 00:03:19,945
This is critical distinction.

44
00:03:20,575 --> 00:03:24,415
We are shifting from reactive
stance to proactive one.

45
00:03:25,275 --> 00:03:30,375
We are not just looking for
threats, we are designing our

46
00:03:30,375 --> 00:03:32,835
system to be designed from scratch.

47
00:03:33,675 --> 00:03:36,705
This approach is built
on three core principles.

48
00:03:37,605 --> 00:03:43,635
Verify explicitly, never assume
trust based on location or IP

49
00:03:43,635 --> 00:03:46,695
address every request, every action.

50
00:03:47,205 --> 00:03:55,275
Must be authenticated and authorized use
least privileged access grant, only the

51
00:03:55,275 --> 00:03:57,585
minimal permission necessary for the task.

52
00:03:58,245 --> 00:04:02,475
This dramatically reduces
the potential blast radius of

53
00:04:02,505 --> 00:04:04,335
compromised account or service.

54
00:04:04,835 --> 00:04:09,905
Assume a breach always operate under
the assumption that an attacker

55
00:04:09,905 --> 00:04:11,885
is already inside your network.

56
00:04:12,515 --> 00:04:14,135
This forces us to.

57
00:04:14,495 --> 00:04:19,145
Design our systems with containment
and rapid response in mind.

58
00:04:19,645 --> 00:04:22,525
A workload make this
particularly challenging.

59
00:04:23,025 --> 00:04:27,855
A single machine learning pipeline
might involve dozens of interconnected

60
00:04:27,855 --> 00:04:34,275
services from data ingestion
systems to feature stores, training

61
00:04:34,275 --> 00:04:36,885
orchestrators and model registries.

62
00:04:37,665 --> 00:04:41,655
Applying these principles to that
kind of complexity is crucial.

63
00:04:42,585 --> 00:04:46,275
And it requires us to think
about security in layers.

64
00:04:46,775 --> 00:04:50,315
The first and most critical layer
of zero trust architecture is

65
00:04:50,315 --> 00:04:52,085
identity and access management.

66
00:04:52,845 --> 00:04:56,835
For a, this goes beyond
just authenticating users.

67
00:04:57,525 --> 00:05:03,015
We need to manage the identity of
services, models, and even data itself.

68
00:05:03,515 --> 00:05:07,325
This is because a workloads
often involves a complex.

69
00:05:07,895 --> 00:05:12,275
Complex web of service to
service communication, not

70
00:05:12,275 --> 00:05:14,135
just a person who logged in.

71
00:05:14,855 --> 00:05:15,815
Let's break in.

72
00:05:15,845 --> 00:05:18,215
Break down three key components here.

73
00:05:18,715 --> 00:05:20,525
Service identity management.

74
00:05:21,185 --> 00:05:26,585
Each service must processes a
cryptographically verifiable identity that

75
00:05:26,585 --> 00:05:29,315
can be validated across all interactions.

76
00:05:30,065 --> 00:05:30,215
This is.

77
00:05:30,715 --> 00:05:37,485
Important as a workload span, multiple
environment, mutual TLS authentication.

78
00:05:37,985 --> 00:05:42,395
This ensures that every
communication between microservices

79
00:05:42,395 --> 00:05:44,255
is encrypted and authenticated.

80
00:05:45,125 --> 00:05:51,185
It's a fundamental way to make sure that
only authorized services can talk to each

81
00:05:51,185 --> 00:05:56,620
other, preventing compromised service from
freely moving throughout your network.

82
00:05:57,120 --> 00:06:02,270
Certificate management a's platform
requires automated certificate

83
00:06:02,270 --> 00:06:07,390
rotation, a secure distribution,
key distribution, and revocation

84
00:06:07,390 --> 00:06:09,280
mechanism that operates at scale.

85
00:06:10,240 --> 00:06:14,980
The challenge intensifies when
training job may scale from single

86
00:06:14,980 --> 00:06:21,430
node to hundreds of workers within a
minutes requires an identity system

87
00:06:21,430 --> 00:06:23,890
that can handle this dynamic scale.

88
00:06:24,390 --> 00:06:25,425
N Network segment.

89
00:06:25,485 --> 00:06:29,685
The second layer is network
segmentation and mis microsegmentation.

90
00:06:30,185 --> 00:06:36,395
We need to move beyond simple VLANs to
isolated individual workloads, tenant

91
00:06:36,395 --> 00:06:39,395
environments, and data processing stages.

92
00:06:40,205 --> 00:06:44,945
This is about creating secure
isolated zones within your network

93
00:06:45,275 --> 00:06:46,925
regardless of physical location.

94
00:06:47,425 --> 00:06:53,605
This is tricky because a workloads
have unique networking needs, like

95
00:06:53,665 --> 00:06:58,725
high throughput communication, CL For
GPU communication, these requirements

96
00:06:58,725 --> 00:07:03,165
often conflicts with the traditional
network security controls that might

97
00:07:03,165 --> 00:07:05,085
introduce an acceptable latency.

98
00:07:05,585 --> 00:07:09,875
The solution lies in using
software defined networking.

99
00:07:10,375 --> 00:07:13,675
That can be dynamically create a
security communication channels

100
00:07:13,675 --> 00:07:17,725
between authorized services while
blocking all unauthorized access.

101
00:07:18,225 --> 00:07:21,305
The third layer is data
security and model protection.

102
00:07:21,875 --> 00:07:26,135
This is arguably the most
critical aspect of a security.

103
00:07:26,855 --> 00:07:31,365
A model is only trustworthy
as the data it was trained on.

104
00:07:32,195 --> 00:07:37,685
And compromised data can result
in biased, unreliable, or

105
00:07:37,685 --> 00:07:39,815
maliciously manipulated models.

106
00:07:40,685 --> 00:07:47,405
This s layer focus focuses on
protecting the life blood of a systems,

107
00:07:48,335 --> 00:07:50,354
the data and models themselves.

108
00:07:51,075 --> 00:07:54,405
Let's look at three essential components.

109
00:07:54,905 --> 00:07:56,225
Data line is tracking.

110
00:07:56,434 --> 00:08:01,145
It is essential that every piece of
training data be tracked back to its

111
00:08:01,145 --> 00:08:07,335
source with the cryptographic verification
of its integrity through through

112
00:08:07,395 --> 00:08:09,345
throughout the process of pipeline.

113
00:08:09,845 --> 00:08:13,985
This is our primary defense
against data poisoning attacks,

114
00:08:14,885 --> 00:08:16,325
feature storage, security.

115
00:08:17,105 --> 00:08:22,055
Centralized repositories of machine
learning features require sophisticated

116
00:08:22,055 --> 00:08:27,095
access controls that understand the
sensitivity of different data types.

117
00:08:27,725 --> 00:08:28,235
We need.

118
00:08:28,625 --> 00:08:33,690
We need fine grained permissions at
feature level to prevent unauthorized

119
00:08:33,690 --> 00:08:35,690
access and extra filtration.

120
00:08:36,190 --> 00:08:38,110
So model specific attack protection.

121
00:08:38,890 --> 00:08:42,295
This involves defense a against
model extraction attacks.

122
00:08:42,795 --> 00:08:48,525
That attempts to steal intellectual
property and advisable attacks designed

123
00:08:48,525 --> 00:08:50,775
to cause model misclassification.

124
00:08:51,345 --> 00:08:57,765
Additionally, while standard encryption
is must for a workloads, we must need

125
00:08:57,765 --> 00:09:04,005
to consider more advanced materials
like homo graphic encryption, secure

126
00:09:04,995 --> 00:09:10,125
multi-party competition to protect
data while it's being competed.

127
00:09:10,785 --> 00:09:15,015
The meta methods are complex, but
offer a high degree of protection

128
00:09:15,625 --> 00:09:17,185
for sensitive competitions.

129
00:09:17,685 --> 00:09:22,665
Now let's combine the last two layers,
runtime, security, and observability.

130
00:09:23,165 --> 00:09:27,745
Securing a platforms at runtime
demand a different approach.

131
00:09:28,245 --> 00:09:32,985
A workload often run for
extensive periods, consume

132
00:09:33,075 --> 00:09:35,445
significant resources and require.

133
00:09:36,030 --> 00:09:41,120
Privileged access to specialized
hardware like GPUs, which increases

134
00:09:41,120 --> 00:09:42,650
the potential for a breach.

135
00:09:43,640 --> 00:09:48,800
Our monitoring must be accurately
differentiated between legitimate

136
00:09:48,800 --> 00:09:53,300
behavior, like a burst resource
consumption, and subtile

137
00:09:53,305 --> 00:09:54,680
signs of security breach.

138
00:09:55,310 --> 00:09:58,940
This leads us to the final
layer, the comprehensive

139
00:09:58,940 --> 00:10:00,490
monitoring and observability.

140
00:10:00,990 --> 00:10:06,270
We need to track data quality,
model performance, infrastructure,

141
00:10:06,300 --> 00:10:07,560
health simultaneously.

142
00:10:07,800 --> 00:10:11,280
This means using a specific monitoring.

143
00:10:11,850 --> 00:10:16,350
This tracks metrics that indicates
potential security compromises, such

144
00:10:16,350 --> 00:10:24,015
as model accuracy, degradation, unusual
query patterns, robust log aggregation.

145
00:10:24,515 --> 00:10:30,035
We need to process extensive
logging output from triaging jobs,

146
00:10:30,455 --> 00:10:36,065
high volume access logs from model
servicing systems and specialized

147
00:10:36,065 --> 00:10:38,435
GPU performance metrics at scale.

148
00:10:38,935 --> 00:10:44,605
Specific incident response, we must
have a specific runbook for a scenarios.

149
00:10:45,355 --> 00:10:49,095
This includes procedures
for model rollbacks.

150
00:10:49,815 --> 00:10:56,475
Responding to data breach that involves
compromised training data and automated

151
00:10:56,475 --> 00:10:59,445
quarantine of compromised workloads.

152
00:10:59,945 --> 00:11:01,865
So where do you start?

153
00:11:02,525 --> 00:11:04,685
A phased incremental approach is key.

154
00:11:05,165 --> 00:11:07,565
You can't do everything at once.

155
00:11:08,405 --> 00:11:11,645
Service, identity and
management begin here.

156
00:11:12,155 --> 00:11:17,915
By implementing mutual TLS authentication
between AA services and establishing

157
00:11:18,575 --> 00:11:22,385
the certificate management process,
this provides immediate security

158
00:11:22,385 --> 00:11:25,025
benefits network segmentation.

159
00:11:25,535 --> 00:11:28,655
Next, move to next network segmentation.

160
00:11:29,135 --> 00:11:35,615
Start with the broad network policies
that isolate between different types of

161
00:11:35,765 --> 00:11:41,195
a workloads and then gradually implement
more sophisticated microsegmentation.

162
00:11:41,600 --> 00:11:47,570
As you learn more about your traffic
pattern, data security controls for

163
00:11:47,570 --> 00:11:53,330
data security, begin with the data
classification and lineage tracking

164
00:11:53,330 --> 00:11:59,720
before you implement more complex
controls like Homo Graphic encryption,

165
00:12:00,020 --> 00:12:02,750
our security multi-platform competition.

166
00:12:03,140 --> 00:12:05,025
Secure multi-party competition.

167
00:12:05,775 --> 00:12:08,885
Remember this is not just a technical
challenge, it's a cultural one.

168
00:12:09,385 --> 00:12:15,145
You have to work closely with data
scientist who may view security controls

169
00:12:15,325 --> 00:12:20,695
as absolute to rapid innovation,
obstacle to the rapid innovation.

170
00:12:21,295 --> 00:12:26,035
The goal is to design security
controls that enhance, not

171
00:12:26,035 --> 00:12:27,265
hinder their productivity.

172
00:12:27,765 --> 00:12:31,939
Now let's talk about the specific
technologies and tools that are

173
00:12:31,939 --> 00:12:33,949
essential for building a security.

174
00:12:34,460 --> 00:12:37,430
Secure a platform based
on zero test model.

175
00:12:37,930 --> 00:12:43,250
The technology choices you may
significantly impact both of

176
00:12:43,250 --> 00:12:46,850
your security effectiveness and
operative com operational complexity.

177
00:12:47,350 --> 00:12:52,470
Platform engineers must evaluate their
tools for their compatibility with

178
00:12:52,470 --> 00:12:57,360
the, a specific requirement like GPU
scheduling, high performance networking,

179
00:12:57,930 --> 00:13:00,810
and specialized storage systems.

180
00:13:01,800 --> 00:13:04,640
First consider service me Technologies.

181
00:13:05,090 --> 00:13:12,210
Tools like SDO are AWS app mesh provides
more critical capabilities for service

182
00:13:12,210 --> 00:13:14,190
to service authentication and encryption.

183
00:13:15,030 --> 00:13:20,520
They are the backbone of Zero test
network, allowing you to enforce

184
00:13:20,520 --> 00:13:24,840
granular security policies without
changing the application code itself.

185
00:13:25,650 --> 00:13:29,700
However, it's vital to test your workload.

186
00:13:30,165 --> 00:13:33,585
To ensure that they don't
introduce unacceptable latency

187
00:13:33,795 --> 00:13:35,655
that could cripple performance.

188
00:13:36,155 --> 00:13:38,525
Next, we have container orchestration.

189
00:13:39,035 --> 00:13:45,875
Kubernetes is the defacto standard,
but for a you, your cluster often

190
00:13:45,965 --> 00:13:51,815
requires a specialized node pools with
D resources, high bandwidth networking

191
00:13:52,235 --> 00:13:54,305
and large scale storage attachments.

192
00:13:54,805 --> 00:14:00,355
These are not your typical web server
workloads and your orchestration platform

193
00:14:00,355 --> 00:14:04,975
must be able to manage these specialized
hardware equipment effectively.

194
00:14:05,965 --> 00:14:10,435
Finally, you need to robust
observability platforms.

195
00:14:10,935 --> 00:14:16,175
These platforms must be able to handle the
unique monitoring requirements of a. This

196
00:14:16,175 --> 00:14:22,275
goes beyond standard CPU and me memory
metrics to include include things like

197
00:14:22,275 --> 00:14:28,005
GPU, utilization training, loss calls and
model servicing, latency distribution.

198
00:14:28,605 --> 00:14:32,955
Without this level of detail,
you can't accurately monitor the

199
00:14:32,985 --> 00:14:35,235
health and security of a systems.

200
00:14:35,735 --> 00:14:42,185
A major concern with zero trust is
the potential performance impact as

201
00:14:42,185 --> 00:14:47,375
a workload, incredibly sensitive, and
to latency and throughput degradation.

202
00:14:48,035 --> 00:14:52,775
But there are ways to
optimize encryption overhead.

203
00:14:53,765 --> 00:14:58,715
Select algorithm optimize algorithms
optimized for high throughput scenarios.

204
00:14:58,760 --> 00:15:03,440
And leverage hardware acceleration
encryption capabilities in modern

205
00:15:03,440 --> 00:15:07,030
processor processors and network cards.

206
00:15:07,840 --> 00:15:12,220
This moves the heavy lift from
software to specialized hardware

207
00:15:12,720 --> 00:15:18,270
authorization latency, cash
authentication tokens, and use

208
00:15:18,550 --> 00:15:21,010
efficient authorization engines.

209
00:15:21,850 --> 00:15:22,930
You can also consider.

210
00:15:23,800 --> 00:15:30,190
Authentication delegation where a trusted
proxy service handle authentication

211
00:15:30,370 --> 00:15:35,590
for high frequency operations and
reduce the workload on your servers

212
00:15:36,460 --> 00:15:38,790
services network policy impact.

213
00:15:39,695 --> 00:15:44,665
Benchmark your policy implementation
with rep, representative

214
00:15:44,890 --> 00:15:46,930
workloads to find bottlenecks.

215
00:15:47,560 --> 00:15:47,920
Consider.

216
00:15:48,760 --> 00:15:53,680
A graduated security model where
performance sensitive communication

217
00:15:53,680 --> 00:16:00,150
receive streamlined processing, monitoring
overhead use a sampling strategy and a

218
00:16:00,150 --> 00:16:04,620
synchronous logging to maintain visibility
without slowing down your systems.

219
00:16:05,430 --> 00:16:12,600
It's about getting the right data, not all
the data, and processing it in a way that.

220
00:16:13,590 --> 00:16:15,690
Doesn't bottleneck your operations

221
00:16:16,190 --> 00:16:19,910
as a platform become more
integrated into our businesses.

222
00:16:20,720 --> 00:16:25,490
They also fall under a growing number
of complex regulatory frameworks.

223
00:16:26,120 --> 00:16:32,005
We are not just talking about traditional
regulations like G-G-D-P-R, HIPAA anymore.

224
00:16:32,505 --> 00:16:37,035
We also have to deal with the new
emerging a specific legislations.

225
00:16:37,535 --> 00:16:43,445
These frameworks require secure controls
that not only offer technical protection,

226
00:16:43,445 --> 00:16:49,295
but also provide a clear path to
comprehend com compliance verification.

227
00:16:49,795 --> 00:16:54,815
Some of the key challenges we face
in this area include data resilience.

228
00:16:55,315 --> 00:17:01,525
Data residency requirements for
global platform and the need of

229
00:17:02,215 --> 00:17:04,375
region specific security controls.

230
00:17:04,875 --> 00:17:10,215
The Zero trust approach helps
us address these challenges, but

231
00:17:10,215 --> 00:17:12,705
also introduce a new complexities.

232
00:17:13,205 --> 00:17:19,505
For instance, audit logging become
more even critical in a environment

233
00:17:19,715 --> 00:17:21,605
where a training processes.

234
00:17:22,205 --> 00:17:27,425
May run for an extended period and
generate massive amount of operational

235
00:17:27,425 --> 00:17:32,195
data we need to able to process
and analyze this data at scale.

236
00:17:33,185 --> 00:17:40,145
Furthermore, new a regulation regulations
are introducing requirement for model

237
00:17:40,145 --> 00:17:43,165
com explainability and transparency.

238
00:17:43,665 --> 00:17:48,585
This means our security monitoring
systems must be able to provide a

239
00:17:48,585 --> 00:17:53,945
detailed visibility into a model
decision making process, all

240
00:17:54,095 --> 00:17:55,595
while protecting sensitive data.

241
00:17:56,045 --> 00:18:00,575
It's delegate balance between
providing a transparency and

242
00:18:00,575 --> 00:18:01,985
maintaining confidentiality.

243
00:18:02,485 --> 00:18:03,130
Looking ahead.

244
00:18:03,835 --> 00:18:09,565
The in intersection of zero trust and AI
security is evolving at a rapid space.

245
00:18:10,315 --> 00:18:15,085
To stay ahead of emerging threats
platform engineers need to

246
00:18:15,085 --> 00:18:18,835
keep an eye on few key trends.

247
00:18:19,165 --> 00:18:23,125
First, there is a con
confidential computing.

248
00:18:23,625 --> 00:18:29,055
This technology uses hardware based
security capabilities to enhance.

249
00:18:29,555 --> 00:18:35,870
To enable security model training
and interfa inference on under

250
00:18:36,370 --> 00:18:37,630
untrusted infrastructure.

251
00:18:38,130 --> 00:18:41,340
It's a game changer for data
protection and workload isolation,

252
00:18:42,300 --> 00:18:46,830
as it fundamentally cha changes
how we approach these problems.

253
00:18:47,400 --> 00:18:49,620
Next, we have a learning.

254
00:18:50,120 --> 00:18:52,265
This approach reduces debt exposure.

255
00:18:53,060 --> 00:18:57,790
To keep training data and decentralized,
it creates a new challenge

256
00:18:57,940 --> 00:19:03,970
managing a security of complex
distributed systems that require

257
00:19:03,970 --> 00:19:05,950
sophisticated security orchestration.

258
00:19:06,450 --> 00:19:12,350
We also seeing the rise of AI power,
secu power security emerging tools can

259
00:19:12,410 --> 00:19:18,165
help automate zero security, zero trust,
policy enforcement, and incident response.

260
00:19:18,860 --> 00:19:25,490
For AA platforms, this is crucial for
handling the scale and complexity of

261
00:19:25,880 --> 00:19:31,600
modern systems and helps to reduce
operational burdens on our teams.

262
00:19:32,230 --> 00:19:38,770
Finally, a more long term consideration
is post quantum cryptography.

263
00:19:39,280 --> 00:19:43,570
While we may be years away
for practical quantum threats,

264
00:19:44,200 --> 00:19:46,630
it is never too early for.

265
00:19:47,365 --> 00:19:53,335
Platform engineers to begin considering
post quantum implementation to ensure

266
00:19:53,335 --> 00:19:55,645
long-term security of AA systems.

267
00:19:56,145 --> 00:20:01,425
In summary, implementing zero trust for
AI platform represents a fundamental

268
00:20:01,425 --> 00:20:05,295
shift in how the organization
approach infrastructure security.

269
00:20:05,955 --> 00:20:08,415
We can't rely on world security models.

270
00:20:08,915 --> 00:20:14,345
We must build resiliency into
infrastructure from the ground up.

271
00:20:14,845 --> 00:20:20,995
The unique characteristics of a workloads
require these specialized approaches.

272
00:20:21,955 --> 00:20:26,035
Success requires close collaboration
between platform engineering,

273
00:20:26,305 --> 00:20:29,005
security, and a development teams.

274
00:20:29,505 --> 00:20:31,830
Security cannot be afterthought.

275
00:20:32,570 --> 00:20:36,465
It might, it must be designed into
the platform architecture from the

276
00:20:36,465 --> 00:20:41,115
ground up, the investment payoff
in many years, in many ways.

277
00:20:41,615 --> 00:20:45,115
You may gain better visibility
into your a operations.

278
00:20:45,475 --> 00:20:52,855
Your compliance posture improves and you
achieve more reliable system performance

279
00:20:53,215 --> 00:20:59,055
is to focus on incremental improvement
rather than wholesale transformation.

280
00:20:59,685 --> 00:21:05,565
Each security control you add provides
immediate value while building towards

281
00:21:05,565 --> 00:21:07,005
more comprehensive architecture.

282
00:21:07,005 --> 00:21:08,085
Looking ahead.

283
00:21:08,585 --> 00:21:13,475
We'll see emerging technologies like
confidential computing and federated

284
00:21:13,925 --> 00:21:20,695
learning fundamentally change the, how
we think about data production and a

285
00:21:20,695 --> 00:21:25,544
power security tools will help us to
automate policy enforcement at scale.

286
00:21:26,044 --> 00:21:26,165
Okay.

287
00:21:26,195 --> 00:21:27,965
Thank you for listening to me.

288
00:21:28,384 --> 00:21:32,584
If you have any questions, you can reach
out to me in my LinkedIn at through email.

