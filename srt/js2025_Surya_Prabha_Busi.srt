1
00:00:00,500 --> 00:00:01,460
Greetings everyone.

2
00:00:01,960 --> 00:00:06,759
Today's presentation is about building
the future applications using the

3
00:00:06,759 --> 00:00:11,709
microservices architecture and the
upcoming edge computing and the quantum

4
00:00:11,709 --> 00:00:17,749
computing, how to develop applications
with the cloud innovation at scale.

5
00:00:18,249 --> 00:00:22,160
And how the, how it is transforming
the JavaScript development through

6
00:00:22,160 --> 00:00:26,649
all these cloud native patterns
and distributed architectures With

7
00:00:26,649 --> 00:00:29,420
this coming to me, I am Surya.

8
00:00:29,920 --> 00:00:33,580
I'm a graduate from JA Ology
University in electronics and

9
00:00:34,000 --> 00:00:38,740
ion engineering, and I come with
around 18 plus years of experience

10
00:00:38,800 --> 00:00:41,349
developing cloud native applications.

11
00:00:41,379 --> 00:00:46,239
And today I am going to, how, explain
how we are exploring the intersection

12
00:00:46,239 --> 00:00:51,249
of JavaScript ecosystem and modern
cloud native architectures to develop

13
00:00:51,300 --> 00:00:53,819
highly scalable digital platforms.

14
00:00:53,869 --> 00:00:57,440
So all through these years I've
been working with many cloud

15
00:00:57,440 --> 00:01:01,980
native applications and seeing
how they're evolving and playing a

16
00:01:01,980 --> 00:01:07,200
major role in today's development
and going to the next slide.

17
00:01:07,700 --> 00:01:11,600
As we all know, all through this
years JavaScript has been one of the

18
00:01:11,600 --> 00:01:16,930
major front end frameworks and how
it's been playing in clear role in

19
00:01:16,930 --> 00:01:18,610
many web applications development.

20
00:01:19,270 --> 00:01:24,100
Today we are going to see how it has
evolved now with the backbone of cloud

21
00:01:24,100 --> 00:01:30,050
native applications and with the global
development and everything being global,

22
00:01:30,050 --> 00:01:34,280
everything, anything, being global
these days, it is highly important to

23
00:01:34,280 --> 00:01:38,180
keep in mind the development of the
application to be highly scalable,

24
00:01:38,420 --> 00:01:40,910
reliable, and easy to maintain.

25
00:01:41,540 --> 00:01:45,310
And so now the JavaScript
developers are now being are.

26
00:01:45,575 --> 00:01:50,835
Protecting using these microservices
and edge computing for solutions

27
00:01:50,955 --> 00:01:56,735
to have the real time responses and
the distributions that can power

28
00:01:56,765 --> 00:02:00,755
how the applications and the digital
platforms can be highly scalable.

29
00:02:01,255 --> 00:02:05,355
The transformation today needs
highly how we build it is highly

30
00:02:05,355 --> 00:02:09,015
impacting how we build and deploy
and manage applications at scale.

31
00:02:09,755 --> 00:02:15,495
With this, I'll try to go to this,
agenda of the meeting, which assumes

32
00:02:15,555 --> 00:02:17,415
which, which looks like this.

33
00:02:17,535 --> 00:02:21,945
Today's session roadmap will start
with the microservices transformation.

34
00:02:22,065 --> 00:02:26,785
How its adoption has a big search, and
what are the architectural challenges

35
00:02:26,785 --> 00:02:28,855
being faced by the development teams.

36
00:02:29,425 --> 00:02:34,315
And then we'll be moving on to the
edge computing and how it is impacting

37
00:02:34,415 --> 00:02:38,165
with a huge latency reduction and
the real time processing of data.

38
00:02:39,125 --> 00:02:43,895
And then we'll move on to the multi-cloud
strategies, how the flexibility versus

39
00:02:43,895 --> 00:02:47,315
complexity trade offs play a key
role in designing and architecting.

40
00:02:48,065 --> 00:02:53,585
Today's applications, and also we'll
look into the serverless, the future

41
00:02:53,585 --> 00:02:56,825
technologies like the serverless and
the quantum computing, which are the

42
00:02:56,825 --> 00:03:02,055
upcoming next generation architectures
with with the technology in its boom.

43
00:03:02,135 --> 00:03:05,375
It comes up with, comes with the
challenges of security as well.

44
00:03:05,375 --> 00:03:09,395
So towards the end, we'll also
discuss how the security also being

45
00:03:09,395 --> 00:03:14,365
evolving with the new models of
the zero trust and how it's being a

46
00:03:14,365 --> 00:03:16,645
major part in the threat deduction.

47
00:03:17,145 --> 00:03:23,375
Sorry, threat detection With this I'll go
into the presentation which starts with.

48
00:03:23,875 --> 00:03:27,025
We'll see how the microservices
architecture has been

49
00:03:27,025 --> 00:03:28,435
evolved with some numbers.

50
00:03:28,435 --> 00:03:32,885
But before that as we understand for
years we have been stuck with monolithic

51
00:03:32,885 --> 00:03:37,515
architecture where everything is being
developed and deployed as a single

52
00:03:37,515 --> 00:03:42,935
unit, which includes all the front end
backend services and business logic.

53
00:03:43,115 --> 00:03:46,925
Everything is single unit being
deployed and as execution.

54
00:03:47,260 --> 00:03:52,450
Executable unit, which makes it
easy for development and deployment.

55
00:03:52,500 --> 00:03:55,960
But as the complexity of the
application grows we have been

56
00:03:56,140 --> 00:04:00,990
facing challenges of updating and
maintaining the application and even

57
00:04:00,990 --> 00:04:03,000
to update to the new technologies.

58
00:04:03,000 --> 00:04:04,740
It's being a great challenge with that.

59
00:04:04,790 --> 00:04:09,920
Became the microservices architecture
as a solution where it's the collection

60
00:04:09,950 --> 00:04:15,490
of individual independent services, each
having its own business logic, making it

61
00:04:15,490 --> 00:04:21,190
easier to develop and deploy, and easy
to update, maintain scalable, what all

62
00:04:21,300 --> 00:04:26,130
the newly trending features of a global
application is required, is satisfied

63
00:04:26,130 --> 00:04:28,230
by this microservices architecture.

64
00:04:28,730 --> 00:04:36,620
And as we see the adoption surge from
2019, which was at 45% now to till

65
00:04:36,620 --> 00:04:40,820
date, it's been surge to 91% as of 2024.

66
00:04:41,660 --> 00:04:46,580
So it has basically changed even
how the, we architect the JavaScript

67
00:04:46,580 --> 00:04:53,030
applications enabling high scalability
and maintainability and easy to operate.

68
00:04:53,530 --> 00:04:53,770
Sorry.

69
00:04:53,980 --> 00:04:58,390
With that, I would like
to go to the next slide.

70
00:04:58,890 --> 00:05:03,930
So let's see how these microservices
performance impacts the applications.

71
00:05:03,960 --> 00:05:06,240
These are some numbers
with some case studies.

72
00:05:06,270 --> 00:05:12,060
We see that there is a six 76% deployment,
time reduction as we understand the

73
00:05:12,060 --> 00:05:18,530
microservices come as a small units and
with its own business logic is where we

74
00:05:18,530 --> 00:05:24,050
can, scale the particular business unit,
which we are expecting more traffic.

75
00:05:24,380 --> 00:05:27,780
So it's easier to deploy
develop and maintain.

76
00:05:28,140 --> 00:05:32,850
So that's what helped to see the 76%
time reduction in the deployment and

77
00:05:32,850 --> 00:05:34,740
through the automation strategies.

78
00:05:35,520 --> 00:05:39,450
And if we see the cost savings,
obviously with the with the.

79
00:05:39,950 --> 00:05:41,300
Monolithic architecture.

80
00:05:41,300 --> 00:05:45,920
With the high amount of infrastructure
involved, we need to be able to

81
00:05:45,920 --> 00:05:47,720
maintain the infrastructure as well.

82
00:05:48,170 --> 00:05:52,460
But with the newer technologies of
cloud obviously the maintenance is

83
00:05:52,510 --> 00:05:56,410
less, and the infrastructure to be
maintained comes down, which brings

84
00:05:56,410 --> 00:06:01,490
the 50% operational cost savings with
all this new optimized containers.

85
00:06:01,590 --> 00:06:03,180
Freely available in the market.

86
00:06:03,610 --> 00:06:06,680
High volume of cloud native
providers are available.

87
00:06:06,680 --> 00:06:12,480
We'll go into the detail details of
that in going forward, but now, and

88
00:06:13,320 --> 00:06:17,390
so we have seen this huge impact
in sense of the positive way.

89
00:06:17,630 --> 00:06:23,250
Coming to the challenges the teams having
today with this microservice architecture

90
00:06:23,250 --> 00:06:29,240
is the clear line of division between
the services of decomposition of the

91
00:06:29,240 --> 00:06:35,910
business logic into the service units is
highly important to design, to high, to

92
00:06:35,910 --> 00:06:40,720
have this highly effective microservice
architecture designed applications.

93
00:06:40,720 --> 00:06:42,625
So that's what we see.

94
00:06:43,555 --> 00:06:48,625
The challenge currently, the teams
have been facing, which has been 67%

95
00:06:48,625 --> 00:06:52,335
absorbed as we go forward with that.

96
00:06:52,835 --> 00:06:56,585
That's pretty much about the
microservice architecture, how it

97
00:06:56,585 --> 00:07:00,515
has evolved, what it means, and
what are the impacts in numbers.

98
00:07:01,035 --> 00:07:04,455
The, another major training
technology is the edge computing.

99
00:07:04,905 --> 00:07:09,565
It brings basically it brings the
computation closer to the data sources

100
00:07:09,625 --> 00:07:14,495
having these JavaScript applications
having the real time processing easily

101
00:07:14,495 --> 00:07:20,485
available and quickly available with
the early, with the, with the quality

102
00:07:20,485 --> 00:07:22,615
and quantity of data is highly critical.

103
00:07:22,755 --> 00:07:27,825
For example, in the healthcare domains or
we be manufacturing where the sensitivity

104
00:07:27,825 --> 00:07:33,725
and quality of data is critical and and
basically the edge computing provides a

105
00:07:33,905 --> 00:07:39,835
high latency reduction as the computation
is done closer to the data sources

106
00:07:39,935 --> 00:07:41,495
with these JavaScript developers.

107
00:07:41,535 --> 00:07:45,765
Now I keep have to keep in mind while
designing to have the edge computing

108
00:07:46,265 --> 00:07:50,555
available while designing and have it
right from the start of the application

109
00:07:50,625 --> 00:07:53,575
design and makes it the applications more.

110
00:07:54,075 --> 00:07:57,585
Effective and delivering
a great user experiences.

111
00:07:58,085 --> 00:08:02,270
As we talked about the edge
computing, let's move on to the next.

112
00:08:02,770 --> 00:08:06,460
So here are some edge computing
performance gains that has now

113
00:08:06,790 --> 00:08:08,980
observed through these years.

114
00:08:09,580 --> 00:08:13,930
With this process improvements, we
see a 45% faster processing times

115
00:08:14,010 --> 00:08:16,980
42% better real time data handling.

116
00:08:17,040 --> 00:08:21,180
And as we talked earlier,
examples, there's a 33%

117
00:08:21,180 --> 00:08:22,710
efficiency boost in healthcare.

118
00:08:23,100 --> 00:08:27,600
Obviously with the right, data
available in a so fast, it's quick

119
00:08:27,600 --> 00:08:31,800
to take decisions and improve the
efficiency in the healthcare provided.

120
00:08:32,670 --> 00:08:38,100
And also we have seen 56 person faster
emergency response in the manufacturing

121
00:08:38,100 --> 00:08:43,190
section where there is huge depend
dependency between different departments

122
00:08:43,190 --> 00:08:48,070
where where they have to go hand in hand
and the data being available real time

123
00:08:48,280 --> 00:08:52,840
between these departments were, has shown
a significant increase in the efficiency.

124
00:08:53,340 --> 00:08:57,440
Now let's talking about now that
we have seen how the microservice

125
00:08:57,440 --> 00:09:01,750
architecture has been playing and
the upcoming edge computing we will

126
00:09:01,750 --> 00:09:08,240
talk about the multi-cloud strategy
and its complexity involved now.

127
00:09:08,740 --> 00:09:12,820
As we all know with this traditional
traditional monolithic, it's, it the

128
00:09:12,820 --> 00:09:17,910
maintenance of the infrastructure being
of hugely complex and also being cost

129
00:09:18,470 --> 00:09:24,140
involved the new mic, the cloud technology
where it's being available in market.

130
00:09:24,170 --> 00:09:26,120
Place from different providers.

131
00:09:26,630 --> 00:09:30,470
It's being a huge impact of this
multi-cloud in designing the

132
00:09:30,470 --> 00:09:34,940
applications and deployment, which
which involves great benefits as

133
00:09:34,940 --> 00:09:36,830
we see the integration challenges.

134
00:09:37,330 --> 00:09:43,270
It was initially when during the adoption
adoption phase, we saw this 52% hurdles

135
00:09:43,270 --> 00:09:49,120
where it is hard to decide between the
hybrid public cloud, private cloud, and

136
00:09:49,370 --> 00:09:54,060
choosing between them and get your right
cloud strategy for your application.

137
00:09:54,480 --> 00:09:55,925
There were some initial challenges.

138
00:09:56,405 --> 00:09:59,135
Which through time has improved a lot.

139
00:09:59,795 --> 00:10:03,775
And as we understand with the
infrastructure being maintained by

140
00:10:03,845 --> 00:10:09,755
providers most of it with the new
the new deployment strategies like

141
00:10:09,755 --> 00:10:14,545
the SaaS pass and infrastructure as a
service, the governance benefits has

142
00:10:14,545 --> 00:10:17,305
hugely reduced in structured cloud.

143
00:10:17,765 --> 00:10:22,145
Cloud governance could lead up
to 41% reduction and helping

144
00:10:22,145 --> 00:10:26,305
the application and the teams to
easily maintain their applications.

145
00:10:26,845 --> 00:10:30,325
And also we understand the cost
optimization as we discussed it.

146
00:10:30,415 --> 00:10:35,575
There's been a significant decrease
of 32% now with moving out from our

147
00:10:35,635 --> 00:10:41,335
monolithic native infrastructure to the
cloud architectures as we understand the

148
00:10:41,335 --> 00:10:43,675
multi-cloud being available in market.

149
00:10:43,825 --> 00:10:44,530
We more on.

150
00:10:45,175 --> 00:10:50,525
To the next slide, which where we are
discussing, I would to discuss how

151
00:10:50,705 --> 00:10:52,895
the cloud architecture is available.

152
00:10:52,895 --> 00:10:55,025
What are the different
types today available?

153
00:10:55,655 --> 00:10:59,125
As we understand there are like the
public clouds which, where you can

154
00:10:59,125 --> 00:11:04,085
share, your cloud space with other
people and other organizations.

155
00:11:04,155 --> 00:11:08,745
With Will It Come, which comes with
much lesser cost as you share your

156
00:11:08,775 --> 00:11:13,665
cloud with others and the private cloud
available, which is specific to you

157
00:11:13,665 --> 00:11:18,285
and which is a little expensive, but
comes with the safety and all the cloud

158
00:11:18,285 --> 00:11:20,655
space available for your organization.

159
00:11:21,255 --> 00:11:23,535
And there's also a hybrid
cloud architecture.

160
00:11:24,170 --> 00:11:26,990
Which is a mix of this
both public and private.

161
00:11:27,590 --> 00:11:32,670
And the right decision and the right
strategy of this cloud architecture

162
00:11:32,670 --> 00:11:37,140
is very important in designing the
today's JavaScript applications.

163
00:11:37,870 --> 00:11:42,220
As we see, the success requires
careful orchestration between public,

164
00:11:42,220 --> 00:11:44,790
private, and edge computing resources.

165
00:11:45,235 --> 00:11:49,465
How critical is the data to be processed
and do we really need the edge computing

166
00:11:49,915 --> 00:11:52,375
and is it effective to our application?

167
00:11:52,465 --> 00:11:55,615
These are the key points to be
taken into consideration while

168
00:11:55,615 --> 00:11:59,545
designing the applications and
the right cloud architecture.

169
00:11:59,965 --> 00:12:03,320
Proof seems to be the mantra
of success these days.

170
00:12:03,820 --> 00:12:07,900
With that, we'll see how this
serverless revolution has come

171
00:12:07,900 --> 00:12:12,870
up as we see these days with the,
everything is available as a service.

172
00:12:12,900 --> 00:12:17,140
Be it, be platform, be it, be
infrastructure, and be it be anything.

173
00:12:17,320 --> 00:12:19,300
There comes the functions as a service.

174
00:12:19,330 --> 00:12:24,640
These serverless architectures have really
transformed the JavaScript development,

175
00:12:24,640 --> 00:12:27,070
the workflows by reducing the complexity.

176
00:12:27,220 --> 00:12:33,220
As we all understand by improving the
scalability, the 33 per, we see a 33%

177
00:12:33,220 --> 00:12:35,230
reduction in the developmental cycles.

178
00:12:35,310 --> 00:12:39,870
Obviously with the lesser amount
of infrastructure worries and

179
00:12:39,920 --> 00:12:42,500
quick date, quick CICD available.

180
00:12:42,990 --> 00:12:46,820
There's a there's a huge reduction
in the development cycles leading

181
00:12:46,820 --> 00:12:50,480
to the faster time to market
for its JavaScript applications.

182
00:12:50,980 --> 00:12:56,110
These benefits include the automatic
scaling the resource manager meant

183
00:12:56,110 --> 00:13:00,430
as this, and also the cost savings
with the paper execution mo model.

184
00:13:00,950 --> 00:13:04,520
If you're not using, there's
no need to pay, so that's paper

185
00:13:04,520 --> 00:13:06,140
execution cost model is showing.

186
00:13:06,590 --> 00:13:08,330
Significant cost reductions.

187
00:13:08,750 --> 00:13:14,480
And with the new CICD technologies
available like the BB Jenkins, the

188
00:13:14,780 --> 00:13:18,950
significantly reducing the deployment
times makes it easier for the business

189
00:13:18,950 --> 00:13:23,760
to contract to concentrate on their
business and grow to be highly scalable

190
00:13:23,760 --> 00:13:25,560
and highly effective applications.

191
00:13:26,160 --> 00:13:29,425
That's how the serverless
revolution plays a key role.

192
00:13:29,925 --> 00:13:34,815
That let me talk on the next topic,
which is the quantum computing.

193
00:13:35,015 --> 00:13:40,065
As we understand it's closely related
to the quantum mechanics wherein huge

194
00:13:40,065 --> 00:13:46,545
chunks of data is processed at a at a
lightning speed, which speeds up by the

195
00:13:46,545 --> 00:13:50,405
25 times in the complex data processing.

196
00:13:50,885 --> 00:13:54,005
So this resulted in the,
a great optimization.

197
00:13:54,125 --> 00:13:58,895
And also the alg, the JavaScript
libraries, being able to integrate

198
00:13:58,895 --> 00:14:00,545
this quantum inspired algorithms.

199
00:14:00,595 --> 00:14:02,435
It's still under research.

200
00:14:02,615 --> 00:14:07,655
We are would say this is the future, the
quantum computing going to be our future.

201
00:14:08,525 --> 00:14:10,205
This is good to know as of now.

202
00:14:10,205 --> 00:14:13,705
But significant results have
been proven until date, but

203
00:14:13,765 --> 00:14:15,655
it's still under re research.

204
00:14:16,135 --> 00:14:17,365
So that's what.

205
00:14:17,970 --> 00:14:21,570
We are seeing here about the quantum
computing, which highly results

206
00:14:21,570 --> 00:14:25,860
in the speeding up of the data
processing at a lightning speed.

207
00:14:26,360 --> 00:14:29,995
After that, I would like to,
as we said earlier, the asset.

208
00:14:30,660 --> 00:14:32,190
Technology is being in great.

209
00:14:32,190 --> 00:14:32,580
Boom.

210
00:14:33,030 --> 00:14:38,010
There comes the issues with the security
as well, which leads us to this zero

211
00:14:38,010 --> 00:14:42,800
trust, security evolution where the
least privilege is being provided to the

212
00:14:43,040 --> 00:14:48,890
users and the security being, security
being very tight, not allowing everyone

213
00:14:48,890 --> 00:14:50,840
to have every access to everything.

214
00:14:51,170 --> 00:14:55,030
The access would've be provided
on the need basis which highly

215
00:14:55,030 --> 00:15:00,260
reduces the threats and having
access to malicious acts.

216
00:15:00,445 --> 00:15:05,125
Activities would highly be reduced,
and we see a 37 improvement with this

217
00:15:05,125 --> 00:15:09,625
threat reduction and mitigating the
security threats with this zero trust.

218
00:15:09,705 --> 00:15:13,815
And as I said this identity
verification provides access to

219
00:15:13,815 --> 00:15:18,575
where and when needed only to the
specific people and least privilege

220
00:15:18,575 --> 00:15:20,045
is being maintained all through the.

221
00:15:20,545 --> 00:15:21,685
Application development.

222
00:15:21,745 --> 00:15:25,355
And this involves the continuous
authentication and authorization

223
00:15:25,415 --> 00:15:27,335
for every service integration.

224
00:15:27,835 --> 00:15:32,245
So we talked about the microservices
architecture and how the edge

225
00:15:32,245 --> 00:15:33,775
computing playing a key role.

226
00:15:33,835 --> 00:15:37,555
And there comes the service less
architecture and the quantum

227
00:15:37,555 --> 00:15:42,425
mechanics, and how we can highly
secure this with the recent zero

228
00:15:42,425 --> 00:15:44,585
trust, security of all evolution.

229
00:15:44,585 --> 00:15:45,815
We'll move on to.

230
00:15:46,315 --> 00:15:47,725
The next slide.

231
00:15:48,225 --> 00:15:49,485
So that's great.

232
00:15:49,545 --> 00:15:50,775
Everything looks good.

233
00:15:50,775 --> 00:15:53,695
But obviously everything
comes with challenges as well.

234
00:15:53,755 --> 00:15:58,645
Now we are trying to see the actionable
insights how JavaScript engineers

235
00:15:59,185 --> 00:16:03,405
have to keep in mind and effectively
use all these technologies to design

236
00:16:03,405 --> 00:16:05,145
and develop their applications.

237
00:16:05,775 --> 00:16:09,625
So the very first point is coming
to the microservice architecture

238
00:16:09,685 --> 00:16:13,315
where we understand it is the
collection of individual services.

239
00:16:13,815 --> 00:16:17,895
Excuse me, individual services
having their own business logic.

240
00:16:18,625 --> 00:16:22,965
There comes the challenge of the service
decomposition right understanding of

241
00:16:22,965 --> 00:16:28,595
the business is key in designing these
services, which is being initially was a

242
00:16:28,595 --> 00:16:32,935
challenge where, with this decomposition
and having a right business knowledge.

243
00:16:33,395 --> 00:16:36,465
But going moving forward, it it
has greatly improved and we are

244
00:16:36,465 --> 00:16:38,895
seeing effective results with
the microservice architecture.

245
00:16:39,395 --> 00:16:44,165
Also, the key component as we
discussed, the highly available

246
00:16:44,165 --> 00:16:45,845
and reliable data is keen.

247
00:16:45,925 --> 00:16:51,065
Critical data critical industries like the
healthcare and the manufacturing, we where

248
00:16:51,065 --> 00:16:55,775
the edge computing has been, has to be put
into place and the first thing to be put

249
00:16:55,775 --> 00:16:59,825
in place while developing the JavaScript
applications right from the start.

250
00:17:00,605 --> 00:17:05,335
Then we understand, also understand,
that the multi-cloud governance, it

251
00:17:05,335 --> 00:17:10,465
should be effective to decide to reap the
right benefits of having the right cloud

252
00:17:10,515 --> 00:17:14,055
strategy designed to decide what you need.

253
00:17:14,055 --> 00:17:16,875
Is it be public or the
cloud or the hybrid?

254
00:17:17,205 --> 00:17:22,305
Having the right knowledge was really
important to, to design the cloud

255
00:17:22,305 --> 00:17:27,445
strategy required and providing a
great governance for, reliability,

256
00:17:27,445 --> 00:17:30,415
benefits, cost and reliability benefits.

257
00:17:30,535 --> 00:17:35,625
There comes also the security which we
discussed, which involves the integrate

258
00:17:35,725 --> 00:17:39,805
the zero trust principles while building
the security into every layer of your

259
00:17:39,805 --> 00:17:42,535
JavaScript and provide leads to privilege.

260
00:17:43,035 --> 00:17:48,545
Policy so that it's tightly secured and
highly effective within with the security.

261
00:17:49,045 --> 00:17:53,335
With this insights for the future
development of the, for the JavaScript

262
00:17:53,335 --> 00:17:56,705
engineers we'll try go to the next.

263
00:17:57,205 --> 00:17:59,995
So that's all about my presentation today.

264
00:17:59,995 --> 00:18:02,895
Thank you and looking
forward for any questions.

265
00:18:02,895 --> 00:18:03,260
Thank you.

