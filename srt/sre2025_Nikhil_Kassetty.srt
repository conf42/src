1
00:00:00,500 --> 00:00:01,069
Hi everyone.

2
00:00:01,714 --> 00:00:03,395
This is Nickel cai.

3
00:00:03,965 --> 00:00:07,685
I'm a software engineer specialized
in cloud AI and FinTech.

4
00:00:08,285 --> 00:00:12,425
I'm super excited to be
here at Con 42 SRE 2025.

5
00:00:13,055 --> 00:00:16,355
I'll walk you through how we can
supercharge distributed systems using

6
00:00:16,355 --> 00:00:20,675
Kubernetes, not just for orchestration,
but for realtime optimization.

7
00:00:20,675 --> 00:00:23,795
Driven by ai, we'll explore
how to stay resilient.

8
00:00:24,040 --> 00:00:27,910
Scale, smart and also respond and
milliseconds, all while reducing

9
00:00:27,910 --> 00:00:29,830
costs and also improving uptime.

10
00:00:30,400 --> 00:00:35,830
Whether you're an e-commerce, finance,
IO ot, or SRE at scale, you'll

11
00:00:35,830 --> 00:00:37,420
walk away with practical ideas.

12
00:00:37,420 --> 00:00:38,410
You can apply today.

13
00:00:38,559 --> 00:00:40,870
Let's dive in and get to the next slide.

14
00:00:41,370 --> 00:00:44,339
Now let's get back and look at
what we are really solving here.

15
00:00:44,639 --> 00:00:48,569
Today's distributed systems are powerful,
but they come with c Ds complexity.

16
00:00:49,139 --> 00:00:53,789
First, we are scaling like crazy, more
data, more nodes, and also more regions.

17
00:00:54,149 --> 00:00:55,440
But are we scaling smart?

18
00:00:56,129 --> 00:00:59,099
The thing is often not really
without a clear strategy.

19
00:00:59,099 --> 00:01:02,940
This leads to cows components,
bottleneck services, draft out of

20
00:01:02,940 --> 00:01:05,550
sync, and also things break under load.

21
00:01:06,135 --> 00:01:07,845
Latency also can become a killer.

22
00:01:07,905 --> 00:01:11,175
A few milliseconds of delay can
mean the difference between smooth

23
00:01:11,505 --> 00:01:13,095
UX and also the customer drop off.

24
00:01:13,875 --> 00:01:15,375
And then thing is the downtime.

25
00:01:15,375 --> 00:01:16,905
So that's not just annoying.

26
00:01:17,025 --> 00:01:19,605
It also costs revenue and damages trust.

27
00:01:19,965 --> 00:01:26,160
Even a short outage can ripple across user
basis and without complexity comes risk.

28
00:01:26,655 --> 00:01:31,155
The more moving parts you have, the
harder it is to maintain security

29
00:01:31,155 --> 00:01:34,485
and availability, especially
when the attack surface grows.

30
00:01:35,384 --> 00:01:37,364
Most systems are still reactive.

31
00:01:37,664 --> 00:01:42,824
We fix problems after they occur,
when alerts, fire logs explored,

32
00:01:42,824 --> 00:01:44,414
and also like the users complain.

33
00:01:44,414 --> 00:01:47,505
But what if we could get
ahead of this all cows?

34
00:01:47,924 --> 00:01:51,945
What if we could predict failure,
detect anomalies instantly and scale

35
00:01:51,945 --> 00:01:53,535
intelligently before things break?

36
00:01:54,055 --> 00:01:56,095
That's where this talk leads to today.

37
00:01:56,155 --> 00:02:00,264
I'll walk you through how the use
of Kubernetes plus AI to shift from

38
00:02:00,264 --> 00:02:04,164
reacting to predicting, preventing
and optimizing is going to work.

39
00:02:04,794 --> 00:02:06,894
Let's next get to the next slide.

40
00:02:07,394 --> 00:02:10,335
So here we just discussed
like what are some basic

41
00:02:10,335 --> 00:02:12,465
foundations of modern resilience?

42
00:02:13,040 --> 00:02:16,880
As we say, like Kubernetes forms a
core of our architecture and for a good

43
00:02:16,880 --> 00:02:20,960
reason to, so first, it offers auto
scaling, which means the system can

44
00:02:20,960 --> 00:02:26,780
instantly respond to traffic spikes or
depths, and no manual tuning needed here.

45
00:02:27,320 --> 00:02:28,700
Then there self-healing.

46
00:02:28,940 --> 00:02:33,890
If a container crashes, Kubernetes
just pins up another without anything,

47
00:02:33,950 --> 00:02:35,750
or like anyone lifting a finger.

48
00:02:35,990 --> 00:02:39,350
Rolling updates, let us push
changes without downtime.

49
00:02:39,680 --> 00:02:43,460
Keeping systems available while
deploying new features, and also with

50
00:02:43,460 --> 00:02:47,660
service discovery and built-in load
balancing routing traffic is seamless,

51
00:02:47,660 --> 00:02:50,540
even as services scale or shift.

52
00:02:51,135 --> 00:02:54,645
And the next thing, what we can
discuss ideally is like affinity rules.

53
00:02:54,705 --> 00:02:58,485
So these are very important as we
see affinity rules help play spots

54
00:02:58,485 --> 00:03:01,665
on the right notes, optimizing
for performance or isolation.

55
00:03:02,025 --> 00:03:05,625
And the last and final thing is
the security policies and resource

56
00:03:05,625 --> 00:03:09,825
limits, which gives us the guardrails
to keep everything secure, stable,

57
00:03:09,855 --> 00:03:12,015
and fair across different workloads.

58
00:03:12,405 --> 00:03:15,615
So Kubernetes gives us the
operational muscle, but what

59
00:03:15,615 --> 00:03:17,565
if it could also think ahead?

60
00:03:17,790 --> 00:03:19,680
That's where AI comes in.

61
00:03:20,040 --> 00:03:23,175
So let's get to the next slide
and see what we can do with ai.

62
00:03:23,675 --> 00:03:27,265
So we can just think about how
the system architecture can

63
00:03:27,265 --> 00:03:30,655
be enhanced using artificial
intelligence on a high level here.

64
00:03:30,985 --> 00:03:34,705
So here's how we made our system not
just reactive, but also intelligent.

65
00:03:35,665 --> 00:03:38,935
At the base, we are collecting
live metrics and logs from

66
00:03:38,935 --> 00:03:40,135
all across the cluster.

67
00:03:40,465 --> 00:03:44,725
Things like CPU memory and POD
status and traffic patterns

68
00:03:45,205 --> 00:03:46,735
are monitored and collected.

69
00:03:47,050 --> 00:03:51,790
These streams feed into our AI ML layer,
which does the heavy lifting forecasting

70
00:03:51,790 --> 00:03:56,170
resource needs, spotting anomalies,
and also optimizing the placement.

71
00:03:56,830 --> 00:03:59,680
Then we have the decision
engine, the brain of the system.

72
00:03:59,680 --> 00:04:04,899
It combines modal outputs with logic
to make decisions that triggering or

73
00:04:04,899 --> 00:04:06,519
scaling, moving workloads or even.

74
00:04:07,090 --> 00:04:11,080
Alerting is serious, and over
time it learns becoming better

75
00:04:11,080 --> 00:04:12,640
with every decision it makes.

76
00:04:12,910 --> 00:04:16,510
So we are not just automating here,
we are anticipating at a higher level.

77
00:04:17,080 --> 00:04:19,510
So the next thing, what we
would like to discuss here is.

78
00:04:20,010 --> 00:04:23,560
AI models that the, that's the
power of the system, right?

79
00:04:23,800 --> 00:04:28,330
So AI models, let's talk about the brains
behind this operation are AI models.

80
00:04:28,630 --> 00:04:30,790
We use LS CM models or forecasting.

81
00:04:30,790 --> 00:04:35,290
They give us a heads up on resource
spikes so we can scale before even

82
00:04:35,290 --> 00:04:40,445
things get tied for anomaly detection,
isolation forest helps us spot severe

83
00:04:40,805 --> 00:04:46,630
behavior like crypto jacking or container
escapes or react fast can be also done.

84
00:04:47,040 --> 00:04:51,240
We use PPOA reinforcement learning
model to figure out the most efficient

85
00:04:51,240 --> 00:04:53,460
placement of workloads across the cluster.

86
00:04:53,910 --> 00:04:56,790
This alone improved our
resource usage by 18%.

87
00:04:56,840 --> 00:05:00,660
18% seems like a small number,
but ideally in terms of a

88
00:05:00,660 --> 00:05:02,910
resource is 18% is really huge.

89
00:05:03,270 --> 00:05:04,590
And finally, random for us.

90
00:05:04,590 --> 00:05:08,250
Help us product if something is
likely to fail so we can fix it

91
00:05:08,250 --> 00:05:10,620
even before it breaks These models.

92
00:05:10,620 --> 00:05:14,760
Turn our infrastructure into a smart
predictive system, not just like a.

93
00:05:15,055 --> 00:05:16,855
More of a, just like a reactive one.

94
00:05:17,355 --> 00:05:21,965
Going to the next slide, we can
here discuss real time scaling

95
00:05:22,025 --> 00:05:24,485
and resource allocation here.

96
00:05:24,875 --> 00:05:28,295
The, I would say like real time
scaling and resource allocation.

97
00:05:28,355 --> 00:05:29,974
This is more like a game changer.

98
00:05:30,375 --> 00:05:31,435
I would say ai.

99
00:05:32,155 --> 00:05:32,635
Helps.

100
00:05:32,735 --> 00:05:35,815
I would say like AI helps us scale
before even what's the right word?

101
00:05:35,815 --> 00:05:37,045
Even before we suffer.

102
00:05:37,375 --> 00:05:41,395
So in traditional systems, we wait
for CPU to spike or latency to

103
00:05:41,395 --> 00:05:43,345
creep in and then scaling kick.

104
00:05:43,735 --> 00:05:47,065
But by that point, users
may already feel the lag.

105
00:05:47,465 --> 00:05:50,975
With AI driven forecasting,
we know what's coming.

106
00:05:51,335 --> 00:05:55,085
We can scale up or down
proactively, not reactively.

107
00:05:55,625 --> 00:05:59,645
The result, the smoother ex user
experience, and also like lower

108
00:05:59,645 --> 00:06:01,865
infrastructure costs altogether.

109
00:06:01,865 --> 00:06:06,155
And also like the minimal risk of over
poisoning can also be handled here

110
00:06:06,635 --> 00:06:08,735
because we respond in subsecond time.

111
00:06:08,735 --> 00:06:12,575
The system stays ahead, always ready,
and also like always optimized.

112
00:06:13,075 --> 00:06:17,335
The next thing I would like to discuss
here is more about the security,

113
00:06:17,335 --> 00:06:21,355
which is really important in any use
cases, even like even if it is with

114
00:06:21,355 --> 00:06:24,385
Kubernetes, with ai, without AI anytime.

115
00:06:24,385 --> 00:06:25,255
It's really important.

116
00:06:25,915 --> 00:06:29,695
So when we think about availability,
most people, I really focus on

117
00:06:29,695 --> 00:06:33,745
infrastructure and traffic, but
what really brings systems down

118
00:06:33,745 --> 00:06:35,935
fast are the security threats.

119
00:06:36,535 --> 00:06:39,655
That's we build AI directly
into our security stack.

120
00:06:40,075 --> 00:06:44,755
First, we use behavioral threat detection
to identify suspicious container or

121
00:06:44,755 --> 00:06:49,525
power activity like crypto mining,
privileged escalation or unexpected file

122
00:06:49,525 --> 00:06:52,045
accesses before it can impact services.

123
00:06:52,585 --> 00:06:56,455
Our smart API monitoring here
tracks how internal and also

124
00:06:56,455 --> 00:06:59,005
the external APIs access.

125
00:06:59,515 --> 00:07:04,165
If something deviates from the norm,
it's flagged immediately and action

126
00:07:04,165 --> 00:07:05,965
is taken before any performance step.

127
00:07:06,630 --> 00:07:11,670
On the network side, our system spots
anomalies like data acceleration

128
00:07:11,970 --> 00:07:17,460
or DDoS attempts within extreme
LI low false positive rate.

129
00:07:18,420 --> 00:07:22,340
It was like very, pretty much I
would say I. Good improvement for us,

130
00:07:22,340 --> 00:07:25,490
because low false positive rate is
something really important in general.

131
00:07:25,940 --> 00:07:27,230
So what is the biggest win here?

132
00:07:27,230 --> 00:07:31,100
So threats are mitigated in under
three seconds, and also that

133
00:07:31,100 --> 00:07:34,970
keeps latency, low force, and also
availability high even in the face of

134
00:07:34,970 --> 00:07:39,860
active attacks and with self-learning
models, the system keeps evolving.

135
00:07:40,745 --> 00:07:43,715
Improving its detection,
accuracy, and also as it

136
00:07:43,715 --> 00:07:45,605
encounters new patterns and risks.

137
00:07:45,965 --> 00:07:48,815
The security here isn't
about just protection.

138
00:07:48,815 --> 00:07:51,245
It's critical piece of insuring uptime.

139
00:07:51,745 --> 00:07:55,465
And the next thing I would like
to discuss here is the disaster

140
00:07:55,465 --> 00:07:57,505
recovery and fault tolerance.

141
00:07:58,005 --> 00:08:02,895
I would say let's face it, however, like
how optimized or secure any system is,

142
00:08:02,895 --> 00:08:04,455
the failures will still happen, right?

143
00:08:04,995 --> 00:08:09,015
So what happens, or like what
matters most is how quickly and

144
00:08:09,015 --> 00:08:10,845
intelligently we can ideally recover.

145
00:08:11,505 --> 00:08:15,705
Our system uses AI to continuously
scan for early warning signs.

146
00:08:15,705 --> 00:08:18,120
Whether it's discs, we may leaks.

147
00:08:18,380 --> 00:08:21,890
Or degrade in node health and it
predicts failures even before it occur.

148
00:08:22,820 --> 00:08:26,810
Once a risk is detected, the risk
assessment engine evaluates how

149
00:08:26,810 --> 00:08:31,370
critical it is and in seconds it
generates a disaster recovery plan

150
00:08:31,370 --> 00:08:33,980
tailored to our life cluster state.

151
00:08:34,520 --> 00:08:37,790
We are relying on predefined
static playbooks here.

152
00:08:38,150 --> 00:08:42,510
These plans are adaptive and
dynamic before the current.

153
00:08:42,610 --> 00:08:43,240
Moment.

154
00:08:43,240 --> 00:08:47,500
In fact, if action is needed, that
platform can orchestrate failover

155
00:08:47,650 --> 00:08:52,090
on the demand or like automatically
keeping our RTO under 15 minutes.

156
00:08:52,540 --> 00:08:56,620
In the real time replication in
place, we keep RPO under five minutes.

157
00:08:56,620 --> 00:08:59,230
So the data loss is minimal to none.

158
00:08:59,650 --> 00:09:03,310
All of this is AI driven,
automated, and first helping us

159
00:09:03,310 --> 00:09:07,150
stay resilient, available and always
ready even during the unexpected.

160
00:09:07,650 --> 00:09:12,950
And the next thing I would like to discuss
to see overall like real world results,

161
00:09:12,950 --> 00:09:18,170
how they are pleased, and also like how
AI plus Kubernetes can be put in action.

162
00:09:18,770 --> 00:09:22,460
Here's all what are the tools
like when it's real in production

163
00:09:22,460 --> 00:09:24,470
at scale across industries.

164
00:09:24,860 --> 00:09:29,390
In e-commerce, AI powered auto scaling
helps one platform cut infrastructure

165
00:09:29,390 --> 00:09:35,735
costs by 31% while maintaining
99.99% uptime across thousands of

166
00:09:35,735 --> 00:09:39,740
nodes, even during FLA seals or like
even during the seasonal spikes.

167
00:09:40,485 --> 00:09:45,195
In financial services, the combination of
predictive security and automated failover

168
00:09:45,645 --> 00:09:50,475
reduced incident by 45% and achieved
five nine's availability for their most

169
00:09:50,475 --> 00:09:54,015
critical systems, even including trading,
which is the most important thing here

170
00:09:54,515 --> 00:09:57,065
for iot platforms, which run at the edge.

171
00:09:57,485 --> 00:09:58,625
AI helped optimize.

172
00:09:58,890 --> 00:10:03,780
Resource usage, cutting data
transfer cost by 40%, and also

173
00:10:03,780 --> 00:10:06,180
improving edge performance by 35%.

174
00:10:06,630 --> 00:10:10,745
That's a massive win with every
MB and millisecond that matters.

175
00:10:11,445 --> 00:10:12,145
And in pharma.

176
00:10:13,015 --> 00:10:17,125
Also air driven forecasting and disaster
recovery, kept supply chains stable

177
00:10:17,125 --> 00:10:21,955
during global disruption, preventing like
stockouts when demand was unpredictable

178
00:10:22,015 --> 00:10:23,545
and also logistics or chaotic.

179
00:10:24,295 --> 00:10:28,345
These are rare results made possibly
by combining AI's intelligence

180
00:10:28,345 --> 00:10:32,485
with Kubernetes orchestration
power and the next thing in

181
00:10:32,485 --> 00:10:33,895
the future, what can be done?

182
00:10:33,955 --> 00:10:35,305
So ideally, like there are some.

183
00:10:36,050 --> 00:10:38,210
Whenever we develop something,
there's always something we

184
00:10:38,210 --> 00:10:39,380
can expect in the future.

185
00:10:39,380 --> 00:10:43,670
Like a new things that can help us
given getting better and better.

186
00:10:44,120 --> 00:10:48,470
So getting to that point, like how
the automation towards autonomous

187
00:10:48,470 --> 00:10:49,850
infrastructure can help here.

188
00:10:50,540 --> 00:10:53,540
Let's end by looking at
where this all is going.

189
00:10:53,540 --> 00:10:57,560
So what we have built so far
with AI enhanced Kubernetes, it's

190
00:10:57,560 --> 00:10:59,540
powerful, but it's still automation.

191
00:10:59,570 --> 00:11:00,800
The future is autonomy.

192
00:11:01,280 --> 00:11:04,790
Imagine infrastructure that
doesn't just scale or heal it.

193
00:11:04,805 --> 00:11:05,435
Things.

194
00:11:05,435 --> 00:11:07,205
It forecasts, it makes decisions.

195
00:11:07,715 --> 00:11:11,735
AI agents will soon make real time
infrastructure choices, rerouting

196
00:11:11,735 --> 00:11:16,115
traffic, spinning up clusters,
preemptively blocking threats, and often

197
00:11:16,115 --> 00:11:18,935
we are even aware of the issue, right?

198
00:11:19,565 --> 00:11:19,985
And to build.

199
00:11:20,485 --> 00:11:24,475
I would say like into be trust in
these autonomous systems, we'll need

200
00:11:24,475 --> 00:11:29,815
explainable ai where every scaling,
even security block or even securities

201
00:11:29,965 --> 00:11:34,765
steps, or even the recovery steps is
traceable and also like justified.

202
00:11:35,635 --> 00:11:38,485
We are also heading toward
federated intelligence here.

203
00:11:38,795 --> 00:11:42,125
That is also one possible way that
we can expect in the future where

204
00:11:42,125 --> 00:11:46,085
clusters learn from each other
across geographies and environments.

205
00:11:46,415 --> 00:11:49,445
Imagine global resilience
turned by shared insights.

206
00:11:50,015 --> 00:11:54,365
This all leads to the autonomous
sari where machines don't just assess

207
00:11:54,365 --> 00:11:57,095
humans, they take charge of operations.

208
00:11:57,455 --> 00:12:02,045
As engineers, our role shifts
from operators to strategists.

209
00:12:02,370 --> 00:12:05,160
From writing rules to
the training systems.

210
00:12:05,490 --> 00:12:09,060
So this is what I wanted to talk
about on a very short note, like how

211
00:12:09,060 --> 00:12:14,670
Kubernetes plus AI can really help
these systems like scaled and also

212
00:12:14,670 --> 00:12:18,660
with high availability, and also on the
level of security on different levels.

213
00:12:19,160 --> 00:12:21,860
Thank you for all
listening to my talk today.

214
00:12:21,950 --> 00:12:26,605
I'm ready to answer any questions
or any concerns or any other

215
00:12:27,125 --> 00:12:29,345
queries that everyone have here.

