1
00:00:00,500 --> 00:00:04,190
Building large scale for tolerant
and reliable systems is a, the

2
00:00:04,190 --> 00:00:07,110
long process is a hectic process.

3
00:00:07,210 --> 00:00:11,800
It goes over multiple iterations,
but everything that's large and

4
00:00:11,800 --> 00:00:13,930
long starts with some basic blocks.

5
00:00:14,470 --> 00:00:18,435
And one of the basic blocks here
is having the right mindset.

6
00:00:18,685 --> 00:00:22,755
The stock will explore about framing your
thoughts, having the right mindset and

7
00:00:22,755 --> 00:00:26,925
cultivating it over the period of time so
that you get your infrastructure right.

8
00:00:27,255 --> 00:00:28,005
Hello, everyone.

9
00:00:28,185 --> 00:00:33,705
This is, I work for Google on Google
search infrastructure and the stock.

10
00:00:33,710 --> 00:00:37,145
I will be talking to you through the
lessons that I have learned over the

11
00:00:37,145 --> 00:00:42,305
course of these years, and basically
building high, highly reliable,

12
00:00:42,365 --> 00:00:43,895
fault tolerant, and scalable.

13
00:00:44,435 --> 00:00:46,115
Webscale applications.

14
00:00:46,455 --> 00:00:50,325
My experience ranges from like small
scale startups to this large behe North

15
00:00:50,325 --> 00:00:55,755
Google, and I'll be laying down some
basic principles that are really required

16
00:00:55,755 --> 00:01:00,890
for you to define and decide what should
be your thought process while going

17
00:01:00,890 --> 00:01:04,040
about building any large scale systems.

18
00:01:04,540 --> 00:01:08,400
Before we actually start taking deeper
into how do we cultivate the mindset of

19
00:01:08,400 --> 00:01:13,200
being an sre, let's try to understand what
a, what a definition of an SRE is and how

20
00:01:13,200 --> 00:01:15,240
that has really evolved over the course.

21
00:01:15,930 --> 00:01:20,190
Over the course of last 30, 35
years, I feel there has been lot

22
00:01:20,190 --> 00:01:24,260
going on in the computer society and
the computer as far as in 30 years.

23
00:01:24,650 --> 00:01:28,820
We started somewhere around main
competitors, used to set up, used

24
00:01:28,820 --> 00:01:30,805
to set up switches, all handheld.

25
00:01:31,305 --> 00:01:35,685
It has evolved to a state where in
2000 there was a dotcom bubble, a

26
00:01:35,685 --> 00:01:39,195
dotcom post where like thousands
of dotcom sites came online.

27
00:01:39,765 --> 00:01:44,315
People started thinking internet
as a new way of, of basically,

28
00:01:44,585 --> 00:01:49,145
serving services, giving out
information, and tons of companies

29
00:01:49,145 --> 00:01:51,305
came online and did the rock compost.

30
00:01:51,515 --> 00:01:52,835
Internet was an era.

31
00:01:53,285 --> 00:01:57,395
And last 10 years, what I see is there's
something called a cloud burst that

32
00:01:57,395 --> 00:02:01,655
has really happened where multi-tenant
architectures, SaaS applications

33
00:02:01,655 --> 00:02:04,125
have really taken a long haul.

34
00:02:04,305 --> 00:02:08,195
You see like tons of applications
SaaS applications are now thriving

35
00:02:08,195 --> 00:02:11,375
in the industry, and they all
really started around two.

36
00:02:11,875 --> 00:02:15,385
Pick any big cloud providers, they
are thriving as of today, and that

37
00:02:15,385 --> 00:02:20,810
has really made a drastic shift from
like, you know, what, managing a, a,

38
00:02:20,815 --> 00:02:25,734
a mainframe computer was what managing
the physical color was, what was what

39
00:02:26,005 --> 00:02:29,125
you really need to do when you're
dealing in virtual your environments.

40
00:02:29,425 --> 00:02:32,454
You don't have to deal with all
the physical environments, but to

41
00:02:32,454 --> 00:02:35,755
some degree, the principles have
still stayed the same, but there

42
00:02:35,755 --> 00:02:37,915
has been a big that has happened.

43
00:02:38,394 --> 00:02:39,475
If you move ahead.

44
00:02:39,834 --> 00:02:41,274
Like the present era.

45
00:02:41,274 --> 00:02:47,185
The present era is kind of an AI era where
you see a big boost of agent applications.

46
00:02:47,185 --> 00:02:51,055
And what I see here on is like in
next 10 years, this agent applications

47
00:02:51,355 --> 00:02:52,795
would be the next big thing.

48
00:02:52,795 --> 00:02:56,964
And that probably you might have something
you come up after the next 10 years,

49
00:02:56,964 --> 00:03:01,825
but if you see the relationship between
a server and a client, it has evolved.

50
00:03:02,619 --> 00:03:05,290
So has the technologies
that are basically pairing.

51
00:03:05,290 --> 00:03:06,969
These two things together have evolved.

52
00:03:07,599 --> 00:03:11,829
I mean, look at the very basic
technologies like Evolution of two G,

53
00:03:11,829 --> 00:03:14,739
internet, then it went to 3G, 4G, 5G.

54
00:03:15,579 --> 00:03:18,879
You are essentially talking about the
number of bits that are sent over the

55
00:03:18,879 --> 00:03:24,009
network and those are exponentially
going up as those number of bits

56
00:03:24,009 --> 00:03:25,390
that are sent the network have.

57
00:03:26,320 --> 00:03:29,769
So have the threats, so have
the technologies powering them.

58
00:03:30,040 --> 00:03:34,540
So have the customer expectations of
experiences that you should be delivering

59
00:03:34,540 --> 00:03:39,189
to your customers have evolved and so
has the operations that were basically

60
00:03:39,189 --> 00:03:45,100
necessary to support this kind of
heavy internet traffic has changed.

61
00:03:45,309 --> 00:03:50,679
So that's how the evaluation
of computer has basically

62
00:03:50,679 --> 00:03:53,099
evolved the role of engineer.

63
00:03:53,599 --> 00:03:57,140
I should certainly mention that
security and compliance is also a

64
00:03:57,260 --> 00:04:01,489
very important thing that has evolved
with this ever evolving landscape.

65
00:04:01,519 --> 00:04:05,669
And as a site reliability engineer,
I think our perspective of looking

66
00:04:05,669 --> 00:04:09,359
at security and compliances has
changed a lot with lot of things

67
00:04:09,359 --> 00:04:11,639
like G-D-P-R-P-C-I, hipaa, FedRAMP.

68
00:04:12,139 --> 00:04:16,549
And those kind of compliances
are basically making a move site

69
00:04:16,549 --> 00:04:20,599
reliability engineers nowadays
have, have started thinking into how

70
00:04:20,599 --> 00:04:22,729
do I make a system more reliable?

71
00:04:22,729 --> 00:04:25,549
At the same time, I cannot be
compromising on the security

72
00:04:25,549 --> 00:04:26,989
and the compliance aspect of it.

73
00:04:27,589 --> 00:04:33,010
So I think as the reliance on the internet
has increased so has the so has the

74
00:04:33,010 --> 00:04:36,429
feature offerings or the applications
that are served over the internet have.

75
00:04:36,930 --> 00:04:40,320
Streaming very basic application
informational content.

76
00:04:40,350 --> 00:04:45,030
Now we are in the age where you are
basically delivering very critical,

77
00:04:45,210 --> 00:04:50,350
very sensitive information over the
internet and lot of lives, and lot of

78
00:04:50,350 --> 00:04:52,450
people are dependent on the internet.

79
00:04:52,855 --> 00:04:58,165
There there is a big spectrum where you
can basically, basically deliver all

80
00:04:58,165 --> 00:05:03,925
the gamified, gamified, TikTok kind of a
content to delivering critical human care.

81
00:05:04,135 --> 00:05:08,670
So I think it, it becomes more and
more necessary to ensure that your

82
00:05:08,670 --> 00:05:12,270
systems are reliable and people,
real people are depending for

83
00:05:12,270 --> 00:05:13,770
their real needs on the system.

84
00:05:14,580 --> 00:05:18,840
I mean, looking at this thing, I,
I, I, I still feel what has really

85
00:05:19,200 --> 00:05:24,270
made SRA now think is as the systems
have evolving, as this new things

86
00:05:24,270 --> 00:05:26,490
are built, built, we really need to.

87
00:05:26,990 --> 00:05:32,230
I think as as we are mindset the first and
the foremost question that I would really

88
00:05:32,230 --> 00:05:36,430
ask myself is, what's the size of the
problem am I really trying to solve here?

89
00:05:36,880 --> 00:05:40,390
And when I say the size of the
problem, it essentially boils down

90
00:05:40,390 --> 00:05:44,680
to what size of the company, what is
the number of fuses are we talking

91
00:05:44,680 --> 00:05:46,000
about, and what are the company prior?

92
00:05:46,300 --> 00:05:49,750
The priorities and are align
the goals of your role with

93
00:05:49,750 --> 00:05:51,400
the priorities of the company.

94
00:05:51,650 --> 00:05:55,360
For a, in companies of different
sizes, let's say it's a small

95
00:05:55,360 --> 00:06:01,660
scale seed state startup where the
resources are pretty constrained.

96
00:06:01,660 --> 00:06:04,780
You really have limited number of users.

97
00:06:05,170 --> 00:06:09,275
The priority of the company is basically
delivering x number of features.

98
00:06:10,135 --> 00:06:15,935
Y number of days and x and y
higher, unimaginable when basically

99
00:06:15,935 --> 00:06:19,415
come from a large organization
to a small organization where the

100
00:06:19,415 --> 00:06:21,485
delivery speed is very different.

101
00:06:21,795 --> 00:06:26,815
For me, I think the most important that
thing for a small scale organization

102
00:06:26,815 --> 00:06:28,735
would be optimizing for delivery speed.

103
00:06:29,235 --> 00:06:32,355
And sometimes it's, it's fine to
compromise on some of the reliability

104
00:06:32,445 --> 00:06:37,565
aspects there, but probably investing
that you can deliver those features

105
00:06:37,565 --> 00:06:42,145
pretty quickly to the end users and
automation for deliver investing

106
00:06:42,145 --> 00:06:45,595
into the build process so that those
features are quickly and reliability.

107
00:06:46,255 --> 00:06:51,145
It probably would be the most important
thing for that smaller scale organiz.

108
00:06:51,325 --> 00:06:58,105
But as this company scale, as you go
from like a very stage to something like

109
00:06:58,105 --> 00:07:03,895
a growth stage company, series BCDC,
where you have a number of, I think

110
00:07:04,225 --> 00:07:08,260
aspects start taking more precedence,
you really need to be aware that.

111
00:07:08,760 --> 00:07:12,810
Depending on it on the user experience
and the along with the feature.

112
00:07:12,810 --> 00:07:18,930
So you need to basically wear different
hats to ensure that the reliability aspect

113
00:07:19,000 --> 00:07:20,740
of your product is relatively worth.

114
00:07:20,890 --> 00:07:25,700
And then you are also at the same time
investing in the right set of tools to to.

115
00:07:26,200 --> 00:07:30,550
Those set of users, you are basically
investing into the right SLOs.

116
00:07:30,580 --> 00:07:34,810
Defining the right SLOs, finding the
right reliability metrics, monitoring

117
00:07:34,810 --> 00:07:40,630
them over a period of time, ensuring that
you have the right set of technologies

118
00:07:40,630 --> 00:07:42,890
to support those those metrics.

119
00:07:42,890 --> 00:07:44,450
You are basically.

120
00:07:44,825 --> 00:07:48,725
Displaying those metrics on your
site so that people are aware that

121
00:07:49,095 --> 00:07:52,125
they can trust your application,
they can trust your site, and this is

122
00:07:52,125 --> 00:07:55,955
pretty much available on all of the
important SaaS applications you want.

123
00:07:55,955 --> 00:07:56,225
Today.

124
00:07:56,225 --> 00:07:59,855
They kind of display their reliability
metrics and that is more like a, a

125
00:07:59,885 --> 00:08:03,905
selling point for this companies where
they demonstrate that, hey, we have been

126
00:08:03,905 --> 00:08:08,015
99.99% available for like past 60 months.

127
00:08:08,525 --> 00:08:13,845
Whatever, like past 60 days and that's
the reason you should be buying a product.

128
00:08:14,054 --> 00:08:19,455
Most of the security companies are, are
kind of using this metric as a unique

129
00:08:19,455 --> 00:08:23,505
selling point and that basically, is
something that you should be considering

130
00:08:23,834 --> 00:08:25,214
for that stage of the organization.

131
00:08:25,724 --> 00:08:28,955
I think also accordingly, the security
and the compliance requirements evolve

132
00:08:28,985 --> 00:08:30,784
as the com companies get picture.

133
00:08:30,905 --> 00:08:34,044
Maybe you can just do away
with like some basic PC.

134
00:08:34,544 --> 00:08:38,084
IDS is kind of compliances, but as
those mature, maybe FedRAMP could

135
00:08:38,084 --> 00:08:41,624
be a next priority based on the
set of customers you're addressing.

136
00:08:41,674 --> 00:08:44,914
The different security challenges
might need investment into different

137
00:08:45,274 --> 00:08:50,595
tools for delivering the secure
experiences you should need to invest

138
00:08:50,595 --> 00:08:54,075
into those next level of tools and
technologies At that stage of the.

139
00:08:54,710 --> 00:08:57,659
And yeah, I mean that that's what
essentially happens like, you know, as

140
00:08:57,659 --> 00:09:01,979
you grow from a very small organization
to a very large organization, you need

141
00:09:01,979 --> 00:09:07,659
to really prioritize your reliability
story with the size of the organizations,

142
00:09:07,659 --> 00:09:12,669
with the goal of the organization so
that there is some coherence onto what we

143
00:09:12,669 --> 00:09:14,560
are building, how it is being consumed.

144
00:09:14,560 --> 00:09:20,329
And what's the end goal of your, a
very core aspect of design thinking as

145
00:09:20,329 --> 00:09:24,689
far as the reliability is concerned is
important for a site reliability engineer.

146
00:09:24,689 --> 00:09:27,240
You need to really
evolve with the company.

147
00:09:27,739 --> 00:09:31,609
I can, as you are defining what
assertive mindset looks like and how do

148
00:09:31,609 --> 00:09:33,560
you basically cultivate this mindset?

149
00:09:33,560 --> 00:09:36,859
Some of the core principles that
are clearly required by defining

150
00:09:36,859 --> 00:09:40,159
your reliability story is, are some
of the things that I have here.

151
00:09:40,789 --> 00:09:43,999
First thing that I would really
ask myself is what the customer

152
00:09:43,999 --> 00:09:45,289
experience is gonna look like.

153
00:09:45,409 --> 00:09:46,759
What's my end user?

154
00:09:46,909 --> 00:09:50,629
What is it really expecting from my
application, and how can I really

155
00:09:50,629 --> 00:09:52,939
build my reliability story around it?

156
00:09:53,209 --> 00:09:53,569
So.

157
00:09:54,069 --> 00:09:55,269
Building a customer.

158
00:09:55,369 --> 00:09:59,759
Building a SRE mindset really
starts with customer expertise

159
00:09:59,759 --> 00:10:01,410
first, what is your customer?

160
00:10:01,829 --> 00:10:03,780
What is he expecting
from that application?

161
00:10:04,629 --> 00:10:07,869
To put things in more detailed perspective
or like to highlight an example.

162
00:10:07,899 --> 00:10:11,739
Let's say for an example like presently
the company I work for deliver

163
00:10:11,739 --> 00:10:16,299
some end number of 10 blue links
in whatever, X number of seconds.

164
00:10:16,799 --> 00:10:20,939
For us, the most critical, important
and important aspect is basically

165
00:10:20,939 --> 00:10:24,149
delivering those end number of
results within a certain timeframe.

166
00:10:24,269 --> 00:10:28,139
We need to be accurate as much as
possible, and at the same time, you need

167
00:10:28,139 --> 00:10:33,089
to deliver those experiences to the end
user within one second of timeframe.

168
00:10:33,639 --> 00:10:37,419
And that's where most of the optimization
and most of our energy goes in.

169
00:10:37,839 --> 00:10:41,039
Whereas one of the last organization
I've worked for, I think.

170
00:10:41,364 --> 00:10:43,954
Latency was not much of a concern there.

171
00:10:44,014 --> 00:10:48,664
I think back then we really
optimized for reliability.

172
00:10:48,964 --> 00:10:52,744
We had a status page, which basically
said that we have been up for like last

173
00:10:53,164 --> 00:10:56,404
last 30 days for 99.99% of the time.

174
00:10:56,404 --> 00:11:01,384
And that, that is one of our metrics that,
you know, you can reliably trust us to use

175
00:11:01,774 --> 00:11:03,904
and build your application on top of that.

176
00:11:04,354 --> 00:11:07,764
So I think each, each, a
reliability story essentially

177
00:11:07,764 --> 00:11:09,535
starts with customer experience.

178
00:11:09,895 --> 00:11:13,824
And once you get a grip on the
customer experience, you can invest

179
00:11:13,824 --> 00:11:17,724
in the right set of tools, the right
set of technologies, and basically

180
00:11:17,724 --> 00:11:22,954
define your metrics of success for
reliability based on what a customer

181
00:11:22,954 --> 00:11:24,275
experience is gonna look like.

182
00:11:24,785 --> 00:11:29,125
I always think the most important
thing that UNI should to do, not

183
00:11:29,125 --> 00:11:32,905
just from the Sari perspective, but
even from a Korean perspective, is.

184
00:11:33,235 --> 00:11:35,365
Defining before you actually dive.

185
00:11:35,755 --> 00:11:41,515
Planning is the most important aspect
of any career, any phase, and even

186
00:11:41,515 --> 00:11:42,865
for site reliability engineers.

187
00:11:42,865 --> 00:11:47,775
I think that's the most important
thing that we should be doing before

188
00:11:47,775 --> 00:11:49,365
you actually take on any project.

189
00:11:49,785 --> 00:11:51,480
Defining what are the metrics of success.

190
00:11:51,480 --> 00:11:54,990
Writing it down like, you know, Hey, these
are the five set of things that I would be

191
00:11:54,990 --> 00:11:57,300
addressing with my this X, Y, Z project.

192
00:11:57,750 --> 00:11:58,980
These are my end goals.

193
00:11:58,980 --> 00:11:59,970
These are the metrics.

194
00:12:00,330 --> 00:12:04,020
And the SO definitions for me,
this is how I'm basically gonna

195
00:12:04,230 --> 00:12:05,700
chop out the entire landscape.

196
00:12:05,970 --> 00:12:10,140
I think defining well in advance
doesn't really solve the problem, but

197
00:12:10,140 --> 00:12:11,970
it at least keeps you on the track.

198
00:12:11,970 --> 00:12:16,430
It at least keeps you from getting
detract on something that you

199
00:12:16,430 --> 00:12:17,840
shouldn't really be addressing.

200
00:12:17,840 --> 00:12:17,960
It.

201
00:12:18,320 --> 00:12:20,150
It helps people review your plans.

202
00:12:20,150 --> 00:12:22,040
It helps people basically guide you.

203
00:12:22,520 --> 00:12:27,590
So I think defining before you dive
is one of the most important things

204
00:12:27,620 --> 00:12:30,820
that, sRD should consider from
the mindset building perspective.

205
00:12:31,420 --> 00:12:36,640
The third thing that I think is
important is basically balancing velocity

206
00:12:37,300 --> 00:12:40,210
or, or innovation with reliability.

207
00:12:40,300 --> 00:12:44,350
This to some degree I explained in
my previous slide is like, as the

208
00:12:44,620 --> 00:12:47,950
maturity of the organization, as
the size of the organization grows

209
00:12:47,950 --> 00:12:53,680
from x, y, z stage, I think your
reliability story should really evolve.

210
00:12:54,010 --> 00:12:57,970
But there should be a threshold where
you are really balancing the velocity.

211
00:12:58,420 --> 00:13:03,189
You are really balancing your innovation
with reliability because real people

212
00:13:03,189 --> 00:13:06,670
are dependent on real things for
your applica on your application.

213
00:13:06,970 --> 00:13:11,530
I think balancing velocity with
the right reliability knobs

214
00:13:11,650 --> 00:13:13,839
and bolts is, is very crucial.

215
00:13:14,340 --> 00:13:18,895
And the third thing and the fourth
thing that I think is, is crucial.

216
00:13:19,490 --> 00:13:23,240
As a site reliability engineer is
keeping on top of my mind, like, you

217
00:13:23,240 --> 00:13:24,620
know, things are always gonna fit.

218
00:13:24,770 --> 00:13:27,170
Like, you know, you, you
cannot build for success.

219
00:13:27,170 --> 00:13:28,550
You have to design for failure.

220
00:13:29,000 --> 00:13:30,320
Things are always gonna fail.

221
00:13:30,750 --> 00:13:35,440
There are always gonna be eight scenarios
where, which you never consider,

222
00:13:35,470 --> 00:13:38,200
which always stay off your plate.

223
00:13:38,650 --> 00:13:42,640
And which is something
you should replan it once.

224
00:13:42,940 --> 00:13:43,900
And this is where.

225
00:13:44,500 --> 00:13:47,740
This aspect and this design thinking
comes in place like, you know, you

226
00:13:47,740 --> 00:13:49,720
have to really design for failure.

227
00:13:50,180 --> 00:13:54,320
You are not designing for success,
and that way you really bring

228
00:13:54,320 --> 00:13:57,140
in those critical aspects and
critical thoughts on your mind.

229
00:13:57,140 --> 00:13:59,870
Like, you know, what are the
different ways this application can

230
00:13:59,870 --> 00:14:03,320
fail and how could I avoid that?

231
00:14:03,350 --> 00:14:08,300
One of the things I we largely do over at
Google is even like, you know, running a

232
00:14:08,300 --> 00:14:14,380
lot of the tests it's more like a, more
like simulating failures in an application

233
00:14:14,380 --> 00:14:17,685
before you have actually productionalized
it or, or like, you know, you have

234
00:14:17,685 --> 00:14:21,280
onboarded a new feature is like, you know,
running through different scenarios and

235
00:14:21,430 --> 00:14:25,910
trying to simulate what are the different
failure scenarios you can come across.

236
00:14:26,000 --> 00:14:32,030
And whether it's it's degrading
customer experience one another,

237
00:14:32,750 --> 00:14:36,110
do we have the right alerting and
monitoring set up so that we get.

238
00:14:36,185 --> 00:14:39,395
I alert it well in advance
before customer notices it.

239
00:14:40,145 --> 00:14:45,035
And third, do we have the right mitigation
strategies in place so that if in case

240
00:14:45,485 --> 00:14:50,805
there is a fallout, we have a way to
mitigate that thing before customers

241
00:14:50,805 --> 00:14:55,195
actually feel the heat and you have
a bad reputation going out there.

242
00:14:55,465 --> 00:14:57,885
So I think these are like
different strategies.

243
00:14:57,885 --> 00:15:02,175
Guarding, you know, having the
right guardrails for an application

244
00:15:02,255 --> 00:15:03,695
in the build phase in the.

245
00:15:04,200 --> 00:15:08,440
In the, you know like in the delivery
phase and define what are the

246
00:15:08,440 --> 00:15:12,170
different places where like, you
know, your network can fail, your

247
00:15:12,170 --> 00:15:16,940
disks can fail, your servers can
fail, things can go out of order.

248
00:15:16,970 --> 00:15:22,195
As in data centers my previous
company, we ran a multi easy and multi

249
00:15:22,195 --> 00:15:23,815
data center kind of infrastructure.

250
00:15:24,145 --> 00:15:26,485
Just to ensure that, you know,
if a specific data center of a

251
00:15:26,485 --> 00:15:30,685
specific region is down, we are
always taken care by another region.

252
00:15:30,690 --> 00:15:34,845
You know, there is failover scenarios,
there is replication, there is like, you

253
00:15:34,845 --> 00:15:37,065
know, backups, there is standby backup.

254
00:15:37,065 --> 00:15:40,335
There is a third backup so
that you never lose your data.

255
00:15:40,695 --> 00:15:43,900
So all these things essentially
spin up from the same.

256
00:15:44,275 --> 00:15:48,985
From a very core aspect that you really
need to think about failure while you

257
00:15:48,985 --> 00:15:53,005
are designing this application and
designing it for failure is one of the

258
00:15:53,005 --> 00:15:57,775
very crucial aspects of design thinking
as far as site reliability is concerned.

259
00:15:58,150 --> 00:16:01,900
Another thinking that I think that
has really helped me and I think is

260
00:16:02,050 --> 00:16:05,959
very important as far as the design
thinking of this reliability aspect

261
00:16:05,959 --> 00:16:10,660
is concerned is keeping in mind that
reliability is a continuous process.

262
00:16:10,660 --> 00:16:14,050
It's not something that, you know, you're
gonna define at the start and then you

263
00:16:14,050 --> 00:16:17,780
are gonna achieve at, at a certain point
it's, it's like this infinite curve, which

264
00:16:17,780 --> 00:16:19,460
never really reaches a goal, but each.

265
00:16:19,960 --> 00:16:24,204
Each progression is, it's like it
takes you to closer to your destiny.

266
00:16:24,594 --> 00:16:28,704
And you should think that as a
continuously evolving process where

267
00:16:28,704 --> 00:16:33,254
each incremental improvement is
basically take you closer and closer

268
00:16:33,254 --> 00:16:37,634
to your end goal of defining and, you
know, delivering this super awesome,

269
00:16:37,634 --> 00:16:39,435
reliable experience for their customers.

270
00:16:39,494 --> 00:16:41,084
And I mean, where do you start?

271
00:16:41,084 --> 00:16:41,924
Like, you know, like.

272
00:16:42,584 --> 00:16:44,534
It's, it's very difficult at the start.

273
00:16:44,534 --> 00:16:47,534
It looks like, oh, you're gonna
deliver this pleasant experience

274
00:16:47,534 --> 00:16:48,794
for this millions of users.

275
00:16:48,794 --> 00:16:49,664
But where do you start?

276
00:16:50,144 --> 00:16:55,004
I think each, each great automation
always started with a very hacky script.

277
00:16:55,314 --> 00:16:58,734
Something that was done manually once,
second, and the third time someone

278
00:16:58,794 --> 00:17:01,824
really thought of like, you know,
writing a back script to get things done.

279
00:17:01,824 --> 00:17:03,804
I think that's where the, the.

280
00:17:04,304 --> 00:17:06,794
Automation really starts,
and it's okay to be hacky.

281
00:17:06,794 --> 00:17:08,354
It's okay to write your back script.

282
00:17:08,564 --> 00:17:13,254
It's okay to have like in a very buggy
script to start with, but that's the

283
00:17:13,254 --> 00:17:18,894
first step you need to take before you
actually start investing into way better

284
00:17:18,894 --> 00:17:21,164
tools and way better processes out there.

285
00:17:21,554 --> 00:17:24,284
Keep learning, keep evolving,
but at the same time, you

286
00:17:24,284 --> 00:17:26,084
need to start somewhere, one.

287
00:17:26,774 --> 00:17:31,334
Second, keep your continuous involvement
and continuous improvement going on

288
00:17:31,334 --> 00:17:33,674
because this, this is a continuous cycle.

289
00:17:33,704 --> 00:17:34,934
It is never gonna end.

290
00:17:35,414 --> 00:17:39,764
Each incremental step is gonna basically
take you closer to your end goal.

291
00:17:40,234 --> 00:17:45,654
And you need to basically keep
yourself engaged and involved in

292
00:17:45,654 --> 00:17:47,304
improving the reliability aspect.

293
00:17:47,364 --> 00:17:51,024
And for that, I think you really
need to invest in right, a set of.

294
00:17:51,339 --> 00:17:54,399
As I, as I said in the previous
slide, you know, define the right SLO

295
00:17:54,399 --> 00:17:59,379
metrics, define the right reliability
metrics, maybe start with 99% of

296
00:17:59,379 --> 00:18:02,589
reliability for an application, and
eventually challenge yourself that,

297
00:18:02,619 --> 00:18:09,099
oh, next year we're gonna target 99.9%
reliability, 99.99% of reliability

298
00:18:09,439 --> 00:18:11,479
or availability of our application.

299
00:18:11,479 --> 00:18:17,419
And take it for me, like, you know,
99 and 99.9 is a huge curve, 99.9.

300
00:18:18,004 --> 00:18:22,114
Point nine 2, 99 0.99 is the
second exponential investment

301
00:18:22,114 --> 00:18:23,284
that you really need to make.

302
00:18:23,284 --> 00:18:26,464
There are some crazy numbers out
there at Google, like, you know, that

303
00:18:26,464 --> 00:18:30,844
we consider, like, you know, each
incremental line is like tons of, tons

304
00:18:30,844 --> 00:18:32,734
of efforts basically to get that going.

305
00:18:32,834 --> 00:18:37,764
But I think the point I want to make is
this is a continuously evolving process.

306
00:18:37,794 --> 00:18:40,524
It's a, it's a process that is gonna.

307
00:18:41,159 --> 00:18:44,969
Keep on going, and you really
need to keep yourself focused

308
00:18:45,029 --> 00:18:46,439
and you need to start somewhere.

309
00:18:46,929 --> 00:18:50,589
As for building this
reliability process, oh yes.

310
00:18:50,649 --> 00:18:53,169
And don't expect perfect
results at the start.

311
00:18:53,709 --> 00:18:54,699
It is gonna evolve.

312
00:18:54,699 --> 00:18:58,779
It is gonna basically reach to a
state where you're gonna be happy

313
00:18:59,049 --> 00:19:02,919
for that state of your customer
and for that stage of your company.

314
00:19:02,919 --> 00:19:06,109
But eventually there would be
a next evolution story that

315
00:19:06,109 --> 00:19:07,094
you would go through with.

316
00:19:07,654 --> 00:19:11,764
You might want to scrap a lot of
things and build all over again.

317
00:19:12,304 --> 00:19:14,614
So it's, it's, it's a constant process.

318
00:19:14,614 --> 00:19:18,969
You need to really keep yourself
evolving as the reliability and and

319
00:19:19,044 --> 00:19:20,729
the story of your organization evolves.

320
00:19:20,812 --> 00:19:24,692
As, as we are thinking as we are
basically learning to understand,

321
00:19:24,692 --> 00:19:25,982
how do you start to think?

322
00:19:26,042 --> 00:19:29,572
I think one of the most important
things and the questions to

323
00:19:29,572 --> 00:19:31,612
answer here is, how do you learn?

324
00:19:31,612 --> 00:19:33,952
Because there's this vast
amount of information out there.

325
00:19:33,952 --> 00:19:38,062
You can go all the down to the stack,
like at the kernel level and understanding

326
00:19:38,062 --> 00:19:41,002
how, like, you know, how interrupts
work, how operating systems are basically

327
00:19:41,002 --> 00:19:45,532
designed to how paging and low level
memory mapping really works too.

328
00:19:45,902 --> 00:19:49,442
To things like, you know, how networks
are designed, how, how P-C-P-I-P model

329
00:19:49,472 --> 00:19:53,682
works and how basically with this I
mean, you can, you can look at the entire

330
00:19:53,682 --> 00:19:58,842
spectrum and go all the way to like
how this modern agent AI applications

331
00:19:58,842 --> 00:20:02,682
are designed and what's this ML
algorithm really doing and how this ML

332
00:20:02,682 --> 00:20:04,712
machines and ml models are deployed.

333
00:20:04,712 --> 00:20:04,892
I think.

334
00:20:05,392 --> 00:20:07,732
My point here is this is a worst domain.

335
00:20:08,002 --> 00:20:09,832
Like, you know, you can
always keep learning.

336
00:20:10,102 --> 00:20:11,992
There's also a security aspect of it.

337
00:20:11,997 --> 00:20:15,212
There are vulnerabilities,
there are different attacks.

338
00:20:15,212 --> 00:20:20,642
And as a SIT, as a cyber reliability
engineer, you really need to keep yourself

339
00:20:20,672 --> 00:20:23,707
heads about the ground and understand
like what's going out in the market

340
00:20:24,062 --> 00:20:26,702
to be aware, like, you know, these are
the set of vulnerabilities out there.

341
00:20:26,762 --> 00:20:29,972
You need to basically take those
design considerations while you're

342
00:20:29,972 --> 00:20:31,147
designing those applications.

343
00:20:31,307 --> 00:20:36,137
So compliance requirements is,
is a another aspect that you need

344
00:20:36,137 --> 00:20:37,817
to really keep yourself with.

345
00:20:38,207 --> 00:20:43,397
And while you are like keeping yourself
up with all this traditional aspects

346
00:20:43,397 --> 00:20:48,737
of learning, this lot evolving in
the computer industry, Nvidia keeps

347
00:20:48,917 --> 00:20:50,792
growing out new new hardwares.

348
00:20:50,877 --> 00:20:53,337
Google is coming up with new
technologies, there are new

349
00:20:53,337 --> 00:20:54,867
tools coming up in the market.

350
00:20:54,867 --> 00:20:55,827
Something that you will.

351
00:20:56,182 --> 00:20:59,572
Invested for like last five
years suddenly gets changed.

352
00:20:59,872 --> 00:21:03,892
You were running your monolithic
applications or like maybe design

353
00:21:03,892 --> 00:21:07,672
your VPCs in cloud and design some
E two applications and suddenly

354
00:21:07,672 --> 00:21:11,962
there's a thing called hot Kubernetes
probably helps you do all those

355
00:21:11,962 --> 00:21:13,402
things in the span of a second.

356
00:21:13,702 --> 00:21:16,612
Maybe that's how that is
gonna solve your problem.

357
00:21:16,612 --> 00:21:19,372
So, I mean, the point here is
you are continuously learning.

358
00:21:19,372 --> 00:21:20,752
You're continuously evolving.

359
00:21:21,307 --> 00:21:24,607
Where do you keep yourself grounded
is the most important question.

360
00:21:24,607 --> 00:21:29,317
And that's where I think I, I believe
in this concept of t model of learning,

361
00:21:29,647 --> 00:21:34,237
where you keep yourself breath going,
you keep yourself learning, you keep

362
00:21:34,237 --> 00:21:39,427
attending sessions, you keep attending
conferences, you, you keep understanding

363
00:21:39,427 --> 00:21:41,167
what is going out in the market.

364
00:21:41,297 --> 00:21:43,577
But at the same time,
there is one single domain.

365
00:21:43,667 --> 00:21:47,477
There is one single choice of your
learning that you keep going deep down.

366
00:21:47,867 --> 00:21:51,227
And be, be a expert of that
field that is actually gonna

367
00:21:51,227 --> 00:21:52,787
keep you going on the long run.

368
00:21:53,087 --> 00:21:57,077
And this, there's a number of things
that are happening on the, on the

369
00:21:57,077 --> 00:22:00,947
breadth side of the world, which
will actually help you navigate

370
00:22:00,947 --> 00:22:02,507
your career in the right direction.

371
00:22:02,847 --> 00:22:04,227
Otherwise it gets very crazy.

372
00:22:04,227 --> 00:22:06,747
Like, you know, you cannot really keep
up with what's happening out there.

373
00:22:06,777 --> 00:22:11,067
You cannot really understand each and
every thing and how it really operates.

374
00:22:11,067 --> 00:22:11,757
And it's fine.

375
00:22:11,757 --> 00:22:15,597
Like, you know, understanding
that you don't know everything.

376
00:22:16,347 --> 00:22:19,947
It's way better than saying that I know
everything and I can fix everything.

377
00:22:20,182 --> 00:22:23,907
I, I mean, as a site reliability engineer,
that's one of the important learnings

378
00:22:23,907 --> 00:22:27,942
that I have, that I have had over the
years is you cannot know everything.

379
00:22:27,942 --> 00:22:31,617
There are only be certain aspects of
the system that you can really know

380
00:22:31,617 --> 00:22:36,987
very well, but that also doesn't mean
that you should just stay invested

381
00:22:36,987 --> 00:22:39,297
in that aspect of the problem.

382
00:22:39,417 --> 00:22:42,297
You need to increase your
broader scope of learning.

383
00:22:42,297 --> 00:22:42,902
You need to just.

384
00:22:43,377 --> 00:22:47,697
At least have a right balance of
like, you know, what depth and what

385
00:22:47,697 --> 00:22:52,267
breadth you are basically having for
different set of tools, technologies,

386
00:22:52,267 --> 00:22:55,747
and the new evaluations that is
happening in the, in the market.

387
00:22:56,157 --> 00:23:00,617
And this, this goes a long way, I
think the another thing that is very

388
00:23:00,617 --> 00:23:05,907
core to a site reliability engineer is
basically dealing with incidents like

389
00:23:05,937 --> 00:23:09,957
I always feel Cy Reliability engineer
is more like a soldier standing in the

390
00:23:10,227 --> 00:23:15,577
forefront and ensuring that that is
experiences of his end users are always

391
00:23:15,577 --> 00:23:18,427
protected and mitigated in the right way.

392
00:23:18,717 --> 00:23:19,737
And while you are doing.

393
00:23:20,337 --> 00:23:22,807
This entire incident handling process.

394
00:23:22,807 --> 00:23:26,977
I think one great learning that I
have had over the course of this

395
00:23:27,287 --> 00:23:29,167
n years is blameless culture.

396
00:23:29,217 --> 00:23:35,097
It is a very important part, OFCY
engineers learning to understand what

397
00:23:35,097 --> 00:23:37,107
this blameless culture essentially means.

398
00:23:37,437 --> 00:23:40,467
It is very helpful in basically
when you are defining postmortems,

399
00:23:40,467 --> 00:23:41,817
when you're writing things down.

400
00:23:42,107 --> 00:23:45,317
On a postmodern talk why something
happened, how something happened, it

401
00:23:46,037 --> 00:23:48,167
really addresses the aspect of steam.

402
00:23:48,507 --> 00:23:53,527
It addresses a collective problem solving
approach where you define what really

403
00:23:53,527 --> 00:23:58,387
happened, how it could be avoided, what
you need to ensure what could be done

404
00:23:58,387 --> 00:24:02,977
so that it doesn't really happen and you
are not pointing fingers at other people.

405
00:24:02,977 --> 00:24:07,588
You are basically taking it as a. The
responsibility, your own responsibility

406
00:24:07,588 --> 00:24:09,058
in owning things for yourself.

407
00:24:09,508 --> 00:24:12,348
And I think that this thing
really goes a long way.

408
00:24:12,848 --> 00:24:18,068
The second thing while dealing with
fires in production is basically you

409
00:24:18,068 --> 00:24:22,153
really need to start thinking about
going from this firefighting mode

410
00:24:22,153 --> 00:24:24,398
to basically a fire prevention mode.

411
00:24:24,448 --> 00:24:27,318
If there is fire for
the first time, maybe.

412
00:24:27,818 --> 00:24:29,018
It was not avoided.

413
00:24:29,018 --> 00:24:30,068
It couldn't be avoided.

414
00:24:30,068 --> 00:24:35,638
But the second time, if that happens, then
probably having a mindset that we need

415
00:24:35,638 --> 00:24:39,568
to really address this for a long term is
something that should come to your mind.

416
00:24:39,568 --> 00:24:44,508
And I think that is very important
because that's how you keep yourself

417
00:24:44,508 --> 00:24:48,588
invested into new things rather than
going back to the same old aspects and

418
00:24:48,738 --> 00:24:53,360
keep fixing things again and over again,
over, also from prevention perspective,

419
00:24:53,750 --> 00:24:57,440
I always feel it is more important
to invest in long term projects.

420
00:24:57,440 --> 00:25:01,040
If something has happened for once or
twice, you should really invest your

421
00:25:01,040 --> 00:25:04,730
energy in ensuring that this doesn't
happen and what's the long term solution

422
00:25:04,730 --> 00:25:08,490
to basically address this rather
than showing short term mitigations.

423
00:25:08,550 --> 00:25:12,870
Short term things are medications,
which are good to stop the bleeding,

424
00:25:12,930 --> 00:25:17,490
but long term solutions ensures
that they never occur or reoccur.

425
00:25:17,885 --> 00:25:21,155
So that your energy is not wasted
in figuring out the problem,

426
00:25:21,545 --> 00:25:24,515
or it's not always you are who
is dealing with the problem.

427
00:25:24,515 --> 00:25:28,125
So you are also saving your teammates
basically from from the fire.

428
00:25:28,555 --> 00:25:31,435
So that that's a important thing.

429
00:25:31,915 --> 00:25:38,745
The third and the most important thing
over here is you really need to move away

430
00:25:38,745 --> 00:25:41,835
from tools and move towards principles.

431
00:25:41,885 --> 00:25:43,655
What are the principles on which.

432
00:25:44,000 --> 00:25:49,720
This this observability and this
reliability story is built on because most

433
00:25:49,720 --> 00:25:54,500
of the times the fundamental aspects of
reliability, scalability, observability,

434
00:25:54,980 --> 00:25:57,080
they always have stayed the same.

435
00:25:57,470 --> 00:26:00,500
Irrespective of what tools you have
used and what technologies you are

436
00:26:00,530 --> 00:26:03,860
using to power your applications,
you move from one company to another.

437
00:26:03,865 --> 00:26:05,875
You move from one application to another.

438
00:26:05,875 --> 00:26:07,495
The most important thing is.

439
00:26:07,855 --> 00:26:11,455
The principles always these things
operate, always stay the same.

440
00:26:11,455 --> 00:26:14,545
So I would generally invest my
energies in understanding and

441
00:26:14,545 --> 00:26:17,895
learning more about these principles
rather than the actual tools.

442
00:26:18,015 --> 00:26:21,705
You can pretty much learn a tool
in fuel, a number of days, get

443
00:26:21,705 --> 00:26:23,325
away it and move on a new tool.

444
00:26:23,325 --> 00:26:27,015
But I think investing your right
energy and understanding these

445
00:26:27,015 --> 00:26:31,005
principles is very important and
that's how you pass on the knowledge.

446
00:26:31,105 --> 00:26:34,805
It is very crucial as insight team
Junior if you are defined a certain

447
00:26:34,805 --> 00:26:38,195
principle, if acknowledge something,
you really need to write it down, pass

448
00:26:38,195 --> 00:26:43,115
it on to the next ari, or make this
that, make it more like a defining

449
00:26:43,115 --> 00:26:47,215
principle for your team so that everyone
acknowledges it and follows by it.

450
00:26:47,605 --> 00:26:49,165
So that it's more like a standard.

451
00:26:49,645 --> 00:26:54,470
So setting standards is very important
for for the psychological engineer.

452
00:26:54,970 --> 00:26:59,480
I think last and the most important thing
with the life of an ARI or the mindset

453
00:26:59,480 --> 00:27:04,910
of an sari is you should be involved
and thinking about building a community,

454
00:27:04,910 --> 00:27:09,670
staying with the community, because I
feel community learning is very important.

455
00:27:09,670 --> 00:27:14,560
That keeps you ab upgraded and you abreast
with what's happening in the society.

456
00:27:14,560 --> 00:27:18,400
So going out, connecting with the
people, knowing what's happening

457
00:27:18,400 --> 00:27:22,670
out there, sharing your thoughts,
sharing your insights to the people.

458
00:27:22,880 --> 00:27:27,440
Evangelizing what you have done within
an organization is very important because

459
00:27:27,490 --> 00:27:32,260
it not just helps you grow, but also
helps other people grow along with you.

460
00:27:32,260 --> 00:27:35,350
And it's the collective mindset
that solves a larger problem.

461
00:27:35,650 --> 00:27:38,490
I feel we have been here
because we are standing on this.

462
00:27:39,210 --> 00:27:42,780
Shoulders of this thousand great people
who build underlying technologies.

463
00:27:42,780 --> 00:27:47,160
And we are like, building the next layer
of technology solutions on top of that.

464
00:27:47,370 --> 00:27:51,000
So I think it is very important for
Recit liability engineer to develop a

465
00:27:51,000 --> 00:27:55,440
mindset where he has to learn, but at
the same time he has to like, share

466
00:27:55,470 --> 00:27:59,730
this knowledge and information for
the outer world to basically evolve,

467
00:27:59,790 --> 00:28:02,310
learn, keep sharing, keep growing.

468
00:28:02,640 --> 00:28:03,180
And yeah.

469
00:28:03,230 --> 00:28:07,790
That's, that, that's, I feel is
something of very crucial importance

470
00:28:07,790 --> 00:28:09,350
for a site library to engineer.

471
00:28:09,450 --> 00:28:11,430
Yes, that's all I had for this session.

472
00:28:11,520 --> 00:28:14,530
Hope you enjoyed my thoughts
and and my ideas about site

473
00:28:14,530 --> 00:28:16,570
reliability and the design thinking.

474
00:28:16,690 --> 00:28:20,530
If you have any questions, please
feel free to reach out to me.

475
00:28:20,590 --> 00:28:23,840
If you have any questions, I'll
be happy to guide you along.

476
00:28:24,050 --> 00:28:27,230
And thank you for the organizations
for organizing this awesome event.

477
00:28:27,235 --> 00:28:27,265
Event.

478
00:28:27,680 --> 00:28:28,040
Thank you.

