1
00:00:00,500 --> 00:00:01,339
Good morning everyone.

2
00:00:02,120 --> 00:00:03,815
It's great to be here at Q 42.

3
00:00:04,315 --> 00:00:09,615
2025. My name is Xi and I'm part of
Microsoft Cloud infrastructure team.

4
00:00:10,545 --> 00:00:14,024
Over the past several years, I've
worked on scaling hyperscale data

5
00:00:14,024 --> 00:00:16,185
centers across multiple regions.

6
00:00:16,875 --> 00:00:21,675
What I'll share today is shown directly
from real world experiences, the success,

7
00:00:21,675 --> 00:00:23,270
some mistakes, and the lessons learned.

8
00:00:23,770 --> 00:00:27,270
Our focus is simple, how we can
accelerate data center build outs.

9
00:00:28,185 --> 00:00:32,375
Not by cutting corners, but by improving
coordination, panelization and ness

10
00:00:32,375 --> 00:00:34,715
across every layer of the infrastructure.

11
00:00:35,215 --> 00:00:39,865
This is increasingly relevant today
as organizations push for faster cloud

12
00:00:39,865 --> 00:00:45,385
expansion, lower time to market, and
more efficient resource utilization.

13
00:00:46,315 --> 00:00:47,185
Let's dive in.

14
00:00:47,685 --> 00:00:49,845
Here's a quick overview of the flow today.

15
00:00:50,415 --> 00:00:53,985
We'll start with the foundational
readiness, where we'll discuss

16
00:00:53,985 --> 00:00:58,175
why early planning and segregating
critical workloads from the

17
00:00:58,175 --> 00:01:00,695
backbone of acceleration.

18
00:01:01,355 --> 00:01:06,035
Then we'll cover dependency management,
essentially, how to identify and

19
00:01:06,035 --> 00:01:10,210
visualize interconnections between
the tasks that are often invisible,

20
00:01:10,539 --> 00:01:12,130
but have massive downstream effects.

21
00:01:12,630 --> 00:01:17,370
Next network connectivity, one of the most
time sensitive areas in any build out.

22
00:01:18,300 --> 00:01:21,955
I'll show how to manage the underlay
and overlay networks in parallel.

23
00:01:22,455 --> 00:01:26,969
I'll then move to server and service
deployment where the automation and pre

24
00:01:26,969 --> 00:01:31,385
staging really make the difference between
a three month and a nine month ramp up.

25
00:01:31,885 --> 00:01:37,225
Finally, we'll tie it all together
with integration and scaling and

26
00:01:37,225 --> 00:01:40,014
close with some key metrics and
takeaways that you can apply to

27
00:01:40,014 --> 00:01:41,664
your own data center projects.

28
00:01:42,164 --> 00:01:45,244
Let's start by grounding
ourselves in a core challenge.

29
00:01:46,054 --> 00:01:48,570
Modern data centers aren't
single threaded project.

30
00:01:49,070 --> 00:01:53,990
The highly interdependent ecosystems
involving land power, cooling, networking

31
00:01:54,490 --> 00:01:57,465
compute compliance are moving in parallel.

32
00:01:58,445 --> 00:02:03,600
The problem is a delay in any one of these
domains, cascades into everything else.

33
00:02:04,350 --> 00:02:08,910
For example, a late fiber trench
permit, delays and network

34
00:02:08,910 --> 00:02:13,885
installation, which delays testing,
which then starts production rollout.

35
00:02:14,385 --> 00:02:15,310
The insight here is simple but powerful.

36
00:02:15,810 --> 00:02:17,580
We can't think linearly anymore.

37
00:02:18,480 --> 00:02:22,380
Acceleration requires breaking
the chain of sequential dependency

38
00:02:23,070 --> 00:02:25,350
and moving towards parallelism.

39
00:02:25,850 --> 00:02:29,030
The rest of this talk will
unpack how to do that exactly.

40
00:02:29,530 --> 00:02:31,630
Foundation readiness is
where acceleration truly.

41
00:02:32,130 --> 00:02:36,929
Site selection, land acquisition,
and permitting, those need to

42
00:02:36,929 --> 00:02:42,079
start at least 18 to 24 months
before you target operational date.

43
00:02:42,890 --> 00:02:45,709
If you're waiting for design
approval before starting

44
00:02:45,709 --> 00:02:50,339
zoning utility negotiations,
you're already lost valuable.

45
00:02:50,839 --> 00:02:53,629
Physical construction
likewise must be modular.

46
00:02:54,349 --> 00:02:59,659
We are seeing a shift towards designs
that support phase expansion, smaller

47
00:02:59,789 --> 00:03:04,219
faster deployable modules rather
than single large build and power and

48
00:03:04,219 --> 00:03:06,109
cooling shouldn't be afterthoughts.

49
00:03:06,529 --> 00:03:07,729
There should be parallel streams.

50
00:03:08,229 --> 00:03:13,299
Teams working on utility agreements,
backup systems and ancy planning should

51
00:03:13,299 --> 00:03:16,119
operate independently, but synchronously.

52
00:03:16,619 --> 00:03:21,539
The main takeaway, segregate
early plan parallel, and never

53
00:03:21,539 --> 00:03:23,489
let one workflow block another.

54
00:03:24,479 --> 00:03:28,229
That mindset alone can shave off
months of the project timeline.

55
00:03:28,729 --> 00:03:31,939
Once your teams are operating
in parallel, you need a way to

56
00:03:32,359 --> 00:03:33,824
keep visibility across the chaos.

57
00:03:34,324 --> 00:03:36,454
That's where the dependency
metrics comes in.

58
00:03:37,084 --> 00:03:40,224
It's essentially you have
blueprint for cooperation

59
00:03:40,374 --> 00:03:42,264
coordination between various teams.

60
00:03:43,254 --> 00:03:47,334
It maps every component, every
milestone, and their interdependencies.

61
00:03:47,394 --> 00:03:51,794
For example, power readiness affects
lag delivery, which in turn of X

62
00:03:51,794 --> 00:03:53,319
network turn up and validation.

63
00:03:53,819 --> 00:03:58,829
By visualizing this network of relations
project managers can identify bottlenecks.

64
00:03:59,329 --> 00:04:03,709
Before they materialize, and
this matrix is not static.

65
00:04:04,009 --> 00:04:08,179
It must be revisited and updated
continuously as conditions evolve.

66
00:04:08,679 --> 00:04:10,449
Think of it as a single source of truth.

67
00:04:11,259 --> 00:04:14,134
It's what separates reactive
teams from proactive ones.

68
00:04:14,634 --> 00:04:19,509
Our infrastructure is often the pacing
item in data center construction.

69
00:04:20,009 --> 00:04:24,999
Utility coordination alone can take
over 18 months from negotiating,

70
00:04:25,419 --> 00:04:28,449
creating the connections to
securing substation permits.

71
00:04:28,929 --> 00:04:31,029
That's where those
conversations must start.

72
00:04:31,029 --> 00:04:33,129
Almost as soon as society selected.

73
00:04:33,629 --> 00:04:36,809
Power sufficient and redundancy
planning need to factor in

74
00:04:36,809 --> 00:04:38,549
future expansion and density.

75
00:04:39,049 --> 00:04:43,165
We are not talking about a 15 to 20
kilowatts per rack in many cases.

76
00:04:43,855 --> 00:04:47,815
And with the ai tracks this
power demand will be going

77
00:04:47,815 --> 00:04:50,415
up in an exponential fashion.

78
00:04:50,915 --> 00:04:55,445
One of the biggest acceleration levers
here is pre-ordering long lead time

79
00:04:55,445 --> 00:05:01,355
components like generators, transformers,
and UPA systems, even before final

80
00:05:01,355 --> 00:05:03,095
electrical design is locked down.

81
00:05:04,070 --> 00:05:08,270
Yes, it's a gas letter risk, but the
alternative is waiting months for

82
00:05:08,270 --> 00:05:10,400
delivery and losing your schedule buffer.

83
00:05:10,900 --> 00:05:15,370
Slide o provisioning cost is far
cheaper than a six month delay.

84
00:05:15,870 --> 00:05:18,095
Network is another critical bottleneck.

85
00:05:18,905 --> 00:05:22,950
Fiber installation alone
can take six to 12 months.

86
00:05:23,250 --> 00:05:28,140
Competing agreements of right of way
permits can drag that even longer.

87
00:05:28,640 --> 00:05:33,320
So network design and external carrier
engagement must begin at the same time

88
00:05:33,770 --> 00:05:39,280
as land and power planning, not after
assess existing fiber infrastructure

89
00:05:39,370 --> 00:05:41,290
before final site selection.

90
00:05:41,830 --> 00:05:44,850
This can be the difference between
a one year and a two year build out.

91
00:05:45,350 --> 00:05:50,145
Also, consider alternative models
like dark fiber or IGOs can

92
00:05:50,145 --> 00:05:51,705
bring you flexibility and time.

93
00:05:52,205 --> 00:05:55,955
Remember, connectivity delays are
preventable if addressed early.

94
00:05:56,455 --> 00:05:59,905
Network build out doesn't have to
wait for construction completion

95
00:06:00,685 --> 00:06:02,305
while the building is going up.

96
00:06:02,785 --> 00:06:05,275
Design and vendor selection
can happen in parallel.

97
00:06:06,265 --> 00:06:08,755
Network design can be
based on different stages.

98
00:06:09,535 --> 00:06:13,865
They can be on different architectures,
like a class fabric leaves, spine

99
00:06:13,870 --> 00:06:19,844
architectures but it should be validated
at a modular system designed to scale.

100
00:06:20,805 --> 00:06:26,474
Modules can be built in panel, and this
parallelism endures that network readiness

101
00:06:26,474 --> 00:06:31,875
aligns with physical completion, and we
can compress the scheduled timelines.

102
00:06:32,375 --> 00:06:36,515
Traditionally teams waited for the data
center to be complete before installing

103
00:06:36,515 --> 00:06:39,935
servers that's slow and inefficient.

104
00:06:40,685 --> 00:06:46,355
Instead, the pre-stage and validate
servers offsite ship ready to deploy racks

105
00:06:46,745 --> 00:06:48,960
and US automation to configure the racks.

106
00:06:49,460 --> 00:06:54,110
This transformation basically
brings in the deployment timeline

107
00:06:54,110 --> 00:06:57,920
from months to weeks, which is
an enormous efficiency gain.

108
00:06:58,420 --> 00:07:02,490
Acceleration continues at the software
layer with infrastructure as code.

109
00:07:03,450 --> 00:07:07,494
All configurations, network
storage, compute are defined

110
00:07:07,494 --> 00:07:11,840
programmatically, versioned, and
tested through the Ci CD pipelines.

111
00:07:12,340 --> 00:07:16,215
Containerization abstracts services
from hardware dependencies.

112
00:07:16,724 --> 00:07:20,775
11. Deployment and development
in parallel tracks.

113
00:07:21,705 --> 00:07:26,445
Then comes automated testing thousands
of checks across clusters to ensure

114
00:07:26,445 --> 00:07:29,295
everything behaves predictably at scale.

115
00:07:29,795 --> 00:07:36,545
Finally, progressive rollouts can utilizes
and stage deployments, allow services

116
00:07:37,205 --> 00:07:39,844
to go live in small controlled phases.

117
00:07:40,344 --> 00:07:44,395
The net effect, your data center
isn't waiting for the perfect moment.

118
00:07:45,025 --> 00:07:49,195
It's gradually becoming productive,
even as the final construction finishes.

119
00:07:49,695 --> 00:07:54,404
Complaint is often viewed as a bottleneck,
but starting early flips that dynamic.

120
00:07:55,349 --> 00:08:00,929
For instance, embedding security and
compliance experts from the day of

121
00:08:00,929 --> 00:08:07,320
one ensures your design processes and
automation all meets STAs for the start.

122
00:08:07,820 --> 00:08:13,219
Preliminary audits during construction,
automated policy validation and real

123
00:08:13,219 --> 00:08:18,760
time compliance documentation all
minimize surprises, filter early

124
00:08:18,760 --> 00:08:21,340
compliance equals faster, safer co lives.

125
00:08:21,840 --> 00:08:25,229
The traditional commissioning
is sequential and slow.

126
00:08:25,920 --> 00:08:29,430
The fast track approach performs
component level testing During

127
00:08:29,430 --> 00:08:34,079
installation, multiple teams can work
in commissioning different availability

128
00:08:34,079 --> 00:08:38,809
zones in panel and independent motor
sections of the data center can

129
00:08:38,809 --> 00:08:40,730
be hone handed off progressively.

130
00:08:41,230 --> 00:08:45,670
This method reduces post-construction
testing from months to mere weeks.

131
00:08:46,170 --> 00:08:48,329
Accelerating time to service availability.

132
00:08:48,829 --> 00:08:51,529
Integration is where
acceleration becomes real.

133
00:08:52,310 --> 00:08:59,269
Every system lacks power cooling, network
compute need to interlock seamlessly.

134
00:08:59,769 --> 00:09:02,859
The most effective approach is
cross-functional integration teams.

135
00:09:03,459 --> 00:09:07,509
Engineers from all domains collaborate
regularly with shared dashboards

136
00:09:08,019 --> 00:09:09,525
and lack dependency tracking.

137
00:09:10,025 --> 00:09:13,085
Integration isn't just
technical, it's also cultural.

138
00:09:14,075 --> 00:09:18,905
When every team shares ownership
for readiness, you eliminate silos.

139
00:09:19,405 --> 00:09:23,395
A clearly defined handoff and
testing process ensures smooth

140
00:09:23,395 --> 00:09:24,800
transitions into operations.

141
00:09:25,300 --> 00:09:30,405
Measuring acceleration is crucial for
continuous deployment and improvement.

142
00:09:31,375 --> 00:09:32,545
Tracking metrics.

143
00:09:33,205 --> 00:09:38,515
Like overall project duration, time
to production can showcase the time

144
00:09:38,515 --> 00:09:40,345
based acceleration improvements.

145
00:09:40,845 --> 00:09:45,225
ROE Acceleration shows how data
center stack generating value,

146
00:09:45,725 --> 00:09:50,665
percentage of parallel execution shows the
efficiencies of our acceleration strategy.

147
00:09:51,165 --> 00:09:54,765
These indicators reveal how well
your acceleration strategies are

148
00:09:54,765 --> 00:09:56,660
performing and where to focus next.

149
00:09:57,160 --> 00:10:01,570
Continuously measuring this
helps you refine your approach.

150
00:10:01,960 --> 00:10:07,150
Every project should get slightly
fast, faster, and more efficient.

151
00:10:07,650 --> 00:10:11,085
To summarize, let's recap
what you discussed so far.

152
00:10:11,585 --> 00:10:15,545
Early workflow segregation
prevents dependency bottlenecks,

153
00:10:16,045 --> 00:10:20,310
dependency metrics, keep your
team aligned and adaptive.

154
00:10:20,810 --> 00:10:24,680
Network and power planning must
happen in paddle, not sequentially.

155
00:10:25,180 --> 00:10:30,070
Server pre-staging and automation
drastically reduce time to like

156
00:10:30,570 --> 00:10:34,710
compliance and commissioning when done
early accelerate instead of delay.

157
00:10:35,210 --> 00:10:36,920
So these are our key learnings.

158
00:10:37,160 --> 00:10:42,800
So for your next project, your workflows,
identify your top bottlenecks and

159
00:10:42,800 --> 00:10:45,050
establish parallel execution paths.

160
00:10:45,550 --> 00:10:47,199
Hope the session is useful.

161
00:10:47,989 --> 00:10:49,219
Thank you for your attention.

162
00:10:49,279 --> 00:10:52,249
I'd be happy to discuss
how these strategies can be

163
00:10:52,249 --> 00:10:53,539
applied to your environment.

164
00:10:53,754 --> 00:10:55,304
Thanks and have a great day.

