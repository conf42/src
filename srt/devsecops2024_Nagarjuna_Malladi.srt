1
00:00:00,780 --> 00:00:01,490
Hello everyone.

2
00:00:01,799 --> 00:00:03,130
I'm Nagarjuna Malladi.

3
00:00:03,699 --> 00:00:09,440
Today, I'm going to talk about the
multi faceted landscaping of Site

4
00:00:09,690 --> 00:00:16,040
Reliability Engineering, SRE, a deep
dive into expertise specific concepts.

5
00:00:16,540 --> 00:00:19,430
We'll discuss about
these, table of contents.

6
00:00:19,450 --> 00:00:21,090
You can review them once.

7
00:00:21,590 --> 00:00:23,730
Let's go into, introduction to SRE.

8
00:00:24,230 --> 00:00:29,930
So Site Reliability Engineering SRE
is a discipline that merges software

9
00:00:29,930 --> 00:00:32,110
engineering with IT operations.

10
00:00:32,800 --> 00:00:36,960
It emphasizes the primary goal
of ensuring system reliability,

11
00:00:37,580 --> 00:00:42,660
performance, and scalability, especially
as system grows in complexity.

12
00:00:43,270 --> 00:00:48,880
SRE originated at Google and
integrates engineering practices

13
00:00:48,930 --> 00:00:51,250
with operational responsibilities.

14
00:00:51,750 --> 00:00:56,810
SRE is a relatively new field
that has gained prominence,

15
00:00:57,120 --> 00:00:59,190
especially in the tech industry.

16
00:00:59,570 --> 00:01:05,070
It recognizes the need to address
the challenges of managing complex

17
00:01:05,070 --> 00:01:07,850
systems in modern dynamic environments.

18
00:01:08,350 --> 00:01:12,180
SRE, I can tell key goals of the SRE.

19
00:01:12,370 --> 00:01:16,040
Enhancing system
availability and reliability.

20
00:01:16,040 --> 00:01:16,100
Thank you.

21
00:01:16,975 --> 00:01:22,995
Ensuring that services function
reliably and are available to users

22
00:01:23,495 --> 00:01:28,305
and automatic operational tasks
just to reduce the manual errors

23
00:01:29,185 --> 00:01:32,245
and make things more reliable.

24
00:01:32,745 --> 00:01:34,955
Efficiently managing system failures.

25
00:01:35,455 --> 00:01:39,965
By reducing recovery time, thereby
minimizing service disruptions.

26
00:01:40,745 --> 00:01:44,065
So these goals showcase the
proactive nature of SRE.

27
00:01:44,375 --> 00:01:48,655
It's not just about reacting
to the failures, but also about

28
00:01:49,045 --> 00:01:53,635
preventing them and ensuring
systems are robust and resilient.

29
00:01:54,135 --> 00:01:56,545
So cloud native infrastructure platforms.

30
00:01:57,045 --> 00:02:00,645
It's introduced the concept of cloud
native infrastructure, highlighting

31
00:02:00,865 --> 00:02:07,745
industry leading cloud services providers,
such as AWS, Azure, GCP, and OCI.

32
00:02:07,745 --> 00:02:12,265
These platforms offer scalable
and flexible computing resources.

33
00:02:12,765 --> 00:02:17,085
Cloud computing has revolutionized
how organizations manage

34
00:02:17,135 --> 00:02:22,745
infrastructure, providing on demand
resources and scaling capabilities.

35
00:02:23,245 --> 00:02:24,775
Code technologies in SRE.

36
00:02:25,405 --> 00:02:26,665
Infrastructure as a code.

37
00:02:26,945 --> 00:02:31,235
Tools like Terraform allow for
a consistent infrastructure

38
00:02:31,295 --> 00:02:32,795
provisioning and management.

39
00:02:33,675 --> 00:02:39,445
Serverless computing platforms,
AWS, Lambda, Azure Functions, GCP,

40
00:02:39,535 --> 00:02:42,985
Cloud Functions, enable running
code without managing servers.

41
00:02:43,485 --> 00:02:49,685
Containers orchestration systems like
Kubernetes, ECS, AKS, manage and scale

42
00:02:50,535 --> 00:02:53,095
containerized applications efficiently.

43
00:02:53,595 --> 00:02:58,005
Cloud native security solutions
ensure secure access and data

44
00:02:58,005 --> 00:02:59,965
production in the cloud environment.

45
00:03:00,545 --> 00:03:05,445
These technologies are pivotal in
modern software architecture, enabling

46
00:03:05,675 --> 00:03:10,525
dynamic and scalable infrastructure
with enhanced security measures.

47
00:03:11,025 --> 00:03:13,735
Let's discuss about networking in SRE.

48
00:03:14,235 --> 00:03:19,345
Designing resilient network topologies
with redundant and low latency.

49
00:03:19,845 --> 00:03:23,575
Performance monitoring, like
tracking metrics like latency,

50
00:03:23,995 --> 00:03:28,625
throughput, and jitter using machine
learning for anomaly detection.

51
00:03:29,125 --> 00:03:34,574
Network security, employing firewalls,
IDS, IPS, VPNs, and zero trust

52
00:03:34,575 --> 00:03:36,845
architectures to safeguard the network.

53
00:03:37,345 --> 00:03:42,345
DNS and CDNS, optimizing domain
name resolution and content

54
00:03:42,345 --> 00:03:44,235
delivery to reduce latency.

55
00:03:44,735 --> 00:03:47,935
Networking is the backbone
of any distributed system.

56
00:03:48,355 --> 00:03:53,075
Efficient network design and performance
monitoring are crucial for ensuring

57
00:03:53,515 --> 00:03:56,325
reliable and responsive applications.

58
00:03:56,825 --> 00:03:59,235
Let's go to database.

59
00:03:59,785 --> 00:04:01,904
Database management and reliability.

60
00:04:02,404 --> 00:04:07,144
High availability through replication
ensures continuous access.

61
00:04:07,644 --> 00:04:12,194
Disaster recovery mechanism, including
backups, geographic distribution,

62
00:04:12,484 --> 00:04:14,274
safeguard against data loss.

63
00:04:14,324 --> 00:04:20,135
Think about, some natural disaster
happening in any area, and, having a

64
00:04:20,155 --> 00:04:23,065
disaster recovery, for those data centers.

65
00:04:23,315 --> 00:04:28,285
How important is for the, clients,
customers, and everyone like company,

66
00:04:28,335 --> 00:04:30,395
having this disaster recovery of data.

67
00:04:30,450 --> 00:04:35,210
performance optimization, techniques,
that improve query efficiency and

68
00:04:35,210 --> 00:04:37,280
implement caching, mechanisms.

69
00:04:37,780 --> 00:04:42,160
Security measures, product data,
employing encryption, access

70
00:04:42,160 --> 00:04:43,930
control, and data masking.

71
00:04:44,430 --> 00:04:49,740
Comparison of NoSQL and
relational databases highlights

72
00:04:49,750 --> 00:04:51,480
their respective advantages.

73
00:04:51,480 --> 00:04:51,540
Thank you.

74
00:04:52,040 --> 00:04:55,510
Databases are critical
assets for any application.

75
00:04:56,090 --> 00:05:00,690
Ensuring their reliability,
performance, and security is essential

76
00:05:00,950 --> 00:05:02,850
to maintain system integrity.

77
00:05:03,480 --> 00:05:07,560
I can spend a lot of time,
explaining only on this slide.

78
00:05:07,560 --> 00:05:09,230
It has so much data there.

79
00:05:09,230 --> 00:05:13,430
in the event of time, I'm
going for other slide.

80
00:05:13,930 --> 00:05:15,700
Observability and monitoring.

81
00:05:16,200 --> 00:05:17,590
Metric collections.

82
00:05:18,410 --> 00:05:22,680
Capture resource utilization,
latency, and error rates.

83
00:05:23,180 --> 00:05:27,070
Centralized logging tools like
Elkstack, Splunk, Aggregate

84
00:05:27,080 --> 00:05:29,130
logs for in depth analysis.

85
00:05:29,650 --> 00:05:32,810
And now clouds are doing
their own open search.

86
00:05:33,140 --> 00:05:35,490
and that's for the same reason.

87
00:05:36,060 --> 00:05:40,360
Distributed tracing assets in
tracking request flow using

88
00:05:40,400 --> 00:05:43,150
tools such as Jagger and Zipkin.

89
00:05:43,650 --> 00:05:48,600
Electing systems leverage dynamic
thresholds and anomaly detection

90
00:05:49,390 --> 00:05:50,870
to trigger notifications.

91
00:05:51,370 --> 00:05:57,045
And then by using of machine learning and
AI, this can Find the pattern also, at

92
00:05:57,045 --> 00:06:03,475
what time the system is going high CPU,
at what time the system having more load,

93
00:06:03,925 --> 00:06:06,655
that kind of good information we can get.

94
00:06:07,235 --> 00:06:13,135
And Matrix framework establishes
SLIs, SLOs, and SLAs for quantifying

95
00:06:13,635 --> 00:06:15,345
and managing reliability.

96
00:06:15,845 --> 00:06:21,715
Observability tools enable SRE teams
to detect and resolve issues promptly,

97
00:06:22,125 --> 00:06:25,295
ensuring efficient system management.

98
00:06:25,795 --> 00:06:29,255
Let's go to automation and DevOps.

99
00:06:29,755 --> 00:06:35,025
It's one of my favorite topic, CI,
CD pipelines for automated testing

100
00:06:35,125 --> 00:06:41,135
and deployment using Jenkins,
GitLab, CI, and GitHub actions.

101
00:06:41,635 --> 00:06:45,665
Configuration management tools
like Ansible, Puppet, Chef,

102
00:06:46,535 --> 00:06:49,115
ensure consistent environment.

103
00:06:49,615 --> 00:06:53,935
Scripting languages like Python,
Bash, PowerShell automate

104
00:06:54,675 --> 00:06:56,075
repetitive tasks and checks.

105
00:06:56,585 --> 00:07:00,855
Incident response automation
focuses on self healing systems

106
00:07:00,975 --> 00:07:04,015
to minimize mean time to recover.

107
00:07:04,515 --> 00:07:09,445
Chavos engineering introduced controlled
failures to test system robustness.

108
00:07:09,945 --> 00:07:15,365
Service level management sets
targets SLOs and agreements SLAs

109
00:07:15,365 --> 00:07:16,925
for reliability measurement.

110
00:07:17,425 --> 00:07:23,505
Capacity planning utilizes ML and trend
analysis to predict resource requirements.

111
00:07:24,005 --> 00:07:28,375
Automation streamlines processes
allowing SRE teams to manage

112
00:07:28,395 --> 00:07:30,235
complex systems efficiently.

113
00:07:30,815 --> 00:07:36,225
Chavos engineering might seem
counterintuitive, but it's a

114
00:07:36,225 --> 00:07:40,815
proactive way to test system
limits and enhance resilience.

115
00:07:41,315 --> 00:07:43,895
Let's see some advanced topics.

116
00:07:44,395 --> 00:07:45,405
Chavos engineering

117
00:07:45,905 --> 00:07:50,235
It's a practice of introducing
controlled failures is further

118
00:07:50,295 --> 00:07:53,675
emphasized with tools like Chavos Monkey.

119
00:07:54,175 --> 00:08:00,895
Error budgets allows team to allocate risk
and balance stability with innovation.

120
00:08:01,685 --> 00:08:04,655
Capacity planning techniques
employ machine learning to

121
00:08:04,675 --> 00:08:07,180
forecast resource needs accurately.

122
00:08:07,680 --> 00:08:13,360
These advanced concepts showcase the
strategic thinking involved in SRE.

123
00:08:13,810 --> 00:08:20,330
It's about staying ahead of potential
issues and optimizing system capabilities.

124
00:08:20,830 --> 00:08:25,280
Industry specific SRE considerations,
financial services, emphasize

125
00:08:25,280 --> 00:08:31,530
security, regulatory, compliance,
and handling with the High frequency

126
00:08:31,580 --> 00:08:37,720
transactions, e commerce, focus on
massive scalability demands, especially

127
00:08:37,720 --> 00:08:40,790
during peak times and fraud prevention.

128
00:08:41,560 --> 00:08:45,640
Healthcare, prioritize data
privacy, ensure interoperability and

129
00:08:45,750 --> 00:08:47,750
manage life critical applications.

130
00:08:48,250 --> 00:08:55,150
SRE adaptability allows teams to tailor
strategies to introduce strategies

131
00:08:55,180 --> 00:09:00,340
to industry specific needs, ensuring
systems are reliable and compellent.

132
00:09:00,840 --> 00:09:07,660
Think about financial services,
financial companies, JP Morgan, and a

133
00:09:07,670 --> 00:09:10,530
lot of banks, Capital One, Citibank.

134
00:09:10,880 --> 00:09:16,160
See, how important, for them, the
security and, having, high frequent,

135
00:09:16,170 --> 00:09:21,100
transactions, how important to make
their system always up and, running.

136
00:09:21,890 --> 00:09:25,809
And think about, e commerce,
in the black Friday, the load

137
00:09:25,809 --> 00:09:27,984
on the, e commerce, systems.

138
00:09:28,484 --> 00:09:32,554
Amazon, Walmart, like you think
about anything like Apple's,

139
00:09:32,554 --> 00:09:34,524
Samsung's, like mobile phones.

140
00:09:34,924 --> 00:09:37,834
So there's so much load on these systems.

141
00:09:38,134 --> 00:09:43,464
And then, if they're down for some
time, the companies, have a huge loss.

142
00:09:43,874 --> 00:09:48,954
And then, a lot of, Folks try to do fraud
also at this time and then we need to

143
00:09:49,004 --> 00:09:56,254
prevent those transactions as SREs and
then Think about data health care and

144
00:09:56,254 --> 00:10:03,799
how critical it is with a lot of viruses
and all you know, how critical the Trials

145
00:10:03,799 --> 00:10:09,869
are, the companies that do Lily, Leap,
Pfizer and a lot of healthcare, Merck's.

146
00:10:10,039 --> 00:10:12,709
they are like very important
and then, trials and keeping

147
00:10:12,759 --> 00:10:14,549
patient's data, secured.

148
00:10:14,824 --> 00:10:21,144
Yeah, other than regular information,
doctors also cannot see all the patient

149
00:10:21,344 --> 00:10:23,974
information, because of this HIPAA rules.

150
00:10:24,314 --> 00:10:25,494
So that's important.

151
00:10:25,504 --> 00:10:28,854
That's how it's very important
in the healthcare industry.

152
00:10:29,354 --> 00:10:30,264
Let's, conclude.

153
00:10:30,764 --> 00:10:37,224
So in conclusion, this, encapsulates
the essence of SRE emphasizing its

154
00:10:37,224 --> 00:10:43,694
value in achieving reliable, scalable,
and efficient systems by harnessing

155
00:10:43,754 --> 00:10:48,414
automation, observability, and
robust incident response practices.

156
00:10:48,944 --> 00:10:52,354
Organizations can manage
complex infrastructure.

157
00:10:53,334 --> 00:10:58,424
The adoption of cloud native
technologies and CICD pipelines

158
00:10:58,544 --> 00:11:01,694
enhances SRE effectiveness.

159
00:11:02,194 --> 00:11:08,234
SRE has become an indispensable aspect
of managing modern software systems.

160
00:11:08,454 --> 00:11:12,244
It integrates engineering
principles with operational best

161
00:11:12,244 --> 00:11:17,354
practices, ensuring organizations
can scale their services reliably.

162
00:11:17,854 --> 00:11:21,524
if you have any questions, if you need
any suggestions, you can reach out to me.

163
00:11:21,534 --> 00:11:25,054
You can search my name on the LinkedIn,
Nagarjuna Malladi, and you can find me.

164
00:11:25,504 --> 00:11:27,414
And, you can send me a note.

165
00:11:27,584 --> 00:11:30,544
I can be able to answer if you
have any questions or if you need

166
00:11:30,544 --> 00:11:34,234
any recommendations in terms of
site reliability engineering.

167
00:11:34,584 --> 00:11:35,644
Thank you very much.

