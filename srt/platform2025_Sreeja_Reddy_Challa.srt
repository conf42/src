1
00:00:00,500 --> 00:00:03,769
Hello everyone and thank you for
this opportunity to present at

2
00:00:03,769 --> 00:00:06,380
Con 42 Platform Engineering 2025.

3
00:00:07,100 --> 00:00:12,470
My name Isla, and I've been working as
AWS Cloud engineer for the past seven

4
00:00:12,470 --> 00:00:17,120
years, helping build scalable, secure,
and cost efficient cloud environments.

5
00:00:17,990 --> 00:00:21,560
Today I'll be talking about
platform engineering with AI driven

6
00:00:21,560 --> 00:00:23,420
self-healing AWS infrastructure.

7
00:00:24,140 --> 00:00:28,460
The goal of this session is to show how
organizations can transform from manual.

8
00:00:28,865 --> 00:00:33,065
Reactive cloud operations into
autonomous intelligent systems that

9
00:00:33,065 --> 00:00:36,845
can self-diagnose, self-heal, and
continuously improve reliability.

10
00:00:37,684 --> 00:00:41,224
We'll explore not just the technology,
but also the organizational

11
00:00:41,285 --> 00:00:44,224
and cultural changes needed to
make this journey successful.

12
00:00:45,065 --> 00:00:49,474
By the end, my aim is for you to walk
away with both practical strategies you

13
00:00:49,535 --> 00:00:54,515
can apply and a broader vision of how
platform engineering and AI can help build

14
00:00:54,904 --> 00:00:57,125
smarter and more resilient infrastructure.

15
00:00:57,625 --> 00:01:01,194
Platform engineering has evolved
significantly over the years.

16
00:01:01,705 --> 00:01:06,745
Traditionally, teams relied on manual
interventions, firefighting incidents,

17
00:01:06,775 --> 00:01:08,755
and patching systems reactively.

18
00:01:09,255 --> 00:01:13,395
This approach worked when
systems were small, but today's

19
00:01:13,395 --> 00:01:17,115
multi-cloud and large scale AWS
environments are far too complex.

20
00:01:17,615 --> 00:01:22,595
The modern approach is about intelligent
autonomous systems that can self-diagnose,

21
00:01:22,595 --> 00:01:25,505
self-heal, and continuously optimize.

22
00:01:26,494 --> 00:01:29,734
It's important to note that
AI doesn't replace engineers.

23
00:01:29,794 --> 00:01:34,684
Instead, it amplifies human
judgment by learning from instance,

24
00:01:34,744 --> 00:01:39,365
predicting failures and automatically
implementing remediation strategies.

25
00:01:39,865 --> 00:01:42,205
Now, let's discuss the
core challenges at scale.

26
00:01:42,705 --> 00:01:48,075
Overwhelming volume of alerts and
monitoring data exceeds human capacity.

27
00:01:48,735 --> 00:01:53,985
Speed of modern systems leaves little
room for human interventions rapidly

28
00:01:53,985 --> 00:01:58,534
evolving Security threads require
continuous monitoring complaints.

29
00:01:58,534 --> 00:02:01,114
Requirements add another
layer of operational burden.

30
00:02:01,614 --> 00:02:05,814
Scarcity of platform engineers
expertise and cost optimization at

31
00:02:05,814 --> 00:02:07,704
scale requires intelligent automation.

32
00:02:08,204 --> 00:02:11,144
Traditional approaches to
platform engineering cannot scale

33
00:02:11,204 --> 00:02:14,624
to meet the demands of modern
enterprise entire environment.

34
00:02:15,124 --> 00:02:19,654
Organizations that continue to rely
primarily on manual processes find

35
00:02:19,654 --> 00:02:24,724
themselves at a competitive disadvantage,
struggling with higher operational costs,

36
00:02:24,814 --> 00:02:27,574
increased downtime and reduced agility.

37
00:02:28,074 --> 00:02:31,599
Here we introduced the AI driven
self-healing architecture.

38
00:02:32,099 --> 00:02:36,239
First comes the intelligent
monitoring using Amazon DevOps

39
00:02:36,239 --> 00:02:38,189
Guru to detect anomalies.

40
00:02:38,789 --> 00:02:45,209
Amazon DevOps guru uses ML to analyze
metrics, logs, and traces to identify

41
00:02:45,329 --> 00:02:50,249
anomalous behavior patterns that
might indicate emerging problems.

42
00:02:50,249 --> 00:02:54,659
Next is the security monitoring,
using guard duty to identify

43
00:02:54,659 --> 00:02:56,159
suspicious activities.

44
00:02:56,849 --> 00:03:01,469
Guard duty also uses ml. Models
trained on AWS global threat, inter

45
00:03:01,559 --> 00:03:06,239
intelligence to identify suspicious
activities and security breaches.

46
00:03:06,839 --> 00:03:11,069
Now the issues are detected
and we need more AWS services

47
00:03:11,069 --> 00:03:12,599
to respond to these issues.

48
00:03:13,409 --> 00:03:17,729
Like AWS Lambda functions serve
as the execution engine for a

49
00:03:17,729 --> 00:03:21,509
remediation actions triggered by
the events from the monitoring.

50
00:03:22,184 --> 00:03:27,105
Services, step functions, orchestrate
complex remediation workflows that

51
00:03:27,105 --> 00:03:29,804
require multiple coordinated actions.

52
00:03:30,304 --> 00:03:35,584
The architecture continuously learns and
outcomes of remediations are analyzed so

53
00:03:35,584 --> 00:03:37,414
that the system improves over the time.

54
00:03:38,344 --> 00:03:42,839
This makes operations not just
automated, but adaptive and intelligent.

55
00:03:43,339 --> 00:03:46,649
Let's look at the real world
examples before implementation.

56
00:03:47,485 --> 00:03:50,575
Platform teams spent most
time responding to incidents.

57
00:03:50,785 --> 00:03:55,464
Thousands of monitoring notifications
generated daily critical incidents,

58
00:03:55,464 --> 00:04:00,245
took hours to resolve security incidents
required extensive manual investigation,

59
00:04:00,935 --> 00:04:06,414
but after adapting, AI driven self-healing
systems available, improved significantly.

60
00:04:06,984 --> 00:04:09,414
Meantime to resolution,
decreased dramatically.

61
00:04:09,914 --> 00:04:12,134
Security incident response times improved.

62
00:04:13,004 --> 00:04:16,564
Compliance violations addressed
proactively substantial cost

63
00:04:16,564 --> 00:04:18,604
savings from optimized resources.

64
00:04:19,104 --> 00:04:23,904
The organization's platform team
evolved from reactive problem solvers

65
00:04:23,904 --> 00:04:28,644
to strategic architects of autonomous
systems, improving job satisfaction

66
00:04:29,034 --> 00:04:32,424
and enabling the organizations
to attract and retain top talent.

67
00:04:32,924 --> 00:04:35,144
Now let's look into the
four stage maturity model.

68
00:04:35,644 --> 00:04:40,564
Stage one is the reactive automation,
and next is the predictive monitoring.

69
00:04:40,624 --> 00:04:44,914
And then we'll go with the intelligent
remediation and autonomous operations.

70
00:04:45,215 --> 00:04:49,165
Now let's dive into each of these
stages and see what all we need

71
00:04:49,165 --> 00:04:51,235
to do to implement these stages.

72
00:04:51,775 --> 00:04:53,635
So the first one is reactive automation.

73
00:04:54,325 --> 00:04:58,975
So in this one, automating responses
to understood routine problems

74
00:04:58,975 --> 00:05:02,335
with scripted remediation tasks
and basic monitoring systems.

75
00:05:03,175 --> 00:05:06,985
These include like basic infrastructure
as core practices, standardized

76
00:05:06,985 --> 00:05:12,025
monitoring dashboards, or having
automated runbooks for common scenarios.

77
00:05:12,955 --> 00:05:18,475
And in the stage two, predictive
monitoring ML algorithms analyze system

78
00:05:18,475 --> 00:05:23,635
behavior patterns to identify potential
problems before the impact users here.

79
00:05:24,055 --> 00:05:28,165
AI powered monitoring tools
like DevOps Guru can be used and

80
00:05:28,165 --> 00:05:29,665
sophisticated electing systems.

81
00:05:30,085 --> 00:05:34,165
Can be adapted and expanded
automated remediation scenarios.

82
00:05:35,095 --> 00:05:38,935
In stage three, we implement
intelligent remediation process.

83
00:05:38,965 --> 00:05:44,015
So far it's just automating how we
detect the issues and monitoring them.

84
00:05:44,015 --> 00:05:46,294
So now it comes to the
remediation process.

85
00:05:46,685 --> 00:05:51,365
So AI systems automatically
diagnose and resolve most routine

86
00:05:51,365 --> 00:05:53,075
problems without human intervention.

87
00:05:53,575 --> 00:05:56,785
Like comprehensive event
driven architectures, complex

88
00:05:56,785 --> 00:06:01,195
orchestrated workflows are
learning from remediation outcomes.

89
00:06:01,585 --> 00:06:03,955
And next comes the autonomous operations.

90
00:06:04,615 --> 00:06:09,055
AI systems handle the vast
majority of operational tasks

91
00:06:09,055 --> 00:06:10,610
with minimal human oversight.

92
00:06:11,395 --> 00:06:16,495
Like predictive capabilities prevent
most problems, self-healing mechanisms

93
00:06:16,585 --> 00:06:18,445
resolve issues automatically.

94
00:06:18,970 --> 00:06:22,630
Humans focus on strategy
and exceptional situations.

95
00:06:23,130 --> 00:06:27,300
Progression through these strategies
and stages requires careful

96
00:06:27,300 --> 00:06:28,770
attention to cultural change.

97
00:06:28,830 --> 00:06:33,330
Alongside the technical implementation,
the teams needs to trust the autonomous

98
00:06:33,330 --> 00:06:37,530
systems making decisions which are
previously reserved for human judgment.

99
00:06:38,030 --> 00:06:42,460
Now let's technically deep dive into
some of the AWS service integrations.

100
00:06:43,180 --> 00:06:45,040
So the first one is DevOps group.

101
00:06:45,640 --> 00:06:49,750
It creates operational baselines
by analyzing historical data

102
00:06:50,110 --> 00:06:53,995
patterns, learning normal behavior
for each application component.

103
00:06:54,495 --> 00:06:59,520
It uses cloud wash event to trigger Lambda
functions when anomalies are identified.

104
00:07:00,020 --> 00:07:04,750
And next is the AWS Guard, duty Guard,
duty Analyzes, DNS logs, VPS flow,

105
00:07:04,895 --> 00:07:09,760
VVPC, flow logs and cloud rail events
to identify suspicious activities.

106
00:07:10,260 --> 00:07:14,640
Findings are published to CloudWatch
events, enabling real time integration

107
00:07:14,640 --> 00:07:16,500
with automated response systems.

108
00:07:17,000 --> 00:07:18,380
Next is a S config.

109
00:07:19,250 --> 00:07:23,180
It continuously monitors resource
states against defined policies.

110
00:07:23,900 --> 00:07:27,890
Integration with system manager
enables automated remediation through

111
00:07:27,890 --> 00:07:32,510
predefined playbooks that can correct
common configuration drift scenarios.

112
00:07:33,010 --> 00:07:34,780
And next is step functions.

113
00:07:35,680 --> 00:07:40,720
So step functions orchestrates complex
remediation workflows with sophisticated

114
00:07:40,720 --> 00:07:45,340
logic for error handling, retrain
mechanisms and rollback procedures.

115
00:07:45,760 --> 00:07:48,430
Lambda function serve as the
primary execution environment

116
00:07:48,430 --> 00:07:49,360
for remediation logic.

117
00:07:49,860 --> 00:07:55,020
The event driven arch architecture enables
realtime response while maintaining

118
00:07:55,020 --> 00:07:56,880
loose coupling between the components.

119
00:07:57,720 --> 00:08:02,130
CloudWatch monitoring and events serve
as the tech, as the central nervous

120
00:08:02,130 --> 00:08:06,360
system routing events to appropriate
handlers based on configurable rules.

121
00:08:06,860 --> 00:08:08,960
But transformation isn't just technical.

122
00:08:09,460 --> 00:08:10,765
It requires organizational change.

123
00:08:11,265 --> 00:08:13,995
Roles evolve from
troubleshooting incidents to

124
00:08:13,995 --> 00:08:15,795
designing intelligent systems.

125
00:08:16,245 --> 00:08:20,235
Teams need new skills in ML
operations, even driven architecture

126
00:08:20,535 --> 00:08:21,795
and serverless computing.

127
00:08:22,215 --> 00:08:25,695
Culturally, there must be trust
in automation achieved through

128
00:08:25,695 --> 00:08:29,775
gradual rollout monitoring and
clear escalation protocols.

129
00:08:30,275 --> 00:08:35,470
Leadership commitment proves essential
for successful transformation requiring

130
00:08:35,470 --> 00:08:39,245
sustained investment in technology,
training, and cultural change.

131
00:08:39,745 --> 00:08:43,525
Security and complaints are
also vital in this process.

132
00:08:44,025 --> 00:08:47,595
Guard's ML models continuously
detect malicious activity.

133
00:08:47,865 --> 00:08:52,065
Lambda functions immediately isolate
threats and config ensures continuous

134
00:08:52,065 --> 00:08:54,665
complaints the than waiting for audits.

135
00:08:54,665 --> 00:08:56,885
Compliance violations
are corrected instantly.

136
00:08:57,385 --> 00:08:59,260
Importantly, not all alerts are equal.

137
00:08:59,760 --> 00:09:05,150
The system prioritizes based on severity
and business impact, like critical issues

138
00:09:05,150 --> 00:09:07,280
triggered immediate action and escalation.

139
00:09:08,240 --> 00:09:13,090
While lower level ones are queued
for automated fix later, this balance

140
00:09:13,090 --> 00:09:14,905
ensures both agility and security.

141
00:09:15,405 --> 00:09:19,365
Now let's discuss change
management strategies like training

142
00:09:19,365 --> 00:09:22,725
programs, mentorship, pairing,
experienced engineering with.

143
00:09:23,415 --> 00:09:27,855
Newer team members are cross-training
initiatives, exposing team

144
00:09:27,855 --> 00:09:32,085
members to different aspects of
autonomous operations, external

145
00:09:32,085 --> 00:09:35,475
training programs, providing
specialized knowledge in AI and ml.

146
00:09:35,975 --> 00:09:37,505
Next is the performance measurement.

147
00:09:37,745 --> 00:09:40,805
We should move from traditional
performance measurement strategies

148
00:09:41,375 --> 00:09:46,535
and adapt new metrics, emphasizing
systems reliability and autonomous

149
00:09:46,535 --> 00:09:50,255
remediation success rates based on
contribution to business objectives

150
00:09:50,255 --> 00:09:51,665
and collaboration with ai.

151
00:09:52,165 --> 00:09:56,875
Communication strategies need to have
clear protocols for when and how to

152
00:09:56,875 --> 00:09:59,005
intervene in automated processes.

153
00:09:59,515 --> 00:10:03,085
Procedures for escalating problems
beyond automated capabilities are

154
00:10:03,085 --> 00:10:07,935
must methods for sharing knowledge
about system behavior patterns like

155
00:10:07,935 --> 00:10:10,305
knowledge translations are good.

156
00:10:10,805 --> 00:10:14,845
Next is the risk management governance
frameworks, providing appropriate

157
00:10:14,845 --> 00:10:16,195
oversight and addressing risk.

158
00:10:16,945 --> 00:10:18,835
Regarding automated decision making.

159
00:10:19,335 --> 00:10:23,355
So this transformation timeline
typically spans multiple years,

160
00:10:23,355 --> 00:10:27,285
requiring patience and persistence
from both leadership and team members

161
00:10:27,785 --> 00:10:28,415
do ahead.

162
00:10:28,505 --> 00:10:30,545
Future trends will take this even further.

163
00:10:31,385 --> 00:10:36,035
Generative AI will create remediation
strategies for novel problems.

164
00:10:36,560 --> 00:10:39,080
Making automation more creative.

165
00:10:39,580 --> 00:10:44,380
Explainable AI will increase
transparency, helping teams understand

166
00:10:44,380 --> 00:10:45,880
why certain actions were taken.

167
00:10:46,380 --> 00:10:48,360
Next is AI powered code generation.

168
00:10:48,990 --> 00:10:54,780
This will speed up development time by
improving our, giving them solutions

169
00:10:54,785 --> 00:10:56,385
for developing infrastructure as code.

170
00:10:56,885 --> 00:11:01,355
At the same time, edge computing,
content computing and multi-cloud

171
00:11:01,415 --> 00:11:04,745
orchestration will push
capabilities beyond today's systems.

172
00:11:05,245 --> 00:11:09,175
These trends promise powerful
capabilities, but also require

173
00:11:09,205 --> 00:11:12,925
careful evaluation of readiness
and integration, complexity,

174
00:11:13,425 --> 00:11:15,480
simulation, and digital vents.

175
00:11:16,200 --> 00:11:18,240
These are emerging powerful enablers.

176
00:11:18,960 --> 00:11:24,360
Digital twins allow entire infrastructure
environments to be replicated virtually.

177
00:11:25,350 --> 00:11:29,970
This lets teams simulate failures,
cascading problems, and remediation

178
00:11:29,970 --> 00:11:31,860
responses without risking prediction.

179
00:11:32,820 --> 00:11:36,450
It helps identify weaknesses before
they occur in real environments.

180
00:11:36,950 --> 00:11:41,000
This is especially valuable for industries
like financial services, healthcare,

181
00:11:41,240 --> 00:11:44,480
or any other critical infrastructure
where downtime is unacceptable.

182
00:11:44,980 --> 00:11:47,860
Continuous implement through
simulation will be a cornerstone

183
00:11:47,860 --> 00:11:49,690
of future self-healing systems.

184
00:11:50,190 --> 00:11:53,520
Based on all of this, here
are some recommended steps for

185
00:11:53,520 --> 00:11:58,700
implementation First, as is current
challenges and identify high

186
00:11:58,700 --> 00:12:00,980
impact automation opportunities.

187
00:12:01,880 --> 00:12:06,535
And next, build a strong foundation
in like infrastructure as code, or.

188
00:12:07,225 --> 00:12:12,945
Having monitoring services and dashboards
in place and adapt event driven systems.

189
00:12:13,425 --> 00:12:18,760
Next is implement automation gradually,
like start with the low risk areas and

190
00:12:18,760 --> 00:12:23,250
then go with your, like in the first
step you have, you might have assessed

191
00:12:23,250 --> 00:12:25,230
some of the existing challenges.

192
00:12:25,490 --> 00:12:30,270
Just gradually increase one
take one risk at a time and

193
00:12:30,270 --> 00:12:31,830
implement one solution at a time.

194
00:12:32,310 --> 00:12:35,230
So that this will help
you grow more in future.

195
00:12:35,730 --> 00:12:38,430
Fourth is invest in training
and cultural change.

196
00:12:39,150 --> 00:12:43,770
This is as important as the technical
change like I discussed previously.

197
00:12:44,430 --> 00:12:47,640
Next is establishing governance
frameworks for oversight.

198
00:12:48,120 --> 00:12:53,820
So like when all the systems are automated
and the decisions are automated, you

199
00:12:53,820 --> 00:12:57,720
need to know what is the escalation
process and when and human should.

200
00:12:58,455 --> 00:13:00,495
Intervene or when he shouldn't.

201
00:13:01,105 --> 00:13:04,555
We need to establish the trust
process and escalation process

202
00:13:04,555 --> 00:13:05,905
when something goes wrong.

203
00:13:06,865 --> 00:13:10,645
And finally, continuously
measure and improve.

204
00:13:11,145 --> 00:13:16,855
So all these stages take multi-year
transformation timeline and plan for

205
00:13:16,855 --> 00:13:21,055
su sustained investment in technology
training and organizational support.

206
00:13:21,555 --> 00:13:24,675
This journey requires commitment,
patience, and sustained effort.

207
00:13:24,705 --> 00:13:28,725
But potential benefits make it essential
for organizations seeking to remain.

208
00:13:28,725 --> 00:13:28,785
T.

209
00:13:29,285 --> 00:13:32,435
The future of platform engineering
lies in intelligent partnerships

210
00:13:32,435 --> 00:13:34,055
between humans and ai.

211
00:13:34,955 --> 00:13:39,845
AI handles the bulk of routine operations
while humans focus on strategy,

212
00:13:39,845 --> 00:13:42,095
innovation, and exceptional situation.

213
00:13:43,055 --> 00:13:46,895
This partnership enhances system
resilience, reduces operational

214
00:13:46,895 --> 00:13:51,605
overhead, and allows platform engineers
to deliver more strategic value.

215
00:13:52,105 --> 00:13:57,295
Organizations that embrace this
transformation thoroughly and thoughtfully

216
00:13:57,355 --> 00:14:02,485
will build scalable, resilient, and
competitive capabilities for the future.

217
00:14:02,985 --> 00:14:04,305
Thank you all for listening.

218
00:14:04,665 --> 00:14:07,785
I hope this session helped you
understand not only the technology.

219
00:14:08,310 --> 00:14:11,910
But also the cultural and
organizational shifts required for AI

220
00:14:11,910 --> 00:14:13,530
driven self-healing infrastructure.

221
00:14:14,030 --> 00:14:15,740
This is not just about automation.

222
00:14:15,770 --> 00:14:20,000
It's about enabling platform engineering
teams to deliver higher value, innovate

223
00:14:20,000 --> 00:14:22,520
faster, and create more resilient systems.

224
00:14:22,970 --> 00:14:25,805
Thank you again, con 42
for this great opportunity.

