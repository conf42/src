1
00:00:00,009 --> 00:00:00,639
Hello everyone.

2
00:00:00,690 --> 00:00:01,350
Welcome back.

3
00:00:01,420 --> 00:00:04,450
So today we are going to
talk about the Salesforce

4
00:00:04,450 --> 00:00:06,130
integration and the capabilities.

5
00:00:06,789 --> 00:00:10,650
So these days the fortune
hundred companies are also

6
00:00:10,650 --> 00:00:15,350
using the Salesforce integration
capabilities in a enhanced way.

7
00:00:15,980 --> 00:00:20,330
So we are going to discuss what
are the integration patterns and,

8
00:00:20,380 --> 00:00:23,530
what is the Salesforce architecture
that we are going to use for all

9
00:00:23,530 --> 00:00:25,180
these integrations on a brief?

10
00:00:25,660 --> 00:00:26,680
So let's get started.

11
00:00:27,180 --> 00:00:30,810
So Salesforce integration landscapes
this is how the Salesforce integration

12
00:00:30,810 --> 00:00:32,580
landscape on a high level would look like.

13
00:00:33,030 --> 00:00:38,280
So Salesforce and the external system,
if they would like to connect to each

14
00:00:38,280 --> 00:00:42,390
other that's where the integration
landscape comes in the picture, right?

15
00:00:42,440 --> 00:00:47,000
So a p architecture is one of the main
key thing that comes into the picture.

16
00:00:47,450 --> 00:00:50,570
And if there is a middleware
that we would like to use between

17
00:00:50,570 --> 00:00:52,020
these two systems, and good.

18
00:00:52,365 --> 00:00:55,275
We can go ahead and use that
middleware integration system.

19
00:00:55,705 --> 00:00:58,705
The recommended way is to have a
middleware integration always in

20
00:00:58,705 --> 00:01:05,994
place because in case tomorrow the
example Ative system goes away, then we

21
00:01:05,994 --> 00:01:08,094
don't need to do a rework in between.

22
00:01:08,154 --> 00:01:11,224
So that's where the middleware
integration comes in the picture.

23
00:01:11,689 --> 00:01:13,459
And realtime capabilities.

24
00:01:13,539 --> 00:01:17,109
So we can share the data between
two systems using the platform,

25
00:01:17,109 --> 00:01:21,994
events, change, data capture, and the
streaming a p for the minimal latency.

26
00:01:22,734 --> 00:01:26,134
So we have security in place or
authentication is the security

27
00:01:26,674 --> 00:01:30,724
and enforced by TLS encryption
and multi-tenancy architecture

28
00:01:30,874 --> 00:01:32,704
has been implemented in
Salesforce that you all know.

29
00:01:33,204 --> 00:01:38,134
So this ecosystem encompasses
multiple technologies and approaches

30
00:01:38,524 --> 00:01:41,374
designed to address various
integration scenarios, right?

31
00:01:41,404 --> 00:01:45,034
There is a framework that allows
enterprise to connect the Salesforce

32
00:01:45,034 --> 00:01:47,254
with virtually any external system.

33
00:01:47,869 --> 00:01:50,599
Meanwhile, they maintain
the security as well.

34
00:01:50,689 --> 00:01:55,249
And the, all the solutions that
we will be providing is scalable.

35
00:01:55,320 --> 00:01:57,900
So that's how the landscape
would look like on a high level.

36
00:01:58,200 --> 00:02:01,710
So let's move on to the next slide,
how the architecture look like.

37
00:02:01,890 --> 00:02:09,790
So it's com it's a composite of API and
bulk API and soap interest APIs, right?

38
00:02:09,820 --> 00:02:13,240
These are the combinations that we have
when we talk about the architecture.

39
00:02:13,945 --> 00:02:18,654
So Salesforce a p architecture implements
a restful design, so that supports

40
00:02:18,654 --> 00:02:20,304
both simple and complex integration.

41
00:02:20,755 --> 00:02:26,865
So we use restful designs as of today in
every, all of the systems, which is good.

42
00:02:27,405 --> 00:02:31,945
So this will handle a complex integration
patterns as well that you already know.

43
00:02:32,445 --> 00:02:36,965
Bulk API is something that is available
in Salesforce where it helps to have.

44
00:02:37,910 --> 00:02:41,960
A huge data transferred to a different
system or an external system.

45
00:02:42,020 --> 00:02:48,290
So mostly the bulk KPI is a scheduled job
that gets triggered at the night times in

46
00:02:48,290 --> 00:02:52,930
order not to disrupt the business business
functionality in the business time, right?

47
00:02:52,930 --> 00:02:57,760
So this is where a bulk API comes
into the picture, and we can use this.

48
00:02:58,315 --> 00:03:02,065
A method to transfer
a huge amount of data.

49
00:03:02,335 --> 00:03:05,545
When we talk about large volumes,
this is the technique that

50
00:03:05,545 --> 00:03:06,775
comes into the picture, right?

51
00:03:07,345 --> 00:03:10,725
And then rest and soap, APIs as,
and when the data gets created and

52
00:03:10,725 --> 00:03:13,725
it has to be synced with the other
system, that is when the rest and

53
00:03:13,725 --> 00:03:15,165
soap API comes into the picture.

54
00:03:15,815 --> 00:03:21,355
So that is about the high level of
architecture of APIs in Salesforce, right?

55
00:03:21,355 --> 00:03:23,455
So performance measurement framework.

56
00:03:24,455 --> 00:03:28,625
So we have to measure the
performance of each and a every API.

57
00:03:28,625 --> 00:03:33,375
Otherwise the page loads of a user will
be drastically impacting the performance.

58
00:03:33,615 --> 00:03:38,265
So we have to be very careful and these
are the techniques that we have to measure

59
00:03:38,270 --> 00:03:44,025
a performance of an API and the page
loading time so that we know that we are

60
00:03:44,025 --> 00:03:49,025
in time and the performance is good by
looking at these measurements, right?

61
00:03:49,065 --> 00:03:53,445
So the first step is the page request
and then the server processing time, dom

62
00:03:53,445 --> 00:03:55,515
processing time, and then EPT calculation.

63
00:03:55,515 --> 00:03:59,895
So this overall thing comes into
the measurement framework where

64
00:03:59,925 --> 00:04:03,395
everything is measured and we are
gonna take a call whether the a

65
00:04:03,395 --> 00:04:05,855
p performance is accurate or not.

66
00:04:06,215 --> 00:04:10,075
If the a p has to be the performance
of the a p has to be increased, it has

67
00:04:10,075 --> 00:04:15,445
to be increased by certain, changes
to the code and we could remeasure the

68
00:04:15,685 --> 00:04:17,755
changes over here using this technique.

69
00:04:18,295 --> 00:04:21,165
And let's delve in deep one by one.

70
00:04:21,195 --> 00:04:25,185
So the experience page time metric
provides a comprehensive view of page

71
00:04:25,185 --> 00:04:29,145
performance, helping organizations
identify and resolve bottlenecks.

72
00:04:29,835 --> 00:04:33,855
EPT measures the complete user
experience from initial request

73
00:04:34,125 --> 00:04:35,595
to fully interactive page.

74
00:04:36,015 --> 00:04:38,475
Salesforce Lightning
component framework includes.

75
00:04:38,970 --> 00:04:44,430
Built in performance analysis tools that
track component rendering times, server

76
00:04:44,430 --> 00:04:46,800
round trips and JavaScript execution.

77
00:04:47,010 --> 00:04:51,750
These metrics enable developers to
optimize critical path and improve overall

78
00:04:51,750 --> 00:04:53,700
application responsiveness for end users.

79
00:04:53,970 --> 00:04:57,220
So end users are the main things
where we consider the solution

80
00:04:57,820 --> 00:05:02,490
for, so we talked about the
middleware integrations while back.

81
00:05:02,610 --> 00:05:03,630
So here we come.

82
00:05:04,245 --> 00:05:08,445
Salesforce has a inbuilt MuleSoft
integration capability implemented.

83
00:05:08,565 --> 00:05:12,395
So wherever we have a Salesforce
product so we can go ahead and use

84
00:05:12,395 --> 00:05:14,075
the MuleSoft as well as a middleware.

85
00:05:14,375 --> 00:05:19,495
So which will have integrated patterns
already exist between these two systems.

86
00:05:19,495 --> 00:05:24,355
So the integration will be too easy
to establish and all the patterns

87
00:05:24,355 --> 00:05:27,925
are already pre, pre-established
between these two systems, right?

88
00:05:28,525 --> 00:05:30,085
So any point platform.

89
00:05:30,570 --> 00:05:34,195
We also have Anypoint platform serves
as Salesforce strategic middleware

90
00:05:34,195 --> 00:05:39,595
solution, providing a unified environment
for designing, building, managing

91
00:05:40,075 --> 00:05:45,655
integrations across the enterprise Design
Center for a P LED connectivity exchange

92
00:05:45,655 --> 00:05:47,485
for reusable assets and templates.

93
00:05:47,965 --> 00:05:50,925
Runtime manager for
deployment control, right?

94
00:05:50,955 --> 00:05:51,555
Deployment.

95
00:05:51,555 --> 00:05:55,425
Flexibility is also one of the key
points that we are going to discuss.

96
00:05:56,005 --> 00:05:58,705
Enterprises can deploy MuleSoft
integrations in various

97
00:05:58,705 --> 00:06:01,615
environments to meet the specific
requirements and constraints.

98
00:06:02,395 --> 00:06:07,185
Club hub for fully managed deployment
runtime fabric for Kubernetes environments

99
00:06:07,395 --> 00:06:09,645
on premises for data zone view needs.

100
00:06:10,285 --> 00:06:13,945
MuleSoft a p led connectivity
approach promotes a reusability

101
00:06:13,945 --> 00:06:18,385
through three layers of API
systems, processes, and experience.

102
00:06:18,505 --> 00:06:21,565
These structure methodology
enables organizations to build.

103
00:06:22,135 --> 00:06:25,945
A network of interconnected APIs
that can be combined to create

104
00:06:25,945 --> 00:06:29,275
new business capabilities without
redundant integration work.

105
00:06:29,775 --> 00:06:32,595
So prebuilt connector framework
that we have already discussed.

106
00:06:32,635 --> 00:06:37,585
So we have app exchange connectors,
MuleSoft connectors, and external

107
00:06:37,585 --> 00:06:41,485
services, third party applications
with prebuilt integrations

108
00:06:41,695 --> 00:06:44,095
certified by Salesforce, right?

109
00:06:44,125 --> 00:06:47,485
So these are the third party applications
that are certified by Salesforce and.

110
00:06:47,985 --> 00:06:51,465
These are an apps that will be available
from the app exchange where we can

111
00:06:51,465 --> 00:06:55,115
download and use the capabilities,
but mostly these will be paid apps

112
00:06:55,715 --> 00:07:00,155
providing turnkey connectivity to popular
enterprise systems like Zap, Oracle, and

113
00:07:00,155 --> 00:07:02,945
Microsoft Dynamics, mules of connectors.

114
00:07:02,975 --> 00:07:07,205
Over 300 pre-built connectors
for applications, protocols and

115
00:07:07,205 --> 00:07:10,355
services featuring standardized
the connection, handling,

116
00:07:10,775 --> 00:07:13,205
authentication and error management.

117
00:07:13,700 --> 00:07:17,420
So external services, low-code
approach to integrate with REST APIs

118
00:07:17,840 --> 00:07:21,980
directly from flow builder, allowing
business analyst to incorporate

119
00:07:22,010 --> 00:07:24,500
external services without custom codes.

120
00:07:25,000 --> 00:07:29,050
So Salesforce connector ecosystem
dramatically reduces integration

121
00:07:29,050 --> 00:07:32,530
complexity and time to market
for common integration scenarios.

122
00:07:32,530 --> 00:07:36,610
Each connector encapsulates
best practices for interacting

123
00:07:36,610 --> 00:07:38,410
with sales specific systems.

124
00:07:38,965 --> 00:07:42,985
Handling authentication rate limiting
and protocol specific requirements

125
00:07:42,985 --> 00:07:44,455
for custom integration needs.

126
00:07:44,875 --> 00:07:49,315
Developers can leverage extension
points in connector framework to build

127
00:07:49,315 --> 00:07:53,695
specialized adapters while inheriting
core platform capabilities like logging,

128
00:07:53,695 --> 00:07:55,285
monitoring, and security control.

129
00:07:56,095 --> 00:07:57,325
So let's go to the next slide.

130
00:07:57,825 --> 00:08:00,450
Alright, so this is the real
time integration architecture,

131
00:08:00,450 --> 00:08:01,710
how it looks like, right?

132
00:08:02,040 --> 00:08:05,555
So we talked about platform events,
apex triggers, data capture.

133
00:08:06,135 --> 00:08:07,185
And then streaming APIs.

134
00:08:07,215 --> 00:08:10,405
So these are the different realtime
integration architecture patterns

135
00:08:10,405 --> 00:08:12,325
that we have in Salesforce, right?

136
00:08:12,375 --> 00:08:16,585
When we talk about platform events
it can be customized schema defined

137
00:08:16,585 --> 00:08:18,355
events for business processes.

138
00:08:18,835 --> 00:08:21,955
Apex triggers custom logic
execution on data changes.

139
00:08:22,885 --> 00:08:23,215
Okay?

140
00:08:23,725 --> 00:08:27,805
C, d, C change your data, capture, record
level changes, tracking and broadcasting.

141
00:08:27,955 --> 00:08:30,565
So whenever the records gets
updated, create or deleted.

142
00:08:31,090 --> 00:08:36,180
So the changes will be broadcasted to
the external system streaming a PA long

143
00:08:36,180 --> 00:08:38,490
polling for near real time notifications.

144
00:08:38,490 --> 00:08:43,680
So however the streaming works in the
external system, the similar patterns

145
00:08:43,680 --> 00:08:45,090
streaming a PA would also work.

146
00:08:45,810 --> 00:08:49,650
Salesforce, even driven architecture,
enables a realtime integration scenarios

147
00:08:49,650 --> 00:08:52,550
with minimal latency platform events.

148
00:08:52,550 --> 00:08:56,570
Provide a published subscribe
model for custom business events.

149
00:08:57,155 --> 00:09:00,365
While change data capture automatically
publishes records changes to the

150
00:09:00,365 --> 00:09:05,005
subscribed system, so change data captures
will only publish to the systems where

151
00:09:05,005 --> 00:09:07,075
the system subscribe to the changes.

152
00:09:07,575 --> 00:09:11,210
Alright, the streaming a p
supports scenarios requiring

153
00:09:11,210 --> 00:09:14,720
immediate notifications of change
through a long polling mechanism

154
00:09:15,290 --> 00:09:16,730
for high throughput scenarios.

155
00:09:17,510 --> 00:09:21,770
The high volume platform events,
features scale to millions of events.

156
00:09:22,175 --> 00:09:25,585
Per day with guaranteed delivery
and replay capabilities.

157
00:09:26,485 --> 00:09:27,925
Next, go to the next slide.

158
00:09:28,425 --> 00:09:31,335
So we are going to discuss about
the security and governance

159
00:09:31,725 --> 00:09:33,255
framework here, right?

160
00:09:33,255 --> 00:09:34,215
Security.

161
00:09:34,245 --> 00:09:37,095
We know that we have an
authentication in place.

162
00:09:37,195 --> 00:09:43,045
We have different authentications, what
JWT and saml supports and authorization.

163
00:09:43,095 --> 00:09:46,065
We have profile based permissions
and connected app controls.

164
00:09:46,725 --> 00:09:51,305
And encryption is followed as TSL
encryption and Salesforce shield

165
00:09:51,335 --> 00:09:53,225
platform encryption is also available.

166
00:09:53,765 --> 00:09:58,785
But this Salesforce shield is a
additional security measure that we can

167
00:09:58,785 --> 00:10:01,275
purchase from Salesforce and monitoring.

168
00:10:01,755 --> 00:10:07,125
So like we discussed the platform events
so that even monitoring and real time,

169
00:10:07,125 --> 00:10:08,835
even monitoring can also be happening.

170
00:10:09,705 --> 00:10:12,615
So security is a foundational to
Salesforce integration architecture.

171
00:10:13,290 --> 00:10:19,190
That platform implements what 2.0 for
secure delegated access with support for

172
00:10:19,190 --> 00:10:21,680
various flows including web services.

173
00:10:21,740 --> 00:10:25,670
User agent j, WT barrier,
and SAM assertion.

174
00:10:26,660 --> 00:10:29,390
Connected apps will provide a
governance framework for external

175
00:10:29,390 --> 00:10:35,210
integrations with the granular control
over a p access IP restrictions and

176
00:10:35,270 --> 00:10:36,920
session policies for monitoring.

177
00:10:37,430 --> 00:10:42,500
Even monitoring captures detail logs
of API usage while shield platform

178
00:10:42,500 --> 00:10:46,760
encryption protects the sensitive data
with the tenant specific encryption keys.

179
00:10:47,260 --> 00:10:53,030
So for connected apps we have a different
framework in place for authentication.

180
00:10:53,420 --> 00:10:56,569
So we have connected app framework
where we create a connected app

181
00:10:56,569 --> 00:11:00,049
for every external system, and then
authentication will be declared

182
00:11:00,049 --> 00:11:01,069
at the connected app level.

183
00:11:01,569 --> 00:11:04,819
So how scalable and the
performance of Salesforce would be.

184
00:11:04,819 --> 00:11:09,199
The bulk api, like we discussed, if
there is a huge volume of data, we would

185
00:11:09,199 --> 00:11:11,089
like to transfer between two systems.

186
00:11:11,089 --> 00:11:11,689
Yes.

187
00:11:11,779 --> 00:11:15,559
Bulk API is the one, and this
is the limitations that we have.

188
00:11:16,049 --> 00:11:16,289
Rest.

189
00:11:16,289 --> 00:11:18,719
A API is this platform.

190
00:11:18,719 --> 00:11:22,739
Events is having a more capability and
streaming API is having a less capability.

191
00:11:22,789 --> 00:11:27,169
Salesforce's multi-tenant architecture
incorporates sophisticated mechanisms

192
00:11:27,169 --> 00:11:28,909
for scaling integration workloads.

193
00:11:29,569 --> 00:11:35,419
The platforms govern limits in force or
fair usage across tenants while allowing

194
00:11:35,419 --> 00:11:38,269
for high throughput through optimized API.

195
00:11:38,269 --> 00:11:42,519
Patterns, like we discussed for high
volume scenarios, bulk API is the

196
00:11:43,019 --> 00:11:44,369
pattern that we are going to choose.

197
00:11:44,879 --> 00:11:48,839
And within the bulk API, we have an
option to choose the batch stage.

198
00:11:49,619 --> 00:11:53,279
So based on the batch size the number
of records will be process processed

199
00:11:53,279 --> 00:11:56,039
in the batches and all the batches.

200
00:11:56,039 --> 00:11:58,079
Batches will be processed in parallel.

201
00:11:58,229 --> 00:12:00,839
So that is one of the major advantage.

202
00:12:01,339 --> 00:12:05,479
So the best practices that we have
is a PLA design implement system,

203
00:12:05,809 --> 00:12:09,349
process experience, API layer
to maximize the reusability and

204
00:12:09,349 --> 00:12:10,999
minimize point to point dependency.

205
00:12:11,704 --> 00:12:15,505
So batch versus realtime analysis
is something that we have we need

206
00:12:15,505 --> 00:12:18,805
to carefully evaluate the latency
requirements to choose appropriate

207
00:12:18,805 --> 00:12:19,944
integration design pattern.

208
00:12:20,425 --> 00:12:24,415
So if there is a huge data that
has to be transmitted, we should

209
00:12:24,415 --> 00:12:26,005
never go to the realtime analysis.

210
00:12:26,395 --> 00:12:29,245
Rather, we should check with
business to see if a batch is a

211
00:12:29,275 --> 00:12:32,005
best best option for them, right?

212
00:12:32,055 --> 00:12:34,155
So that the latency doesn't
come into the picture.

213
00:12:34,655 --> 00:12:35,824
And then performance testing.

214
00:12:35,824 --> 00:12:39,574
Conduct load testing under various
conditions to identify bottlenecks

215
00:12:39,964 --> 00:12:43,055
and establish a reliable throughput
metrics for production planning,

216
00:12:44,045 --> 00:12:45,214
error handling and recovery.

217
00:12:46,145 --> 00:12:52,145
Implement comprehensive logic, dead letter
cues, and monitoring alerts to ensure

218
00:12:52,145 --> 00:12:54,935
resilience against intermittent failures.

219
00:12:55,435 --> 00:12:58,914
Successful Salesforce integrations
require careful planning and

220
00:12:58,914 --> 00:13:00,774
adherence to establish patterns.

221
00:13:01,254 --> 00:13:06,444
API LED connectivity provides a structured
approach that promotes reuse and reduces

222
00:13:06,444 --> 00:13:10,734
technical deck while proper separation
of synchronization and a synchronous

223
00:13:10,734 --> 00:13:13,464
processes prevents performance bottle mix.

224
00:13:13,974 --> 00:13:16,974
Comprehensive error handling is
essential for production reliability,

225
00:13:17,484 --> 00:13:22,014
including retry mechanisms with
the exponential back of dead letter

226
00:13:22,014 --> 00:13:27,744
queues for manual intervention, and
detailed logging for troubleshooting.

227
00:13:28,449 --> 00:13:32,169
Regular performance testing
helps identify potential issues

228
00:13:32,169 --> 00:13:33,849
before they impact end users.

229
00:13:34,349 --> 00:13:37,829
Alright, so the key takeaways and
the next steps would be architectural

230
00:13:37,829 --> 00:13:41,429
assessment is one of the key
takeaways, technical implementation,

231
00:13:41,429 --> 00:13:43,109
and then performance optimization.

232
00:13:43,799 --> 00:13:46,374
So evaluate your current
integration landscape against

233
00:13:46,374 --> 00:13:47,854
Salesforce best practices.

234
00:13:48,479 --> 00:13:51,539
Identify opportunities to
implement API led connectivity.

235
00:13:52,364 --> 00:13:55,964
And reduce point to point
dependencies that limit scalability.

236
00:13:56,805 --> 00:13:58,305
So technical implementation.

237
00:13:58,805 --> 00:14:03,185
Start with small, well-defined
integration project build capabilities.

238
00:14:03,214 --> 00:14:07,264
Establish standard for error handling,
logging and monitoring before

239
00:14:07,264 --> 00:14:09,974
scaling to more complex scenarios.

240
00:14:10,119 --> 00:14:11,449
Performance optimization.

241
00:14:11,879 --> 00:14:15,044
Implement comprehensive monitoring
for your integration points.

242
00:14:15,434 --> 00:14:19,124
Use EPT metrics to identify and
resolve the bottlenecks that we

243
00:14:19,124 --> 00:14:20,324
have discussed in slide three.

244
00:14:20,729 --> 00:14:24,989
Focusing on high impact the customer
facing processes first, right?

245
00:14:25,379 --> 00:14:28,799
Salesforce integration capabilities
continue to evolve rapidly

246
00:14:29,159 --> 00:14:33,509
with the new features released
in each seasonal updates.

247
00:14:33,749 --> 00:14:37,979
Stay informed through release notes
and trailhead models, and considered

248
00:14:37,979 --> 00:14:41,159
certification parts for technical
team members to deepen expertise.

249
00:14:41,699 --> 00:14:45,209
Remember that successful indication
strategies balance immediate business

250
00:14:45,209 --> 00:14:46,679
needs with long-term AL goals.

251
00:14:47,639 --> 00:14:51,389
By leveraging Salesforce comprehensive
integration platform, organizations

252
00:14:51,479 --> 00:14:54,719
can build the connected experiences
that scale effectively while

253
00:14:54,719 --> 00:14:56,309
maintaining security and performance.

254
00:14:56,809 --> 00:14:59,490
So these are the key take
takeaways that we have.

255
00:14:59,520 --> 00:15:02,520
And thank you so much
guys for hanging around.

256
00:15:03,380 --> 00:15:04,930
I hope you enjoyed this talk.

257
00:15:05,590 --> 00:15:07,210
Please let me know for any questions.

258
00:15:07,895 --> 00:15:09,574
Feel free to ping me on my LinkedIn.

259
00:15:09,705 --> 00:15:13,545
If you have any other questions or
if you are aspirant of Salesforce

260
00:15:13,545 --> 00:15:18,125
integrations or Salesforce or ecosystem,
please do ping me on my LinkedIn.

261
00:15:18,455 --> 00:15:22,285
I am happy to help so that we
grow together as a network.

262
00:15:22,705 --> 00:15:23,515
Alright, thank you.

263
00:15:24,025 --> 00:15:24,445
Thank you all.

