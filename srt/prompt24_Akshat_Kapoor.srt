1
00:00:00,280 --> 00:00:04,170
Hello and welcome to my talk on
predictive network maintenance.

2
00:00:04,850 --> 00:00:11,400
Now imagine a world where network issues
almost never happen, where we can actually

3
00:00:11,449 --> 00:00:16,440
prevent network failures before they
even have a chance to disrupt operations.

4
00:00:16,940 --> 00:00:20,460
This is the promise of
predictive network maintenance.

5
00:00:21,380 --> 00:00:27,880
It's a revolutionary way of using AI to
identify and prevent potential problems

6
00:00:27,909 --> 00:00:33,220
in our networks, allowing for smoother
operations and fewer interruptions.

7
00:00:33,720 --> 00:00:38,755
I am Akshat Kapoor and I will
walk you Through how AI driven

8
00:00:38,805 --> 00:00:43,745
predictive maintenance works, why
it's important and how it's being

9
00:00:44,025 --> 00:00:48,865
applied across different industries
to create more reliable networks.

10
00:00:49,365 --> 00:00:54,275
Since the inception of internet, network
reliability has always been a concern.

11
00:00:54,775 --> 00:00:59,315
Various protocols and technologies
were developed to counter this issue.

12
00:00:59,815 --> 00:01:03,134
Most of them have been based
on reactive approaches.

13
00:01:03,825 --> 00:01:08,295
which require a failure to happen
first before mitigating it.

14
00:01:09,285 --> 00:01:13,895
But as networks grew in complexity,
the focus shifted from merely

15
00:01:13,975 --> 00:01:19,405
reacting to failures to proactively
predicting them and avoid potential

16
00:01:19,435 --> 00:01:20,515
disruptions to the network.

17
00:01:21,015 --> 00:01:24,535
Predictive network maintenance is
the next evolution in this journey,

18
00:01:25,415 --> 00:01:31,915
aiming to read out or repair systems in
anticipation of a failure, a major shift

19
00:01:32,615 --> 00:01:34,685
from traditional reactive approaches.

20
00:01:35,185 --> 00:01:36,725
Now, what is a network failure?

21
00:01:37,595 --> 00:01:42,945
A network failure is a complete or partial
failure of hardware or software components

22
00:01:42,985 --> 00:01:48,045
that comprise a network, which causes
service disruption for the end users.

23
00:01:49,035 --> 00:01:51,175
Now, there are various causes for it.

24
00:01:51,675 --> 00:01:57,785
There has been a study and based on
that, they found out the most prominent

25
00:01:57,785 --> 00:02:03,145
cause of network failures were link
failures, which could be a fiber cut

26
00:02:03,245 --> 00:02:08,685
or a configuration error on a link, and
that comprised of about 32 percent of

27
00:02:08,685 --> 00:02:10,455
the failures reported in the network.

28
00:02:10,955 --> 00:02:15,675
This is followed by operating
system failures or software bugs.

29
00:02:15,925 --> 00:02:21,345
Or due to system updates Which cause
these glitches and that comprise of about

30
00:02:21,395 --> 00:02:26,285
18 percent of them This is followed by
human errors, which are also about 18

31
00:02:26,285 --> 00:02:31,465
percent of them caused by humans due to
misconfiguration of the network followed

32
00:02:31,475 --> 00:02:37,595
by hardware failures due to components
reaching end of life memory failures

33
00:02:37,625 --> 00:02:42,925
card failures and such or the overuse
of those components And even cyber

34
00:02:42,925 --> 00:02:47,565
attacks in the modern world The cost
of this network failures is very high.

35
00:02:48,065 --> 00:02:54,525
Average cost of network downtime as
per Gartner is about 5, 600 per minute.

36
00:02:54,915 --> 00:02:56,215
That's a lot of money.

37
00:02:57,135 --> 00:03:04,085
Globally for telecom operators, this
annual cost can exceed 60 billion a year.

38
00:03:04,585 --> 00:03:06,155
This is not a small cost to pay.

39
00:03:06,655 --> 00:03:11,065
So what are the problems with
the current network maintenance?

40
00:03:11,565 --> 00:03:14,235
It has been a topic since
early days of internet.

41
00:03:14,555 --> 00:03:17,045
And the paradigm has not changed much.

42
00:03:17,545 --> 00:03:24,685
First, a failure or a path disruption must
be detected, followed by traffic rerouting

43
00:03:24,765 --> 00:03:29,885
to an alternate path, which is either
pre programmed or computed on the fly.

44
00:03:30,385 --> 00:03:33,005
So it's largely reactive, right?

45
00:03:33,505 --> 00:03:37,515
Companies only address problems once
they have identified the problem

46
00:03:37,565 --> 00:03:38,995
and once it has already happened.

47
00:03:39,975 --> 00:03:42,705
But this approach has serious drawbacks.

48
00:03:43,665 --> 00:03:48,335
It means unexpected downtimes and
very high operational costs to pay.

49
00:03:48,835 --> 00:03:52,745
Now, I would like to cite an
example of the Rogers outage

50
00:03:52,785 --> 00:03:54,485
that happened in Canada in 2022.

51
00:03:54,985 --> 00:04:00,865
That outage was a day long outage,
which, caused, which left a quarter

52
00:04:00,865 --> 00:04:05,155
of the population, about 12 million
people without internet access,

53
00:04:05,635 --> 00:04:07,905
severely impacting their daily lives.

54
00:04:08,405 --> 00:04:11,234
Even emergency and
payment services were cut.

55
00:04:11,734 --> 00:04:16,604
Rogers required excessive time to identify
the root cause of the failure, which

56
00:04:16,604 --> 00:04:21,394
turned out that because of a software
update, their routers had gone down.

57
00:04:21,894 --> 00:04:26,084
This is a perfect example of how costly
reactive maintenance can be, both

58
00:04:26,084 --> 00:04:28,594
financially and in terms of public safety.

59
00:04:29,094 --> 00:04:33,434
And since it's not very efficient,
as we can see, it is expensive.

60
00:04:33,934 --> 00:04:37,394
Smaller networks who have
wholesale agreements with our

61
00:04:37,394 --> 00:04:38,994
service providers like Rogers.

62
00:04:39,659 --> 00:04:44,969
They have service level agreements with
these service providers in which the

63
00:04:44,969 --> 00:04:49,379
service providers are supposed to provide
them network uptime guarantees, right?

64
00:04:49,439 --> 00:04:53,629
Otherwise they have to pay, to
these smaller networks a fee.

65
00:04:54,129 --> 00:04:58,249
So the more time it takes for
them to bring up the network,

66
00:04:58,339 --> 00:04:59,599
the more it costs them.

67
00:05:00,099 --> 00:05:03,239
Another important point is
something called gray failures.

68
00:05:04,079 --> 00:05:11,019
The gray failures are when an a path is up
technically alive, but is underperforming

69
00:05:11,169 --> 00:05:16,899
or cannot support the, the quality of,
experience requirements of the path.

70
00:05:17,359 --> 00:05:19,369
So these are called gray failures.

71
00:05:19,829 --> 00:05:25,039
So a reactive, maintenance approach
will still see the path as active and

72
00:05:25,049 --> 00:05:28,159
try to route or use this path, but.

73
00:05:28,554 --> 00:05:31,724
It will cause degraded
performance for users.

74
00:05:32,654 --> 00:05:36,894
Now, predictive networks can
anticipate and mitigate these issues.

75
00:05:37,804 --> 00:05:42,484
This makes a proactive approach like
predictive maintenance essential for

76
00:05:42,514 --> 00:05:44,344
preventing these types of disruptions.

77
00:05:44,844 --> 00:05:46,994
So why predictive network maintenance?

78
00:05:47,934 --> 00:05:52,104
I think by now we understand that
reactive approaches are not working,

79
00:05:52,604 --> 00:05:53,704
but there is something more.

80
00:05:54,204 --> 00:06:00,254
Networks are growing more complex
with the influx of IoT devices that

81
00:06:00,254 --> 00:06:01,634
are getting onboarded every day.

82
00:06:02,134 --> 00:06:03,834
You have multi cloud environments.

83
00:06:04,709 --> 00:06:09,419
The operational technology Networks
are merging with it networks.

84
00:06:09,449 --> 00:06:13,369
For example your factory automation
networks or your train networks

85
00:06:13,849 --> 00:06:15,549
They are merging with it networks.

86
00:06:15,989 --> 00:06:19,299
So the networks are more and more
heterogeneous and more and more

87
00:06:19,339 --> 00:06:24,469
complex Existing solutions are
neither able to scale not able to

88
00:06:24,499 --> 00:06:27,949
cope up with the complexity and
heterogeneity of these modern networks.

89
00:06:28,449 --> 00:06:30,889
And that's where the
predictive networks come in.

90
00:06:31,389 --> 00:06:37,569
They offer a better fault detection
accuracy, and some studies have shown

91
00:06:37,579 --> 00:06:44,119
that their, their ability to detect
faults is up to 95%, which is quite high.

92
00:06:44,619 --> 00:06:47,479
Secondly, networks are
highly diverse and dynamic.

93
00:06:47,979 --> 00:06:52,574
In a multi cloud highly virtualized
world, Where the network keeps changing

94
00:06:52,784 --> 00:06:58,044
and applications constantly move, it
has never been so important to equip

95
00:06:58,044 --> 00:06:59,794
the network with an ability to learn.

96
00:07:00,714 --> 00:07:04,324
This is what is missing
in the reactive networks.

97
00:07:04,634 --> 00:07:09,344
They have zero ability to learn
from the faults or errors that

98
00:07:09,354 --> 00:07:10,704
have happened in a network.

99
00:07:11,204 --> 00:07:16,534
Now, AI plays a crucial role here,
enabling us to predict potential

100
00:07:16,574 --> 00:07:19,084
failures and addressing them in advance.

101
00:07:19,934 --> 00:07:24,224
This proactive model leads to a more
reliable network and greater efficiency.

102
00:07:24,724 --> 00:07:30,194
Predictive networks can even identify
grave failures, issues that degrade

103
00:07:30,294 --> 00:07:35,874
network performance without causing
complete outages, helping us to keep both

104
00:07:35,914 --> 00:07:38,534
connectivity and quality of service high.

105
00:07:39,034 --> 00:07:42,504
Now let's move towards how to
build a predictive network.

106
00:07:43,004 --> 00:07:45,904
I think we all know here that
the first thing to build a

107
00:07:45,904 --> 00:07:47,664
model is to define the problem.

108
00:07:48,479 --> 00:07:52,289
And maybe we already know the problem
that we want to identify and detect

109
00:07:52,319 --> 00:07:56,679
the faults, or we want to, proactively
find where there could be a next

110
00:07:56,679 --> 00:07:58,029
fault happening in the network.

111
00:07:58,904 --> 00:08:02,764
But we still want to define what
kind of fault we want to identify.

112
00:08:02,824 --> 00:08:07,054
Is it a gray fault or is it a black
fault, which is a total outage of a link?

113
00:08:07,684 --> 00:08:11,334
Do we want to identify hardware
failures, software failures?

114
00:08:11,964 --> 00:08:14,314
What is our forecasting horizon?

115
00:08:14,494 --> 00:08:19,604
Are we looking to do short term
forecasting faults happening within

116
00:08:19,604 --> 00:08:23,714
a month or we have a longer or
mid term forecasting horizons?

117
00:08:24,589 --> 00:08:28,739
All this comes under defining the
problem, which is the most important

118
00:08:28,749 --> 00:08:31,049
thing before we start building our model.

119
00:08:31,549 --> 00:08:35,639
Now, the next step is collecting
the data for this model.

120
00:08:36,139 --> 00:08:40,629
Now, there are two types of data and data
primarily, which we use in the network.

121
00:08:41,339 --> 00:08:47,129
One is the historical records of faults,
and that has happened in the network

122
00:08:47,169 --> 00:08:51,979
and the associated network state at
that time, what were the flows, what

123
00:08:52,009 --> 00:08:56,989
was the status of the network components
at that time, all of that, there are

124
00:08:57,129 --> 00:09:01,679
historical records available, there
are public data sets also available.

125
00:09:02,074 --> 00:09:07,984
that log this network information, but
those are mostly outdated and may not

126
00:09:07,994 --> 00:09:10,514
be suitable for training the model.

127
00:09:11,014 --> 00:09:14,964
Now, the next step would be the
real time data collection through

128
00:09:14,964 --> 00:09:16,904
continuous monitoring of networks.

129
00:09:17,454 --> 00:09:22,544
So real time data collected and
integrated from continuous monitoring

130
00:09:23,374 --> 00:09:25,414
comes from different network components.

131
00:09:25,504 --> 00:09:32,274
It could be the routers, the switches,
the servers, the applications, the type of

132
00:09:32,304 --> 00:09:35,624
data that's available in networks is huge.

133
00:09:35,984 --> 00:09:39,374
We have packet logs, we have
network alarms, we have flow

134
00:09:39,424 --> 00:09:41,834
telemetry data, packet traces.

135
00:09:42,704 --> 00:09:43,914
device configuration.

136
00:09:43,924 --> 00:09:46,644
What is the configuration
of all those devices?

137
00:09:47,054 --> 00:09:48,404
What is the topology?

138
00:09:48,674 --> 00:09:51,724
What kind of applications
are running over the network?

139
00:09:52,224 --> 00:09:55,114
This is, there are a lot
and lots of data available.

140
00:09:56,104 --> 00:10:02,314
So when we move to the next step, We
have to look at preparing this data,

141
00:10:02,434 --> 00:10:06,174
which is something called feature
engineering or features extraction.

142
00:10:06,674 --> 00:10:12,314
We need to extract the data from
the network based on our KPI.

143
00:10:12,364 --> 00:10:13,754
What we are trying to solve.

144
00:10:13,824 --> 00:10:16,104
Are we, what problem
are we trying to solve?

145
00:10:16,224 --> 00:10:18,754
And this goes back to point number one.

146
00:10:19,159 --> 00:10:20,339
defining the problem.

147
00:10:21,199 --> 00:10:28,209
So for fault detection cases, typically
what we want to look at is network alarms.

148
00:10:29,139 --> 00:10:34,299
if there are sudden spikes in
packet loss, There is a jitter

149
00:10:34,439 --> 00:10:36,249
happening in the network.

150
00:10:36,689 --> 00:10:38,809
There are a lot of
packet errors happening.

151
00:10:38,979 --> 00:10:42,799
There is a latency and of
course, the quality of, user

152
00:10:42,819 --> 00:10:44,349
experience is deteriorating.

153
00:10:44,379 --> 00:10:48,429
For example, your video is
jittery and so on and so forth.

154
00:10:49,279 --> 00:10:51,809
You also consider the C SNIB.

155
00:10:52,764 --> 00:10:54,054
seasonality of the data.

156
00:10:54,554 --> 00:10:58,574
Now let's get to fault prediction
and building our model.

157
00:10:59,074 --> 00:11:02,154
On the right side, you see a flowchart.

158
00:11:02,574 --> 00:11:05,874
some of these stages we
discussed in the previous slides.

159
00:11:06,474 --> 00:11:11,324
You start with the data, pre
process it, you clean the data,

160
00:11:11,504 --> 00:11:13,554
you extract the features you want.

161
00:11:13,584 --> 00:11:16,544
You only look at those features
which you want to focus on.

162
00:11:17,324 --> 00:11:18,434
And the next step is.

163
00:11:18,859 --> 00:11:20,379
coming to training the model.

164
00:11:20,879 --> 00:11:25,809
Now, data is decomposed in
training and test data sets.

165
00:11:26,309 --> 00:11:31,039
It's usually a split of 70
30 and you need spatial and

166
00:11:31,059 --> 00:11:33,169
temporal diversity in the data.

167
00:11:33,669 --> 00:11:38,969
So from an algorithm perspective, there is
no best algorithm which can say that this

168
00:11:38,979 --> 00:11:40,929
is the best algorithm to predict faults.

169
00:11:41,629 --> 00:11:46,539
But typically, long short term
memory, decision trees, and random

170
00:11:46,539 --> 00:11:50,549
forest are used in most of the
use cases for predicting faults.

171
00:11:51,049 --> 00:11:56,599
Now models can be learned either in a
supervised manner where we know which

172
00:11:56,599 --> 00:12:01,209
uses the labeled data where we know
what faults are already identified, or

173
00:12:01,249 --> 00:12:06,389
also with unsupervised learning, which
identifies unusual patterns in the data

174
00:12:07,049 --> 00:12:09,369
without needing predefined fault labels.

175
00:12:09,869 --> 00:12:14,149
Typically a hybrid approach would
give better results in overall fault

176
00:12:14,179 --> 00:12:18,579
detection, but it could also go back to
the first point of what are we trying

177
00:12:18,579 --> 00:12:21,579
to optimize and what kind of faults
we are trying to detect in the model.

178
00:12:22,079 --> 00:12:27,894
Now comes evaluating the model that has
been and then further optimizing it.

179
00:12:28,394 --> 00:12:33,404
Forecasting accuracy is a very
critical topic in fault predictions.

180
00:12:34,324 --> 00:12:38,734
Every forecasting system
will inevitably make errors.

181
00:12:39,654 --> 00:12:45,054
Therefore, it is essential that
predictive engines are designed

182
00:12:45,384 --> 00:12:47,204
to effectively manage trade offs.

183
00:12:47,774 --> 00:12:52,304
Among true positive, false
positives and false negatives.

184
00:12:52,804 --> 00:12:57,414
True positives are instances where
the model accurately predicts a

185
00:12:57,414 --> 00:12:59,344
failure and then failure occurs.

186
00:13:00,154 --> 00:13:03,234
False positives are cases where
the model predicts a failure,

187
00:13:03,364 --> 00:13:05,134
but that does not materialize.

188
00:13:05,854 --> 00:13:09,494
And false negatives occur when the
models fail to predict a failure

189
00:13:09,544 --> 00:13:10,804
even though there was a failure.

190
00:13:11,304 --> 00:13:16,534
In case of fault prediction and in general
for network, predictive networks, it

191
00:13:16,534 --> 00:13:22,134
is advisable to minimize false positive
as it could be disruptive in nature.

192
00:13:22,634 --> 00:13:25,624
So in short, accept imperfections.

193
00:13:26,624 --> 00:13:32,334
To ensure the, there are minimum or
zero false positives, even though you're

194
00:13:32,334 --> 00:13:34,684
not able to detect all the faults.

195
00:13:35,184 --> 00:13:37,284
So what has been the outcome?

196
00:13:37,784 --> 00:13:41,984
Studies have demonstrated that
predictive maintenance can yield

197
00:13:41,994 --> 00:13:44,274
significant cost savings for companies.

198
00:13:45,079 --> 00:13:49,659
Primarily by reducing downtime
and optimizing repair schedules in

199
00:13:49,689 --> 00:13:51,679
telecommunications and ID sectors.

200
00:13:51,739 --> 00:13:58,469
Network downtime costs are often cited
as high as 5, 600 per minute, which we

201
00:13:58,469 --> 00:14:00,049
talked about in one of the earlier slides.

202
00:14:00,109 --> 00:14:04,229
That was a study from Gartner, which
illustrates the severe financial

203
00:14:04,359 --> 00:14:06,169
impact of unexpected outages.

204
00:14:06,669 --> 00:14:09,649
Predictive maintenance, which
leverages AI and machine learning to

205
00:14:09,659 --> 00:14:15,059
monitor equipment in real time and
anticipate faults, has been shown to

206
00:14:15,069 --> 00:14:17,739
reduce downtime by approximately 50%.

207
00:14:18,239 --> 00:14:23,329
This proactive approach not only
prevents disruptions, but also reduces

208
00:14:23,389 --> 00:14:27,329
the need for emergency repairs,
cutting maintenance costs by around

209
00:14:27,399 --> 00:14:29,759
30 to 40 percent in some cases.

210
00:14:30,259 --> 00:14:35,799
Along with the alert on fault, a
predictive system can also offer insights.

211
00:14:36,564 --> 00:14:41,214
regarding the possible root
cause, enabling teams to tackle

212
00:14:41,354 --> 00:14:45,324
the fundamental issue rather than
merely addressing the symptom.

213
00:14:45,824 --> 00:14:47,814
Now, there are some
challenges as well here.

214
00:14:48,314 --> 00:14:52,334
Collecting appropriate data
and extracting relevant feature

215
00:14:52,404 --> 00:14:54,494
involves several considerations.

216
00:14:55,144 --> 00:14:58,984
The data may exhibit
inconsistencies and disorganization.

217
00:14:59,484 --> 00:15:02,864
We should have a fair understanding
of what data features can

218
00:15:02,864 --> 00:15:06,384
provide a correlation with the
faults we are trying to predict.

219
00:15:06,884 --> 00:15:10,144
Next is determining the most
suitable machine learning technique

220
00:15:10,394 --> 00:15:12,934
for a particular networking
challenge, which is essential.

221
00:15:12,934 --> 00:15:17,934
Various methodologies exist for
addressing issues related to traffic

222
00:15:17,944 --> 00:15:20,344
prediction, classification, and detection.

223
00:15:21,034 --> 00:15:26,014
So it's crucial to ensure that the
solution can scale effectively to

224
00:15:26,044 --> 00:15:28,204
accommodate large and varied networks.

225
00:15:28,704 --> 00:15:33,184
Additionally, state strategies must be
developed to enable machine learning

226
00:15:33,184 --> 00:15:38,694
models to learn consistently across
networks that are designed non uniformly.

227
00:15:39,194 --> 00:15:41,424
So what's the future
of network maintenance?

228
00:15:41,924 --> 00:15:47,504
Looking to the future as AI
continues to evolve, we can expect

229
00:15:47,504 --> 00:15:51,514
predictive maintenance to become
even more accurate and reliable.

230
00:15:52,014 --> 00:15:56,374
Real time analytics And fully
automated maintenance could become

231
00:15:56,374 --> 00:16:01,094
the norm with networks becoming
smarter and more resilient over time.

232
00:16:01,594 --> 00:16:05,534
Emerging AI techniques like state
transition learning and hierarchical

233
00:16:05,784 --> 00:16:09,904
models will likely push the boundaries
of predictive accuracy, leading to even

234
00:16:09,904 --> 00:16:11,904
more robust and intelligent systems.

235
00:16:12,404 --> 00:16:17,194
Now, autonomic self healing networks
are the logical next step in

236
00:16:17,194 --> 00:16:21,134
network reliability as they minimize
disruption and enhance efficiency

237
00:16:21,134 --> 00:16:23,264
without requiring manual intervention.

238
00:16:24,229 --> 00:16:28,379
These networks create a continuous
feedback loop that enables

239
00:16:28,419 --> 00:16:33,449
real time responses, maybe in
a few seconds, to faults and

240
00:16:33,449 --> 00:16:35,179
maintaining optimal performance.

241
00:16:35,679 --> 00:16:39,949
coming to, we talked a lot about
reactive versus predictive earlier in the

242
00:16:39,949 --> 00:16:46,434
slides, but, It's not that reactive is
not required as or at all reactive and

243
00:16:46,734 --> 00:16:52,184
predictive approaches are complementary
to each other as we know that predictive

244
00:16:52,194 --> 00:16:55,214
models cannot predict all of the issues.

245
00:16:55,894 --> 00:17:01,624
So the reactive comes into play
there where the predictive model

246
00:17:01,854 --> 00:17:04,564
either cannot predict or predicts.

247
00:17:05,254 --> 00:17:07,014
incorrectly, a fault.

248
00:17:07,844 --> 00:17:14,334
For example, if traffic is rerouted
into an alternative path in anticipation

249
00:17:14,334 --> 00:17:18,034
of an issue that could happen in the
network, the networking gear could

250
00:17:18,044 --> 00:17:22,184
detect the incorrect prediction and
immediately revert to the original route.

251
00:17:22,684 --> 00:17:26,954
Such a mechanism is less suited
for centralized operations though.

252
00:17:27,454 --> 00:17:29,834
So what are the key takeaways from here?

253
00:17:30,334 --> 00:17:34,704
Predictive network maintenance offers
a proactive, reliable solution that

254
00:17:34,704 --> 00:17:39,394
reduces downtime, optimizes operations,
and boosts network reliability.

255
00:17:39,894 --> 00:17:44,814
As AI technology continues to advance,
the potential to create smarter, more

256
00:17:44,814 --> 00:17:46,694
resilient networks is within reach.

257
00:17:47,194 --> 00:17:50,534
Predictive maintenance is not just
a way to improve network efficiency.

258
00:17:51,044 --> 00:17:54,604
It's a way to transform how
we manage networks altogether.

259
00:17:55,104 --> 00:17:57,254
Thank you for listening
into this talk today.

260
00:17:57,364 --> 00:18:00,924
I hope you enjoyed this and
learned something out of this.

261
00:18:01,804 --> 00:18:06,984
I have a few references mentioned here,
which have been used in this presentation.

262
00:18:07,754 --> 00:18:08,534
Thanks again.

263
00:18:09,344 --> 00:18:09,774
Bye.

264
00:18:09,824 --> 00:18:10,524
Until next time.

