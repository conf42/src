1
00:00:00,290 --> 00:00:00,990
Hello, everyone.

2
00:00:01,220 --> 00:00:02,430
I'm Nagarjuna Malladi.

3
00:00:02,630 --> 00:00:03,780
I'm from Dallas, Texas.

4
00:00:04,330 --> 00:00:07,930
I work as a Principal Site Reliability
Engineer in Oracle, America.

5
00:00:08,430 --> 00:00:14,040
Today, I welcome all of you to join
in a CON42 DevOps 2025 conference.

6
00:00:14,740 --> 00:00:18,460
Today, I'm going to discuss about
shaping the future of system

7
00:00:18,460 --> 00:00:22,770
resilience, a DevOps journey into
advanced site reliability engineering.

8
00:00:23,270 --> 00:00:30,200
Welcome to a dynamic exploration of how
advanced SRE principles are redefining

9
00:00:30,240 --> 00:00:32,550
system resilience in the DevOps era.

10
00:00:33,090 --> 00:00:37,700
This session will dive into the key
technologies and methodologies shaping

11
00:00:37,700 --> 00:00:42,730
the future of scalable, secure,
and reliable cloud native systems.

12
00:00:43,230 --> 00:00:47,929
Let's discuss about the
convergence of DevOps and SRE.

13
00:00:48,429 --> 00:00:49,539
Shared principles.

14
00:00:49,540 --> 00:00:53,789
DevOps and SRE converge around
transformative principles,

15
00:00:53,939 --> 00:01:00,239
radical collaboration, intelligent
automation, and relentless commitment

16
00:01:00,389 --> 00:01:02,259
to systematic optimization.

17
00:01:02,859 --> 00:01:08,429
These strategic alignments points
enable organizations to build adaptive,

18
00:01:08,759 --> 00:01:11,899
self healing technology ecosystems.

19
00:01:12,189 --> 00:01:13,129
Let me explain.

20
00:01:13,519 --> 00:01:19,214
When I When I was working, in systems,
Cisco systems, you know, networking side

21
00:01:19,224 --> 00:01:22,804
at DNAC, I had to do, CI CD pipelines.

22
00:01:23,234 --> 00:01:27,714
And then, And the pipelines, with the
pipelines, Jenkins pipelines, I need to

23
00:01:27,714 --> 00:01:35,134
deploy my code, in the virtual missions
or AWS cloud, different locations, and

24
00:01:35,134 --> 00:01:37,574
then I have to go after deployment.

25
00:01:37,584 --> 00:01:39,354
I have to go there and I have to.

26
00:01:39,854 --> 00:01:45,194
monitor how my deployment was there and
how the application is doing, how the

27
00:01:45,234 --> 00:01:49,574
CPU, memory, hard disk, all the good
things about the system performance.

28
00:01:50,154 --> 00:01:54,904
So basically, I has to do,
a complete end to end role.

29
00:01:55,304 --> 00:01:58,244
So that's how we know DevOps and, SRE.

30
00:01:58,744 --> 00:02:03,924
I can, I have to do the both
things, for a internal, customers.

31
00:02:04,314 --> 00:02:08,954
So where you take the internal customers
in a, any large organization, you

32
00:02:08,974 --> 00:02:15,364
have to, be in the both, most of
the cases, I can say 99%, you have

33
00:02:15,364 --> 00:02:20,144
to do deal both DevOps side and,
you know, SRE side as a engineer.

34
00:02:20,644 --> 00:02:26,124
And then, let me talk about,
synergetic practices, strategic SRE

35
00:02:26,125 --> 00:02:30,294
methodologies, including sophisticated
monitoring, predictive incident

36
00:02:30,324 --> 00:02:35,354
response, and dynamic capacity
orchestration seamlessly integrate

37
00:02:35,394 --> 00:02:40,074
with DevOps workloads, like advanced
CI CD pipelines and infrastructure

38
00:02:40,074 --> 00:02:45,194
as a code creating a host holistic
approach to technological, resilience.

39
00:02:45,694 --> 00:02:50,774
As I mentioned, the, the, in the previous
example, and if I tell you some more

40
00:02:50,774 --> 00:02:56,154
examples, you know, the, if every
engineer, they are highly dependent

41
00:02:56,154 --> 00:03:02,034
on, ticketing system because, you know,
it's highly impossible, for, for us, to

42
00:03:02,034 --> 00:03:07,534
go into a thousand plus, servers, VMs,
environment and look for a, you know,

43
00:03:07,554 --> 00:03:12,594
issue or error, you know, even it's
a DevOps or, you know, even it's SRE.

44
00:03:12,864 --> 00:03:16,694
So everything is based on
the proper ticketing system

45
00:03:16,754 --> 00:03:18,864
and then incident responses.

46
00:03:19,169 --> 00:03:23,829
You know, if you are, depending on
the Slack or Webex chats, you know,

47
00:03:23,849 --> 00:03:29,189
getting a messages into your message
messaging system so that you can look

48
00:03:29,189 --> 00:03:34,479
at that, you can fix your code or,
you know, you can feel that, you know,

49
00:03:34,529 --> 00:03:36,119
whatever you are doing is, perfect.

50
00:03:36,209 --> 00:03:38,549
And then you can go for the next steps.

51
00:03:39,049 --> 00:03:43,879
And you can go for the, you know,
deployments in a strategic way,

52
00:03:43,979 --> 00:03:47,899
you know, going for a, lower
environments to higher environments.

53
00:03:48,289 --> 00:03:54,269
So that's how I can see, you know, DevOps
and SRE have same shared principles

54
00:03:54,279 --> 00:03:56,189
and, you know, synergetic practices.

55
00:03:56,689 --> 00:04:02,169
The cloud native infrastructure, the
foundation of resilience, Serverless

56
00:04:02,229 --> 00:04:08,099
computing, leveraging serverless
platforms like AWS, Lambda, or Google

57
00:04:08,889 --> 00:04:14,339
Cloud Functions allows for automatic
scaling and reduces operational overhead.

58
00:04:15,129 --> 00:04:20,379
Container orchestration, Kubernetes
and other container orchestration tools

59
00:04:20,449 --> 00:04:26,179
ensure the efficient deployment and
management of container applications

60
00:04:26,219 --> 00:04:28,919
across a cluster of servers.

61
00:04:28,929 --> 00:04:28,989
Thank you.

62
00:04:29,929 --> 00:04:34,279
Infrastructure as a code, tools like
Terraform and CloudFormation enable.

63
00:04:34,969 --> 00:04:38,689
Automated provisioning and
configuration management of

64
00:04:38,749 --> 00:04:44,379
infrastructure, resources, reducing
errors, and increasing consistency.

65
00:04:44,939 --> 00:04:50,609
I assume, I know if you are part of
this, CON 42, A DevOps conference, I

66
00:04:50,609 --> 00:04:55,509
assume you already might have, come
across or might be already working.

67
00:04:55,509 --> 00:05:00,819
I might be already a master, you know,
in working with, Kubernetes, Docker,

68
00:05:00,819 --> 00:05:03,779
Terraform, Ansible, like a lot of, tools.

69
00:05:04,279 --> 00:05:09,329
I'll tell you, the advantage,
you know, as a, let's say, if you

70
00:05:09,329 --> 00:05:14,199
think about any automation, you
know, it's highly not possible.

71
00:05:14,369 --> 00:05:18,209
you know, we logging into a service
and then, making, the changes

72
00:05:18,269 --> 00:05:20,029
are making the enhancements.

73
00:05:20,529 --> 00:05:25,593
So we have to go for, any tool,
like Ansible, Terraform, or,

74
00:05:25,593 --> 00:05:26,511
whatever you want to call it.

75
00:05:27,011 --> 00:05:31,291
Puppet, chef, cookbooks, you know, we
need to go there and then, make our

76
00:05:31,311 --> 00:05:36,211
automation or changes there so that, you
know, it can talk with all our servers.

77
00:05:36,681 --> 00:05:39,631
And then if you see the
example of Kubernetes.

78
00:05:40,591 --> 00:05:44,111
What is the advantage of
that by having a kubernetes?

79
00:05:44,111 --> 00:05:50,691
You can make your application, run always,
you know, it has a kubernetes has A lot

80
00:05:50,691 --> 00:05:55,201
of pods are running with just in case
if there is if you want to do rollover

81
00:05:55,291 --> 00:06:01,436
or if you want to do A deployment you
can do pod by pod So that you can make

82
00:06:01,666 --> 00:06:05,796
your application always running, and
then you can do, the deployments also.

83
00:06:06,206 --> 00:06:10,446
That's the advantage, the Kubernetes,
type of, clustering concept gives

84
00:06:10,446 --> 00:06:14,466
us so that you can make your
application always, up and running.

85
00:06:14,966 --> 00:06:19,646
So let's talk about, key SRE
strategies, building robust systems.

86
00:06:20,376 --> 00:06:21,056
Security.

87
00:06:21,706 --> 00:06:24,366
Now implementing security
best practices like.

88
00:06:25,086 --> 00:06:30,096
Identifying and access management
encryptions and vulnerability scanning

89
00:06:30,106 --> 00:06:31,976
is crucial for system resilience.

90
00:06:32,596 --> 00:06:36,266
Observability tools like Prometheus,
Grafana, and Jagger provide

91
00:06:36,736 --> 00:06:40,936
comprehensive monitoring, alerting,
and tracing capabilities, enabling

92
00:06:41,026 --> 00:06:43,576
rapid issue detection and resolution.

93
00:06:44,076 --> 00:06:45,046
Capacity planning.

94
00:06:45,146 --> 00:06:50,696
Proactively capacity planning based on
historical data and anticipated growth

95
00:06:50,746 --> 00:06:55,906
ensure optimal resource allocation
and prevents performance degradation.

96
00:06:56,756 --> 00:06:57,806
Challenge engineering.

97
00:06:57,906 --> 00:07:03,396
Introducing control failures and
disruptions to systems helps identify

98
00:07:03,446 --> 00:07:09,016
vulnerabilities and test recovery
mechanisms leading to greater resilience.

99
00:07:09,016 --> 00:07:09,311
for joining us.

100
00:07:09,811 --> 00:07:17,031
So when I'm discussing about this, mm, I
think, see, Promus and Grafana, let's say.

101
00:07:17,091 --> 00:07:21,261
if you want to monitor anything, you
know, Promus has so many exporters.

102
00:07:21,501 --> 00:07:25,551
Let's say, if you want to monitor
URLs, if you want to monitor where,

103
00:07:25,601 --> 00:07:30,621
certificates, expiry date, or you know,
your key tool, certificates, or if you

104
00:07:30,621 --> 00:07:32,941
want to monitor your, system performance.

105
00:07:33,416 --> 00:07:38,836
your network performance, you name it,
you know, your, application performance,

106
00:07:38,866 --> 00:07:43,616
your services, your Linux services, your
Linux applications, Windows services,

107
00:07:44,086 --> 00:07:46,526
anything, you know, with the Prometheus.

108
00:07:46,671 --> 00:07:51,291
You know, you can have a, exporter
and then, with that exporter, you can

109
00:07:51,291 --> 00:07:56,701
able to monitor and then you can able
to, take advantage of those, exporters

110
00:07:56,761 --> 00:07:57,891
like that's called observability.

111
00:07:57,891 --> 00:08:01,351
We can observe end to
end what's happening.

112
00:08:01,401 --> 00:08:04,401
And then on top of this, we
can visualize everything with

113
00:08:04,411 --> 00:08:06,151
the Grafana, you know, now.

114
00:08:07,116 --> 00:08:09,376
Grafana is a powerful visualization tool.

115
00:08:09,906 --> 00:08:13,656
And then, and you can directly
send alerts from Grafana itself.

116
00:08:13,656 --> 00:08:18,606
You know, it can be integrating with
any tools like Slack, Webex, you

117
00:08:18,606 --> 00:08:23,436
know, emails, ticketing systems, you
know, we can, integrate any tool with

118
00:08:23,446 --> 00:08:27,466
the Grafana and then you can send
alerts, tickets, whatever you want.

119
00:08:27,716 --> 00:08:30,386
So that's how you can make
observability work for you.

120
00:08:31,091 --> 00:08:35,871
And then security, you know, now I work
in healthcare side and then, healthcare,

121
00:08:35,951 --> 00:08:37,971
the security protocols are very important.

122
00:08:37,971 --> 00:08:42,151
And previously I used to work in, you
know, mobile technologies, banking

123
00:08:42,151 --> 00:08:45,821
side and everywhere the security
protocols are very important.

124
00:08:45,831 --> 00:08:49,801
And then we have to maintain being
SRE or, you know, DevOps sites,

125
00:08:50,011 --> 00:08:51,951
you know, those security protocols.

126
00:08:52,896 --> 00:08:56,956
And, the biggest thing now for the
companies is, cost management, which

127
00:08:56,956 --> 00:08:58,406
comes with the capacity planning.

128
00:08:58,876 --> 00:09:04,496
You know, is our, storage is scaling, is
our, CPU is scaling, why it's scaling?

129
00:09:04,496 --> 00:09:06,576
It's scaling how much money it's cost.

130
00:09:06,916 --> 00:09:09,646
And then how many CPUs
the system is using.

131
00:09:10,026 --> 00:09:13,366
And then, you know, can
we re, reuse anywhere?

132
00:09:13,826 --> 00:09:17,206
So it's all the questions when we
think about the capacity planning.

133
00:09:17,686 --> 00:09:23,096
So capacity planning is very important and
monitoring the capacity with, tools like

134
00:09:23,166 --> 00:09:25,456
Prometheus and Grafana is more important.

135
00:09:25,856 --> 00:09:31,636
so that we can see what's, what's taking
a lot of, your CPU and memory, you know,

136
00:09:31,636 --> 00:09:36,726
for the application and the same Chahar's
engineering introducing, you know, control

137
00:09:36,756 --> 00:09:39,136
failures and disruptions to systems.

138
00:09:39,636 --> 00:09:43,776
Here, you know, we can think of,
doing some, machine learning or AI to

139
00:09:43,776 --> 00:09:48,006
see at exactly what type of failures
are happening and at what time

140
00:09:48,006 --> 00:09:52,396
stamp, these failures are happening
so that we can go back and review,

141
00:09:52,526 --> 00:09:56,616
and then we can able to, find a
pattern and we can able to fix them.

142
00:09:56,856 --> 00:09:58,936
So that's, Chavos engineering.

143
00:09:59,436 --> 00:10:00,566
Metrics that matter.

144
00:10:00,876 --> 00:10:02,736
Measuring system health and performance.

145
00:10:02,736 --> 00:10:02,796
99.

146
00:10:02,796 --> 00:10:05,126
99 percent availability.

147
00:10:05,196 --> 00:10:08,486
Represent the percentage of
the time system is operational

148
00:10:08,536 --> 00:10:09,796
and accessible to users.

149
00:10:10,376 --> 00:10:12,306
100 milliseconds latency.

150
00:10:12,306 --> 00:10:14,386
Measures the time it takes for the system.

151
00:10:15,296 --> 00:10:19,956
Do respond to a request impacting user
experience and system performance.

152
00:10:20,536 --> 00:10:24,456
100 throughput indicates the
number of requests a system can

153
00:10:24,456 --> 00:10:28,256
handle per unit of the time,
reflecting its progressing capacity.

154
00:10:28,346 --> 00:10:32,676
And zero error budget defines the
acceptable level of system failures

155
00:10:32,676 --> 00:10:37,306
of errors, providing a framework for
balancing reliability and innovation.

156
00:10:37,836 --> 00:10:40,586
So think about a platform
where you are working.

157
00:10:40,616 --> 00:10:42,366
Let's say if I'm working on healthcare.

158
00:10:42,861 --> 00:10:45,461
And then they were, Trials
are going down and then it's,

159
00:10:45,511 --> 00:10:47,331
not, 100 percent availability.

160
00:10:47,721 --> 00:10:52,551
think about the impact, of that
on the healthcare, industry

161
00:10:52,551 --> 00:10:56,111
or, you know, on the patient,
information, patient, requirements.

162
00:10:56,121 --> 00:11:01,746
If any You know, health care trials are
going down and then, it's a huge impact

163
00:11:01,746 --> 00:11:03,456
on the, you know, health care industry.

164
00:11:03,856 --> 00:11:07,076
forget about the health care and then
think about, You know systems going

165
00:11:07,076 --> 00:11:13,216
down on black friday, the walmart's or
you know amazon's, all the best buys,

166
00:11:13,476 --> 00:11:17,516
you know, let's say if their website
is Not working or maybe if the payment

167
00:11:17,516 --> 00:11:22,516
systems are not working there, you
know, think about their loss On the you

168
00:11:22,516 --> 00:11:27,896
know in those days and then So some,
you know, not only, you know, mobile

169
00:11:27,896 --> 00:11:34,036
industries, healthcare, you know, now,
nowadays, all the industries are in need

170
00:11:34,036 --> 00:11:39,536
of site reliability engineering, and
every industry has their own customers.

171
00:11:39,876 --> 00:11:43,886
And then, and then keeping that
customer credibility is important

172
00:11:44,236 --> 00:11:48,066
with ongoing competition and a
lot of things happening around.

173
00:11:48,376 --> 00:11:50,891
So for them, 99.

174
00:11:50,891 --> 00:11:55,711
99, 100 percent availability is always
important and then, they can't, Bear

175
00:11:55,771 --> 00:11:59,831
with a lot of errors, and then if that
were happening with a lot of manual

176
00:11:59,831 --> 00:12:02,301
errors, that's very hard to take.

177
00:12:02,721 --> 00:12:08,771
So, with the DevOps and SRE technologies,
automations, you know, we can able to

178
00:12:08,781 --> 00:12:16,521
minimize or eliminate those manual errors
and then make systems highly available.

179
00:12:17,021 --> 00:12:20,551
So, the role of automations in
SRE streamlining operations.

180
00:12:21,051 --> 00:12:24,431
Automated provisions, provisioning
and configuration management

181
00:12:24,441 --> 00:12:25,951
for infrastructure resources.

182
00:12:26,531 --> 00:12:30,391
Automated monitoring and electing
systems for proactive issues,

183
00:12:30,401 --> 00:12:33,541
detection and resolution.

184
00:12:33,541 --> 00:12:38,271
Automated deployment and rollback
processes for application and services.

185
00:12:38,891 --> 00:12:45,131
Automated incident response and remediate
workflows for faster recovery times.

186
00:12:45,631 --> 00:12:48,061
So, let me explain, with an example.

187
00:12:48,561 --> 00:12:52,301
So let's say, you know,
I will take example of, a

188
00:12:52,521 --> 00:12:54,701
networking, company's, scenario.

189
00:12:55,051 --> 00:12:58,881
Let's say if you want to deliver a
networking package and then you need

190
00:12:58,881 --> 00:13:02,121
to collect with, so many teams, like
it has a subcomponents and then you

191
00:13:02,131 --> 00:13:03,861
need to collect with so many teams.

192
00:13:04,206 --> 00:13:08,166
How you proceed, you know, it's,
it's highly not possible, you know,

193
00:13:08,166 --> 00:13:12,976
going to each team, and then getting
the packages, testing it, and

194
00:13:12,976 --> 00:13:14,976
then validating and then merging.

195
00:13:15,336 --> 00:13:20,346
So nowadays with, in the fast
going IT environment, it has

196
00:13:20,416 --> 00:13:21,806
to be everything automated.

197
00:13:22,106 --> 00:13:25,296
So the packages should be
certified and automated.

198
00:13:25,866 --> 00:13:30,036
And then, they should be, properly
monitored and then, They should be

199
00:13:30,036 --> 00:13:34,256
deployed, into a virtual missions
or cloud, and then properly

200
00:13:34,536 --> 00:13:38,396
mounted with alerting systems, and
then fire the alerts if needed.

201
00:13:38,796 --> 00:13:42,576
And then, and then if there, if there
is any issue, if that is not, Passed in

202
00:13:42,576 --> 00:13:47,266
the basic testing or automation testing
immediately, sent back to the development

203
00:13:47,276 --> 00:13:52,416
team and then ask them to remediate
the issues for the fast trick for you.

204
00:13:52,416 --> 00:13:55,716
It has to be that much,
you know, fast paced.

205
00:13:56,406 --> 00:14:02,206
nowadays, and then with the automation
and SRE, CICDs DevOps, it's like all

206
00:14:02,216 --> 00:14:06,956
these, different entities, you know,
clubbing together, you know, we can

207
00:14:06,956 --> 00:14:12,196
make, this kind of things, fastly, I
mean, fix, very quickly and think about,

208
00:14:12,236 --> 00:14:13,906
transportation industry like Tesla.

209
00:14:14,276 --> 00:14:17,726
If you're going on a Tesla car and
suddenly if you're, it sees an object

210
00:14:18,166 --> 00:14:22,146
and then if the car is not stopped in
the autopilot, then that's a big issue.

211
00:14:22,556 --> 00:14:26,866
immediately the machine learning, has
to catch that event and then update

212
00:14:26,906 --> 00:14:30,976
back to the Tesla's development team
and they has to work and then fix

213
00:14:30,976 --> 00:14:33,376
that issue and, update, the software.

214
00:14:33,826 --> 00:14:39,176
So that's how, you know, these tasks are,
Has to be like, high priority and, you

215
00:14:39,176 --> 00:14:43,926
know, has to be automated, end to end,
for the faster, you know, you know, for

216
00:14:43,926 --> 00:14:47,926
the faster resilience and, you know, to
make, you know, operations streamlined.

217
00:14:48,426 --> 00:14:50,276
AI and machine learning in SRE.

218
00:14:50,306 --> 00:14:51,826
Enhancing predictive insights.

219
00:14:52,276 --> 00:14:52,986
Anomaly detection.

220
00:14:53,266 --> 00:14:58,106
AI algorithms identify deviations
from expected behavior and enabling

221
00:14:58,186 --> 00:15:00,326
early detection of potential problems.

222
00:15:00,926 --> 00:15:01,846
Predictive maintenance.

223
00:15:01,896 --> 00:15:04,276
AI models predict system
failures or errors.

224
00:15:04,701 --> 00:15:09,411
Resource bottlenecks allowing for
proactive intervention and prevention.

225
00:15:09,821 --> 00:15:11,331
Automated root cause analysis.

226
00:15:11,571 --> 00:15:16,641
A, provide tools to help pinpoint
the underlying causes of incidents

227
00:15:16,641 --> 00:15:20,271
leading to faster resolution and
improved system understanding.

228
00:15:20,851 --> 00:15:26,311
So just now I mentioned about Tesla's
example if you see, A networking

229
00:15:26,311 --> 00:15:30,861
example, like let's say if there is a,
you know, 100 Walmart's, in the Texas

230
00:15:30,861 --> 00:15:35,701
area, and then, if there is a main
Walmart center is in Dallas area and

231
00:15:35,701 --> 00:15:39,471
from there, you know, all the networking
signals, routers, and everything

232
00:15:39,471 --> 00:15:41,191
is being monitored from that area.

233
00:15:41,581 --> 00:15:45,051
Think about, a Walmart router
is going down in, Houston area.

234
00:15:46,031 --> 00:15:50,521
If somebody has to go from Dallas to
Houston, they have to drive or fly

235
00:15:50,891 --> 00:15:52,761
and then fix that, A router issue.

236
00:15:53,201 --> 00:15:57,201
until that, the Walmart, won't be having
any operations they have to close.

237
00:15:57,771 --> 00:16:04,031
so let's say, if that is, automated, you
know, if the routers, everything is, you

238
00:16:04,031 --> 00:16:08,441
know, software is automated, and then
the person who is looking at the bo at

239
00:16:08,441 --> 00:16:14,041
the signals, I know routers, health, if
they got the notification that who's.

240
00:16:14,476 --> 00:16:18,386
Houston, router, is, down, in
Houston router is, you know, signals

241
00:16:18,386 --> 00:16:21,276
are getting dropped, you know,
the firmware need to be updated.

242
00:16:21,456 --> 00:16:22,786
Software need to be updated.

243
00:16:23,266 --> 00:16:27,426
Then we can, he can push the button
and then Houston router, firmware

244
00:16:27,516 --> 00:16:32,256
will be updated and then without any
downtime, they can able to fix it.

245
00:16:32,566 --> 00:16:34,916
And then, the business will run normally.

246
00:16:35,356 --> 00:16:39,086
And then, same thing, you know, if you,
Think example of Apple stores or, you

247
00:16:39,146 --> 00:16:43,986
know, multiple locations where, you
know, any franchise places where it has

248
00:16:43,986 --> 00:16:49,446
a common internet or common routers or,
you know, the networking, you know, the,

249
00:16:49,796 --> 00:16:54,536
you know, servers to be up is, you know,
network to be up is pretty important.

250
00:16:54,896 --> 00:17:00,296
In those places You can think of having,
you know, AI and, machine learning, to see

251
00:17:00,296 --> 00:17:02,646
the issues and then, fix it automatically.

252
00:17:03,366 --> 00:17:06,046
And then, automatic automated
root cause analysis.

253
00:17:06,076 --> 00:17:08,726
Let's say, think about
this, you know, if the.

254
00:17:08,986 --> 00:17:14,186
database is, full, database is because of
the database, you know, if any healthcare

255
00:17:14,186 --> 00:17:18,546
or, you know, anything, trials are going
down, and then until, somebody comes

256
00:17:18,546 --> 00:17:22,976
and then, fix it, the database, what
about auto restarting the database?

257
00:17:22,976 --> 00:17:26,486
You know, we can, try that as a first
step, auto restart the database and then

258
00:17:27,056 --> 00:17:32,516
get the error messages as a separate log
so that somebody can debug it later and

259
00:17:32,516 --> 00:17:37,476
then, bring the trials up or maybe, you
know, before it's going down, maybe auto

260
00:17:37,526 --> 00:17:43,976
tune and then, make the performance up or
probably try to remove unwanted, events or

261
00:17:43,986 --> 00:17:47,016
logs, you know, to decrease the, storage.

262
00:17:47,326 --> 00:17:49,256
So something like that we can able to do.

263
00:17:49,366 --> 00:17:50,316
I know, and then.

264
00:17:50,821 --> 00:17:53,751
we can fix the, you know, root
cause, you know, we can get the root

265
00:17:53,751 --> 00:17:55,831
causes and then, try to fix them.

266
00:17:56,041 --> 00:17:58,371
So all these are, pretty much important.

267
00:17:58,401 --> 00:18:03,771
And then these all involved with, a proper
SRE, dealing with, all, all the issues

268
00:18:03,831 --> 00:18:08,301
are, you know, outages with the help of
development team and, you know, DevOps.

269
00:18:08,691 --> 00:18:12,781
So that's how we can able to enhance,
you know, predictive insights.

270
00:18:13,281 --> 00:18:15,991
SRE best practices from theory to action.

271
00:18:16,191 --> 00:18:18,421
Embrace continuous improvement.

272
00:18:18,851 --> 00:18:20,921
Continuously monitor system performance.

273
00:18:20,981 --> 00:18:23,081
Identify areas for improvement.

274
00:18:23,591 --> 00:18:28,881
And iterate on solutions, foster
collaboration, promote open

275
00:18:28,931 --> 00:18:32,311
communication and collaboration
between development operations and

276
00:18:32,311 --> 00:18:37,561
SR teams, invest in observability,
build robust monitoring and tracing

277
00:18:37,561 --> 00:18:42,121
capabilities for comprehensive system
insights and rapid issue resolution.

278
00:18:43,026 --> 00:18:47,996
Prioritize automation, automate as many
processes as possible, streamlining

279
00:18:47,996 --> 00:18:53,016
operations, reducing errors and
freeing up valuable resources.

280
00:18:53,516 --> 00:18:57,616
So let's discuss on this one,
embracing a continuous improvement.

281
00:18:58,586 --> 00:19:04,156
So I would, I would tell that, you
know, have regular, requirements

282
00:19:04,156 --> 00:19:05,826
gathering and then meetings.

283
00:19:06,326 --> 00:19:10,516
And then, you know, I mean,
nothing is, too small.

284
00:19:10,666 --> 00:19:16,086
Like if you see a Paw Patrol, you know,
the Paw Patrol guy says that nothing

285
00:19:16,086 --> 00:19:21,256
is no task is too small task, you know,
same for LS for SRE, you know, nothing

286
00:19:21,256 --> 00:19:25,446
is too small, you know, you have to,
get what, what are the requirement

287
00:19:25,486 --> 00:19:28,336
issues and then, plan it properly.

288
00:19:28,426 --> 00:19:32,606
And then, so you need to be on,
finding the root cause and then, you

289
00:19:32,606 --> 00:19:37,566
know, fixing it and then, and then
it has to be automated way because.

290
00:19:37,621 --> 00:19:42,201
a manual, manual action
sometimes, causes the, you know,

291
00:19:42,201 --> 00:19:43,661
manual errors, human errors.

292
00:19:43,721 --> 00:19:45,501
Nobody is perfect.

293
00:19:45,971 --> 00:19:49,941
So we have to keep, you know,
automated way, so that, it, we can

294
00:19:49,941 --> 00:19:51,631
eliminate a lot of, human errors.

295
00:19:52,091 --> 00:19:56,381
And then, you know, Observability of a
lot of things, you know, not only system

296
00:19:56,381 --> 00:20:01,421
health, you know, you know, observability
in terms of logs using Elkstack,

297
00:20:01,541 --> 00:20:06,931
Splunk, or, whatever the tool that your
company is using, you know, OpenSearch.

298
00:20:06,931 --> 00:20:07,998
Yeah.

299
00:20:07,998 --> 00:20:14,221
And then using those tools and
collaborating between operations

300
00:20:14,301 --> 00:20:17,391
and then, Development teams and
SRE teams are pretty important.

301
00:20:17,901 --> 00:20:22,731
You know, development team,
has to, you know, give proper

302
00:20:22,731 --> 00:20:24,261
directions to the operations.

303
00:20:24,651 --> 00:20:28,331
And then, operations and
development team has to give proper

304
00:20:28,521 --> 00:20:29,821
requirements to the SRE teams.

305
00:20:29,861 --> 00:20:33,551
So these are all go in a
circle, like everything, is

306
00:20:33,551 --> 00:20:35,001
dependent on the other things.

307
00:20:35,431 --> 00:20:40,536
So we have to make sure that,
end to end, workflow is, Perfect.

308
00:20:40,536 --> 00:20:45,626
so that's, That's, I mean, on the day
one, it's not possible, but when the

309
00:20:45,666 --> 00:20:50,826
complete group, want to be SRE focused
and SRE principal focused, eventually

310
00:20:50,826 --> 00:20:55,636
we can achieve that and then we can
have a proper SRE teams and groups,

311
00:20:55,996 --> 00:21:01,516
and then we can have good, DevOps to,
SRE journeys, there in those, teams

312
00:21:01,626 --> 00:21:04,676
as a successful, as a success mantra.

313
00:21:05,176 --> 00:21:09,636
So, industry specific considerations
adapting SRE to unique requirements.

314
00:21:10,276 --> 00:21:17,346
So, if you see the sales, healthcare, or
financial, as I mentioned before, so all

315
00:21:17,346 --> 00:21:23,876
these, You know, industries are pretty
much, have unique requirements and then,

316
00:21:23,876 --> 00:21:28,736
healthcare with, you know, protocols
and then, sales with a hundred percent,

317
00:21:29,086 --> 00:21:33,646
like always it has to be up, and then,
And then it has to be very quick, you

318
00:21:33,656 --> 00:21:37,806
know, let's say if you're trying to buy
a MacBook and then, if it is loading,

319
00:21:37,806 --> 00:21:41,976
five, 10 minutes time, you know, for you
to enter the card and check out, do you

320
00:21:41,976 --> 00:21:43,926
be still interested to get that MacBook?

321
00:21:44,526 --> 00:21:47,796
You know, you'll be like log off,
log back, you know, you cannot

322
00:21:47,806 --> 00:21:49,076
wait for that long, that long.

323
00:21:49,626 --> 00:21:54,036
And then, you know, banking, you know,
so the system has to be always secured

324
00:21:54,176 --> 00:21:58,166
and then, it, you know, think about,
if any hacks are happening in some bank

325
00:21:58,186 --> 00:22:00,046
and then do you keep your money there?

326
00:22:00,636 --> 00:22:04,926
So, so like that, you know, all
these industries are different.

327
00:22:05,136 --> 00:22:08,226
Unique, but it has a unique
requirements and then they all

328
00:22:08,236 --> 00:22:11,056
need SREs for those industries.

329
00:22:11,556 --> 00:22:16,526
So future trends, SRE in age of AI and
edge computing, AI driven automation.

330
00:22:17,066 --> 00:22:21,576
Further advancements in AI will lead
more sophisticated automation, optimizing

331
00:22:21,576 --> 00:22:23,296
system performance and resilience.

332
00:22:23,806 --> 00:22:27,716
Edge computing, SRE will be crucial
for managing distributed systems

333
00:22:28,196 --> 00:22:32,046
at the edge, ensuring reliability
and low latency for users.

334
00:22:32,776 --> 00:22:39,546
Serverless and microservices, SRE
provides practices will continue To evolve

335
00:22:39,626 --> 00:22:43,496
alongside the adoption of serverless
architecture and, you know, microservices.

336
00:22:43,996 --> 00:22:49,326
So, so yeah, this, this definitely
a future trends, as we discussed

337
00:22:49,416 --> 00:22:54,156
before, Kubernetes and, you know,
serverless, deployments, microservices,

338
00:22:54,636 --> 00:22:55,996
and then, AI driven automation.

339
00:22:55,996 --> 00:22:56,756
So everything.

340
00:22:57,156 --> 00:23:01,116
so now if you touch every company
everywhere, it's all AI driven.

341
00:23:01,556 --> 00:23:04,166
so AI driven because.

342
00:23:04,326 --> 00:23:08,946
you know, we can do more work, with the
less time, with the, having a advantage,

343
00:23:08,986 --> 00:23:14,836
think about, this, if I'm writing a book
of, a hundred pages with, SRE DevOps, a

344
00:23:14,836 --> 00:23:20,526
lot of things, and then, you asking about
AI, give me, a book of a hundred pages.

345
00:23:20,781 --> 00:23:24,661
with, SRE and, DevOps,
including, a lot of things.

346
00:23:24,981 --> 00:23:28,621
so that will give in a few minutes
where I do, spend a month or two

347
00:23:28,621 --> 00:23:30,591
months, you know, to get those, pages.

348
00:23:30,941 --> 00:23:32,091
So that's the difference.

349
00:23:32,131 --> 00:23:34,411
And then, at the end, you
can do the same thing.

350
00:23:34,411 --> 00:23:38,091
You know, you can get the book, correct
the data, and then you can publish,

351
00:23:38,571 --> 00:23:41,611
or, you know, you can wait one or
two months and then write your book.

352
00:23:42,041 --> 00:23:44,801
So with that AI driven
automation, you can make.

353
00:23:45,301 --> 00:23:50,251
Are things faster and then, key
takeaways, a resilient future by

354
00:23:50,251 --> 00:23:53,911
embracing advanced SRA principles
and integrating them seamlessly

355
00:23:53,911 --> 00:23:58,651
with DevOps practices, organizations
can build systems that are not only

356
00:23:58,731 --> 00:24:00,431
reliable, but also highly scalable.

357
00:24:00,931 --> 00:24:04,551
Secure and adaptable to ever
changing technology landscape.

358
00:24:04,561 --> 00:24:08,521
The future of system resilience lies
in the convergence of these powerful

359
00:24:08,521 --> 00:24:13,221
methodologies enabling business to
innovate and grow with confidence.

360
00:24:13,721 --> 00:24:16,291
So these are the, key takeaways.

361
00:24:16,391 --> 00:24:22,561
yeah, I, I mean to say that, this is,
the time, you know, everybody, whatever

362
00:24:22,561 --> 00:24:26,381
the provision you are, you know, you are
DevOps development or you know, you are

363
00:24:26,381 --> 00:24:33,411
a manager vp or if you're a even, you are
a, it sales are no a program management.

364
00:24:33,531 --> 00:24:35,211
Whatever I provision is.

365
00:24:35,661 --> 00:24:41,651
You always need to have a, SRE mindset and
you always need to have a, your service

366
00:24:41,651 --> 00:24:44,141
or system has to be up a hundred percent.

367
00:24:44,451 --> 00:24:50,181
Now, and then, you always need to be
looking for root cause, for any issues,

368
00:24:50,241 --> 00:24:54,491
like how we can, You know, instead
of a quick fix, how we can fix the

369
00:24:54,491 --> 00:24:56,721
root cause and then fix permanently.

370
00:24:57,211 --> 00:25:01,791
So, so that what, you know, my
takeaway and then, you know, to get

371
00:25:01,791 --> 00:25:04,701
a resilient future in IT systems.

372
00:25:05,201 --> 00:25:08,381
Thank you very much, for the time,
you know, thank you for listening.

373
00:25:08,391 --> 00:25:13,781
If you have any questions or anything,
you can reach out to me on my LinkedIn

374
00:25:13,881 --> 00:25:19,231
or, you know, you can reach out to me
on any social media platforms and, we

375
00:25:19,231 --> 00:25:24,181
can discuss more, on any, questions
or doubts, you have, and, thank you.

376
00:25:24,231 --> 00:25:25,221
Thanks for your time.

377
00:25:25,351 --> 00:25:27,521
And then, looking forward
for other speakers.

