1
00:00:00,000 --> 00:00:01,530
My name is Gian Wild.

2
00:00:01,560 --> 00:00:06,540
I'm from Accessibility O, and I'm here to
talk to you about accessible JavaScript.

3
00:00:06,780 --> 00:00:07,920
It's easier than you think.

4
00:00:08,420 --> 00:00:11,059
There are three types of
JavaScript functionality.

5
00:00:11,420 --> 00:00:16,189
First, binding functionality to
existing interactive components such

6
00:00:16,189 --> 00:00:18,409
as links, buttons, and text fields.

7
00:00:18,860 --> 00:00:22,729
Two, non-interactive functionality
that presents information.

8
00:00:23,360 --> 00:00:29,000
Three, creating custom components that
are both interactive and informative.

9
00:00:29,854 --> 00:00:33,964
There are 10 accessibility principles
when it comes to JavaScript.

10
00:00:34,205 --> 00:00:39,154
First, all functionality must take a
form that can be interpreted as text.

11
00:00:39,574 --> 00:00:44,254
Second, all functionality must be
accessible to all input devices.

12
00:00:44,599 --> 00:00:48,410
Third, information and structure
can be programmatically determined.

13
00:00:48,800 --> 00:00:53,480
Fourth, a meaningful sequence and
logical focus order is maintained.

14
00:00:53,780 --> 00:00:59,030
Fifth instructions Do not rely on sensory
characteristics or nonsensical characters.

15
00:00:59,480 --> 00:01:02,330
Sixth timed activity can be controlled.

16
00:01:02,629 --> 00:01:07,550
Seventh, provide mechanisms to help people
find and interact with content correctly.

17
00:01:08,060 --> 00:01:12,080
Eights do not cause a change of
context or content unexpectedly.

18
00:01:12,860 --> 00:01:16,640
Ninth, identify components
consistently and tense.

19
00:01:16,850 --> 00:01:21,260
Identify and describe errors
and error suggestions in text.

20
00:01:21,760 --> 00:01:24,820
Now this is quite a complex presentation.

21
00:01:24,820 --> 00:01:28,750
There's a lot of information in
here, but don't fear all this

22
00:01:28,750 --> 00:01:34,270
information is in what we call the
accessibility Oz JavaScript fact sheet.

23
00:01:34,510 --> 00:01:39,670
And if you go to the Accessibility Oz
website, you'll find that there is a

24
00:01:39,700 --> 00:01:44,530
section called fact sheets, and underneath
it there is a JavaScript fact sheet.

25
00:01:44,530 --> 00:01:48,280
There's also a heat more on other
topics that you might be interested in.

26
00:01:49,185 --> 00:01:53,085
And if you go to this JavaScript
fact sheet, you'll see there's

27
00:01:53,085 --> 00:01:58,815
a section here on accessibility
principles and the impact on users.

28
00:01:59,054 --> 00:02:02,520
So you know what happens when
your system is not accessible.

29
00:02:03,019 --> 00:02:06,499
Manage a checklist, which is
basically a testing checklist, and

30
00:02:06,499 --> 00:02:10,549
you can actually go through this and
determine, does all dynamic visual

31
00:02:10,549 --> 00:02:12,260
information have a text equivalent?

32
00:02:12,559 --> 00:02:16,489
Eg. A visual progress meter
also shows a percentage figure.

33
00:02:16,730 --> 00:02:19,579
And if you're like I don't really
know how to do that, then if you

34
00:02:19,579 --> 00:02:20,719
have a look at the developer.

35
00:02:20,829 --> 00:02:21,549
Checklist.

36
00:02:21,790 --> 00:02:24,700
You'll see that there's
some correct examples.

37
00:02:24,910 --> 00:02:28,660
There's also some incorrect examples
in some cases, and if you go to that,

38
00:02:28,660 --> 00:02:34,630
there's an appendix and there is actually
a live demo with all the code available

39
00:02:34,899 --> 00:02:37,119
that you can copy and paste as required.

40
00:02:37,450 --> 00:02:39,309
And this is what the live demo looks like.

41
00:02:39,809 --> 00:02:41,819
So there's lots and lots
of information there.

42
00:02:41,909 --> 00:02:45,149
Don't fear if I'm going a bit
fast or you're a bit worried that

43
00:02:45,149 --> 00:02:48,209
there's just a little bit too much
information in this presentation.

44
00:02:48,239 --> 00:02:51,029
The presentation slides
will also be available.

45
00:02:51,359 --> 00:02:58,739
They are, if you go to the accessibility
Oz website and you go to about, and then

46
00:02:58,739 --> 00:03:03,779
conferences, you'll find that here we've
got the Comp 42 JavaScript conference.

47
00:03:04,059 --> 00:03:04,779
Once the.

48
00:03:05,059 --> 00:03:06,649
Conference has finished.

49
00:03:06,949 --> 00:03:12,799
It will end up sitting under this, heading
past conferences and events 2025, and I'll

50
00:03:12,799 --> 00:03:14,539
add the PowerPoint presentation there.

51
00:03:15,039 --> 00:03:19,029
So let's talk about the types of
different JavaScript functionality.

52
00:03:19,389 --> 00:03:23,169
Type one, as we said, binding
functionality to existing

53
00:03:23,199 --> 00:03:27,009
interactive components such as
links, buttons, and text fields.

54
00:03:27,279 --> 00:03:30,729
So assistive technologies
can derive information from

55
00:03:30,729 --> 00:03:31,989
their attributes and text.

56
00:03:31,989 --> 00:03:34,494
For example, a dynamic
menu would be made using.

57
00:03:34,959 --> 00:03:39,069
Organized with nested lists in which
the menu levels are denoted by the

58
00:03:39,069 --> 00:03:43,564
hierarchy and by the use of structural
labels around each top level link.

59
00:03:44,064 --> 00:03:48,174
Type two non-interactive functionality
that presents information.

60
00:03:48,504 --> 00:03:52,944
So this must be implemented in such a way
that the information can be derived from

61
00:03:52,944 --> 00:03:55,344
associated text as I just showed you.

62
00:03:55,734 --> 00:03:59,544
A visual progress meter would
also show a percentage figure or

63
00:03:59,544 --> 00:04:03,924
JavaScript might be used to identify
and highlight form validation errors.

64
00:04:04,769 --> 00:04:10,349
And type three, creating custom components
that are both interactive and informative.

65
00:04:10,649 --> 00:04:14,549
So these components must be implemented
using elements that are already

66
00:04:14,549 --> 00:04:18,809
understood by assistive technologies
so that their content and interactions

67
00:04:18,809 --> 00:04:20,519
can be programmatically determined.

68
00:04:20,789 --> 00:04:24,899
For example, a calendar widget would
have a label to describe it and a button

69
00:04:24,899 --> 00:04:29,369
to trigger it while the calendar itself
would be made of table markup, which

70
00:04:29,369 --> 00:04:33,149
assistive technologies can understand
and interpret as structured text.

71
00:04:33,364 --> 00:04:35,284
Principle one, text alternatives.

72
00:04:35,584 --> 00:04:39,155
People with disabilities may rely
on assistive technologies such

73
00:04:39,155 --> 00:04:42,484
as a screen reader, a braille
reader, or a speaking browser.

74
00:04:42,844 --> 00:04:46,534
These technologies represent all
information as structured text.

75
00:04:46,924 --> 00:04:50,194
If visual information has no
text equivalent, assistive

76
00:04:50,194 --> 00:04:53,674
technologies will not be able to
relay that information to the user.

77
00:04:54,084 --> 00:04:58,404
And also if interactive components
do not have a descriptive label.

78
00:04:58,704 --> 00:05:02,754
People who use assistive technologies
or who have a cognitive disability

79
00:05:02,814 --> 00:05:04,554
may not understand what it.

80
00:05:05,054 --> 00:05:07,634
Now, if you got to this part of
the presentation and you've gone,

81
00:05:08,084 --> 00:05:10,304
what are assistive technologies?

82
00:05:10,634 --> 00:05:13,904
I don't really understand all this
accessibility stuff, then the best

83
00:05:13,904 --> 00:05:17,204
thing to do before you watch the
rest of this webinar is to watch

84
00:05:17,204 --> 00:05:18,944
the Accessibility Basics webinar.

85
00:05:19,244 --> 00:05:23,804
It's on YouTube, www.youtube.com/watch.

86
00:05:23,864 --> 00:05:26,144
Question mark v equals.

87
00:05:26,564 --> 00:05:35,564
YS, capital T, capital D, capital A,
lowercase U, the number two, lowercase

88
00:05:35,564 --> 00:05:41,974
Z, uppercase V, lowercase I, and
uppercase M. And if you like me and

89
00:05:41,974 --> 00:05:45,484
you actually don't like watching
videos too much, you can also read the

90
00:05:45,484 --> 00:05:54,664
Accessibility Basics article, which
is at TinyURL com slash a1 y basics.

91
00:05:55,164 --> 00:06:01,944
Of course the worst example of
this principle is they capture in

92
00:06:01,944 --> 00:06:05,004
case you don't know what a capture
is, this is what a capture is.

93
00:06:05,064 --> 00:06:11,334
Basically some gobby book test that you
need to type in, and it's inherently

94
00:06:11,424 --> 00:06:13,584
inaccessible for a lot of reasons.

95
00:06:13,944 --> 00:06:17,544
Even if it has an audio version,
and yes, Google's recapture.

96
00:06:17,784 --> 00:06:20,064
You know that little ticky
thing that it just determines

97
00:06:20,064 --> 00:06:21,624
automatically if you're a bot or not.

98
00:06:21,954 --> 00:06:25,524
That's also inaccessible because
the recapture thinks that people

99
00:06:25,524 --> 00:06:28,764
who use technologies are bots,
so of course it doesn't work.

100
00:06:28,764 --> 00:06:33,204
And then it says, Hey, pick the buses
out of these nine images, and people

101
00:06:33,204 --> 00:06:35,034
are blind and they can't see the buses.

102
00:06:35,304 --> 00:06:37,194
Anyway, that's a whole nother story.

103
00:06:37,254 --> 00:06:40,854
If you wanna learn more, have a read
of the article I wrote recently.

104
00:06:41,304 --> 00:06:43,499
Gold, the inaccessibility of capture.

105
00:06:44,334 --> 00:06:51,174
The URL is tiny url.com/
2 0 2 5 dash capture.

106
00:06:51,384 --> 00:06:54,684
This is a better thing to
use instead of a capture.

107
00:06:54,744 --> 00:06:57,504
Basically something like
a human test question.

108
00:06:57,534 --> 00:07:03,264
You can also have honeypots where you
have a field that has to be left empty

109
00:07:03,324 --> 00:07:05,754
and you can have that in the field label.

110
00:07:05,754 --> 00:07:08,724
You can hide it so people can't
see it, et cetera, et cetera.

111
00:07:08,754 --> 00:07:10,554
There are a lot of things that you can do.

112
00:07:10,674 --> 00:07:13,524
Multifactor authentication, as
I said, I could talk forever.

113
00:07:13,594 --> 00:07:14,704
Just don't use capture.

114
00:07:14,734 --> 00:07:17,104
If you only take one thing
from this presentation, it

115
00:07:17,104 --> 00:07:18,694
should be don't use capture.

116
00:07:19,194 --> 00:07:22,014
The other issue is
visually dynamic content.

117
00:07:22,074 --> 00:07:25,614
Of course, we saw the visual
progress meter that the

118
00:07:25,614 --> 00:07:27,384
accessibility of fact sheets have.

119
00:07:27,474 --> 00:07:32,784
I just wanna show you an incorrect
example, and this is an incorrect example.

120
00:07:32,784 --> 00:07:37,134
As you can see, it does display
the status, but it does so using.

121
00:07:37,669 --> 00:07:42,229
Only a visual medium and color
contrast doesn't really work either.

122
00:07:42,349 --> 00:07:44,959
This is a much better progress bar.

123
00:07:45,059 --> 00:07:47,339
As you can see, you've got text.

124
00:07:47,339 --> 00:07:50,819
Of course, it changes quickly,
but that's okay and that is a

125
00:07:50,879 --> 00:07:52,134
more accessible progress meter.

126
00:07:52,724 --> 00:07:55,394
Another thing to be aware
about is image buttons.

127
00:07:55,394 --> 00:07:58,964
I know people don't use them a lot
anymore, but there's still a few.

128
00:07:58,964 --> 00:08:00,704
Once again, your correct example.

129
00:08:00,704 --> 00:08:05,444
Of course, I know they aren't used so much
anymore, but this is a correct example.

130
00:08:05,444 --> 00:08:10,214
You can see the image button has the
text of search, incorrect example.

131
00:08:10,274 --> 00:08:13,814
The image button has a text of sub.

132
00:08:14,234 --> 00:08:15,074
Not very useful.

133
00:08:15,574 --> 00:08:18,814
Complex content, functionality
that can't be made accessible.

134
00:08:18,844 --> 00:08:22,714
Must have a long description that
provides the same information.

135
00:08:23,214 --> 00:08:26,274
This is an example, once again
from the JavaScript fact sheet.

136
00:08:26,544 --> 00:08:31,344
Very complex information, a
Google map, and it has directions.

137
00:08:31,344 --> 00:08:36,504
Now, it's important when it comes to
creating alternatives for complex content.

138
00:08:36,504 --> 00:08:39,744
It's not about providing all the
information that's in the image, it's

139
00:08:39,744 --> 00:08:41,874
providing the relevant information.

140
00:08:41,874 --> 00:08:43,164
So this is about.

141
00:08:43,689 --> 00:08:46,509
Having directions from
Sydney Road to Smith Street.

142
00:08:46,899 --> 00:08:52,059
So the long description says one head
South on Sydney Road State Route 55

143
00:08:52,119 --> 00:08:54,759
toward Mary Street for 550 meters.

144
00:08:54,789 --> 00:09:00,189
Turn left onto Brunswick Road State,
route 38, then proceed for 1.6 kilometers.

145
00:09:00,249 --> 00:09:03,549
Turn right onto Nicholson Street,
then proceed for 1.5 kilometers.

146
00:09:04,049 --> 00:09:07,199
So this is basically
something that you need to do.

147
00:09:07,529 --> 00:09:11,639
It's not a JavaScript thing so much,
but if you have something complex,

148
00:09:11,669 --> 00:09:14,999
can't make it accessible, provides
a lot of information, make sure

149
00:09:14,999 --> 00:09:16,799
you have that long description.

150
00:09:17,299 --> 00:09:20,839
So basically, the text alternative
requirements are image buttons

151
00:09:20,839 --> 00:09:22,369
must have a valid alt attribute.

152
00:09:22,669 --> 00:09:26,329
Any images conveying information
must have a valid alt attribute.

153
00:09:26,629 --> 00:09:27,949
Submit button is an image.

154
00:09:27,949 --> 00:09:29,509
Then it must have an alt attribute.

155
00:09:29,944 --> 00:09:31,654
Captures shouldn't be used.

156
00:09:31,864 --> 00:09:37,055
If they do, you need to have multiple
sensory modalities and complex systems.

157
00:09:37,055 --> 00:09:42,144
Must have a long description if you're not
really sure about this whole interactive

158
00:09:42,144 --> 00:09:43,974
maps, creating a long description.

159
00:09:44,004 --> 00:09:50,814
We do have an interactive maps fact
sheet at www.accessibilityoz.com/fact

160
00:09:50,814 --> 00:09:54,234
sheets slash interactive dash maps.

161
00:09:54,734 --> 00:09:59,524
Two, all functionality must be
accessible to all input devices.

162
00:09:59,764 --> 00:10:01,204
What are input devices?

163
00:10:01,609 --> 00:10:06,019
The standard input devices are a mouse,
a keyboard, and a touch screen, whether

164
00:10:06,019 --> 00:10:08,059
it's on a mobile device or on a laptop.

165
00:10:08,119 --> 00:10:12,889
And then there are assistive technologies
that mimic input devices so that

166
00:10:12,949 --> 00:10:16,579
people with disabilities, they cannot
use a particular input device because

167
00:10:16,579 --> 00:10:18,079
of, say, a physical disability.

168
00:10:18,289 --> 00:10:22,129
They use what is called an assistive
technology, which often mimics

169
00:10:22,129 --> 00:10:23,929
one of the standard input devices.

170
00:10:24,019 --> 00:10:29,119
So for example, the joystick mimics
a mouse, an onscreen keyboard mimics

171
00:10:29,119 --> 00:10:32,929
the physical keyboard, external
keyboard on a mobile device, mimics

172
00:10:32,929 --> 00:10:37,009
the keyboard thumb switch, mimics the
keyboard, head wand mimics a mouse.

173
00:10:37,509 --> 00:10:40,359
Principle two is about
input device accessibility.

174
00:10:40,389 --> 00:10:43,869
Assistive technologies are usually
controlled with a keyboard rather than

175
00:10:43,869 --> 00:10:47,589
a mouse or a pointing device, and there
are many people who are simply unable

176
00:10:47,589 --> 00:10:51,459
to use a mouse or a track pad or a
keyboard because of a motor impairment.

177
00:10:51,639 --> 00:10:53,199
If interactive content.

178
00:10:53,559 --> 00:10:55,179
Can't be operated with a keyboard.

179
00:10:55,419 --> 00:11:00,129
It will be entirely inaccessible to people
who can't use a mouse or pointing device.

180
00:11:00,219 --> 00:11:04,029
There are also people entirely reliant
on other input devices, so it's

181
00:11:04,029 --> 00:11:08,709
essential that all the site functions
using only one type of input device.

182
00:11:09,209 --> 00:11:10,709
So let's talk about the keyboard.

183
00:11:10,859 --> 00:11:15,869
When you are using the keyboard, people
use tab to move between actionable items,

184
00:11:15,929 --> 00:11:20,789
escape to close a feature, and arrow
keys as well, to move amongst things.

185
00:11:21,289 --> 00:11:26,209
If you have a complex feature and
there's an unusual way to close

186
00:11:26,209 --> 00:11:30,409
the feature, then you must document
what that feature is before people

187
00:11:30,499 --> 00:11:31,879
actually get to that feature.

188
00:11:32,089 --> 00:11:35,180
You should also be able to tab
from start to finish, not be

189
00:11:35,180 --> 00:11:36,859
trapped in some kind of component.

190
00:11:37,064 --> 00:11:41,504
That is one of the most serious
accessibility issues is the keyboard trap.

191
00:11:41,564 --> 00:11:44,774
So all interactive content should
be accessible to the keyboard

192
00:11:44,864 --> 00:11:49,274
using common keystrokes like tab
and enter and arrow keys, and you

193
00:11:49,274 --> 00:11:50,834
need to be able to move through.

194
00:11:51,349 --> 00:11:55,699
In the late two thousands, it was
very common that any video player

195
00:11:55,759 --> 00:11:57,469
in Firefox was a keyboard trap.

196
00:11:57,709 --> 00:12:01,999
Users would tab into the video player
to play it, or just because it was

197
00:12:01,999 --> 00:12:05,089
on the screen and they couldn't exit
the video player, so they got to the

198
00:12:05,089 --> 00:12:08,329
end of the video player and the tab
key just basically stopped working.

199
00:12:08,389 --> 00:12:11,329
And so what they would have to
do is they'd have to close the

200
00:12:11,329 --> 00:12:15,319
browser and reopen the page
and try and avoid that video.

201
00:12:16,069 --> 00:12:19,789
That's a major accessibility issue
that you absolutely want to avoid.

202
00:12:20,629 --> 00:12:24,139
To learn more about keyboard,
there is a keyboard fact sheet.

203
00:12:24,139 --> 00:12:30,619
Have a look@wwwaccessibilityoz.com
slash fact sheets slash keyboard, and

204
00:12:30,619 --> 00:12:33,560
there's also a video on keyboard focus.

205
00:12:33,649 --> 00:12:42,305
It's at www do accessibility
oz.com/resources/videos/keyboard-focus.

206
00:12:42,805 --> 00:12:44,335
So some examples.

207
00:12:44,365 --> 00:12:47,215
First off, we talk about
keyboard focus indicator.

208
00:12:47,275 --> 00:12:51,595
Do not use events to restrict keyboard
access or remove focus indication.

209
00:12:51,955 --> 00:12:55,015
Therefore, don't use on
focus equals this blur.

210
00:12:55,675 --> 00:12:58,115
And I'd like to show you
a correct example in the.

211
00:12:58,615 --> 00:13:02,215
If we start at the top of the page,
you can see that the keyboard focus is

212
00:13:02,215 --> 00:13:06,865
now on skip to the content, and then
it goes to language login site, map,

213
00:13:06,865 --> 00:13:09,205
a SL videos on the right hand side.

214
00:13:09,295 --> 00:13:11,605
The next thing to get focus is the logo.

215
00:13:11,605 --> 00:13:13,045
The search bar.

216
00:13:13,105 --> 00:13:17,425
The search button, and
then we have the menu.

217
00:13:17,635 --> 00:13:22,915
So you can see it's very obvious
where your keyboard focus is.

218
00:13:23,095 --> 00:13:26,275
It is very easy to move around the site.

219
00:13:26,775 --> 00:13:30,135
So dynamic menus need to be fully
accessible to the keyboard using

220
00:13:30,135 --> 00:13:34,064
tab and arrow keys, and I'll
just show you an example of that.

221
00:13:34,064 --> 00:13:40,454
Now, here we have the Accessibility Oz
website, and once again you see where the

222
00:13:40,454 --> 00:13:46,605
keyboard focus is and you can tab across
the main menu items in the navigation.

223
00:13:46,964 --> 00:13:50,775
And if you actually wanna look at
sub items under the menu item, then

224
00:13:50,775 --> 00:13:54,555
you just press the down arrow key
and you can move through the items.

225
00:13:55,055 --> 00:13:58,444
Another example here, JSNA one.

226
00:13:58,444 --> 00:14:00,515
So this is part of the
JavaScript fact sheet.

227
00:14:00,574 --> 00:14:06,035
Basically, you can use the tab
keys or arrow keys to move around.

228
00:14:06,305 --> 00:14:11,600
I'm using tab at the moment, but I can
also use the down arrow if I want to.

229
00:14:12,100 --> 00:14:16,240
Keyboard requirements, there must be
no keyboard traps when creating a motor

230
00:14:16,240 --> 00:14:18,640
window dialogue box focus, et cetera.

231
00:14:18,760 --> 00:14:22,120
The keyboard focus must be
trapped within that dialogue box.

232
00:14:22,120 --> 00:14:25,690
You must of course, also have a
way to close that dialogue box

233
00:14:25,720 --> 00:14:27,280
once the user has finished with it.

234
00:14:27,370 --> 00:14:29,950
Dynamic menus must be
fully keyboard accessible.

235
00:14:29,980 --> 00:14:33,430
Anything that has mouse only
functionality needs to have a keyboard

236
00:14:33,430 --> 00:14:37,720
equivalent and make sure everything
has a keyboard focus indicator.

237
00:14:38,220 --> 00:14:39,840
So that's about keyboards.

238
00:14:39,900 --> 00:14:43,590
There are a whole different bunch of
other requirements around touch screens.

239
00:14:43,860 --> 00:14:48,300
When you think about a mobile device,
you do a lot of things much differently

240
00:14:48,300 --> 00:14:52,050
than you would do if you were using
a mouse, for example, two Pink zooms,

241
00:14:52,050 --> 00:14:54,030
swiping up and down, et cetera, et cetera.

242
00:14:54,660 --> 00:15:00,420
There's quite a lot of rules and
regulations to make sure that mobile sites

243
00:15:00,480 --> 00:15:02,910
are accessible, including native apps.

244
00:15:03,270 --> 00:15:06,870
Best thing to do is have a look at
the mobile accessibility guidelines.

245
00:15:06,920 --> 00:15:10,280
It goes into a lot of detail
into how you can make things

246
00:15:10,280 --> 00:15:20,275
accessible, and that is available at
www.accessibilityoz.com/resources/mobile-testing.

247
00:15:20,775 --> 00:15:23,625
Information be
programmatically determined.

248
00:15:24,125 --> 00:15:28,235
If scripting is used to implement
standard functionality, technologies

249
00:15:28,235 --> 00:15:33,085
will not understand it and be or provide
the appropriate if custom widgets are

250
00:15:33,085 --> 00:15:36,920
built, using technologies will similarly
fail to understand what they're.

251
00:15:37,420 --> 00:15:41,920
When content requires user input, labels
or instructions should be provided to

252
00:15:41,920 --> 00:15:46,180
assist the user with completing their
task and to minimize mistakes made.

253
00:15:46,569 --> 00:15:50,380
For example, if labels and instructions
are not provided and associated

254
00:15:50,380 --> 00:15:54,520
with a form input, a blind user will
not know what information to enter.

255
00:15:55,329 --> 00:15:59,620
Similarly, labels and instructions that
are not visually located closely to a

256
00:15:59,620 --> 00:16:03,640
form input can prevent users of screen
magnifiers and people with cognitive

257
00:16:03,640 --> 00:16:06,100
disabilities from seeing this information.

258
00:16:07,074 --> 00:16:11,545
Labels and instructions that do not give
examples of expected user input can reduce

259
00:16:11,545 --> 00:16:15,055
the likelihood of users with cognitive
language and learning disabilities

260
00:16:15,295 --> 00:16:16,765
entering the correct information.

261
00:16:17,275 --> 00:16:17,665
Keyboard.

262
00:16:17,665 --> 00:16:21,535
Users may submit incomplete forms
if required fields are not labeled.

263
00:16:21,955 --> 00:16:25,344
Trying to find the incomplete
input is a tiresome task when

264
00:16:25,344 --> 00:16:27,354
information is not provided to assist.

265
00:16:27,854 --> 00:16:30,584
So let's talk about labels and field sets.

266
00:16:31,005 --> 00:16:34,575
Fields must have an associated
and coded field label.

267
00:16:34,965 --> 00:16:37,275
A good example of this is Amazon.

268
00:16:37,775 --> 00:16:42,395
So if you go to the Amazon website
and see we have a field here, and if

269
00:16:42,395 --> 00:16:46,595
we right click that field and select
Inspect, you can actually see the

270
00:16:46,595 --> 00:16:48,695
code at the bottom of the screen.

271
00:16:49,115 --> 00:16:53,705
Here you see we have input type
email because it's an email address.

272
00:16:54,500 --> 00:16:58,640
And it has an ID of AP email.

273
00:16:58,970 --> 00:17:05,180
If we look at the label, it has a
label four of AP email, and that

274
00:17:05,180 --> 00:17:07,010
is how the two are associated.

275
00:17:07,510 --> 00:17:11,530
Another thing to be aware of when
creating forms is the use of field sets.

276
00:17:11,935 --> 00:17:14,905
So field sets are for
grouping fields only.

277
00:17:15,265 --> 00:17:17,845
There are three ways
fields can be related.

278
00:17:18,055 --> 00:17:20,425
First, they belong in
one particular group.

279
00:17:20,425 --> 00:17:23,755
So for example, you're searching
and there's a bunch of search

280
00:17:23,755 --> 00:17:25,315
options that you can choose from.

281
00:17:25,405 --> 00:17:27,775
All these search options,
they're the same thing.

282
00:17:28,165 --> 00:17:30,925
So actually having them
grouped is a good idea.

283
00:17:31,425 --> 00:17:35,745
Another reason why you might wanna use
field sets is because a field doesn't

284
00:17:35,745 --> 00:17:37,455
make sense without another field.

285
00:17:37,725 --> 00:17:40,575
So here we have a phone
number that has two fields.

286
00:17:40,785 --> 00:17:42,555
The first field is for the area code.

287
00:17:43,155 --> 00:17:45,435
The second field is for
the phone number itself.

288
00:17:45,975 --> 00:17:50,475
Of course, without an overarching
phone number field set, those

289
00:17:50,475 --> 00:17:52,485
two won't be clear to the user.

290
00:17:53,145 --> 00:17:56,925
Thirdly, they only make sense in
conjunction with an overarching heading.

291
00:17:57,330 --> 00:18:02,460
For example, if you have a list of states
and you have a list of check boxes, then

292
00:18:02,520 --> 00:18:09,270
all those check boxes are related and they
have an overarching sort of name of state.

293
00:18:09,660 --> 00:18:14,010
So you want the states to be grouped
with a name of state territory.

294
00:18:14,510 --> 00:18:18,080
For more information, have a look
at the accessibility Oz forms fact

295
00:18:18,080 --> 00:18:24,260
sheets, www.accessibilityoz.com/fact
sheets slash forms.

296
00:18:24,760 --> 00:18:28,600
A series of videos on forms
on the accessibility website.

297
00:18:29,050 --> 00:18:35,470
The URL is www accessibility
oz com slash videos.

298
00:18:35,970 --> 00:18:39,840
And if you go to the accessibility
S website, you can see there's a

299
00:18:39,840 --> 00:18:45,780
resources main menu, and then there
is the link C, C, C developer videos.

300
00:18:46,080 --> 00:18:49,260
And if you go there, you can
see that there are videos

301
00:18:49,260 --> 00:18:52,260
on H, TM, L forms, and Aria.

302
00:18:52,770 --> 00:18:57,030
The videos on forms include explicit
and implicit form labels, which we

303
00:18:57,030 --> 00:19:00,280
just talked about field sets and
legends, which we also talked about.

304
00:19:01,020 --> 00:19:02,580
Check boxes and radio buttons.

305
00:19:02,820 --> 00:19:07,830
Required form fields, accessible form
instructions, error messages in forms,

306
00:19:07,860 --> 00:19:10,020
and accessible session timeouts.

307
00:19:10,520 --> 00:19:12,680
Next we're gonna talk about accordions.

308
00:19:13,040 --> 00:19:17,060
This is actually a requirement
under bypass blocks, which is

309
00:19:17,060 --> 00:19:21,440
used an expandable collapsible
menu to bypass blocks of content.

310
00:19:21,800 --> 00:19:24,140
And I'll show you a couple of examples.

311
00:19:24,560 --> 00:19:28,310
Is the Transport Accident Commission
website, and you can see here

312
00:19:28,670 --> 00:19:30,980
they've got an expandable menu.

313
00:19:31,310 --> 00:19:33,440
So a couple of things
about this expandable menu.

314
00:19:33,710 --> 00:19:38,000
As you can see, the arrow changes
when it's expanded and when it's not.

315
00:19:38,450 --> 00:19:44,090
If you use the tab key, you'll find
that you can access the accordion

316
00:19:44,120 --> 00:19:48,610
using the tab key and all the
content underneath using the tab key.

317
00:19:49,315 --> 00:19:52,555
It meets accessibility
requirements, et cetera.

318
00:19:53,055 --> 00:19:57,105
This is another expandable, collapsible
menu from the JavaScript fact sheets.

319
00:19:57,675 --> 00:20:03,525
This code, you can actually use yourself
if you would like to, and so once again,

320
00:20:03,735 --> 00:20:06,135
it is accessible via the keyboard.

321
00:20:06,135 --> 00:20:09,585
You can open and close
it when it's closed.

322
00:20:09,945 --> 00:20:13,335
You can't tab to the sections underneath.

323
00:20:13,605 --> 00:20:14,870
When it's open, you can.

324
00:20:15,370 --> 00:20:21,130
There's also a great section in the Aria
Authoring Practice Group about creating

325
00:20:21,190 --> 00:20:23,830
accordions and doing so with Aria.

326
00:20:24,100 --> 00:20:26,320
The URL for that is tiny url.

327
00:20:26,320 --> 00:20:30,795
DO com slash a1 y dash accordion.

328
00:20:31,495 --> 00:20:35,725
And remember, accordion is spelt with
an O and that's what it looks like.

329
00:20:36,055 --> 00:20:40,735
Once again, no aria is better than bad
aria, so make sure you know a lot about

330
00:20:40,735 --> 00:20:43,195
Aria before you start playing with it.

331
00:20:43,615 --> 00:20:48,685
But here is an example, talks about the
role states and properties and keyboard

332
00:20:48,685 --> 00:20:52,435
information, and it has quite detailed.

333
00:20:52,935 --> 00:20:54,585
Code as well can help you.

334
00:20:55,085 --> 00:20:59,585
Principle four, a meaningful sequence
and logical focus order is maintained.

335
00:21:00,185 --> 00:21:03,515
The visual reading order of
form content or your JavaScript

336
00:21:03,515 --> 00:21:06,995
content should be presented in a
meaningful and logical sequence.

337
00:21:07,085 --> 00:21:09,965
IE left to right and top to
bottom, assuming of course,

338
00:21:10,025 --> 00:21:10,940
a left to right language.

339
00:21:11,410 --> 00:21:14,470
Screen readers will read form
components in the order that it

340
00:21:14,470 --> 00:21:15,970
appears in the source markup.

341
00:21:15,970 --> 00:21:19,690
In fact, they read everything in the order
that it appears in the source markup.

342
00:21:19,690 --> 00:21:23,710
When meaningful sequence is not
maintained, form content may be displayed

343
00:21:23,710 --> 00:21:27,375
incorrectly when presented in alternative
formats for assistive technologies.

344
00:21:27,875 --> 00:21:31,085
Users of assistive technologies
sometimes do not have access to

345
00:21:31,085 --> 00:21:35,525
the entire page at once, so changes
before the user's current focus or

346
00:21:35,525 --> 00:21:37,475
elsewhere on the page may be missed.

347
00:21:37,565 --> 00:21:40,655
Navigating with the keyboard is
a one dimensional process, and

348
00:21:40,655 --> 00:21:44,345
users who rely on speech output
can only hear one thing at a time.

349
00:21:44,375 --> 00:21:48,580
So content that is not in a logical
order is harder to comprehend and use.

350
00:21:48,920 --> 00:21:53,420
When a keyboard user presses a button and
new interactive content appears, they'll

351
00:21:53,420 --> 00:21:56,750
expect that content to be immediately
next in the tab order not to have to

352
00:21:56,750 --> 00:21:58,220
jump around the page to get to it.

353
00:21:58,720 --> 00:22:01,780
The other thing to remember is that
websites are accessed by a variety of

354
00:22:01,780 --> 00:22:06,130
devices, including mouse, keyboard,
touchscreen, switch, joystick,

355
00:22:06,130 --> 00:22:08,950
and assisted technologies such
as screen readers and magnifiers.

356
00:22:08,980 --> 00:22:11,950
When the source order, keyboard
focus, order and visual reading

357
00:22:11,950 --> 00:22:15,520
order of a webpage are inconsistent
with each other, this can greatly

358
00:22:15,520 --> 00:22:19,810
impact people's ability to navigate
and access a webpage effectively.

359
00:22:20,590 --> 00:22:23,470
So there are basically three
orders that you need to be aware

360
00:22:23,470 --> 00:22:26,920
of when creating a webpage or a
native app or anything like that.

361
00:22:26,980 --> 00:22:30,040
The first is the source order, which
is the order that the underlying

362
00:22:30,100 --> 00:22:32,050
HTML or other markup is written.

363
00:22:32,110 --> 00:22:35,710
Secondly is the keyboard focus order,
which is the order of interactive

364
00:22:35,710 --> 00:22:39,190
page elements such as links and
form controls when accessed by the

365
00:22:39,190 --> 00:22:42,520
keyboard, IE, the order in which
items receive keyboard focus.

366
00:22:42,550 --> 00:22:46,570
You can easily find out what
that is by going to the address

367
00:22:46,570 --> 00:22:48,340
bar and hitting tab and.

368
00:22:48,585 --> 00:22:50,955
Heating tab again and
going through your page.

369
00:22:51,455 --> 00:22:53,315
And thirdly, visual reading order.

370
00:22:53,555 --> 00:22:56,675
The logical and intuitive
order in which a cited user

371
00:22:56,705 --> 00:22:58,505
naturally reads the page content.

372
00:22:58,835 --> 00:23:02,465
This is generally left to right and top
to bottom, and all content should be

373
00:23:02,465 --> 00:23:06,905
presented in a meaningful sequence so that
any relationship within the data is clear.

374
00:23:07,875 --> 00:23:10,965
If you'd like to learn more, there
is a source order fact sheet and

375
00:23:10,965 --> 00:23:12,525
the accessibility Oz website.

376
00:23:12,945 --> 00:23:21,195
You can go to www dot accessibility oz
com slash fact sheets slash source order.

377
00:23:21,695 --> 00:23:25,415
There's also a video about this
called source order versus display

378
00:23:25,415 --> 00:23:30,155
Order versus Keyboard Focus Order,
and you can get to that by going to

379
00:23:30,185 --> 00:23:33,725
tiny URL com slash three dash orders.

380
00:23:34,225 --> 00:23:37,075
Now when we're talking
about visual reading, order

381
00:23:37,135 --> 00:23:39,235
sequence also really matters.

382
00:23:39,415 --> 00:23:43,375
This is an example where visual
reading order is very problematic.

383
00:23:43,435 --> 00:23:47,695
As you can see, you've got the ability
to purchase tickets to the Lion

384
00:23:47,695 --> 00:23:51,385
King, but it doesn't say anything
about say, accessible tickets.

385
00:23:51,655 --> 00:23:54,665
It's because that information
is after the submit button.

386
00:23:55,465 --> 00:23:59,425
Here you've got request accessible tickets
and a whole bunch of other information,

387
00:23:59,785 --> 00:24:03,205
but information should never be after
a submit button because of course,

388
00:24:03,205 --> 00:24:07,675
the submit button is when people, they
leave the page, and that's for everyone.

389
00:24:07,735 --> 00:24:10,195
Screen reader, users,
visual users, et cetera.

390
00:24:10,695 --> 00:24:13,810
This is another example where
visual order is problematic.

391
00:24:13,995 --> 00:24:17,235
You've got a book here, all the
light we cannot see on Amazon.

392
00:24:17,700 --> 00:24:22,230
And you have these prices, but these
are not links, so you can click on it

393
00:24:22,260 --> 00:24:23,940
many times and nothing will happen.

394
00:24:24,390 --> 00:24:28,920
And only if you look over here on the far
right hand corner does it say This title

395
00:24:28,920 --> 00:24:30,960
is not currently available for purchase.

396
00:24:31,260 --> 00:24:33,325
Now this information should be first up.

397
00:24:33,825 --> 00:24:38,145
People will often miss content that's on
the right hand side, especially magnifier

398
00:24:38,145 --> 00:24:42,345
users, but visual users as well, and
screen reader users because they're

399
00:24:42,345 --> 00:24:45,975
gonna have to read all this content
first, all the way down the page through

400
00:24:46,335 --> 00:24:49,755
the comments and other things that you
might be interested in, et cetera, et

401
00:24:49,755 --> 00:24:54,400
cetera, before they get to the about how
you can't actually purchase the book.

402
00:24:54,900 --> 00:24:56,490
Let's talk about focus order.

403
00:24:56,550 --> 00:24:59,640
So it's important that when you
do insert dynamic content, you

404
00:24:59,640 --> 00:25:02,730
insert it into the dom immediately
following its trigger element.

405
00:25:02,940 --> 00:25:04,560
Let's have a look at an example.

406
00:25:04,620 --> 00:25:08,520
This is an example from the
JavaScript dependencies, and

407
00:25:08,640 --> 00:25:10,230
here you have a live demo.

408
00:25:10,590 --> 00:25:14,130
You have a link here, structural
labels, which if you click

409
00:25:14,130 --> 00:25:15,780
on, you'll actually pop.

410
00:25:16,280 --> 00:25:20,180
As you can see, the additional
information appears immediately after

411
00:25:20,240 --> 00:25:22,310
the link that generated the change.

412
00:25:22,810 --> 00:25:25,450
Another example is this re sortable list.

413
00:25:25,810 --> 00:25:28,720
Once again, let's have
a look at the content.

414
00:25:29,380 --> 00:25:32,790
If we expand it, you can see here.

415
00:25:33,585 --> 00:25:37,835
Lauren Ipsen is first said,
probably said that wrong, is second.

416
00:25:37,925 --> 00:25:42,665
Pre-order the content and then
you can see the said is first

417
00:25:43,115 --> 00:25:45,575
and the Lauren Ipsen is second.

418
00:25:46,075 --> 00:25:50,365
This is another example where you
can move items with the keyboard up

419
00:25:50,365 --> 00:25:52,075
and down the list as you can see.

420
00:25:52,495 --> 00:25:55,495
And once again, if we
have a look at the dom.

421
00:25:55,995 --> 00:26:00,645
At the moment, you can see New South
Wales is first, but let's change that.

422
00:26:01,335 --> 00:26:05,445
And now we've got South
Australia as first.

423
00:26:05,945 --> 00:26:10,265
This is how you make sure focus order
is correct when you are creating forms.

424
00:26:10,655 --> 00:26:14,195
You don't validate on
completion of a field.

425
00:26:14,255 --> 00:26:17,045
You validate only on
submission of a submit button.

426
00:26:17,405 --> 00:26:20,465
So you can see here someone's
put in a desired login name,

427
00:26:20,675 --> 00:26:22,175
they've hit check availability.

428
00:26:22,415 --> 00:26:25,415
This is done by JavaScript
so the page doesn't refresh.

429
00:26:25,415 --> 00:26:29,285
But immediately next in the dom,
have they added this content?

430
00:26:29,795 --> 00:26:33,035
Janet Whitman is not available, but
they're following usernames are,

431
00:26:33,305 --> 00:26:34,350
and then it gives some examples.

432
00:26:34,850 --> 00:26:36,440
Next is principle five.

433
00:26:36,470 --> 00:26:41,300
Instructions Do not rely on sensory
characteristics or nonsensical characters

434
00:26:41,810 --> 00:26:46,040
when sensory characteristics, color,
shape, and location, or nonsensical

435
00:26:46,040 --> 00:26:50,150
characters, asterisk, dashes, et
cetera, are used instead of text.

436
00:26:50,420 --> 00:26:54,200
Users of screen readers may not be able
to understand the meaning of the content.

437
00:26:54,710 --> 00:26:57,170
Often these are ignored by
the screen reader, which means

438
00:26:57,170 --> 00:26:59,240
information is omitted completely.

439
00:26:59,630 --> 00:27:01,100
So let's talk about fields.

440
00:27:01,445 --> 00:27:03,155
This is an incorrect example.

441
00:27:03,485 --> 00:27:06,395
Basically, the fields that are
in error are marked in red.

442
00:27:06,695 --> 00:27:10,415
Now, that's gonna be really problematic
because the reader doesn't read out color.

443
00:27:10,745 --> 00:27:14,285
But it's also gonna be problematic for
people who are blue, red, colorblind.

444
00:27:14,375 --> 00:27:16,925
They aren't gonna be able tell
the difference between red text

445
00:27:16,925 --> 00:27:19,895
on a white background and black
text on a white background.

446
00:27:19,955 --> 00:27:22,720
So they aren't going to be able to
tell which fields are mandatory.

447
00:27:23,220 --> 00:27:24,810
Next is principle six.

448
00:27:24,990 --> 00:27:27,210
Timed activity can be controlled.

449
00:27:27,690 --> 00:27:32,250
Users of assistive technology often take
a lot longer to read a page or undertake

450
00:27:32,250 --> 00:27:36,450
required functionality, either because
of a cognitive disability or because they

451
00:27:36,450 --> 00:27:38,760
can only focus on a few words at once.

452
00:27:39,060 --> 00:27:42,745
Or because it takes longer to listen to
synthesized speech than to visually read.

453
00:27:43,125 --> 00:27:46,380
It would be confusing and disorienting
for people if content were to

454
00:27:46,380 --> 00:27:47,730
change while they were reading it.

455
00:27:48,465 --> 00:27:51,825
Continual animation or flickering
effects may trigger a seizure in

456
00:27:51,825 --> 00:27:53,835
someone who has photosensitive epilepsy.

457
00:27:54,195 --> 00:27:57,075
It's also more difficult for someone
with a cognitive disability to

458
00:27:57,075 --> 00:28:00,585
ignore these effects, which makes the
actual content harder to focus on.

459
00:28:01,485 --> 00:28:02,835
So let's talk about flickering.

460
00:28:03,015 --> 00:28:07,605
This is an example of if you fail a
particular accessibility requirement,

461
00:28:07,605 --> 00:28:09,285
you can actually physically hurt someone.

462
00:28:10,005 --> 00:28:12,915
The best example of was back in 1997.

463
00:28:13,035 --> 00:28:18,405
An episode of the anime series Pokemon
was shown was the 38th episode of the

464
00:28:18,405 --> 00:28:24,165
Electric Soldier Pogon Series broadcast
in Japan on December 16th, 1997.

465
00:28:24,645 --> 00:28:27,975
On 37 stations to 4.6 billion households.

466
00:28:28,605 --> 00:28:33,255
There were repetitive visual effects,
flashing red and blue, effectively strobe

467
00:28:33,255 --> 00:28:36,285
at a rate of 12 hertz for six seconds.

468
00:28:36,785 --> 00:28:40,115
Basically no flashing, flashing
images, especially those with

469
00:28:40,115 --> 00:28:43,235
red, should not flicker faster
than three times per second.

470
00:28:43,565 --> 00:28:46,445
If the image does not have red,
it should still not flicker

471
00:28:46,445 --> 00:28:48,365
faster than five times per second.

472
00:28:48,815 --> 00:28:51,845
Flashing images should not be
displayed for a total duration

473
00:28:51,845 --> 00:28:53,315
of more than two seconds.

474
00:28:53,645 --> 00:28:57,185
Stripes, swirls and concentric
circles should not take up a

475
00:28:57,185 --> 00:28:58,475
large part of the web screen.

476
00:28:58,865 --> 00:29:02,205
Now, of course, you might read that
and go I dunno what that means.

477
00:29:02,505 --> 00:29:06,165
So the best thing to do to determine if
your content has flickering is to use

478
00:29:06,165 --> 00:29:11,625
the peach tool, the photosensitivity
epilepsy analysis tool, and this is the

479
00:29:11,625 --> 00:29:14,235
output of that particular Pokemon episode.

480
00:29:14,235 --> 00:29:17,205
As you can see, there's quite a
lot of red, not so much green.

481
00:29:17,985 --> 00:29:20,355
You can access for free at

482
00:29:20,855 --> 00:29:27,300
traced edu PT. And if you wanna see
an example, which I'll not show you,

483
00:29:27,630 --> 00:29:32,370
the Kickstarter campaign for LX has
some flickering content that fails.

484
00:29:32,430 --> 00:29:37,320
It's a campaign for light bulbs, and also
if you have a look at this Teletubbies

485
00:29:37,350 --> 00:29:41,370
image, you can imagine if it was
moving, it would be fairly problematic.

486
00:29:41,870 --> 00:29:47,450
Next we wanna is time limits one user
when a time limit is about to expire and

487
00:29:47,450 --> 00:29:49,700
provide a mechanism for extending it.

488
00:29:50,200 --> 00:29:52,420
This is also from the
JavaScript dependencies.

489
00:29:52,750 --> 00:29:56,740
There is a time limit, as you can see,
says your session is about to expire.

490
00:29:56,740 --> 00:29:58,240
Do you need more time hit?

491
00:29:58,360 --> 00:29:58,870
Okay.

492
00:29:59,260 --> 00:30:01,210
And of course, the
JavaScript code is there.

493
00:30:01,765 --> 00:30:06,415
Another example here is incorrect, and
here it says, these are currently the best

494
00:30:06,415 --> 00:30:08,125
available tickets that match your request.

495
00:30:08,125 --> 00:30:11,245
These tickets will be held up to
eight minutes for you to complete

496
00:30:11,245 --> 00:30:14,185
your purchase after which time
they'll be returned to sale.

497
00:30:14,455 --> 00:30:18,835
So that doesn't allow anyone to extend
the time, and so that is a failure.

498
00:30:19,660 --> 00:30:20,860
This is another example.

499
00:30:20,860 --> 00:30:21,790
Make a donation.

500
00:30:22,030 --> 00:30:23,290
Your session has timed out.

501
00:30:23,290 --> 00:30:24,400
You need to start ag.

502
00:30:24,900 --> 00:30:28,890
Good luck starting one of me and complete
the members form within 20 minutes.

503
00:30:29,130 --> 00:30:32,940
Which really begs the question, why does
anyone have a timeout on a donation form?

504
00:30:33,430 --> 00:30:36,020
It's give us your money, but
only within the next 20 minutes.

505
00:30:36,520 --> 00:30:37,960
Next is movement.

506
00:30:38,020 --> 00:30:41,410
Use scripting to scroll content and
provide a mechanism to pause it.

507
00:30:41,740 --> 00:30:44,590
And this is the JavaScript
appendices example.

508
00:30:44,590 --> 00:30:48,910
As you can see, the flickering content,
which stopped within five seconds.

509
00:30:48,910 --> 00:30:53,020
So if you really need to use
some blinking information, you

510
00:30:53,020 --> 00:30:55,450
can do so using JavaScript.

511
00:30:55,840 --> 00:30:57,580
Do not use the blink element.

512
00:30:58,080 --> 00:31:00,750
And then there's the
Accessibility Odds website.

513
00:31:01,170 --> 00:31:03,270
You can see we have a slideshow.

514
00:31:03,510 --> 00:31:06,360
It's fairly slow, but you can pause.

515
00:31:06,360 --> 00:31:09,240
It can move things across as you like.

516
00:31:09,780 --> 00:31:14,210
You can move through it and
you can pause or play it.

517
00:31:14,710 --> 00:31:15,670
Incorrect example.

518
00:31:15,670 --> 00:31:19,390
So this is basically just scrolling
content that just keeps moving

519
00:31:19,390 --> 00:31:20,470
from one thing to another.

520
00:31:20,710 --> 00:31:23,260
The first one says traveling
halfway around the world,

521
00:31:23,260 --> 00:31:24,160
just hang out with other.

522
00:31:24,730 --> 00:31:27,610
And the second is bid proved
we're not ready to host the globe,

523
00:31:27,670 --> 00:31:28,750
but there's no pause button.

524
00:31:29,200 --> 00:31:30,850
This is a correct example.

525
00:31:30,880 --> 00:31:34,210
Monash University as you can
see, it has play button, a pause

526
00:31:34,210 --> 00:31:36,040
button, and the 1, 2, 3, 4.

527
00:31:36,040 --> 00:31:37,990
So you can choose one of those options.

528
00:31:38,490 --> 00:31:41,400
Another way to deal with this is
to provide alternatives to moving

529
00:31:41,400 --> 00:31:44,880
content, so you could use scripting
to create an alternative static

530
00:31:44,880 --> 00:31:46,350
version of scripting content.

531
00:31:47,250 --> 00:31:50,460
Once again, this is the JavaScript
appendices, and as you can see,

532
00:31:50,460 --> 00:31:52,500
we have some scrolling content.

533
00:31:52,830 --> 00:31:56,610
Very difficult to read for a number
of users, so you can pause it.

534
00:31:57,110 --> 00:31:59,960
You can even expand it so
it's all written at once.

535
00:32:00,170 --> 00:32:02,840
Once again, you have the
code there if you need it.

536
00:32:03,050 --> 00:32:06,590
Redirects are okay if they're on
the server, but timed redirects

537
00:32:06,590 --> 00:32:08,300
on the client side an absolute no.

538
00:32:08,840 --> 00:32:12,050
So the rules are timed,
server redirects not allowed.

539
00:32:12,050 --> 00:32:14,500
Timed client side redirects not allowed.

540
00:32:14,830 --> 00:32:17,230
Non timed server redirects are okay.

541
00:32:17,620 --> 00:32:20,440
Animated GIF must stop
moving within five seconds.

542
00:32:20,710 --> 00:32:22,450
Do not use Blink or marquee.

543
00:32:22,950 --> 00:32:27,060
Make sure you can stop moving content
with the user agent stop button

544
00:32:27,060 --> 00:32:32,280
or the escape key and or reloading
the page stops the blinking and or

545
00:32:32,310 --> 00:32:34,170
there is a link to stop content.

546
00:32:34,380 --> 00:32:37,365
And of course, you also need to be able
to stop that content using the mouse.

547
00:32:37,865 --> 00:32:41,945
Principle seven provide
mechanisms to help people find and

548
00:32:41,945 --> 00:32:43,505
interact with content correctly.

549
00:32:43,565 --> 00:32:46,385
People rely on mechanisms
to find information that are

550
00:32:46,385 --> 00:32:47,645
most suited to their needs.

551
00:32:48,005 --> 00:32:51,515
On a large website, if a search
is not provided, blind users

552
00:32:51,515 --> 00:32:54,185
may find it cumbersome to tabs
through a large navigation block.

553
00:32:54,845 --> 00:32:57,725
Or visually impaired users may
find it difficult and confusing

554
00:32:57,785 --> 00:33:00,515
when doing the same with a screen
magnifier or screen reader.

555
00:33:00,905 --> 00:33:05,195
Providing a search benefits everyone by
allowing information to be found quickly.

556
00:33:05,405 --> 00:33:08,405
In addition, it may be obvious to
you how a system works, but that's

557
00:33:08,405 --> 00:33:11,615
not always the case for everyone and
for people with disabilities, often

558
00:33:11,615 --> 00:33:13,625
contextual information like imagery.

559
00:33:14,055 --> 00:33:16,485
May not be available or
an alternative presented.

560
00:33:16,515 --> 00:33:20,145
Therefore, it's important to always
provide instructions on how to use

561
00:33:20,145 --> 00:33:23,955
unusual content or functionality
or on how to use functionality that

562
00:33:23,955 --> 00:33:26,085
does not operate as the user expects.

563
00:33:26,475 --> 00:33:28,125
So instructions are really important.

564
00:33:28,155 --> 00:33:31,035
Even if you think it's really clear
to you, that's not necessarily

565
00:33:31,035 --> 00:33:31,900
gonna be the case to everyone.

566
00:33:32,645 --> 00:33:37,415
So this is a magazine and it provides
quite in-depth instructions on how to

567
00:33:37,415 --> 00:33:39,515
turn the page, et cetera, et cetera.

568
00:33:39,875 --> 00:33:42,905
Just remember that all this
content needs to be accessible

569
00:33:42,905 --> 00:33:44,230
to the screen reader as well.

570
00:33:44,945 --> 00:33:48,875
One example of this is functionality
that can't be presented in text

571
00:33:49,265 --> 00:33:51,395
must be descriptively identified.

572
00:33:51,815 --> 00:33:55,535
This is an example of functionality
that can't be presented in text.

573
00:33:55,865 --> 00:33:59,015
Button will appear below this
text within the next 20 seconds.

574
00:33:59,375 --> 00:34:02,735
You should click the button as soon as
it appears to test your reaction time.

575
00:34:02,795 --> 00:34:05,765
And of course, this is only
affected for sighted mouse users.

576
00:34:05,765 --> 00:34:09,485
It's not gonna be great for someone
using a keyboard or someone who

577
00:34:09,485 --> 00:34:11,160
uses screen reader Principle eight.

578
00:34:11,660 --> 00:34:13,915
Of context or content unexpectedly.

579
00:34:14,185 --> 00:34:17,515
Navigating a document or inputting
data into a form should be a

580
00:34:17,515 --> 00:34:19,525
predictable experience for all users.

581
00:34:19,855 --> 00:34:23,875
People with visual, cognitive, or motor
impairments may become disoriented.

582
00:34:23,905 --> 00:34:28,825
If changes in context or content occur
unexpectedly, such as a new window popping

583
00:34:28,825 --> 00:34:33,205
up, or the focus being moved to another
form component, the user may not be aware

584
00:34:33,205 --> 00:34:36,955
that change has occurred as a result of
their actions if they were not adequately

585
00:34:36,955 --> 00:34:39,235
informed or did not initiate the change.

586
00:34:39,580 --> 00:34:43,480
So one example of this is
opening content in new windows.

587
00:34:43,810 --> 00:34:46,810
Make sure you use an actuation
event rather than focus or

588
00:34:46,810 --> 00:34:50,500
load to programmatically open
links or trigger popup windows.

589
00:34:50,560 --> 00:34:52,180
This is another JavaScript fact sheet.

590
00:34:52,480 --> 00:34:56,890
Now, it's not gonna actually open a popup
window because I have them disabled, but

591
00:34:56,890 --> 00:35:01,600
basically if you click on this, you'll
end up getting a popup if you have that

592
00:35:01,600 --> 00:35:03,100
kind of stuff enabled on your site.

593
00:35:03,520 --> 00:35:07,240
Next is use progressive enhancement
to open windows on user request.

594
00:35:07,645 --> 00:35:11,745
So this is the JavaScript pen, and
if you click on this link, it opens

595
00:35:11,745 --> 00:35:14,865
up in a new window and you can have a
look at the JavaScript content there.

596
00:35:15,365 --> 00:35:17,465
Let's talk about change on user request.

597
00:35:17,465 --> 00:35:21,095
So make sure that you do not
use the change event of a

598
00:35:21,095 --> 00:35:22,745
select element for navigation.

599
00:35:22,895 --> 00:35:24,455
Let's have a look at an example.

600
00:35:24,970 --> 00:35:27,315
If we look here, we've got a jump to.

601
00:35:27,815 --> 00:35:30,215
And we can go down and
we can select something.

602
00:35:30,215 --> 00:35:34,595
Now, it's not common usage to select
something and it automatically submits.

603
00:35:34,895 --> 00:35:38,675
If you have a select box like this,
users expect there to be a submit button.

604
00:35:39,005 --> 00:35:43,145
But if you select an option, you can see
it takes you to that page immediately.

605
00:35:43,505 --> 00:35:49,525
Another example here is if you select
your area, it will open a new page

606
00:35:49,585 --> 00:35:53,095
immediately instead of giving you a
submit button so the user can choose

607
00:35:53,095 --> 00:35:54,925
when they wanna move to a new page.

608
00:35:55,885 --> 00:35:58,855
Another is do not automatically
refresh the page without

609
00:35:58,885 --> 00:36:00,535
user confirmation or control.

610
00:36:00,595 --> 00:36:02,705
And you can actually do this is a failure.

611
00:36:02,705 --> 00:36:03,875
This is incorrect code.

612
00:36:04,475 --> 00:36:07,715
The link will take us to a page
containing a large number one, and then

613
00:36:07,715 --> 00:36:09,695
redirect to a page with number two.

614
00:36:10,085 --> 00:36:14,015
And as you can see, that
was a client side redirect.

615
00:36:14,525 --> 00:36:15,275
Very bash.

616
00:36:15,605 --> 00:36:16,625
This is an example.

617
00:36:16,625 --> 00:36:19,775
I've only seen this once, but
I have to use it as an example.

618
00:36:20,135 --> 00:36:22,175
You can see here you've
got rollover for video.

619
00:36:22,175 --> 00:36:27,065
So if you just move your mouse over that,
all of a sudden this entire video pops

620
00:36:27,065 --> 00:36:31,155
up, which is very distracting and will
be incredibly inaccessible for users.

621
00:36:32,025 --> 00:36:35,235
A correct example where you are
doing the automatic filtering

622
00:36:35,295 --> 00:36:39,015
is when you enter content into a
field and it filters automatically.

623
00:36:39,255 --> 00:36:42,495
This is not something that users
expect, so you shouldn't do it.

624
00:36:42,495 --> 00:36:46,125
But if you're gonna do it,
you need to absolutely include

625
00:36:46,125 --> 00:36:48,555
instructions prior to the form field.

626
00:36:48,855 --> 00:36:52,395
So here it says the list of outages
will automatically begin to filter

627
00:36:52,665 --> 00:36:56,595
once you enter some text in the filter
outages by suburb field, and the

628
00:36:56,595 --> 00:36:58,730
field is immediately after that text.

629
00:36:59,230 --> 00:37:03,280
This is a popup, so we've put
in some content for Twitter.

630
00:37:03,700 --> 00:37:07,120
I refuse to call it whatever
the other name is, and it says,

631
00:37:07,120 --> 00:37:10,750
Hey, your tweets being posted,
and this is a popup on a page.

632
00:37:11,050 --> 00:37:15,280
And then after a couple of seconds it
just disappears completely inaccessible.

633
00:37:15,400 --> 00:37:16,000
Do not do that.

634
00:37:16,900 --> 00:37:20,020
Principle nine is identify
components consistently.

635
00:37:20,530 --> 00:37:23,680
Functionality that is similar or
used more than once on a website

636
00:37:23,980 --> 00:37:27,670
should be labeled consistently to
create familiarity and ease of use.

637
00:37:28,030 --> 00:37:32,620
This improves a user's ability to find
information or use similar functionality

638
00:37:32,920 --> 00:37:37,230
on other pages without having to relearn
how this is an incorrect example.

639
00:37:37,560 --> 00:37:39,840
Basically inconsistent pagination.

640
00:37:40,605 --> 00:37:44,385
These are from the same site, and you
can see that they look quite different.

641
00:37:44,865 --> 00:37:48,495
The first is all just text, same color.

642
00:37:48,585 --> 00:37:51,165
The links that are
actionable are underlined.

643
00:37:51,225 --> 00:37:54,255
The second, none of the links
are underlined, and you also have

644
00:37:54,255 --> 00:37:55,815
what seems to be a next button.

645
00:37:56,145 --> 00:37:59,745
So this is the kind of example of
inconsistency that you want to avoid.

646
00:38:00,195 --> 00:38:04,095
When it comes to forms, then you
also wanna avoid inconsistency as

647
00:38:04,095 --> 00:38:07,425
well, whether it's buttons or shape
of fields or things like that.

648
00:38:07,875 --> 00:38:12,435
But this is another example where
the contextual help is inconsistent.

649
00:38:12,735 --> 00:38:16,695
So the very first contextual help
is just text under the field.

650
00:38:17,025 --> 00:38:21,705
The second contextual help is a little
information icon that you can click

651
00:38:21,705 --> 00:38:23,265
on and get additional information.

652
00:38:23,625 --> 00:38:26,835
And the third contextual help is
just a popup that appears randomly.

653
00:38:27,335 --> 00:38:29,255
You need to make sure this is consistent.

654
00:38:30,245 --> 00:38:33,935
And finally, principle 10,
identify and describe errors

655
00:38:33,935 --> 00:38:35,225
and error suggestions in text.

656
00:38:35,725 --> 00:38:38,875
When an error is detected, it
should be identified in text and

657
00:38:38,875 --> 00:38:42,565
described in detail without specific
information about the error.

658
00:38:42,805 --> 00:38:43,405
Screen reader.

659
00:38:43,405 --> 00:38:47,845
Users may believe a form is not
functioning and may abandon it altogether.

660
00:38:48,175 --> 00:38:52,135
Errors that are identified with
color alone or symbol or icons may

661
00:38:52,135 --> 00:38:55,765
not be understood or recognized by
users who are blind or colorblind.

662
00:38:56,215 --> 00:39:00,235
This may also be the same for users
with learning or language disabilities,

663
00:39:00,475 --> 00:39:02,095
or other cognitive impairments.

664
00:39:02,800 --> 00:39:06,580
When error messages are provided, they
should include suggestions on how to

665
00:39:06,580 --> 00:39:11,680
correct mistakes such as examples of the
correct user input without suggestions.

666
00:39:11,860 --> 00:39:15,400
People with visual or motor impairments
or cognitive language and learning

667
00:39:15,400 --> 00:39:19,600
difficulties may not understand what
the required input is and may not

668
00:39:19,600 --> 00:39:21,190
be able to correct their mistakes.

669
00:39:21,690 --> 00:39:25,050
After repeatedly trying to input the
correct information, which can be

670
00:39:25,050 --> 00:39:29,370
very tiresome, users may ultimately
abandon the form altogether.

671
00:39:30,060 --> 00:39:33,630
When a form is used to initiate a
legal or financial commitment, or

672
00:39:33,630 --> 00:39:37,830
to modify or delete user data, a
step to reverse check or confirm

673
00:39:37,830 --> 00:39:41,550
the user input before submitting the
form should be provided to prevent

674
00:39:41,550 --> 00:39:43,590
users from making a serious mistake.

675
00:39:44,040 --> 00:39:48,570
Users with visual or cognitive language
and learning difficulties may have input

676
00:39:48,570 --> 00:39:53,490
incorrect characters or users with a motor
impairment may have hit incorrect keys.

677
00:39:54,360 --> 00:39:56,040
Field errors is one example.

678
00:39:56,280 --> 00:39:59,940
Form validation should always be
triggered by submission rather

679
00:39:59,940 --> 00:40:01,650
than individual field events.

680
00:40:02,040 --> 00:40:04,080
Form validation should trigger an alert.

681
00:40:04,380 --> 00:40:06,630
Then set focus on the first invalid field.

682
00:40:06,990 --> 00:40:07,920
Validation error.

683
00:40:07,920 --> 00:40:10,890
Messages should be programmatically
inserted directly after the field.

684
00:40:10,890 --> 00:40:14,610
They relate to using functions of
the dom and in the label element.

685
00:40:14,640 --> 00:40:16,470
So let's have a look at some examples.

686
00:40:17,415 --> 00:40:22,605
If you enter some text, let's enter some
text and then tab to the next field.

687
00:40:22,905 --> 00:40:26,295
You can see there is field validation
immediately after the field.

688
00:40:26,565 --> 00:40:30,165
This can be very confusing for screen
reader users, especially if you then

689
00:40:30,165 --> 00:40:32,895
trap users in a field that isn't correct.

690
00:40:33,645 --> 00:40:35,145
This is another example.

691
00:40:35,715 --> 00:40:39,705
If we just enter some random
content and then hit submit.

692
00:40:40,005 --> 00:40:43,425
There's some text at the top that tells
you what's wrong, but the focus is

693
00:40:43,425 --> 00:40:44,985
actually still on the submit button.

694
00:40:45,600 --> 00:40:48,210
So you wanna move focus
to where the errors are.

695
00:40:48,960 --> 00:40:52,290
We have some information in
the JavaScript fact sheet about

696
00:40:52,290 --> 00:40:55,260
this, and this is correct.

697
00:40:55,290 --> 00:40:59,550
You can enter some text and then
leave the other one empty and you

698
00:40:59,550 --> 00:41:03,630
can see it will say, Hey, you got
some errors and it's moved you to the

699
00:41:03,690 --> 00:41:05,550
field in error and given you an error.

700
00:41:05,985 --> 00:41:06,630
Error form.

701
00:41:06,630 --> 00:41:10,260
Submissions should be bound by the form
submit event, not to the submit buttons.

702
00:41:10,260 --> 00:41:10,950
Click event.

703
00:41:11,370 --> 00:41:13,830
Incorrect example is
input type equals submit.

704
00:41:14,490 --> 00:41:18,990
On click equal return validate this
correct example would be form action

705
00:41:18,990 --> 00:41:21,900
equals search on submit equals return.

706
00:41:21,900 --> 00:41:26,550
Validate this and do not force
focus to remain invalid fields.

707
00:41:26,760 --> 00:41:28,920
Let's have a look at an example here.

708
00:41:28,920 --> 00:41:29,790
We have a field.

709
00:41:30,780 --> 00:41:32,400
I'm gonna type in some text.

710
00:41:32,670 --> 00:41:35,730
I'm tabbing, and as you
can see, it won't let me.

711
00:41:36,230 --> 00:41:39,920
Where form fields require a
specific format or range of values.

712
00:41:40,130 --> 00:41:43,550
Contextual help text can be
programmatically inserted

713
00:41:43,550 --> 00:41:44,690
directly after the field.

714
00:41:44,690 --> 00:41:49,040
It relates to using functions of
the dom and in the label element.

715
00:41:49,040 --> 00:41:50,090
So let's have a look at that.

716
00:41:50,510 --> 00:41:54,710
As you can see here, as you
tab from item to item, you get

717
00:41:54,950 --> 00:41:57,170
a popup with some information.

718
00:41:57,905 --> 00:42:02,285
So when it comes to error identification,
the error must be in text, be it

719
00:42:02,285 --> 00:42:05,975
the relevant field, be included in
the relevant label four element.

720
00:42:06,475 --> 00:42:08,305
This is an incorrect example.

721
00:42:08,305 --> 00:42:12,415
As you can see, the fields have not
been completed, but the form has

722
00:42:12,415 --> 00:42:16,705
been submitted and all the errors
are underneath the submit button.

723
00:42:17,125 --> 00:42:19,735
This is absolutely problematic
if you're gonna do everything in

724
00:42:19,735 --> 00:42:23,690
JavaScripts because as we said before,
no one looks past the submit button.

725
00:42:24,190 --> 00:42:25,570
A much better example.

726
00:42:25,900 --> 00:42:29,290
Once you have submitted an
empty field, you can see that

727
00:42:29,290 --> 00:42:34,210
every single field that requires
information has some field labels.

728
00:42:34,710 --> 00:42:40,710
Now, all this information is in the
forms fact sheet@wwwaccessibilityoz.com

729
00:42:41,070 --> 00:42:45,600
slash fact sheet slash forms, and
we do have a series of forms videos,

730
00:42:45,930 --> 00:42:50,670
www accessibility oz.com/videos.

731
00:42:51,450 --> 00:42:56,340
And if the information isn't there, it'll
be in the JavaScript fact sheets and

732
00:42:56,430 --> 00:43:03,900
associated appendices, www accessibility
s com slash fact sheets slash JavaScript.

733
00:43:04,770 --> 00:43:08,730
In conclusion, as we talked about,
there are really three types

734
00:43:08,730 --> 00:43:10,080
of JavaScript functionality.

735
00:43:10,440 --> 00:43:14,910
First binding functionality to
existing interactive components such

736
00:43:14,910 --> 00:43:16,920
as links, buttons, and text fields.

737
00:43:17,310 --> 00:43:21,270
Non-interactive functionality that
presents information and creating

738
00:43:21,270 --> 00:43:24,720
custom components that are both
interactive and informative.

739
00:43:25,170 --> 00:43:27,180
There are 10 accessibility principles.

740
00:43:27,570 --> 00:43:31,290
All functionality must take a form
that can be interpreted as text.

741
00:43:31,800 --> 00:43:34,860
All functionality must be
accessible to all input devices.

742
00:43:35,220 --> 00:43:38,010
Information and structure can
be programmatically determined.

743
00:43:38,370 --> 00:43:41,490
A meaningful sequence and logical
focus order is maintained.

744
00:43:41,880 --> 00:43:46,560
Instructions do not rely on sensory
characteristics or nonsensical characters.

745
00:43:46,980 --> 00:43:48,930
Timed activity can be controlled.

746
00:43:49,350 --> 00:43:53,610
Provide mechanisms to help people find
and interact with content correctly.

747
00:43:54,000 --> 00:43:56,520
Do not cause a change
of context or content.

748
00:43:56,610 --> 00:44:01,920
Unexpectedly identify components
consistently and identify and describe

749
00:44:01,920 --> 00:44:04,320
errors and error suggestions in text.

750
00:44:04,820 --> 00:44:09,170
Now, I know that was a lot of information,
but there are lots of places where

751
00:44:09,200 --> 00:44:11,270
you can find additional information.

752
00:44:11,720 --> 00:44:16,250
Have W3C Aria Authoring Practice
Guide the Patterns section.

753
00:44:16,880 --> 00:44:21,770
It has information on how to create
accessible accordions alerts, alert and

754
00:44:21,770 --> 00:44:27,860
message dialogues, breadcrumbs, carousels,
check boxes, combo boxes, dialogue models,

755
00:44:28,160 --> 00:44:32,215
sliders, switch tables, tabs, toolbar,
windows, splitters, and many more.

756
00:44:32,715 --> 00:44:36,345
The Authoring Practice Guide also
has practices section, which has

757
00:44:36,345 --> 00:44:40,575
information on landmark regions,
providing accessible names and

758
00:44:40,575 --> 00:44:44,925
descriptions, developing a keyboard
interface, grid and table properties,

759
00:44:45,135 --> 00:44:49,485
communicating value and limits for range
widgets, structural roles, and hiding

760
00:44:49,485 --> 00:44:51,195
semantics with the presentation roles.

761
00:44:51,555 --> 00:44:57,670
All that information is available
at www w three org slash

762
00:44:58,170 --> 00:44:59,550
slash apg.

763
00:45:00,050 --> 00:45:03,200
And of course there are the
accessibility odds fact sheets.

764
00:45:03,470 --> 00:45:07,580
We have them on a range of
topics, including images, P video,

765
00:45:08,030 --> 00:45:13,670
interactive maps, H two ml five,
content, JavaScript tables coding,

766
00:45:13,820 --> 00:45:16,160
keyboard source order, and forms.

767
00:45:16,805 --> 00:45:22,295
Those are available at
www.accessibilityoz.com/fact

768
00:45:22,295 --> 00:45:26,495
sheets, and then there are the
accessibility OZ developer videos.

769
00:45:26,585 --> 00:45:32,375
In the HTML section, we have HTML headings
well-formed and valid markup, keyboard

770
00:45:32,375 --> 00:45:36,785
focus, source order versus display
order versus keyboard focus order.

771
00:45:37,295 --> 00:45:42,005
In the form section, we have explicit
and implicit form labels, field sets

772
00:45:42,005 --> 00:45:46,955
and legends, check boxes and radio
buttons, required form fields, accessible

773
00:45:46,955 --> 00:45:52,055
form instructions, error messages in
forms, and accessible session timeouts.

774
00:45:52,430 --> 00:45:56,060
And in the Aria section, the
videos are what is Aria and why

775
00:45:56,060 --> 00:45:57,980
use it, how not to use Aria.

776
00:45:58,400 --> 00:46:03,440
Aria Landmark roles, aria labeled
by versus Aria, described by versus

777
00:46:03,440 --> 00:46:06,110
Aria label and using Aria Live.

778
00:46:06,470 --> 00:46:14,660
All those videos are available on www
accessibility oz.com/resources/videos.

779
00:46:15,410 --> 00:46:18,470
And then there are the mobile
accessibility testing guidelines.

780
00:46:18,830 --> 00:46:21,590
There are guidelines on both
native app and mobile site.

781
00:46:22,090 --> 00:46:26,800
Devices capture error technologies
and step by step instructions with

782
00:46:26,800 --> 00:46:34,860
examples that's available at www
accessibility resources mobile testing.

783
00:46:35,360 --> 00:46:36,530
Thank you for coming along.

784
00:46:36,650 --> 00:46:41,750
You can access these slides
at www accessibility oz com

785
00:46:42,050 --> 00:46:44,360
slash about slash conferences.

786
00:46:44,660 --> 00:46:48,950
Just look for the comp 42 heading and
I'll have the presentation slides there.

787
00:46:49,310 --> 00:46:50,405
And please if you have any questions.

788
00:46:51,335 --> 00:46:53,315
Please do reach in

789
00:46:53,815 --> 00:46:58,195
QE and if you have accessibility,
please do reach out.

790
00:46:58,255 --> 00:46:59,335
We're always happy to help.

791
00:46:59,665 --> 00:47:00,655
Thank you very much.

