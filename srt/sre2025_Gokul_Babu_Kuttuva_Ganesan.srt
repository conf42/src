1
00:00:00,500 --> 00:00:02,930
Good afternoon or good morning everyone.

2
00:00:03,350 --> 00:00:09,350
I'm Google B Nation, and I'm thrilled
to be here at Con 42 to talk about

3
00:00:09,350 --> 00:00:13,510
something close to all our hearts
enterprise integrations today.

4
00:00:13,719 --> 00:00:18,280
The talk is titled Beyond Rest
Exploding Modern A PA, paradigms

5
00:00:18,280 --> 00:00:20,140
for Enhanced Enterprise Integration.

6
00:00:20,994 --> 00:00:25,015
As integration architects and
developers, we know that traditional

7
00:00:25,045 --> 00:00:30,685
rest model has served us well, but
the digital ecosystem is changing fast

8
00:00:30,835 --> 00:00:33,295
and it's time to explore what's next.

9
00:00:33,795 --> 00:00:35,655
Let's start with the bigger picture.

10
00:00:36,285 --> 00:00:41,415
Over the few last few years, we have seen
the shift in how enterprise approach.

11
00:00:41,475 --> 00:00:45,675
A PA design and rest is
no longer the default.

12
00:00:46,125 --> 00:00:50,865
Organizations are exploring graph
ql, event driven models, a PA

13
00:00:50,865 --> 00:00:55,755
misses, serverless, APAs, and
even hypermedia driven designs.

14
00:00:56,685 --> 00:00:57,285
Why?

15
00:00:57,375 --> 00:01:01,365
Because our integration challenges
are getting more complex and rest

16
00:01:01,365 --> 00:01:04,450
isn't always the most efficient
way to solve the problem.

17
00:01:04,950 --> 00:01:05,460
Why?

18
00:01:05,970 --> 00:01:07,530
Why move beyond the risk?

19
00:01:08,250 --> 00:01:10,140
So what are the pain points?

20
00:01:10,980 --> 00:01:15,600
Such slow development with risk
complex data often means multiple

21
00:01:15,600 --> 00:01:18,720
endpoints, multiple calls, and
a lot of developer frustrations.

22
00:01:19,220 --> 00:01:21,835
Then there's a data overhead risk.

23
00:01:22,035 --> 00:01:26,960
A PA tend to over deliver data leading
to inefficiencies, especially for

24
00:01:26,960 --> 00:01:30,080
mobile or bandwidth sensitive clients.

25
00:01:31,010 --> 00:01:36,430
We also run into breaking changes
as systems scale versioning.

26
00:01:36,430 --> 00:01:40,810
Rest points become a nightmare,
and of course, scaling risk wasn't

27
00:01:40,810 --> 00:01:42,880
designed for a high throughput.

28
00:01:43,510 --> 00:01:48,610
Event, high end heavy enrollment,
and that shows under peak loads.

29
00:01:49,110 --> 00:01:52,650
So graph ql, data efficiency breakthrough.

30
00:01:52,800 --> 00:01:54,570
Let's talk about the graph ql.

31
00:01:55,560 --> 00:01:59,100
It's a major leap forward
in how we query the data.

32
00:01:59,220 --> 00:02:03,840
Rather than juggling multiple endpoint
or getting too much or too little

33
00:02:03,840 --> 00:02:06,690
data, GraphQL gives the client control.

34
00:02:07,680 --> 00:02:10,260
A single query returns
exactly what's needed.

35
00:02:10,380 --> 00:02:12,180
Nothing more or nothing less.

36
00:02:12,780 --> 00:02:17,610
And the impact is some companies have
seen 60 to 70 percentage reduction

37
00:02:17,610 --> 00:02:22,440
in the data transfer volume and
significantly faster development cycles.

38
00:02:23,160 --> 00:02:28,655
It's not just about speed, it's about
developer experience and maintainability.

39
00:02:29,155 --> 00:02:32,305
So next, let's start with
event driven architecture.

40
00:02:32,805 --> 00:02:34,965
Now onto the real time needs.

41
00:02:35,205 --> 00:02:37,425
Enter the event driven architectures.

42
00:02:37,425 --> 00:02:42,095
Instead of pulling or relying on a
synchronous call, services publish events

43
00:02:42,595 --> 00:02:47,785
when state change occur, these events are
streamed and consumed as synchronously.

44
00:02:48,775 --> 00:02:51,535
Allowing systems to
react in near real time.

45
00:02:52,035 --> 00:02:56,775
This is also a loose coupling, which
helps to build a build system more

46
00:02:56,775 --> 00:03:00,830
scalable and resilient, especially
in microservice landscapes.

47
00:03:01,330 --> 00:03:06,045
So a PA based, so one big challenge
in the modern architecture is EXPLO

48
00:03:06,765 --> 00:03:08,955
explosion of point to point integration.

49
00:03:09,630 --> 00:03:11,760
That's where a PA mesh comes in.

50
00:03:12,180 --> 00:03:18,060
It offers a unified gateway that can
route, compose, secure, and cast records

51
00:03:18,120 --> 00:03:20,040
across the multiple microservices.

52
00:03:20,430 --> 00:03:25,140
Instead of having a individual team
built ad hoc integrations, the mes

53
00:03:25,140 --> 00:03:27,480
abstract and simplifies architecture.

54
00:03:28,200 --> 00:03:31,170
Think of it as an orchestrator and a er.

55
00:03:31,670 --> 00:03:35,840
So next, the serverless
APIs scale on demand.

56
00:03:36,260 --> 00:03:38,720
Now let's talk on scale.

57
00:03:39,710 --> 00:03:43,610
So imagine the infrastructure that
scales exactly what as you need

58
00:03:43,610 --> 00:03:45,095
it and disappears when you don't.

59
00:03:45,595 --> 00:03:50,890
So that's the promise of serverless a
p. They bring up to 78 percentage cost

60
00:03:50,890 --> 00:03:55,600
reduction with cold stats averaging
over just three seconds and warm

61
00:03:55,600 --> 00:03:58,120
responses as fast as two 50 milliseconds.

62
00:03:58,930 --> 00:04:02,620
It's the ultimate pay as you
go model for your compute.

63
00:04:03,120 --> 00:04:04,325
a enhanced APIs.

64
00:04:04,595 --> 00:04:09,635
So we are also seeing a big leap
forward with a enhanced APIs.

65
00:04:10,025 --> 00:04:14,345
So these APIs use special learning
or intent recognition, anomaly

66
00:04:14,345 --> 00:04:16,415
detection, and even predictive caching.

67
00:04:17,135 --> 00:04:18,695
So the systems start serving.

68
00:04:19,325 --> 00:04:23,675
Serving when user will need,
not just what you ask for.

69
00:04:24,545 --> 00:04:28,115
It's smarter, more active, and even it's.

70
00:04:28,895 --> 00:04:32,375
It's the direction many enterprise
platforms are heading towards.

71
00:04:32,875 --> 00:04:38,815
So hypermedia APIs are self-documenting
systems, so unless finally it's

72
00:04:38,815 --> 00:04:40,765
not a overlooked hypermedia api.

73
00:04:41,265 --> 00:04:46,965
These might seem old school, but
the idea about idea of APAs that are

74
00:04:46,965 --> 00:04:52,515
self-documenting and guide the client
through resource discovery is powerful.

75
00:04:53,055 --> 00:04:57,795
The, they reduce breaking changes
by 65 percentage occurring to

76
00:04:57,795 --> 00:05:02,750
some studies and make client site
development much more intuitive.

77
00:05:03,250 --> 00:05:04,990
Now let's zoom out.

78
00:05:05,330 --> 00:05:08,719
choosing the right a PA
paradigm isn't just a technical

79
00:05:08,719 --> 00:05:10,730
discussion, it's a strategic.

80
00:05:11,300 --> 00:05:17,289
You need to know, you need to look at your
business goals, data patterns, consumer

81
00:05:17,289 --> 00:05:19,270
expectations, and scalability needs.

82
00:05:20,020 --> 00:05:24,820
Know one size fits everything, but the
best architecture often blends multiple

83
00:05:24,880 --> 00:05:27,940
paradigms to match the specific use cases.

84
00:05:28,440 --> 00:05:30,655
So let's discuss the key takeaways here.

85
00:05:30,715 --> 00:05:36,015
So if you remember nothing else
from this session, let it be this.

86
00:05:36,195 --> 00:05:38,145
No single solution fits all.

87
00:05:38,475 --> 00:05:42,705
Blend strategies, apps
needed, evaluate, trade off.

88
00:05:43,215 --> 00:05:45,105
Every model has a pros and cons.

89
00:05:46,035 --> 00:05:49,250
Start smile, find a pain
Point, implement and learn.

90
00:05:49,750 --> 00:05:50,229
Impact.

91
00:05:50,229 --> 00:05:53,680
Always try your architecture to outcomes.

92
00:05:54,180 --> 00:05:55,740
Thanks so much for joining me.

93
00:05:55,740 --> 00:06:02,100
I hope I gave you a first lens to look
into integration, not just as a technical

94
00:06:02,100 --> 00:06:07,090
hurdle, but as a powerful, driver
for business agility and innovation.

95
00:06:08,005 --> 00:06:11,635
I am happy to take your questions,
to shoot me, if you have any

96
00:06:11,635 --> 00:06:16,675
questions, and thank you for giving
the opportunity to present this.

97
00:06:16,765 --> 00:06:17,410
Thank you so much.

