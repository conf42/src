1
00:00:01,000 --> 00:00:02,620
Hello and welcome.

2
00:00:03,170 --> 00:00:09,889
I'm Kota and I'm excited to share
with you our work on real time fraud

3
00:00:09,889 --> 00:00:11,870
detection for e-commerce platforms.

4
00:00:12,830 --> 00:00:18,049
Specifically, we focus on stopping
fake reviews, which have become

5
00:00:18,110 --> 00:00:21,409
a major threat to customer
trust and marketplace integrity.

6
00:00:22,790 --> 00:00:25,700
I always read reviews before
I buy something online.

7
00:00:26,660 --> 00:00:31,909
Once I saw a toaster review,
which has five stars because

8
00:00:32,150 --> 00:00:33,650
it changed someone's life.

9
00:00:34,309 --> 00:00:38,960
Now that's a powerful appliance
or it's really a bad fake review.

10
00:00:40,339 --> 00:00:43,620
Jokes aside fake reviews
like that can really mislead.

11
00:00:44,235 --> 00:00:44,745
People.

12
00:00:44,805 --> 00:00:49,425
And today I'll walk you through
challenges we face, the system

13
00:00:49,425 --> 00:00:54,135
we that was built and how it's
already making an impact on scale.

14
00:00:55,245 --> 00:00:55,605
Let's go.

15
00:00:55,725 --> 00:00:56,205
Go ahead.

16
00:00:56,754 --> 00:00:59,845
So now we are in marketplace
integrated challenge.

17
00:00:59,954 --> 00:01:01,964
E-commerce thrives on trust today.

18
00:01:02,565 --> 00:01:06,850
Every time you buy something online,
you probably check the reviews first.

19
00:01:08,594 --> 00:01:12,914
You trust those reviews are
harnessed, written by real people

20
00:01:13,544 --> 00:01:15,014
who actually use the product.

21
00:01:16,124 --> 00:01:18,794
But fake reviews actually break the test.

22
00:01:19,544 --> 00:01:25,244
Imagine buying something highly rated only
to find, it's nothing like the reviews.

23
00:01:25,934 --> 00:01:31,594
You feel cheated and you might think again
twice before shopping on that platform.

24
00:01:32,945 --> 00:01:34,414
This is a real danger.

25
00:01:35,490 --> 00:01:38,790
And it doesn't just affect customers.

26
00:01:39,120 --> 00:01:44,310
Harness sellers are even pushed down by
the competitors who achieve the system,

27
00:01:45,420 --> 00:01:47,720
and even platforms lose credibility.

28
00:01:48,280 --> 00:01:50,480
I. Now frauds.

29
00:01:50,540 --> 00:01:54,960
These fraudsters are not just
writing random fake reviews.

30
00:01:55,440 --> 00:01:59,520
They're running some coordinated
campaigns using many fake accounts.

31
00:02:00,330 --> 00:02:07,060
These accounts are often well planned
with detailed profiles and the post

32
00:02:07,060 --> 00:02:12,400
reviews in a way that they look
natural and the faster they post.

33
00:02:13,570 --> 00:02:15,460
The more damage they cause.

34
00:02:15,940 --> 00:02:21,619
That's why speed is critical if we don't
catch these fake reviews as they happen.

35
00:02:22,159 --> 00:02:26,689
They influence buying decisions and can
lead to major financial lo losses for

36
00:02:26,689 --> 00:02:29,629
both sellers and as well as platforms.

37
00:02:31,339 --> 00:02:32,959
Now, how do we solve this?

38
00:02:33,529 --> 00:02:38,120
In order to solve this we built a
system designed for speed and scale.

39
00:02:38,855 --> 00:02:43,385
First, we use Apache Kafka to
handle the flow of reviews.

40
00:02:44,345 --> 00:02:48,005
Think of Kafka as a
real time data pipeline.

41
00:02:48,915 --> 00:02:53,475
It can handle like millions of
reviews per second, and it's even

42
00:02:53,475 --> 00:02:57,504
fault tolerant, meaning even if
something goes wrong, it keeps working.

43
00:02:58,344 --> 00:03:02,075
Next we process the
data using Apache Flink.

44
00:03:03,170 --> 00:03:07,040
Flink is a powerful, is very
powerful for stream processing,

45
00:03:07,790 --> 00:03:13,100
allowing us to react to new data
with like sub millisecond latency.

46
00:03:13,550 --> 00:03:17,210
This means we can even detect
fraud as it's happening.

47
00:03:18,230 --> 00:03:20,900
Then our fraud detection model kicks in.

48
00:03:21,890 --> 00:03:25,340
These models are deployed in
a horizontally scalable way.

49
00:03:26,240 --> 00:03:28,760
As traffic increases we just add more.

50
00:03:28,760 --> 00:03:33,410
Server and predictions still
happen in just a few milliseconds.

51
00:03:34,280 --> 00:03:40,490
Finally, to find more complex fraud,
like group of fake accounts, we can

52
00:03:40,490 --> 00:03:42,830
actually use a custom graph database.

53
00:03:43,220 --> 00:03:47,540
This database helps us map
relationships between accounts

54
00:03:47,540 --> 00:03:51,965
reviews, products, allowing us to
uncover all the hidden patterns.

55
00:03:52,985 --> 00:03:55,715
That suggest a coordinated
fraud that's happening.

56
00:03:58,055 --> 00:04:03,295
Now let's talk about so this is, now
that we have seen an architecture

57
00:04:03,295 --> 00:04:08,245
behind that system, let's dive deep
into how we actually detect the fraud

58
00:04:08,965 --> 00:04:15,085
specif, specifically how our systems
make decisions about whether a review

59
00:04:15,085 --> 00:04:21,565
is genuine or fake, use a hybrid
approach, and why a hybrid approach.

60
00:04:22,294 --> 00:04:24,394
Fraud isn't just one dimensional.

61
00:04:24,905 --> 00:04:26,465
It doesn't always look the same.

62
00:04:26,764 --> 00:04:31,084
Some fraudsters even might use simple
and repetitive language interviews.

63
00:04:31,504 --> 00:04:35,554
Others might try to behave like
normal users, but post at really

64
00:04:35,554 --> 00:04:38,794
strange times or coordinate on groups.

65
00:04:39,184 --> 00:04:43,804
Because of this, relying on just one
detection method would leave gaps.

66
00:04:44,374 --> 00:04:46,969
That's why we use a
hybrid detection approach.

67
00:04:47,749 --> 00:04:52,460
Combining several powerful techniques
that together create much more

68
00:04:52,460 --> 00:04:54,559
reversed and accurate detection system.

69
00:04:55,609 --> 00:04:58,900
Let me walk through the key
components of this approach.

70
00:04:59,650 --> 00:05:04,479
First ensemble edition models
like we use ensemble learning.

71
00:05:04,929 --> 00:05:10,449
Think of like team of specialists
where each model and the and symbol

72
00:05:10,539 --> 00:05:12,699
focuses on different kind of signals.

73
00:05:13,554 --> 00:05:17,334
One model might specialize in
detecting unusual posting times.

74
00:05:17,364 --> 00:05:21,324
Another might analyze the content of
the review, yet another might look

75
00:05:21,324 --> 00:05:23,244
at the history of that user account.

76
00:05:23,904 --> 00:05:29,424
These models work together and
combined result is often more reliable

77
00:05:29,454 --> 00:05:31,824
than any single model acting alone.

78
00:05:33,129 --> 00:05:38,289
Example, one example would be like,
imagine one model says that this review

79
00:05:38,289 --> 00:05:42,309
is fake because of the timing, but
another says this language looks okay.

80
00:05:42,879 --> 00:05:48,279
When combined, the ensemble can weigh
these opinions and decide more accurately.

81
00:05:49,209 --> 00:05:54,669
This method helps us reach high precision
rate, meaning we can make fewer mistakes

82
00:05:54,669 --> 00:05:56,319
when flagging something as fake.

83
00:05:58,464 --> 00:06:00,834
Next we bring graph neural networks.

84
00:06:00,884 --> 00:06:05,184
This is where we move from looking
at individual reviews, to looking at

85
00:06:05,184 --> 00:06:07,044
connections between users and reviews.

86
00:06:07,705 --> 00:06:09,775
Fraud is often coordinated.

87
00:06:10,554 --> 00:06:14,124
A multiple accounts might work
together to boost a product

88
00:06:14,695 --> 00:06:16,614
or even damage a competitor.

89
00:06:17,934 --> 00:06:21,385
Janin help us analyze
who is connected to whom.

90
00:06:22,434 --> 00:06:28,284
They look at pattern across entire network
sporting clusters of suspicious activity.

91
00:06:29,064 --> 00:06:34,344
For example, if 10 accounts are frequently
reviewed, reviewing the same products

92
00:06:34,734 --> 00:06:39,894
around same times, and they're giving very
similar ratings, that's the sign might

93
00:06:39,894 --> 00:06:41,664
be part of a coordinated fraud Group.

94
00:06:42,474 --> 00:06:47,215
Journals allow us to visualize and
analyze this behavior effectively.

95
00:06:48,640 --> 00:06:50,770
Behavioral analytics is the next one.

96
00:06:51,379 --> 00:06:53,629
We also look at like the user behavior.

97
00:06:53,839 --> 00:06:56,520
How often the user is posting reviews?

98
00:06:57,329 --> 00:07:01,469
Do they really post at times
when users, most users don't?

99
00:07:02,249 --> 00:07:05,280
Are they interacting with
products in ways that.

100
00:07:06,375 --> 00:07:07,335
Don't make sense.

101
00:07:07,995 --> 00:07:13,165
This helps us catch anomalous behavior
that might be visible in the text

102
00:07:13,855 --> 00:07:15,145
or in the network connections.

103
00:07:15,415 --> 00:07:21,635
Example, if if a user suddenly posts
reviews in 10 minutes or only ever

104
00:07:21,635 --> 00:07:25,775
reviews products in one category from one
seller, it actually resists a red flag.

105
00:07:27,170 --> 00:07:28,190
Behavioral analytics.

106
00:07:28,190 --> 00:07:31,520
Analytics is very crucial
for early detection.

107
00:07:32,000 --> 00:07:35,630
Often we can catch fraud starts
as they begin their activities.

108
00:07:36,650 --> 00:07:38,540
Next is natural language crossing.

109
00:07:39,320 --> 00:07:43,490
Finally, we analyze the text
of the reviews themselves using

110
00:07:43,490 --> 00:07:44,630
natural language crossing.

111
00:07:45,680 --> 00:07:49,460
Fake reviews often use overly
positive language, like they

112
00:07:49,460 --> 00:07:51,170
follow similar pattern across.

113
00:07:51,170 --> 00:07:55,680
Multiple reviews contain generic
or template like sentences.

114
00:07:55,680 --> 00:08:02,745
I. Our NLP tools analyze the structure
of review, like syntax, semantics,

115
00:08:02,745 --> 00:08:09,255
used word choice, even identifies signs
that it was generated or manipulated.

116
00:08:10,605 --> 00:08:16,615
If for example, like if fire reviews are
poster on the same product, I'll say this

117
00:08:16,615 --> 00:08:18,505
is the best product I have ever bought.

118
00:08:19,015 --> 00:08:22,765
Highly recommended in
nearly identical phrasing.

119
00:08:23,344 --> 00:08:26,224
N LP can flag this as likely fake.

120
00:08:27,124 --> 00:08:31,515
We can also detect a machine generated
text, which is becoming more common

121
00:08:31,515 --> 00:08:34,035
as fraudsters use AI tools themselves.

122
00:08:34,964 --> 00:08:40,054
Putting all these four together
each of these methods like enseal

123
00:08:40,054 --> 00:08:44,975
models, gnn peer analytics and NLP
brings a unique perspective alone.

124
00:08:45,960 --> 00:08:50,070
They can miss things together, they
create a multi-layered defense.

125
00:08:50,850 --> 00:08:55,350
This hybrid EPO approach allows us
to be faster, more accurate, and more

126
00:08:55,560 --> 00:08:58,350
adaptive as fraud techniques evolve.

127
00:08:59,220 --> 00:09:01,050
And most importantly, this layer method.

128
00:09:01,230 --> 00:09:05,195
This layer method helps us to
reduce false postures, so real

129
00:09:05,305 --> 00:09:10,955
reviews don't get wrongly flagged
and it also improves recall, so

130
00:09:11,095 --> 00:09:13,875
we catch more of the actual fraud.

131
00:09:16,260 --> 00:09:21,450
Let's dive a little deeper into how
our hybrid detection system performs.

132
00:09:22,600 --> 00:09:28,120
When we talk about performance we are
mainly looking at three key metrics,

133
00:09:28,300 --> 00:09:31,990
precision recall, and F1 score precision.

134
00:09:31,990 --> 00:09:35,480
This tells us out of all the
reviews that were flagged as fake,

135
00:09:35,900 --> 00:09:37,970
how many were actually flake.

136
00:09:38,630 --> 00:09:39,980
Fake, sorry.

137
00:09:40,060 --> 00:09:44,200
A high pressure means that we
are making fewer mistakes and

138
00:09:44,200 --> 00:09:45,730
we say something is fraudulent.

139
00:09:46,480 --> 00:09:47,110
Recall.

140
00:09:47,210 --> 00:09:52,310
This actually tells us out of all
fake reviews out there, how many

141
00:09:52,310 --> 00:09:57,350
we actually caught a high recall
means we are not missing much.

142
00:09:57,890 --> 00:09:59,960
And then there is this F1 score.

143
00:10:00,845 --> 00:10:03,185
Which is a balance between
precision and recall.

144
00:10:03,245 --> 00:10:08,375
It's a great, like a great measure of
the overall effectiveness of the system.

145
00:10:09,185 --> 00:10:14,195
Now, why this is important, like
'cause many fraud detection systems

146
00:10:14,225 --> 00:10:16,595
might be like too strict or too loose.

147
00:10:17,045 --> 00:10:22,235
A strict system can actually catch
a lot of fake reviews, but also flag

148
00:10:22,235 --> 00:10:25,385
real ones that's bad for user trust.

149
00:10:25,715 --> 00:10:28,925
A loose system might let too
many fake reviews slip through.

150
00:10:30,230 --> 00:10:32,810
That hybrid approach, we
strike a right balance.

151
00:10:33,350 --> 00:10:34,550
Our ion is high.

152
00:10:34,850 --> 00:10:38,450
So when we say a review
is fake, it usually is.

153
00:10:38,900 --> 00:10:42,860
Our recall is also strong, meaning we
catch more fake reviews that are out

154
00:10:42,950 --> 00:10:48,290
there together, gives us an F1 score
that is significantly better than

155
00:10:48,650 --> 00:10:50,480
just using single detection method.

156
00:10:52,145 --> 00:10:57,395
For example, like when we compare just
using NLP alone, we notice that it's

157
00:10:57,395 --> 00:11:02,945
struggle with detection, detecting
more fraud, like when fraudsters were

158
00:11:02,945 --> 00:11:05,735
slightly more natural sounding text.

159
00:11:06,725 --> 00:11:12,845
Behavioral models alone might f mis fake
accounts that don't just post often.

160
00:11:14,120 --> 00:11:18,770
Graph based models are strong,
but need more data to kick in.

161
00:11:19,370 --> 00:11:24,200
By combining all these three, we
cover each other's blind spots.

162
00:11:24,290 --> 00:11:26,665
That's why our performance
is better across the board.

163
00:11:27,665 --> 00:11:31,945
Next is one of the most complex and
dangerous types of fraud we face

164
00:11:32,005 --> 00:11:38,545
are coordinated campaigns, fraud,
fraudsters don't always act alone.

165
00:11:38,965 --> 00:11:41,275
They often operate in groups.

166
00:11:42,055 --> 00:11:45,805
They've been set up multiple fake
accounts, often over weeks or months,

167
00:11:45,805 --> 00:11:49,975
and then launch an attack, like
pushing fake reviews all at once

168
00:11:49,975 --> 00:11:51,625
to promote or damage a product.

169
00:11:52,750 --> 00:11:58,120
Now many systems can only detect
this type of fraud after it

170
00:11:58,390 --> 00:12:02,500
becomes very obvious, like when
hundreds of accounts are involved.

171
00:12:03,250 --> 00:12:05,920
But our system is designed
for early detection.

172
00:12:06,010 --> 00:12:11,890
We can even catch these campaigns
when there are as few as eight

173
00:12:11,890 --> 00:12:13,330
accounts working together.

174
00:12:14,320 --> 00:12:14,650
How?

175
00:12:14,650 --> 00:12:17,050
How do we do that first?

176
00:12:17,365 --> 00:12:22,185
We actually set thresholds for
what's considered suspicious.

177
00:12:22,665 --> 00:12:28,415
For example, if eight accounts post
reviews on the same product within short

178
00:12:28,415 --> 00:12:34,355
time window and they never interacted with
that product before, that's suspicious.

179
00:12:35,165 --> 00:12:37,235
Then we use graph analysis.

180
00:12:37,955 --> 00:12:43,145
We create a map of relationships,
who posted what, when, and where.

181
00:12:44,015 --> 00:12:48,395
If we see the tight clusters
of that activity that don't

182
00:12:48,395 --> 00:12:53,135
match normal user behavior, that
can be treated as a red flag.

183
00:12:54,245 --> 00:12:59,975
Now, what's unique is that we don't need
massive data to start detecting fraud.

184
00:13:00,785 --> 00:13:07,625
Our systems use temporal pattern analysis,
which allows to spot fraud from minimal

185
00:13:07,625 --> 00:13:09,575
activity, giving us major advantage.

186
00:13:10,565 --> 00:13:14,465
This early detection reduces the
impact of fraud instead of reacting

187
00:13:14,555 --> 00:13:19,595
after the damage is done, we prevent
it from spreading in the first place.

188
00:13:22,025 --> 00:13:26,615
Now, let's shift gears and talk
about privacy, which is a huge

189
00:13:26,615 --> 00:13:29,795
concern today, stopping fraud.

190
00:13:30,320 --> 00:13:33,610
Is very important, but doing
it while protecting user

191
00:13:33,610 --> 00:13:35,650
data is even more important.

192
00:13:36,580 --> 00:13:40,000
Users trust pla these platforms,
not just with their money,

193
00:13:40,330 --> 00:13:42,490
but with their information.

194
00:13:43,725 --> 00:13:48,375
We use several cutting edge techniques
to keep the data safe, use federated

195
00:13:48,375 --> 00:13:53,475
learning, like instead of pulling all
the user data into one central place

196
00:13:53,475 --> 00:13:57,975
to train our models, we train these
models locally in defense service.

197
00:13:58,005 --> 00:14:02,645
This means like sense two data would
never go of the original system.

198
00:14:03,905 --> 00:14:08,255
The model learns from the data,
but the data itself stays put.

199
00:14:10,220 --> 00:14:11,480
Differential privacy.

200
00:14:12,560 --> 00:14:17,450
Even when we aggregate results, we add
bit of mathematical noise to the data.

201
00:14:17,930 --> 00:14:22,520
This ensures that no one can trace
a result pack to a specific user.

202
00:14:23,660 --> 00:14:29,720
The balance here is key, where we maintain
high accuracy but without risking privacy.

203
00:14:31,250 --> 00:14:32,540
Encrypted inference.

204
00:14:32,600 --> 00:14:34,280
This is really advanced.

205
00:14:35,150 --> 00:14:39,860
Using homomorphic encryption,
we can actually process

206
00:14:39,860 --> 00:14:41,750
data while it's encrypted.

207
00:14:42,860 --> 00:14:47,900
Imagine being able to check for fraud
without ever seeing the raw data.

208
00:14:48,980 --> 00:14:54,050
This protects users even further,
especially in a regulated environments.

209
00:14:55,250 --> 00:14:56,435
Why is this important?

210
00:14:57,675 --> 00:15:02,150
'cause many fraud detection systems
compromise privacy by needing

211
00:15:02,150 --> 00:15:03,770
access to detailed user data.

212
00:15:04,610 --> 00:15:09,860
Us doesn't we respect users'
privacy while still keeping fraud

213
00:15:09,860 --> 00:15:12,110
detection fast and even accurate.

214
00:15:14,540 --> 00:15:16,580
Now let's talk about scalability.

215
00:15:17,540 --> 00:15:21,140
How well our system handle growth.

216
00:15:22,430 --> 00:15:26,030
E-commerce platforms face
huge spikes in traffic.

217
00:15:26,390 --> 00:15:32,330
Think like on Black Friday or even holiday
sales or flash deals during these times.

218
00:15:33,350 --> 00:15:36,650
The volume of reviews can
increase by five times or more.

219
00:15:38,180 --> 00:15:41,240
Our system is designed
to scale seamlessly.

220
00:15:42,280 --> 00:15:48,550
It can handle five x more traffic
without any slowdown, even at peak times.

221
00:15:48,600 --> 00:15:52,800
It keeps the response time
low around 10 milliseconds.

222
00:15:54,120 --> 00:15:56,580
We achieve this near linear scaling.

223
00:15:56,790 --> 00:16:00,660
This means if you double our
servers performance almost doubles.

224
00:16:01,350 --> 00:16:03,720
Just about 5% overhead.

225
00:16:04,860 --> 00:16:12,240
Also, as the traffic doubles, CPN memory
usage only grows by about 1.5 x times.

226
00:16:13,290 --> 00:16:15,240
This keeps the system efficient.

227
00:16:16,050 --> 00:16:19,770
This is very important because
fraudsters also strike during bus

228
00:16:19,980 --> 00:16:24,555
busy periods, knowing that detection
systems might be overwhelmed.

229
00:16:26,040 --> 00:16:30,330
Our system, we can confidently say
no matter how big the traffic search,

230
00:16:30,810 --> 00:16:37,050
fraud detection continues smoothly with
no compromise on speed or accuracy.

231
00:16:37,600 --> 00:16:42,430
Next, moving to production deployment,
I. This system isn't just in a test

232
00:16:42,430 --> 00:16:46,510
environment, it is actually running live,
and the result speaks for themselves.

233
00:16:47,260 --> 00:16:50,440
It's deployed across like 12
major e-commerce platforms,

234
00:16:50,440 --> 00:16:52,210
handling like billions of reviews.

235
00:16:53,500 --> 00:17:00,340
We have even seen a 78% drop in fake
reviews, meaning that our detection system

236
00:17:00,400 --> 00:17:02,380
is working in real world conditions.

237
00:17:03,700 --> 00:17:08,770
We have also seen a 94%
reduction in false positives.

238
00:17:09,475 --> 00:17:15,765
Which means real reviews are staying up
and users aren't being wrongly penalized.

239
00:17:16,815 --> 00:17:18,975
High availability is key.

240
00:17:18,975 --> 00:17:25,065
Like our system runs with 99 per
0.99% uptime, even if something goes

241
00:17:25,065 --> 00:17:26,745
wrong in one part of the system.

242
00:17:28,185 --> 00:17:32,235
We have this redundant infrastructure
and geographical distribution,

243
00:17:32,235 --> 00:17:37,005
so the systems keep running and
we just don't stop improving.

244
00:17:37,875 --> 00:17:40,905
Our models are retrained daily basis.

245
00:17:41,835 --> 00:17:47,845
When we detect these new fraud patterns,
the system adapts within 24 hours,

246
00:17:48,415 --> 00:17:50,695
keeping us ahead of evolving threats.

247
00:17:51,685 --> 00:17:55,735
This kind of real world performance
shows that system is reliable,

248
00:17:55,735 --> 00:17:58,450
adaptable, and effective at scale.

249
00:18:01,315 --> 00:18:06,355
Now let's take a closer look at how
we build a system to be flexible,

250
00:18:06,385 --> 00:18:09,745
efficient, and able to evolve over time.

251
00:18:11,335 --> 00:18:15,265
Fraud patterns are generally
constantly changing and our system

252
00:18:15,265 --> 00:18:19,170
needs to adapt quickly without
d downtime or performance loss.

253
00:18:20,080 --> 00:18:22,225
Here is how we have designed for that.

254
00:18:22,765 --> 00:18:27,955
First, we're using mic microservice
based architecture like our system is.

255
00:18:29,020 --> 00:18:30,820
Built on microservices.

256
00:18:30,879 --> 00:18:34,510
This means like each component, like
data ingestion, fraud detection, or

257
00:18:34,510 --> 00:18:39,460
graph analysis, it's de developed
and deployed independently.

258
00:18:40,630 --> 00:18:45,070
If we want to upgrade just our
NLP model, we can do that without

259
00:18:45,070 --> 00:18:47,110
touching the GNN or behavioral nce.

260
00:18:48,640 --> 00:18:50,715
It also makes the system resilient.

261
00:18:51,320 --> 00:18:56,030
If one part needs maintenance or scaling,
the other keeps running smoothly.

262
00:18:57,230 --> 00:19:01,640
For example, we recently introduced
a new detection algorithm spec

263
00:19:01,970 --> 00:19:04,310
specifically for flash shell fraud.

264
00:19:05,510 --> 00:19:10,790
We rolled it out just that part of system
without disrupting the entire platform.

265
00:19:12,440 --> 00:19:15,350
Next is data structure optimization.

266
00:19:16,405 --> 00:19:20,780
To make the system not only scalable,
but even resource efficient,

267
00:19:21,050 --> 00:19:22,580
we optimized our data handling.

268
00:19:23,960 --> 00:19:27,450
We use customs Pass Graph
Representations, which means like we

269
00:19:27,450 --> 00:19:29,820
don't store unnecessary connections.

270
00:19:30,720 --> 00:19:34,290
This reduces our memory footprint by 40%

271
00:19:36,750 --> 00:19:40,530
with allow, allowing us to handle
more data with fewer resources.

272
00:19:40,530 --> 00:19:46,140
And it also improves query
performance by three three x. So

273
00:19:46,140 --> 00:19:51,000
when we need to check a suspicious
user connections, it happens fast.

274
00:19:52,855 --> 00:19:57,210
Stateful Next is Stateful
Processing with Apache Flink.

275
00:19:58,080 --> 00:20:00,150
Many fraud patterns emerge over time.

276
00:20:00,930 --> 00:20:06,900
We use stateful processing with Flink
and R DB as a backend to store user

277
00:20:06,900 --> 00:20:10,710
actions and context over extended periods.

278
00:20:11,430 --> 00:20:16,800
This lets us detect fraud that
develops gradually, like an account

279
00:20:16,800 --> 00:20:18,270
that behaves well for months.

280
00:20:19,140 --> 00:20:22,180
Then suddenly act it
becomes act two in fraud.

281
00:20:23,620 --> 00:20:27,130
We don't just look at
these isolated events.

282
00:20:27,940 --> 00:20:33,070
We even track the behavior
over time, adding depth to

283
00:20:33,070 --> 00:20:34,510
our detection capabilities.

284
00:20:36,550 --> 00:20:38,230
Next is deployment pipelines.

285
00:20:38,230 --> 00:20:40,430
We use use rapid updates.

286
00:20:40,970 --> 00:20:45,290
Rapid updates are really critical
in frightening this fraud We have.

287
00:20:46,025 --> 00:20:51,185
Set up an automated continuous integration
or continuous deployment pipelines.

288
00:20:51,905 --> 00:20:56,825
This means every time we improve
a model or add edition rule,

289
00:20:57,155 --> 00:21:00,815
we can test it, validate it,
and deploy it without downtime.

290
00:21:01,565 --> 00:21:05,885
We use AB testing framework to test all
these new features on a small percentage

291
00:21:05,885 --> 00:21:07,950
of data before rolling them out.

292
00:21:08,950 --> 00:21:14,830
Widely canary deployments help also help
us monitor new changes in production,

293
00:21:15,280 --> 00:21:17,350
ensuring stability and performance.

294
00:21:19,300 --> 00:21:24,010
Next, developer productivity and rapid
experimentation like this architecture

295
00:21:24,010 --> 00:21:28,030
also supports rapid experimentation
where data scientists can deploy and

296
00:21:28,030 --> 00:21:30,400
test new models in a sandbox environment.

297
00:21:31,450 --> 00:21:34,480
Once these are validated, those
models can be integrated into

298
00:21:34,900 --> 00:21:36,250
production pipeline very quickly.

299
00:21:37,720 --> 00:21:41,560
This kind of architecture
keeps our system future proof.

300
00:21:42,310 --> 00:21:47,590
Now, as fraudsters develop new tactics,
we are equipped to respond faster with

301
00:21:47,620 --> 00:21:53,830
minimal overhead and with confidence that
we can say we can deploy safely at scale.

302
00:21:56,230 --> 00:21:59,860
Now let's talk about highlight
about key takeaways from everything

303
00:21:59,860 --> 00:22:00,910
that we have discussed today.

304
00:22:02,170 --> 00:22:03,520
Speed matters.

305
00:22:04,150 --> 00:22:06,340
Fraud detection needs to happen instantly.

306
00:22:07,210 --> 00:22:11,050
If fake reviews linger,
they impact trust and sales.

307
00:22:11,770 --> 00:22:17,560
Our system directs fraud in under like
10 milliseconds, ensuring users only

308
00:22:17,560 --> 00:22:19,780
see high quality trustworthy reviews.

309
00:22:21,040 --> 00:22:22,990
Realtime detection is in just a feature.

310
00:22:24,190 --> 00:22:27,910
It's a necessity in today's
fast-paced e-commerce environment.

311
00:22:30,550 --> 00:22:32,710
Accuracy through multimodal detection.

312
00:22:34,075 --> 00:22:37,285
No single model can capture all fraud.

313
00:22:38,275 --> 00:22:44,185
Our hybrid approach uses and simple
models, nns Behavioral Analytics

314
00:22:44,605 --> 00:22:49,930
and NLP imp, where it improves
detection accuracy by up to 38%.

315
00:22:51,565 --> 00:22:56,185
We have reduced false positives so
that real users aren't penalized

316
00:22:57,295 --> 00:22:59,305
and we have improved recall.

317
00:22:59,755 --> 00:23:03,745
So we catch more fraud than the
existing traditional systems.

318
00:23:05,125 --> 00:23:06,475
This is Privacy by design.

319
00:23:06,985 --> 00:23:10,645
Federated learning ensures
that data stays local.

320
00:23:11,425 --> 00:23:13,285
No raw data moves.

321
00:23:14,425 --> 00:23:19,720
Differential privacy is next thing,
which adds noise to aggregated reserves,

322
00:23:19,725 --> 00:23:22,765
so individual users remain anonymous.

323
00:23:23,635 --> 00:23:26,965
Homomorphic encryption allows analysis.

324
00:23:27,325 --> 00:23:32,785
Without decryption, offering
another layer of protection as user

325
00:23:32,785 --> 00:23:36,715
trust is more than catching more
important than catching a fraud.

326
00:23:36,925 --> 00:23:40,585
It's about safeguarding the
data every step of the way.

327
00:23:42,445 --> 00:23:44,305
Next, scalable architecture.

328
00:23:44,845 --> 00:23:49,255
Our system handles billions of
reviews even during five traffic

329
00:23:49,255 --> 00:23:53,155
surges such as Black Friday or
even major product launches.

330
00:23:53,845 --> 00:23:56,545
We achieved this near linear scaling.

331
00:23:57,305 --> 00:24:00,395
We add capacity smoothly
without compromising performance

332
00:24:01,025 --> 00:24:02,735
even as traffic grows.

333
00:24:02,795 --> 00:24:04,925
CPUN, memory usage grow efficiently.

334
00:24:06,440 --> 00:24:10,220
And finally, this is a
proven impact in production.

335
00:24:10,700 --> 00:24:12,890
This isn't even a theoretical.

336
00:24:13,460 --> 00:24:18,020
We are alive on 12 major platforms,
where with 78% fewer fake reviews

337
00:24:18,020 --> 00:24:24,890
and 20% fewer false positives
with 99% plus percent uptime even

338
00:24:24,890 --> 00:24:26,840
during failures or traffic spikes.

339
00:24:28,070 --> 00:24:32,180
Daily model retraining with
24 hour eruption to new.

340
00:24:32,735 --> 00:24:33,695
Fraud trends

341
00:24:34,695 --> 00:24:40,065
only in short, our system is fast
enough to act before fraud spreads.

342
00:24:40,455 --> 00:24:46,095
Accurate enough to detect complex,
evolving fraud, private enough to

343
00:24:46,190 --> 00:24:48,440
protect our user data without compromise.

344
00:24:49,425 --> 00:24:52,485
And scalable enough to serve
the world's largest e-commerce

345
00:24:52,485 --> 00:24:54,015
platform without a hitch.

346
00:24:55,725 --> 00:24:57,705
Thank you so much for your attention.

347
00:24:57,915 --> 00:25:02,205
I hope you found this presentation
valuable and that it gave you a

348
00:25:02,205 --> 00:25:06,855
clear sense of how we are advancing
fraud detection for modern age.

349
00:25:09,490 --> 00:25:12,980
Wrapping up, if you need any
further information or explore

350
00:25:12,980 --> 00:25:15,200
this topic deeper, feel free to.

351
00:25:15,785 --> 00:25:16,505
Reach me out.

352
00:25:17,525 --> 00:25:21,665
Thanks again for watching and I hope
you enjoy the rest of the conference.

353
00:25:22,385 --> 00:25:22,715
Thank you.

