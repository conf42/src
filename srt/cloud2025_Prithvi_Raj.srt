1
00:00:00,120 --> 00:00:03,970
Hey folks, a very warm welcome
to my talk, chaos engineering

2
00:00:03,970 --> 00:00:06,780
community, tales and future.

3
00:00:07,280 --> 00:00:08,839
My name is Prithvi Raj.

4
00:00:08,850 --> 00:00:13,629
A lot of you folks who have followed
me over the years or have seen the

5
00:00:13,629 --> 00:00:17,929
progress of the chaos engineering
community know me as a community

6
00:00:17,929 --> 00:00:20,219
manager to the litmus chaos project.

7
00:00:20,430 --> 00:00:26,120
who paved his way through previous
companies, MyData, ChaosNative, Harness.

8
00:00:27,020 --> 00:00:31,009
And now finally Mirantis, where I'm
also a community manager and a dev

9
00:00:31,009 --> 00:00:35,295
advocate, although right now I'm
Constantly focused on the K 0 S and

10
00:00:35,295 --> 00:00:37,185
the newly announced Gordon project.

11
00:00:38,084 --> 00:00:42,385
But yeah, my establishment and
relationship with the chaos engineering

12
00:00:42,385 --> 00:00:44,724
community goes way back in 2020.

13
00:00:44,735 --> 00:00:48,095
And alongside that I've helped
organize chaos carnival,

14
00:00:48,125 --> 00:00:49,444
currently helping organize.

15
00:00:49,640 --> 00:00:54,760
Kubernetes Community Days Bangalore
and also the CNCF Reliability

16
00:00:54,760 --> 00:00:58,539
Engineering meetups that we have
done in Bangalore and online.

17
00:00:59,039 --> 00:01:04,239
The agenda for today will be obviously,
this talk is more from a cultural aspect.

18
00:01:04,239 --> 00:01:07,829
We'll talk about chaos engineering in
practice, chaos engineering through

19
00:01:07,829 --> 00:01:12,449
time, a better solution for chaos
engineering that has been seen today,

20
00:01:12,449 --> 00:01:14,239
the shift from chaos engineering.

21
00:01:14,949 --> 00:01:19,279
to, Resilience Engineering, Chaos
Engineering Resources for you all.

22
00:01:20,109 --> 00:01:21,759
We identify competition.

23
00:01:22,179 --> 00:01:26,139
My journey as a community manager to
Litmus Chaos, which is the main aspect

24
00:01:26,139 --> 00:01:31,519
where we'll be talking about how the
Litmus Chaos community grew, how Chaos

25
00:01:31,519 --> 00:01:36,399
Engineering came into frame, strategies
and, aspects of the community, the

26
00:01:36,399 --> 00:01:40,179
current state of the Chaos Engineering
community, and The path ahead.

27
00:01:40,679 --> 00:01:41,769
So chaos engineering.

28
00:01:41,789 --> 00:01:45,319
I hope I don't need to introduce
that There's a lot that has already

29
00:01:45,319 --> 00:01:50,309
been introduced at con 42 chaos
engineering or even before that various

30
00:01:50,329 --> 00:01:52,839
Conferences so many articles out there.

31
00:01:53,599 --> 00:01:58,119
So chaos engineering is a practice
has been Not just being utilized by

32
00:01:58,119 --> 00:02:02,919
one segment of folks, but multiple
enterprises post the Netflix days

33
00:02:03,419 --> 00:02:05,389
has started adopting this practice.

34
00:02:05,399 --> 00:02:10,499
And chaos engineering is being used today
at so many enterprises and companies,

35
00:02:10,499 --> 00:02:12,909
inclusive of retail e commerce.

36
00:02:13,579 --> 00:02:19,510
so many financial transactions that
require, robust testing frameworks, and

37
00:02:19,510 --> 00:02:22,010
they need identification of failures.

38
00:02:22,020 --> 00:02:22,450
So banks.

39
00:02:22,950 --> 00:02:28,400
Stock broker, brokers, food
delivery applications, gaming,

40
00:02:28,470 --> 00:02:31,099
airlines, it's everywhere.

41
00:02:31,099 --> 00:02:34,820
And I can name so many companies or
there are companies that you might

42
00:02:34,820 --> 00:02:40,149
identify as users to popular chaos
projects, but chaos engineering has

43
00:02:40,150 --> 00:02:44,700
crossed that part of the chasm where
it was seen as an innovative tool.

44
00:02:44,700 --> 00:02:48,630
And today it's become a tool
that has been adopted by a

45
00:02:48,630 --> 00:02:51,290
majority of the organizations.

46
00:02:51,790 --> 00:02:54,810
And through time we see, through
the, as I spoke about the Netflix

47
00:02:54,840 --> 00:02:59,410
days and chaos monkey, which was
used to just, terminate instances.

48
00:02:59,410 --> 00:03:02,840
And then it became part of the
larger project that was the

49
00:03:02,840 --> 00:03:07,410
simian army, or we had Pumba for
running chaos in Docker instances.

50
00:03:08,260 --> 00:03:13,551
The innovation era was more or
less, post the game day that was

51
00:03:13,551 --> 00:03:18,280
run in 2003 by Amazon made chaos
engineering a practice that.

52
00:03:18,585 --> 00:03:24,065
Could be dreamt of by organizations or
could be adopted if they mature with

53
00:03:24,065 --> 00:03:29,305
the practice of terminating instances or
running some production level failures.

54
00:03:29,305 --> 00:03:33,895
But the early adoption era where, I was
also part of it as a community manager

55
00:03:33,895 --> 00:03:38,885
to , saw the growth of, there was a
side of things where folks from Netflix.

56
00:03:39,090 --> 00:03:44,780
They parted ways and they started their
own thing, and I think a pioneer to that

57
00:03:44,810 --> 00:03:49,290
was Gremlin, who I will talk about later
on, but then there were so many open

58
00:03:49,290 --> 00:03:53,670
source projects that came up during that
time as well, like Chaos Mesh, Litmus,

59
00:03:53,670 --> 00:03:59,319
Chaos Toolkit, Chaos Blade, and then
there were also, These projects are still

60
00:03:59,319 --> 00:04:05,249
thriving, the enterprise side of things
started building, there was Verica who was

61
00:04:05,249 --> 00:04:09,909
focused on security kiosk engineering, and
then the big players, the cloud players

62
00:04:09,909 --> 00:04:16,029
as we know them as AWS and Azure also came
up with their AWS FIS, Azure Kiosk Studio

63
00:04:16,049 --> 00:04:20,944
offering, which helped simulate failures,
which were perhaps derived from those

64
00:04:20,944 --> 00:04:23,949
open source tools, or written by Azure.

65
00:04:23,949 --> 00:04:24,029
Thank you.

66
00:04:24,225 --> 00:04:31,104
The developer or SRE persona itself and
then now I would dare say that it's not

67
00:04:31,104 --> 00:04:36,034
the open source era anymore but I think
the Late adoption era is also about the

68
00:04:36,034 --> 00:04:41,764
enterprise era where enterprise players
like SteadyBit, Reliably, Harness I mean

69
00:04:41,774 --> 00:04:48,389
there's Amazon with the AWS Resilience
Hub, who have, I think, consolidated chaos

70
00:04:48,389 --> 00:04:50,369
engineering as a practice that is a must.

71
00:04:50,369 --> 00:04:56,329
And I think with so many features and
abilities, it has become something,

72
00:04:56,769 --> 00:05:00,949
as a practice that has been adopted,
largely large enterprises are coming up,

73
00:05:01,439 --> 00:05:03,779
adopting this practice, talking about it.

74
00:05:03,829 --> 00:05:06,279
Each and every conference
you have some talk or chatter

75
00:05:06,349 --> 00:05:08,829
about reliability driven by.

76
00:05:09,779 --> 00:05:14,559
enterprise end user stories and a
better solution for chaos engineering,

77
00:05:14,559 --> 00:05:19,639
I believe from the initial practice of
running some, production level failure,

78
00:05:19,699 --> 00:05:25,269
just, terminating instance, instances,
it has become like a larger practice

79
00:05:25,299 --> 00:05:26,979
where collaboration is required.

80
00:05:26,979 --> 00:05:31,599
Multiple teams are running chaos and,
it's same, there's an SRE team, there's

81
00:05:31,599 --> 00:05:35,359
a platform engineering team, there's a
team of developers, there's a QA team.

82
00:05:35,819 --> 00:05:36,339
there is.

83
00:05:36,514 --> 00:05:38,694
a must need for collaboration.

84
00:05:38,744 --> 00:05:42,424
there has to be a particular team running
a particular set of experiments, which is

85
00:05:42,444 --> 00:05:45,634
completely different from, say, team B.

86
00:05:46,344 --> 00:05:49,974
And that is why, a better solution
to chaos engineering driven by the

87
00:05:49,974 --> 00:05:54,589
enterprise era is This is collaboration
where, there's chaos for teams,

88
00:05:55,169 --> 00:05:59,559
there are features, which maybe you,
the feature flags are being used to

89
00:05:59,959 --> 00:06:04,259
perhaps stop, using a team from, stop
stopping a team to use particular

90
00:06:04,259 --> 00:06:08,449
features or chaos experiments,
the availability of experiments.

91
00:06:08,449 --> 00:06:13,769
obviously in the communities that are
chaos engineering tests were written as.

92
00:06:14,329 --> 00:06:19,899
YAML files, or just experiments
written on Go or Python.

93
00:06:20,339 --> 00:06:25,259
And then, the idea of having them readily
available has become more important.

94
00:06:25,269 --> 00:06:29,579
have an interactive UI and have
those experiments that you can pull

95
00:06:29,579 --> 00:06:33,729
up and run, maybe have a different
dashboard, say a dashboard, which

96
00:06:33,729 --> 00:06:38,309
is like for Violet Mischias, but
you want to run an experiment that.

97
00:06:38,489 --> 00:06:41,109
That is part of the chaos toolkit program.

98
00:06:41,419 --> 00:06:45,459
So bringing your own chaos, having
that chaos experiment readily available

99
00:06:45,469 --> 00:06:50,229
has optimized the initial investment
rather than having a developers

100
00:06:50,229 --> 00:06:51,579
write the experiment for you.

101
00:06:52,159 --> 00:06:56,399
And then again, the idea of chaos
engineering was to run it in production,

102
00:06:56,399 --> 00:07:02,909
but I CI CD pipelines, in our dev
environments, in a staging environments.

103
00:07:03,584 --> 00:07:08,854
And automating them, controlling a
blast radius is rather more important.

104
00:07:09,494 --> 00:07:14,144
And then obviously having a metrics,
assessing what's going wrong when

105
00:07:14,144 --> 00:07:17,514
your system is in steady state and
when your system is in production,

106
00:07:18,114 --> 00:07:23,584
or when your system is going against
some latency chaos engineering, tests.

107
00:07:23,754 --> 00:07:25,904
You, you obviously need your metrics.

108
00:07:25,904 --> 00:07:28,054
You need to observe what's going wrong.

109
00:07:28,064 --> 00:07:29,144
You measure the impact.

110
00:07:29,144 --> 00:07:30,764
And then according to that, go.

111
00:07:31,314 --> 00:07:34,944
About an incident management solution
and that is where I will be talking

112
00:07:34,954 --> 00:07:39,604
about chaos engineering from just running
chaos engineering tests to actually

113
00:07:39,654 --> 00:07:44,704
chaos engineering has become beyond
just running some Chaotic scenarios.

114
00:07:44,704 --> 00:07:49,844
It's also about monitoring them It's also
about managing those incidents and that

115
00:07:49,874 --> 00:07:55,414
has to happen in a very short span of time
and I think Benjamin Wilmsy, good friend

116
00:07:55,414 --> 00:08:00,094
from SteadyBit, he spoke about You know
how resilience engineering has developed

117
00:08:00,094 --> 00:08:07,054
and I mean you identify you inject a fault
you get your readings you monitor them

118
00:08:07,054 --> 00:08:10,854
in your dashboards I mean there are open
source solutions like signals or there's

119
00:08:10,864 --> 00:08:16,734
a data dog or dynatrace Dashboard and then
you know, there's a call for an incident.

120
00:08:16,794 --> 00:08:20,934
You need to manage that mitigate
that I mean there's so many, incident

121
00:08:20,944 --> 00:08:22,594
management solutions out there.

122
00:08:22,624 --> 00:08:27,244
One of the open source solutions recently
I saw respond now, and that helps

123
00:08:27,274 --> 00:08:29,495
you, continuously build resiliency.

124
00:08:29,495 --> 00:08:34,885
So I see a lot of folks, coining
this term as not just chaos

125
00:08:34,885 --> 00:08:36,175
engineering, but resiliency.

126
00:08:36,535 --> 00:08:41,435
Chaos engineering, which I might, have
an agreement too, but then I believe

127
00:08:41,445 --> 00:08:46,645
that is a term that is developing more
and more shifting from just the, old

128
00:08:46,655 --> 00:08:48,745
school chaos engineering practice.

129
00:08:49,245 --> 00:08:54,145
But to get started again, it's a term
very popularly coined initially by

130
00:08:54,205 --> 00:08:57,405
Netflix and then there was Principles
of Chaos Engineering which was

131
00:08:57,425 --> 00:09:01,665
developed around 2015 which, created,
you need to hypothesize, then you

132
00:09:01,665 --> 00:09:05,745
need to develop a set of experiments,
you need to run them, control your

133
00:09:05,745 --> 00:09:07,895
blast radius and repeat that process.

134
00:09:08,645 --> 00:09:11,075
there are amazing, resources, again.

135
00:09:11,575 --> 00:09:15,215
Shout out to Pavlos Ratis who has
developed this awesome chaos engineering

136
00:09:15,225 --> 00:09:19,625
repo on github Go check it out, and
you might if you are getting started

137
00:09:19,625 --> 00:09:23,835
with your chaos engineering journey it
will surely be helpful in identifying

138
00:09:23,845 --> 00:09:28,035
the resources and getting started with
the right tool in the right blogs or

139
00:09:28,095 --> 00:09:30,455
articles or cultural aspects to it.

140
00:09:30,955 --> 00:09:35,460
The first thing I believe even
before the historical part and

141
00:09:35,470 --> 00:09:40,450
everything, it's also identifying the
competition and the right tool for you.

142
00:09:40,470 --> 00:09:46,030
there are cloud providers, let's say if
you are already using AWS or Azure or GCP.

143
00:09:46,350 --> 00:09:51,230
there's, there are in house
inbuilt kiosk experiments.

144
00:09:51,310 --> 00:09:54,850
a service in itself with the
Azure kiosk studio or FIS.

145
00:09:55,485 --> 00:09:58,975
And where you can just pull up your
experiments or you can use an open source

146
00:09:58,985 --> 00:10:05,585
solution alongside, which I think, is easy
for large users of these cloud providers.

147
00:10:05,615 --> 00:10:09,505
But then, there are smaller teams,
there are teams which want to go

148
00:10:09,505 --> 00:10:11,365
about an open source way of it.

149
00:10:11,395 --> 00:10:12,985
Maybe they want to run a POC.

150
00:10:13,105 --> 00:10:14,955
We want to just get a grasp of it.

151
00:10:15,465 --> 00:10:18,995
And that is where I believe
as a community person, as an

152
00:10:18,995 --> 00:10:20,715
admirer of chaos engineering.

153
00:10:21,310 --> 00:10:25,420
I would suggest the open
source way of going about it.

154
00:10:25,520 --> 00:10:30,730
the right tools, there's the newly
launched Kraken, or you have the old

155
00:10:30,740 --> 00:10:36,400
school tools in Chaos Monkey or the tools
that belong to the adoption era, which

156
00:10:36,400 --> 00:10:38,650
is Litmus Chaos Mesh, Chaos Toolkit.

157
00:10:39,320 --> 00:10:42,900
And then there are, there's the commercial
side of it, when you are ready to pay for

158
00:10:42,920 --> 00:10:47,220
it, you are, you believe that you need a
standalone commercial solution, which is.

159
00:10:47,380 --> 00:10:50,730
completely focused on chaos
engineering, which is also,

160
00:10:50,830 --> 00:10:53,320
going according to your systems.

161
00:10:53,320 --> 00:10:57,830
Maybe you are able to, achieve more
by suggesting some feature requests.

162
00:10:57,910 --> 00:11:03,669
I feel that's a mature way of going
about it, or, running chaos in a

163
00:11:03,690 --> 00:11:08,250
very controlled way, maybe having,
Controlled game days and then experiments

164
00:11:08,250 --> 00:11:10,660
according to your requirement.

165
00:11:10,760 --> 00:11:14,230
chaos, induced at particular
timelines according to your way.

166
00:11:14,230 --> 00:11:18,750
And I think as an enterprise
solution, an SRE persona driven

167
00:11:18,750 --> 00:11:21,240
solution, that is more important.

168
00:11:21,240 --> 00:11:25,300
And in that sense, you get a steady
bit or a harness chaos or a gremlin.

169
00:11:25,890 --> 00:11:28,970
And that is what you need
to identify before even.

170
00:11:29,470 --> 00:11:35,210
getting started with the tool and
Honestly, without Gremlin, you

171
00:11:35,230 --> 00:11:37,370
cannot talk about Chaos Engineering.

172
00:11:37,930 --> 00:11:41,450
Some people might not like me
saying that, but I believe the

173
00:11:41,450 --> 00:11:43,130
role of Gremlin has been immense.

174
00:11:43,130 --> 00:11:47,560
From starting off, talking more
about the practice, building the

175
00:11:47,580 --> 00:11:52,290
Chaos Engineering community on Slack,
which has about 9000 plus members,

176
00:11:52,630 --> 00:11:55,320
running webinars, running game days.

177
00:11:55,960 --> 00:12:00,760
I think Gremlin has played a crucial
role in, starting off or growing

178
00:12:00,760 --> 00:12:06,210
that mindset for Chaos Engineering
and growing that, overall idea that

179
00:12:06,210 --> 00:12:10,850
Chaos Engineering is essential with,
running conferences in ChaosConf.

180
00:12:11,530 --> 00:12:15,880
I think the growth and role of
Gremlin has been essential, vital.

181
00:12:15,880 --> 00:12:16,450
founders.

182
00:12:17,090 --> 00:12:23,740
Were again from a Netflix background and
they have I mean played a vital role in

183
00:12:23,740 --> 00:12:28,760
becoming an enterprise solution early
on for chaos engineering I believe at

184
00:12:28,760 --> 00:12:32,990
that time maybe a lot of folks did not
understand if it's essential necessary

185
00:12:33,010 --> 00:12:38,010
but with the amount of development in the
number of experiments in an interactive

186
00:12:38,020 --> 00:12:44,280
UI In the great community activities
and the great evangelism that folks

187
00:12:44,280 --> 00:12:47,350
like, Anna or Tammy or Colton, they did.

188
00:12:47,940 --> 00:12:51,240
Jason, I think, Matt, again,
a friend from Harness.

189
00:12:51,270 --> 00:12:54,760
I think the growth and role of
Gremlin is essential when you talk

190
00:12:54,770 --> 00:12:58,940
about the history and the growth
of Chaos Engineering in itself.

191
00:12:59,440 --> 00:13:04,840
And that is how I think I got attracted
towards this project, although it, I

192
00:13:04,840 --> 00:13:09,760
was pretty unaware when I joined in Maya
Data, who was building Litmus as a side

193
00:13:09,770 --> 00:13:14,250
project, but my journey as a community
manager to Litmus Chaos, I think, grew.

194
00:13:14,750 --> 00:13:18,470
More and more by learning from
folks at Gremlin, seeing how they

195
00:13:18,470 --> 00:13:22,770
are growing the project And doing
better as a community overall.

196
00:13:22,960 --> 00:13:26,140
So Litmus, as It's a CNCF
incubating project, a very

197
00:13:26,140 --> 00:13:27,790
popular chaos engineering project.

198
00:13:28,410 --> 00:13:34,350
Today when folks talk about chaos it's
Litmus that they speak about more or less.

199
00:13:34,380 --> 00:13:35,700
I hope everyone agrees.

200
00:13:35,710 --> 00:13:36,950
It's like an open source project

201
00:13:37,450 --> 00:13:42,340
The idea was to obviously run chaos
engineering experiments on a Kubernetes

202
00:13:42,340 --> 00:13:44,150
environment and then it kept growing.

203
00:13:44,650 --> 00:13:49,880
As we grew, with, non cloud, cloud
environments, non Kubernetes environments,

204
00:13:49,880 --> 00:13:54,630
and it's adopted largely, when I
checked out the scarf analytics, it

205
00:13:54,630 --> 00:13:59,160
was like 500 plus enterprises have just
run Litmus in some form or the other,

206
00:13:59,160 --> 00:14:03,240
POC, or maybe they are, they have
adopted, they are running it largely.

207
00:14:03,740 --> 00:14:09,120
So litmus, I feel that the popular project
in itself went through a journey over the

208
00:14:09,120 --> 00:14:14,260
last four or five years and has become
a consolidated solution for folks who

209
00:14:14,260 --> 00:14:19,980
want to get started with chaos or want
to mature their chaos journey by building

210
00:14:19,980 --> 00:14:25,260
their own solution eyepiece, just running
litmus according to their needs according

211
00:14:25,260 --> 00:14:31,410
to multiple teams and all the features
that it Provides the growth journey.

212
00:14:31,410 --> 00:14:35,020
I'll have figures that are
exponential because chaos engineering

213
00:14:35,030 --> 00:14:38,130
has grown Exponentially and as
you can see the stars it had an

214
00:14:38,130 --> 00:14:40,140
exponential growth over the years.

215
00:14:40,530 --> 00:14:46,050
It is still reached somehow linear
sort of a graph where It's still,

216
00:14:46,320 --> 00:14:50,360
I think, growing according to
the, time that has been passing.

217
00:14:50,360 --> 00:14:55,870
It's around almost, I think, 5, 000
GitHub stars, which is, I think, a

218
00:14:55,870 --> 00:15:00,560
great milestone for chaos engineering
project, which is being, organically

219
00:15:00,560 --> 00:15:01,925
growing over, over the years.

220
00:15:02,575 --> 00:15:06,995
And I think the Slack community
has played a crucial role.

221
00:15:06,995 --> 00:15:10,385
It's the first line of communication,
folks who have joined in.

222
00:15:10,955 --> 00:15:13,245
That is where they have
got their queries answered.

223
00:15:13,255 --> 00:15:16,445
That is where all the discussions,
the, identifying the group of

224
00:15:16,445 --> 00:15:21,715
contributors, the group of users, them
contributing back content has happened.

225
00:15:21,715 --> 00:15:25,465
And I feel that is what we'll
talk about in a bit, that how

226
00:15:25,465 --> 00:15:27,545
community growth has come up.

227
00:15:27,565 --> 00:15:31,915
What's, The community look
like and how the overall chaos

228
00:15:31,915 --> 00:15:33,825
engineering community has grown.

229
00:15:33,825 --> 00:15:36,225
there was, obviously
people were skeptical.

230
00:15:36,985 --> 00:15:40,505
People were not really, aware
of how chaos engineering works,

231
00:15:40,535 --> 00:15:41,965
how should they contribute?

232
00:15:42,435 --> 00:15:43,765
Is it even worth it?

233
00:15:43,775 --> 00:15:48,815
So I think the conversations that have
happened over the last five years on

234
00:15:48,835 --> 00:15:54,215
Slack and our community meetings, they
have played a huge role in helping

235
00:15:54,215 --> 00:15:56,175
chaos engineering as a technology grow.

236
00:15:56,675 --> 00:16:00,295
And this is the slack growth, I think,
there has been a shift, like it, it

237
00:16:00,465 --> 00:16:06,791
peaked and then I, as I said, that the
enterprise, adoption has led to a little

238
00:16:06,791 --> 00:16:11,535
bit of a slowness for the open source
side of things, but I believe that the

239
00:16:11,535 --> 00:16:13,875
chaos engineering has its own challenges.

240
00:16:13,885 --> 00:16:18,390
We'll talk about them, but, Overall,
the Slack growth in itself, I think

241
00:16:18,390 --> 00:16:23,550
it's the, it's post the Gremlin Slack,
it's, the biggest, chaos engineering,

242
00:16:23,550 --> 00:16:25,180
open source Slack community.

243
00:16:25,760 --> 00:16:28,940
There's a lot of conversations that have
been driven and beyond the Slack as well.

244
00:16:28,940 --> 00:16:31,900
There have been conversations
around Discord, YouTube, other

245
00:16:32,540 --> 00:16:34,120
platforms, Reddit perhaps.

246
00:16:34,170 --> 00:16:37,150
the community has seen, maturity
over the last few years.

247
00:16:38,110 --> 00:16:43,010
So we'll talk about some community aspects
and building strategies that have helped

248
00:16:43,120 --> 00:16:45,500
the chaos engineering community thrive.

249
00:16:45,560 --> 00:16:50,290
I won't be detail, I mean explaining
them in detail because as it's

250
00:16:50,300 --> 00:16:52,010
not like community building talk.

251
00:16:52,580 --> 00:16:56,150
But we'll talk about how chaos
engineering as a community has grown,

252
00:16:56,880 --> 00:17:00,910
the history of it, we spoke about it
a little, but how things look like

253
00:17:00,910 --> 00:17:06,170
moving ahead and what the community
has gone through to achieve this shape.

254
00:17:06,185 --> 00:17:08,765
I obviously community meetings.

255
00:17:09,215 --> 00:17:12,785
We held community meetings every
third Wednesdays of the month.

256
00:17:12,795 --> 00:17:16,235
We planned something for the APAC
region because that was predominantly

257
00:17:16,235 --> 00:17:22,865
focused on the US and Europe, North
America overall, Latin America,

258
00:17:22,865 --> 00:17:23,855
and that is what we have seen.

259
00:17:23,855 --> 00:17:29,155
Seeing like beyond contributors, growth
in perhaps the South Asia region, you

260
00:17:29,155 --> 00:17:33,915
have experience that, folks and large
enterprises, medium sized enterprise

261
00:17:33,915 --> 00:17:39,405
is based out of the European region,
European union, the UK and, North America

262
00:17:39,435 --> 00:17:42,595
started, adopting litmus at large scale.

263
00:17:42,595 --> 00:17:46,655
And then that is why our focus from
a community aspect was on that.

264
00:17:47,070 --> 00:17:50,280
Part of the community and then we also
built one for the APAC region where

265
00:17:50,280 --> 00:17:54,700
we saw a lot of folks from China A
lot of folks are based out of India,

266
00:17:54,890 --> 00:17:59,840
Singapore Australia starting to adopt
chaos engineering as a practice.

267
00:17:59,870 --> 00:18:04,040
The idea was to talk about everything
in the community meetings But then

268
00:18:04,040 --> 00:18:09,560
when we started seeing contributor
interest growing We spoke more from a

269
00:18:09,570 --> 00:18:14,220
contributor aspect like we divided the
meetings into three separate meetings

270
00:18:14,240 --> 00:18:19,640
that there was community meetings to talk
about user stories, more like releases,

271
00:18:19,670 --> 00:18:24,500
experiences, maybe planning the roadmap,
and then the contributor meetings were

272
00:18:24,550 --> 00:18:26,990
specifically to discuss contributions.

273
00:18:27,135 --> 00:18:31,005
The recent prs that are
merged, issues that are raised,

274
00:18:31,475 --> 00:18:32,915
issues that can be taken up.

275
00:18:32,915 --> 00:18:37,205
And then the maintainer calls are more
like internal discussions to see how the

276
00:18:37,400 --> 00:18:41,885
maintainers are functioning, maybe the
road blockers, the roadmap, and how the

277
00:18:41,885 --> 00:18:44,625
maintainers can help the community thrive.

278
00:18:44,625 --> 00:18:47,355
And then community notes
were maintained at hack.

279
00:18:47,855 --> 00:18:52,095
And as I think it's a community
aspect content is king Putting

280
00:18:52,095 --> 00:18:54,025
out more and more content on dev.

281
00:18:54,045 --> 00:18:59,835
to youtube medium writing more blogs as
you see There were more tutorials created

282
00:18:59,835 --> 00:19:04,005
which gave an idea or perspective of
what cloud native chaos engineering is.

283
00:19:04,005 --> 00:19:09,565
It's not the Old way of doing chaos, but
it's more like a open source Kubernetes

284
00:19:09,565 --> 00:19:15,015
centric community way of doing chaos
engineering, where, a lot of things

285
00:19:15,015 --> 00:19:21,195
were discussed architecture and running
chaos with another sample application,

286
00:19:21,195 --> 00:19:25,925
the components of it, the workflows
developed with an integration with Orgo.

287
00:19:26,265 --> 00:19:30,515
So a lot of things, were discussed the
tutorials and the content that helped it.

288
00:19:30,515 --> 00:19:34,115
And again, a shout out to Con 42
folks who have done amazing events

289
00:19:34,115 --> 00:19:36,575
on chaos engineering over the years.

290
00:19:36,615 --> 00:19:37,235
one of the.

291
00:19:37,735 --> 00:19:41,905
I think, core contributors to Con 42
and the founder, mark, his brother

292
00:19:41,905 --> 00:19:46,465
Miko, has been, I think, a pioneer
in kiosk engineering as Han and has

293
00:19:46,465 --> 00:19:51,605
helped kiosk engineering grow beyond
Bloomberg with, to all these companies

294
00:19:51,665 --> 00:19:55,275
writing, amazing, articles, books.

295
00:19:55,275 --> 00:19:57,065
I think, kiosk engineering has.

296
00:19:57,080 --> 00:20:00,460
seen its shift with the
growth of so many events.

297
00:20:00,460 --> 00:20:05,590
I think Chaos Conf, Chaos
Carnival has done an immensely.

298
00:20:06,090 --> 00:20:09,750
great job in helping the chaos
engineering community and

299
00:20:10,070 --> 00:20:11,550
grow and the stories come out.

300
00:20:11,570 --> 00:20:15,900
So I think a lot of things
have played a role in helping

301
00:20:15,930 --> 00:20:17,810
the community in itself grow.

302
00:20:18,580 --> 00:20:24,070
And you can see, yeah, there
was a need to, record responses.

303
00:20:24,550 --> 00:20:29,450
I mean describe them and that's it's a
community building activity again And

304
00:20:29,450 --> 00:20:33,550
this is how we have recorded with a
sample set of how the slack threads came

305
00:20:33,550 --> 00:20:38,280
up What was the time taken to answer
and time taken to close these threads

306
00:20:38,280 --> 00:20:42,990
so that So as a nascent project, as a
project that was building, it was very

307
00:20:42,990 --> 00:20:45,880
essential for, issues to be resolved.

308
00:20:46,260 --> 00:20:50,870
It was essential for helping, people get
started with the practice itself because

309
00:20:50,870 --> 00:20:55,700
it's not like an everyday practice where
you just maybe run a Kubernetes cluster

310
00:20:55,740 --> 00:20:57,120
and get started with the practice.

311
00:20:57,120 --> 00:21:04,440
It's more like you need to have so much in
you to, you just identify how chaos works.

312
00:21:04,940 --> 00:21:10,600
In an infrastructure on an environment
and that is where it became popular and

313
00:21:10,610 --> 00:21:12,990
these kind of stories came up in meetups.

314
00:21:13,020 --> 00:21:15,510
A chaos engineering meetup
group was important.

315
00:21:16,260 --> 00:21:21,070
Hosting them at conferences or getting
them to talk in meetings were important.

316
00:21:21,070 --> 00:21:24,880
And that's where the chaos engineering
meetup group also became popular and

317
00:21:24,880 --> 00:21:29,655
that is where I. Just don't count a
community of say 2, 300 folks, but I

318
00:21:29,655 --> 00:21:35,195
would believe that a chaos engineering
community today is like 30, 000 strong.

319
00:21:35,195 --> 00:21:40,605
I mean, from an aspect of interest
in the community, not users, I

320
00:21:40,615 --> 00:21:44,365
think they are beyond that, but
just interest towards the community.

321
00:21:44,375 --> 00:21:46,135
I feel grew and grew.

322
00:21:46,135 --> 00:21:49,835
And this chaos engineering meetup group
where we hosted a lot of in person meetups

323
00:21:50,125 --> 00:21:52,965
in Bangalore was a testimony to it.

324
00:21:53,465 --> 00:21:59,875
again, we kept participating, it grew from
meetup to joining kube cons and talking

325
00:21:59,895 --> 00:22:05,245
about litmus, joining multiple podcasts,
identifying the right conferences.

326
00:22:05,855 --> 00:22:08,725
It's ensuring that
there's a CNCF way to it.

327
00:22:09,325 --> 00:22:14,595
Chaos engineering kept growing and
the participation has, has seen again,

328
00:22:14,645 --> 00:22:19,525
growth and participation, students
are participating, contributing.

329
00:22:20,375 --> 00:22:25,075
I feel, post, even after me joining
Mirantis, it's, I have still kept, in

330
00:22:25,105 --> 00:22:29,255
touch with the community, I've tried
to contribute here and there, this

331
00:22:29,305 --> 00:22:33,975
talk is a testimony to it, but yeah,
Chaos Engineering in itself saw that,

332
00:22:34,450 --> 00:22:38,690
exponential growth with the amount of
content that was driven, amount of talks

333
00:22:38,700 --> 00:22:43,680
that were delivered, not just by me or
the co contributors to Litmus, but overall

334
00:22:43,730 --> 00:22:45,900
ecosystem in each and every project.

335
00:22:46,400 --> 00:22:50,390
And that's how, these are the examples
of how people have contributed back.

336
00:22:50,390 --> 00:22:52,650
They have participated at Hacktoberfest.

337
00:22:52,690 --> 00:22:55,740
They have participated in
community champion programs.

338
00:22:55,900 --> 00:23:00,570
The GSOC, the LFX mentorship programs,
which have, which I believe have

339
00:23:00,590 --> 00:23:05,230
built a core strong community who
will perhaps always look back at chaos

340
00:23:05,230 --> 00:23:10,420
engineering, even if they move away from
the practice or the community itself

341
00:23:10,420 --> 00:23:15,800
that, yeah, I have contributed to this
project, Litmus, Chaos Mesh, Chaos

342
00:23:15,800 --> 00:23:18,920
Blade, and it was a popular project.

343
00:23:19,000 --> 00:23:23,360
I think what I learned from there can
be implemented maybe as an integration

344
00:23:23,380 --> 00:23:25,010
testing framework or something.

345
00:23:25,870 --> 00:23:30,480
Which can help the overall practice of
resilience engineering reach more and more

346
00:23:30,490 --> 00:23:36,050
folks And then I am sure a shout out to
one of my community friends Akram Who has

347
00:23:36,510 --> 00:23:40,410
led the community well, and I think has
been still actively involved with kiosk

348
00:23:40,510 --> 00:23:45,930
engineering helping enterprises Implement
the same and again Namcube Park another

349
00:23:45,990 --> 00:23:51,230
popular LFX mentee who became a mentor
later on I mean taking litmus forward

350
00:23:51,680 --> 00:23:58,100
with more contributions from his peers,
his mentees, his friends, and helping

351
00:23:58,100 --> 00:24:03,770
the project grow and develop in what it
has in the overall last two years from

352
00:24:03,820 --> 00:24:06,370
already reaching a stage of maturity.

353
00:24:06,870 --> 00:24:10,840
And again, that has come back, in terms
of appreciation, in terms of organic

354
00:24:10,860 --> 00:24:16,070
talk delivery or content and social
media again has played a crucial role

355
00:24:16,070 --> 00:24:21,025
in helping the project grow and talking
about it more, just featuring it,

356
00:24:21,025 --> 00:24:23,165
understanding more information on it.

357
00:24:23,955 --> 00:24:29,945
And that's been the overall, experience,
growing the community, growing the essence

358
00:24:29,945 --> 00:24:36,575
of the community, trying to achieve a
goal, how we built a robust community

359
00:24:36,575 --> 00:24:38,645
around, not just chaos engineering.

360
00:24:39,175 --> 00:24:44,775
But a very popular project that litmus
chaos is today, and I hope this is not

361
00:24:44,785 --> 00:24:50,200
like my last talk on litmus And it's
it sees you know that there are more

362
00:24:50,200 --> 00:24:55,445
talks that I am able to deliver on the
community and the growth of it But yeah,

363
00:24:55,445 --> 00:24:59,215
whoever is hoping to build a community
today may be a chaos engineering

364
00:24:59,215 --> 00:25:04,245
community or any other open source
community I hope These steps help you.

365
00:25:04,245 --> 00:25:07,805
You need to involve the right kind of
folks, share your responsibilities,

366
00:25:07,865 --> 00:25:11,435
create the right kind of content,
which we did for Chaos Engineering.

367
00:25:12,025 --> 00:25:15,585
And today you see there's so much
that has been talked about it.

368
00:25:16,125 --> 00:25:20,925
You announce it, you create your
right meetup groups, keep building

369
00:25:20,995 --> 00:25:25,790
your Slack communities or your
Discord communities, incentivize.

370
00:25:26,160 --> 00:25:30,640
Then through an ambassadorship program,
chart your metrics, see how your community

371
00:25:30,640 --> 00:25:36,610
is growing, and then repeat it in form
of community calendar till you see your

372
00:25:36,610 --> 00:25:42,670
goals expanding in not just terms of
monthly, but quarterly and annual goals.

373
00:25:43,170 --> 00:25:47,260
The current state of the chaos engineering
community, I think it's a funny question.

374
00:25:47,260 --> 00:25:52,130
A lot of folks ask me that and I believe
that, sometimes I am left speechless.

375
00:25:52,140 --> 00:25:55,950
Sometimes I have I think strong
opinions, but, I think there

376
00:25:55,950 --> 00:25:59,450
are four major challenges that
the community is facing today.

377
00:25:59,450 --> 00:26:04,480
And, I, I feel, those who are listening
to this talk, and if they are chaos

378
00:26:04,480 --> 00:26:09,070
engineering enthusiasts like me are able
to, contribute back to the project, do,

379
00:26:09,600 --> 00:26:15,380
more about not just litmus, but I think
beyond, that for the ecosystem in itself.

380
00:26:16,060 --> 00:26:18,410
And I'll speak about it one by one.

381
00:26:18,770 --> 00:26:23,650
this is an example of the Chaos Mesh
project, which is again a very popular

382
00:26:23,680 --> 00:26:29,500
care project used by many, but the current
state of the project somehow is that

383
00:26:29,520 --> 00:26:33,810
it is in dire need of contributors and
contributions, it's, it has just had a

384
00:26:33,830 --> 00:26:36,400
hardly 100 commits in the last 12 months.

385
00:26:37,055 --> 00:26:42,735
more or less by one contributor or
at max two commits have decreased

386
00:26:42,745 --> 00:26:47,245
drastically because there is lack
of open source focus, lack of focus

387
00:26:47,265 --> 00:26:49,405
towards chaos since engineering.

388
00:26:49,880 --> 00:26:53,540
In general, and Chaos Mesh as a tool,
because maybe the maintainers have

389
00:26:53,540 --> 00:26:58,680
become inactive, the sponsor company
hasn't, given that amount of traction

390
00:26:58,710 --> 00:27:04,960
to it, so it's like in a dire need of
contributors, and why has this sort of

391
00:27:04,960 --> 00:27:08,530
a state happened for Chaos Mesh, and
I believe it's not the same for Chaos

392
00:27:08,560 --> 00:27:14,160
Mesh, it's, it's the same for Litmus or
Chaos Blade, every project that started

393
00:27:14,160 --> 00:27:18,610
off with promise and has helped the
chaos engineering community grow, Is

394
00:27:18,610 --> 00:27:24,200
in dire need of contributors and is in
dire need of new contributions and ideas

395
00:27:24,200 --> 00:27:30,380
coming in helping build a roadmap to,
reach a goal, not just beyond, say, CNCF

396
00:27:30,400 --> 00:27:36,860
graduation, but also For mass, adoption,
if chaos engineering as a technology has

397
00:27:36,860 --> 00:27:42,290
to thrive and the challenges, they have
already been or always been there, the

398
00:27:42,290 --> 00:27:47,550
lack of budget, the diversion of cost
to other important projects, there's

399
00:27:47,560 --> 00:27:52,320
skepticism towards running something
where you are, have, you have to maybe

400
00:27:52,330 --> 00:27:56,870
break things in production, people
haven't still identified the need for it.

401
00:27:56,870 --> 00:28:00,970
And they, I still believe that the,
evangelism around chaos engineering needs

402
00:28:00,970 --> 00:28:05,600
to continue even if it has to continue
in the form of Resilience engineering or

403
00:28:05,600 --> 00:28:11,820
reliability engineering and the overcoming
of business challenges needs to be there

404
00:28:11,820 --> 00:28:15,400
there's an uncertain market right now,
or it has been the same since the last

405
00:28:15,400 --> 00:28:19,295
three four years and knowledge is limited.

406
00:28:19,295 --> 00:28:25,175
I think there are only a few folks,
maybe largely the SRE persona, a few

407
00:28:25,175 --> 00:28:32,395
developers, a few users of Litmus
or ChaosMash or Toolkit, other

408
00:28:32,395 --> 00:28:34,365
popular projects have had an idea.

409
00:28:35,330 --> 00:28:40,250
But they haven't really been able to go
out in the community and talk about it.

410
00:28:40,490 --> 00:28:46,100
there is a lack of feature towards
Chaos in conferences as well, where a

411
00:28:46,110 --> 00:28:50,620
lot of conferences were pretty actively
featuring stories on Chaos Engineering.

412
00:28:50,900 --> 00:28:55,410
I think that has changed because
the Gen AI story behind Chaos

413
00:28:55,410 --> 00:28:57,520
Engineering hasn't been that robust.

414
00:28:57,520 --> 00:28:58,930
there been a lot of chatter.

415
00:28:58,940 --> 00:29:01,940
Gen AI, I think, is the
future for Chaos Engineering.

416
00:29:02,860 --> 00:29:07,070
To, help identify the right
systems to give recommendations

417
00:29:07,070 --> 00:29:08,400
on which chaos to run.

418
00:29:08,920 --> 00:29:11,870
What are the patterns of
experiments that should be done?

419
00:29:12,180 --> 00:29:12,957
What are the timings?

420
00:29:12,957 --> 00:29:15,710
What are the integrations required?

421
00:29:16,200 --> 00:29:20,720
Giving out suggestions, maybe
helping the amalgamation of chaos

422
00:29:20,720 --> 00:29:25,170
engineering, monitoring metrics,
logging, and then incident management.

423
00:29:25,940 --> 00:29:28,610
So that has to develop a lot and then.

424
00:29:29,110 --> 00:29:32,950
Obviously, contributors need to
rise as well, like I believe that.

425
00:29:33,475 --> 00:29:40,065
A project or a, or an idea cannot grow
in today's world, if it has been part

426
00:29:40,065 --> 00:29:45,765
of the open source ecosystem and that
ecosystem is dying, like contributors

427
00:29:45,765 --> 00:29:47,905
and ecosystem needs investment.

428
00:29:48,695 --> 00:29:53,625
personally, speaking from a standpoint
where I was a community manager to

429
00:29:53,625 --> 00:29:57,995
Litmus and I have been actively involved
in this community for the last four

430
00:29:58,575 --> 00:30:02,385
and a half, five years, I believe that
there needs to be more commitment by

431
00:30:02,425 --> 00:30:04,255
at least end users to the project.

432
00:30:04,275 --> 00:30:09,395
To help these projects grow, help
contribute back to the project,

433
00:30:09,425 --> 00:30:12,815
even if it's like a non-technical
contribution, maybe talking more

434
00:30:12,815 --> 00:30:17,995
about it or it's maybe dedicating
a couple of resources, engineers

435
00:30:17,995 --> 00:30:19,735
to contribute back to the project.

436
00:30:20,285 --> 00:30:28,995
I think it's high time that we look at the
current state of it and stop, the maybe

437
00:30:29,115 --> 00:30:35,765
degradation or In, in, in terms, help the
help, help the health of the project, but

438
00:30:35,775 --> 00:30:41,045
yeah, I think, with more contributions,
more, enterprise level features.

439
00:30:41,610 --> 00:30:46,740
gaining importance and maybe
coming back by end users to the

440
00:30:46,740 --> 00:30:50,360
open source side of things, more
research and more white papers.

441
00:30:51,260 --> 00:30:56,170
I feel, the challenges can be
mitigated or we can see a path ahead

442
00:30:56,170 --> 00:30:57,800
and talking about the path ahead.

443
00:30:57,800 --> 00:31:00,670
I think this technology is here to thrive.

444
00:31:00,720 --> 00:31:05,340
Um, people who are invested,
the enterprises who are here.

445
00:31:05,975 --> 00:31:10,945
The community that has, that is, I think,
really strong is here to invest in it.

446
00:31:10,945 --> 00:31:15,155
In some form, we'll see a lot of
maintainer tracks, being, being taught.

447
00:31:15,205 --> 00:31:19,705
where we will see the feature of,
projects that are already part of the CNCF

448
00:31:19,705 --> 00:31:22,645
ecosystem, we'll see a lot of, DevOps.

449
00:31:22,960 --> 00:31:28,680
engineers, performance engineers,
platform engineers, talking about chaos

450
00:31:28,680 --> 00:31:35,170
engineering as they keep adding chaos
as a testing suit or maybe an essential

451
00:31:35,170 --> 00:31:37,330
part of, application development.

452
00:31:38,180 --> 00:31:40,700
So the path ahead, I think it's tough.

453
00:31:40,760 --> 00:31:41,760
it's really hard.

454
00:31:42,680 --> 00:31:47,790
As I said, it needs a lot of investment,
both, financially and, Through, effort

455
00:31:47,910 --> 00:31:54,660
and then also it needs, I think a lot
of evangelism even now, maybe from a

456
00:31:54,660 --> 00:31:58,940
different aspect, a different angle,
but still does, I think you can still,

457
00:31:59,680 --> 00:32:03,900
correlate it with resilience engineering,
call it an integration testing framework,

458
00:32:04,450 --> 00:32:11,180
sell the idea of, chaos in usage, which
should be done by more of the end users

459
00:32:11,210 --> 00:32:16,320
coming up with case studies and stories,
but yeah, the path ahead looks a little

460
00:32:16,570 --> 00:32:22,810
shaky, but I believe that with the amazing
folks that are out there, folks from

461
00:32:23,310 --> 00:32:28,520
SteadyBit, folks from Gremlin, folks
from Harness, Who are, I, who I see

462
00:32:28,520 --> 00:32:35,400
as the top, three, investors alongside
the larger folks that are, maybe the

463
00:32:35,400 --> 00:32:42,550
users and then the cloud providers in
AWS and Azure and GCP, of course, who

464
00:32:42,550 --> 00:32:45,315
is invested in, chaos engineering.

465
00:32:45,315 --> 00:32:47,280
And I have seen a lot
of stories coming up.

466
00:32:47,780 --> 00:32:49,000
in, in recent times.

467
00:32:49,010 --> 00:32:53,020
So yeah, I feel that, the investment
needs to be there and they need to

468
00:32:53,020 --> 00:32:54,880
give back more to the community.

469
00:32:55,380 --> 00:33:00,500
But yeah, these are just thoughts and I
hope they come into fruit and give some

470
00:33:01,440 --> 00:33:05,440
reward itself and I Keep supporting Chaos.

471
00:33:05,480 --> 00:33:09,210
I'd love to keep supporting
Chaos engineering on the outside

472
00:33:09,250 --> 00:33:13,130
and obviously as an admirer and
Someone who has grown through it.

473
00:33:13,930 --> 00:33:14,800
So thank you folks.

474
00:33:14,820 --> 00:33:19,330
That was it from my side I hope this
talk was fruitful to you and yeah,

475
00:33:19,380 --> 00:33:20,430
enjoy the rest of the conference

