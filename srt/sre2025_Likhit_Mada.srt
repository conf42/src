1
00:00:01,080 --> 00:00:01,740
Hey everyone.

2
00:00:01,890 --> 00:00:04,920
I'm Li a senior, a software
engineer in the FinTech industry.

3
00:00:05,250 --> 00:00:08,400
Today we are gonna take a technical
deep dive of mobile payment systems,

4
00:00:08,430 --> 00:00:12,330
the end-to-end flow, and how they're
handled in the real world, dealing with

5
00:00:12,330 --> 00:00:16,440
I potency and synchronous processing
and making it a scalable solution.

6
00:00:16,440 --> 00:00:16,470
I.

7
00:00:17,325 --> 00:00:21,555
Mobile payments have transformed global
finance offering, enhanced convenience,

8
00:00:21,615 --> 00:00:25,634
security, and efficiency through
various mobile payment platforms like

9
00:00:25,634 --> 00:00:30,384
digital wallets, apple Pay, Google
Pay, alipay and other forms of mobile

10
00:00:30,384 --> 00:00:32,575
payments using QR codes, et cetera.

11
00:00:33,535 --> 00:00:37,075
We'll examine the innovations
driving the revolution and challenges

12
00:00:37,075 --> 00:00:38,605
ahead for the worldwide adoption.

13
00:00:39,025 --> 00:00:42,745
We'll also discuss the role of SE
Ari in the high stake financial,

14
00:00:42,745 --> 00:00:44,035
mobile payments environment.

15
00:00:47,035 --> 00:00:50,185
Site reliability engineering plays
a crucial role in maintaining the

16
00:00:50,185 --> 00:00:55,665
high up time demanded by the payments
platform, SREs practice in and practices

17
00:00:55,665 --> 00:01:00,195
and insurance fault tolerance, rapid
instant response and continuous

18
00:01:00,195 --> 00:01:04,724
monitoring that prevent costly
outages and security breaches in this

19
00:01:04,724 --> 00:01:06,734
mission critical financial systems.

20
00:01:07,424 --> 00:01:10,514
The global eruption trends has
been on the rise throughout the

21
00:01:10,514 --> 00:01:12,195
world, and you can see the numbers.

22
00:01:12,470 --> 00:01:15,860
People who use mobile payments are
in hundreds of millions in each

23
00:01:15,860 --> 00:01:19,430
country, and the transactions are
happening in billions of dollars.

24
00:01:21,690 --> 00:01:24,860
Now let's take a quick look at the
players in the mobile payments flow.

25
00:01:25,000 --> 00:01:28,570
The who's, who in the payments
processing flow in general, customer

26
00:01:28,850 --> 00:01:31,310
this is the individual making
a purchase and initiating the

27
00:01:31,310 --> 00:01:32,929
payments using their mobile device.

28
00:01:33,259 --> 00:01:36,484
Merchant, I. The, this is the
business of the person accepting

29
00:01:36,484 --> 00:01:38,255
the payments for goods or services.

30
00:01:38,585 --> 00:01:43,345
It can be through a point of sale,
physical device or online checkout or

31
00:01:43,345 --> 00:01:45,595
some me medium of payment acceptance.

32
00:01:45,985 --> 00:01:48,965
They interact with the customer
and the payments processing

33
00:01:48,965 --> 00:01:50,855
system, which is the backend flow.

34
00:01:50,885 --> 00:01:52,025
They're the middle man.

35
00:01:52,520 --> 00:01:54,320
The third person is the acquirer.

36
00:01:54,380 --> 00:01:56,900
This is the financial institution
that process the payments

37
00:01:56,900 --> 00:01:58,160
on behalf of the merchant.

38
00:01:58,670 --> 00:02:02,390
Sometimes they provide the merchant
with the point of sale terminal device.

39
00:02:02,670 --> 00:02:03,780
It could be the payments.

40
00:02:03,810 --> 00:02:07,810
A processor or the payment gateway
to acquirer receives and forwards the

41
00:02:07,810 --> 00:02:11,570
transaction data for authorization
the hold funds temporarily during

42
00:02:11,570 --> 00:02:15,350
the settlement, and finally deposit
funds in the merchants account.

43
00:02:16,695 --> 00:02:17,175
Issue.

44
00:02:17,535 --> 00:02:21,195
This is the financial institution
that issued the customer's credit

45
00:02:21,195 --> 00:02:25,185
or debit card, which is linked to
the mobile wallet used for payment.

46
00:02:25,905 --> 00:02:29,475
They verify the customer account
details and balances, authorized

47
00:02:29,475 --> 00:02:32,985
transactions and debit customer's
account for approved payments.

48
00:02:34,220 --> 00:02:38,230
The other other player is the payment
network, which access an intermediary

49
00:02:38,230 --> 00:02:43,040
between the acquirer and issuer, enabling
communication and transaction routing

50
00:02:43,040 --> 00:02:44,690
for authorization and settlement.

51
00:02:44,750 --> 00:02:47,879
Some of the most common payment
networks could be the card

52
00:02:47,879 --> 00:02:52,319
brands like Visa, MasterCard,
African Express Payment Gateway.

53
00:02:52,815 --> 00:02:53,924
It's a secure interface.

54
00:02:53,924 --> 00:02:58,244
Connecting the merchants mean of accepting
payments like the pause or online

55
00:02:58,244 --> 00:03:03,154
checkout UI experience to the payment
processor and the payment network.

56
00:03:03,515 --> 00:03:07,355
They support and integrate with various
payment methods and payment networks.

57
00:03:07,834 --> 00:03:11,524
They also offer fraud detection
and prevention tool risk

58
00:03:11,524 --> 00:03:13,574
management and verification.

59
00:03:14,309 --> 00:03:17,339
It, they secure the payments
information as it travels

60
00:03:17,339 --> 00:03:18,749
through the transaction process.

61
00:03:19,019 --> 00:03:22,319
It forwards the transaction data
to the appropriate payment network.

62
00:03:22,349 --> 00:03:27,969
For further processing, token service
provider secures the mobile and online

63
00:03:28,029 --> 00:03:32,529
place online payments by replacing
sensitive call card holder data with

64
00:03:32,589 --> 00:03:34,659
nonsensitive substitutes like tokens.

65
00:03:35,579 --> 00:03:39,779
Token service provider can be the payment
card networks like Visa Master Card.

66
00:03:39,809 --> 00:03:43,769
They generate and manage token specific
to their respective car payment.

67
00:03:44,309 --> 00:03:49,549
This can be the payment gateway provided
to example Stripe, PayPal, tree Braintree

68
00:03:49,579 --> 00:03:53,569
provide tokenization service, which
enables a merchant to offer streamlined

69
00:03:53,569 --> 00:03:58,279
checkout experiences where customers
don't have to reenter their card details.

70
00:04:00,579 --> 00:04:02,739
Mobile provider, mobile wallet providers.

71
00:04:02,829 --> 00:04:06,879
These provide the digital wallet app
that customers use to store their

72
00:04:06,879 --> 00:04:11,559
payment card information securely and
conveniently to make mobile payments.

73
00:04:11,809 --> 00:04:15,579
Some of the examples most of which
are most commonly used are Apple

74
00:04:15,579 --> 00:04:17,874
Pay, Google Pay, Samsung, and Pay.

75
00:04:18,449 --> 00:04:19,979
Venmo has their own wallet.

76
00:04:20,249 --> 00:04:22,809
Alipay Capital One Wallet chase app.

77
00:04:25,209 --> 00:04:28,569
Taking a deeper look into how
digital wallet works, they have

78
00:04:28,569 --> 00:04:33,219
revolutionized how we make purchases
using our phones with just a few taps.

79
00:04:33,489 --> 00:04:38,769
The core of these wallets is tokenization
the car details when added in a wallet.

80
00:04:39,109 --> 00:04:43,709
The wallet provider replaces your
original card information with a token

81
00:04:43,769 --> 00:04:47,819
obtained from a token service provider,
which we previously mentioned could

82
00:04:47,819 --> 00:04:51,599
be a cardboard network provider or a
third party to organization service.

83
00:04:52,689 --> 00:04:54,159
Token generation and mapping.

84
00:04:54,469 --> 00:04:58,249
The token service provider creates a
secure mapping between the generated

85
00:04:58,309 --> 00:05:00,799
token and the user real card information.

86
00:05:01,249 --> 00:05:04,339
This map mapping is
stored in the token world.

87
00:05:04,879 --> 00:05:08,479
This token a randomly generated
number access a substitute for

88
00:05:08,479 --> 00:05:12,239
your actual card number, and is
safely stored at hardware level.

89
00:05:13,859 --> 00:05:18,269
The token is linked to your device and
specific card, and it cannot be accessed

90
00:05:18,569 --> 00:05:20,429
and cannot be used on other devices.

91
00:05:22,234 --> 00:05:25,684
Let's take a look at the end
of end-to-end flow of actual

92
00:05:25,684 --> 00:05:27,334
payment going through this flow.

93
00:05:27,644 --> 00:05:29,834
When we are making a payment
with a digital wallet

94
00:05:30,744 --> 00:05:32,304
customer initiates a payment.

95
00:05:32,844 --> 00:05:36,364
The customer chooses to pay pay
using their digital wallet at a

96
00:05:36,604 --> 00:05:38,584
physical store or an online checkout.

97
00:05:39,274 --> 00:05:41,819
They authenticate their
identity on their device.

98
00:05:42,014 --> 00:05:47,204
It could be through a fingerprint, a face
ID, or a pin to unlock the digital wallet.

99
00:05:47,804 --> 00:05:52,004
Tokenization, as I previously mentioned,
we have a secure token linked to the

100
00:05:52,004 --> 00:05:54,194
customer actual car store on the device.

101
00:05:54,584 --> 00:05:58,904
If it's a in-store purchase, the
customer tabs or waves the device near

102
00:05:58,904 --> 00:06:04,634
the merchants contactless point of sale
terminal using a nearfield communication,

103
00:06:04,634 --> 00:06:06,314
which we commonly known as NFC.

104
00:06:07,829 --> 00:06:10,379
The token is transmitted to
the point of sale terminal.

105
00:06:10,619 --> 00:06:14,939
If it's an online checkout, the customer
selects their digital wallet at checkout.

106
00:06:15,029 --> 00:06:17,639
The token is securely passed
to the merchant's website.

107
00:06:19,304 --> 00:06:21,044
The merchant's payment gateway.

108
00:06:21,174 --> 00:06:25,704
After the device, after the token is
transferred to the merchant website

109
00:06:25,704 --> 00:06:29,364
or the terminal, the, it's passed
to the merchant payment Gateway.

110
00:06:29,759 --> 00:06:33,479
The tokenized data is passed to the
merchant payment gateway, the gateway

111
00:06:33,479 --> 00:06:36,749
access in secure intermediary verifying.

112
00:06:36,814 --> 00:06:37,894
Encrypting the data.

113
00:06:38,254 --> 00:06:42,784
The payment information is verified
for fraud detection and it is routed

114
00:06:42,784 --> 00:06:44,914
to appropriate payment card network.

115
00:06:45,334 --> 00:06:49,174
The card network receives the
transaction request and ask for

116
00:06:49,174 --> 00:06:53,464
authorization from the issuer to
ensure sufficient funds are available.

117
00:06:54,264 --> 00:06:58,134
The issuer verifies the customer account
balance and the transaction limit

118
00:06:58,194 --> 00:07:04,284
and any other security measures and
authorizes it the network, putting a hold

119
00:07:04,284 --> 00:07:06,384
on the funds in the customer account.

120
00:07:07,869 --> 00:07:11,589
The authorization message, travel
back through the card network payment

121
00:07:11,589 --> 00:07:15,819
processor and the gateway to the point
of sale, terminal or online checkout.

122
00:07:16,419 --> 00:07:20,469
The customer receives the confirmation
of the successful payment, the payment

123
00:07:20,469 --> 00:07:24,799
gateway I aggregates the authorized
transaction from the merchant throughout

124
00:07:24,799 --> 00:07:26,779
that day, or specific interval.

125
00:07:27,379 --> 00:07:31,999
The acquirer receives from the card
network based on the settle transactions

126
00:07:32,299 --> 00:07:36,069
based on the response from Payment
Gateway during the settlement time.

127
00:07:36,379 --> 00:07:40,129
The acquirer then deposit deposits
the fund into merchant's account

128
00:07:40,159 --> 00:07:41,929
minus any processing fees.

129
00:07:43,759 --> 00:07:47,389
There are many other ways of making
mobile payments across the globe.

130
00:07:47,449 --> 00:07:49,789
And the flow might differ in a few ways.

131
00:07:50,509 --> 00:07:53,689
One, one of the type is
a QR code based payment.

132
00:07:54,119 --> 00:07:57,359
The customers can secure code
displayed by the merchant

133
00:07:57,359 --> 00:07:58,889
using their mobile payment app.

134
00:07:59,459 --> 00:08:04,319
The customer's app generates a payment
request with the transaction details

135
00:08:04,349 --> 00:08:06,299
and sends it to the payment provider.

136
00:08:06,699 --> 00:08:12,029
An example for this would be to would
be an Alipay or WeChat pay the customer

137
00:08:12,029 --> 00:08:17,129
authenticates within their app using
as previously mentioned, of some kind

138
00:08:17,129 --> 00:08:21,269
of biometrics or pin, and the payment
provider verifies their accountant

139
00:08:21,269 --> 00:08:23,254
balance upon successful authorization.

140
00:08:24,934 --> 00:08:30,244
The provider notifies both the customer
and merchant of the payment qr.

141
00:08:30,244 --> 00:08:34,794
Code based payments often lead directly
involved often directly involve

142
00:08:34,794 --> 00:08:39,365
debit card debit slash the credit
card of the customer's bank account,

143
00:08:39,725 --> 00:08:43,715
or linked payment account within
the mobile payment app, bypassing

144
00:08:43,715 --> 00:08:45,574
traditional card networks in some cases.

145
00:08:46,405 --> 00:08:51,065
Sometimes it could be a card linked
to, in which case, tokenization

146
00:08:51,305 --> 00:08:53,405
card networks, again come into play.

147
00:08:54,155 --> 00:08:58,675
In the case of bank transfer apps some
of them examples will be like z the

148
00:08:58,675 --> 00:09:02,205
customer enters the recipient details
or the merchant details in the case of

149
00:09:02,205 --> 00:09:06,115
payments like example, their phone number
or email address link to their back.

150
00:09:06,185 --> 00:09:09,455
Account funds are directly
transferred from the customer's

151
00:09:09,455 --> 00:09:11,075
bank account to the recipient's.

152
00:09:11,075 --> 00:09:16,205
Accounts offered in near real
time, the customer authenticates

153
00:09:16,235 --> 00:09:19,775
now within their banking app
and the transfer is authorized.

154
00:09:20,165 --> 00:09:24,365
These methods typically leverage
existing bank transfer networks,

155
00:09:24,365 --> 00:09:27,185
like example a CH in us.

156
00:09:27,265 --> 00:09:31,315
Faster payments in UK facilitating
direct account to account transfers.

157
00:09:32,890 --> 00:09:37,310
Mobile payments process is a complex
ecosystem requiring careful design to

158
00:09:37,310 --> 00:09:39,290
handle massive transaction volumes.

159
00:09:39,560 --> 00:09:43,940
We need to ensure SEC security and
provide a seamless user experience.

160
00:09:44,240 --> 00:09:47,270
This introduces unique
challenges for I impotency.

161
00:09:47,360 --> 00:09:48,650
What is item impotency?

162
00:09:49,190 --> 00:09:53,720
It's ensuring an operation applied
multiple times has the same

163
00:09:53,720 --> 00:09:56,150
effect as it is applied once.

164
00:09:58,080 --> 00:10:03,290
This is very important in the case of
the financial transactions because when

165
00:10:03,290 --> 00:10:08,480
we make a transaction, we don't, and
by mistake, if we retry it or due to

166
00:10:08,480 --> 00:10:15,820
accidental network calls at financial
transaction can be made twice, which and

167
00:10:15,820 --> 00:10:21,730
despite being it applied multiple times,
the transaction should go only once.

168
00:10:22,600 --> 00:10:23,080
Network.

169
00:10:23,140 --> 00:10:27,400
Network interruptions are common on
mobile devices, which potentially

170
00:10:27,400 --> 00:10:30,910
lead to duplicate requests or
unclear transaction statuses.

171
00:10:31,510 --> 00:10:35,410
Sometime hardware configurations
or human error can lead to multiple

172
00:10:35,410 --> 00:10:39,940
transaction requests or multiple
retries due to client error handling.

173
00:10:40,730 --> 00:10:43,370
These increase the changes
of duplicate request.

174
00:10:43,700 --> 00:10:48,380
Duplication of financial transactions
should be handled carefully to

175
00:10:48,380 --> 00:10:53,420
avoid duplicate transfers and handle
retries and errors in a gracious way.

176
00:10:54,110 --> 00:10:57,260
There are different methods to
follow to handle item potency

177
00:10:57,290 --> 00:10:59,510
in financial transactions.

178
00:11:00,020 --> 00:11:00,920
Let's go over them.

179
00:11:00,970 --> 00:11:02,770
Some of the technical solutions.

180
00:11:03,770 --> 00:11:08,930
Having an item potency key, which is the
most common approach, the key is a unique

181
00:11:08,930 --> 00:11:13,189
identifier generator by client or in some
cases from the server side, which is the

182
00:11:13,189 --> 00:11:17,839
payment gateway is included throughout
our payments processing request.

183
00:11:18,410 --> 00:11:22,759
The server will be able to recognize
the key and prevent duplicate

184
00:11:22,759 --> 00:11:27,020
processing request that this might
need a database constraints and

185
00:11:27,020 --> 00:11:28,790
maintaining the transaction status.

186
00:11:29,464 --> 00:11:33,664
If the key is not present in the
database, the system process the request.

187
00:11:33,874 --> 00:11:38,795
If the key is found, system retrieves
the store result, which is, which might

188
00:11:38,795 --> 00:11:44,764
be in process or completed, and return
it without reprocessing the transaction.

189
00:11:45,784 --> 00:11:51,034
In addition to item potency key, A due
duplication video can be implemented to

190
00:11:51,034 --> 00:11:55,864
define a timeframe during which duplicate
transaction requests are checked.

191
00:11:56,780 --> 00:12:01,609
This duplication check can be done based
on customer merchant transaction account.

192
00:12:02,390 --> 00:12:07,819
The window of this duplication window
time period may vary from case to case

193
00:12:08,390 --> 00:12:12,920
when a payment request is received, the
system checks if an identical request

194
00:12:12,920 --> 00:12:15,140
was processed within that time window.

195
00:12:17,915 --> 00:12:21,694
Effective state management is
essential for maintaining I dependency.

196
00:12:22,055 --> 00:12:25,925
The payments processing system should
be able to accurately track the state

197
00:12:25,925 --> 00:12:29,944
of each transaction, even in the event
of system failures or network issues.

198
00:12:30,665 --> 00:12:33,935
We should store the state of each
transaction in a per persistent

199
00:12:33,935 --> 00:12:37,354
storage that can survive
system restarts and crashes.

200
00:12:37,925 --> 00:12:41,344
We can use distributed caches
to quickly check duplicates and

201
00:12:41,344 --> 00:12:42,814
retrieve transaction statuses.

202
00:12:44,675 --> 00:12:48,704
Sometimes during payments processing,
we would duplicate requests due to

203
00:12:48,704 --> 00:12:54,124
transaction failures or retrain logic on
the client side to handle such scenarios,

204
00:12:54,124 --> 00:12:56,119
which we will, we, it's important to have.

205
00:12:56,704 --> 00:13:00,154
Implementation of retries
with exponential backoff.

206
00:13:00,904 --> 00:13:04,834
The request is retried after a
delay and this delay is increased

207
00:13:04,834 --> 00:13:06,664
exponentially with each try.

208
00:13:07,474 --> 00:13:11,674
Each retry like delays of one
second, the second transaction

209
00:13:11,674 --> 00:13:13,174
with a delay of two seconds.

210
00:13:13,564 --> 00:13:17,974
The third time delay with the
exponential increase of four seconds.

211
00:13:18,389 --> 00:13:20,589
And eight seconds the next time, so on.

212
00:13:21,069 --> 00:13:24,759
This helps in preventing duplicate
transactions caused by repeated

213
00:13:24,759 --> 00:13:27,189
request due to temporary failures.

214
00:13:27,789 --> 00:13:32,309
The delay increases exp exponentially
with each retry attempt, reducing the

215
00:13:32,309 --> 00:13:36,419
load on the server, and increasing the
likelihood of successful processing.

216
00:13:37,474 --> 00:13:42,895
I Item potency can also be handled
on the client by client side by ui,

217
00:13:43,045 --> 00:13:48,155
handling it to an extent like disabling
payment button after the first click

218
00:13:48,334 --> 00:13:50,224
to prevent the duplicate request.

219
00:13:50,974 --> 00:13:53,824
If a transaction failed
due to temporary issues.

220
00:13:53,839 --> 00:13:58,569
Provide a clear and safe way
for users to retry, ensuring a

221
00:13:58,569 --> 00:14:00,549
proper item potency key is used.

222
00:14:01,209 --> 00:14:05,019
So if the transaction is processed
and appropriate, status is provided.

223
00:14:05,199 --> 00:14:08,379
Otherwise, retry with the
new I item potency key.

224
00:14:09,189 --> 00:14:12,459
A robust transaction status
handling is also important.

225
00:14:12,849 --> 00:14:17,199
We can provide imme immediate response
to the users about the request status

226
00:14:17,259 --> 00:14:21,669
or do a synchronous processing of
transactions using polling or web

227
00:14:21,669 --> 00:14:23,649
hooks to update the transaction status.

228
00:14:25,944 --> 00:14:29,275
This leads the way to a
synchronous payments processing.

229
00:14:29,964 --> 00:14:34,074
Modern applications demand, robust
user-friendly payment system that

230
00:14:34,074 --> 00:14:36,055
cater to a variety of scenarios.

231
00:14:36,624 --> 00:14:39,744
Traditional synchronous payments
processing often fall short,

232
00:14:40,104 --> 00:14:43,374
leading to slow responses and
potential point of failures.

233
00:14:44,035 --> 00:14:48,145
That's where the trio of message
queues, callbacks, and webhooks

234
00:14:48,444 --> 00:14:52,994
step into enable efficient, robust,
and, and reliable asynchronous

235
00:14:52,994 --> 00:14:55,665
payments processing message queues.

236
00:14:55,785 --> 00:15:00,245
These are very important in case of
hand in case of handling asynchronous

237
00:15:00,615 --> 00:15:04,785
payments processing requests,
and they help or also help in

238
00:15:04,785 --> 00:15:06,905
handling traffic spikes gracefully.

239
00:15:07,205 --> 00:15:11,765
Preventing system overload during
peak hours ensures payments are

240
00:15:11,765 --> 00:15:15,955
processed, even if temporary errors
occur with dead letter queues.

241
00:15:18,490 --> 00:15:21,620
Further digging in deeper of a
synchronous payments, processing,

242
00:15:21,950 --> 00:15:23,960
callbacks and web hooks can be used.

243
00:15:24,380 --> 00:15:28,520
They play a crucial role in facilitating
a synchronous payments processing.

244
00:15:28,880 --> 00:15:33,410
A callback is a function that is passed
as an argument to another function,

245
00:15:33,860 --> 00:15:36,590
which can be executed at a later time.

246
00:15:37,080 --> 00:15:40,830
In the context of payments, a callback
can be used to handle real-time

247
00:15:40,830 --> 00:15:43,980
notifications or updates about
the status of payment transaction.

248
00:15:45,000 --> 00:15:49,290
Webhooks on the other hands are
user-defined HTTP callbacks that

249
00:15:49,290 --> 00:15:51,030
are triggered by specific events.

250
00:15:52,260 --> 00:15:56,250
When a payment event occurs such as a
successful transaction or a failure,

251
00:15:56,580 --> 00:16:00,600
the payment gateway sends A-H-T-T-P
post request to a specified review,

252
00:16:00,630 --> 00:16:03,450
URL, which is the webhook endpoint.

253
00:16:04,940 --> 00:16:08,780
This allows the merchant servers
to receive instant updates about

254
00:16:08,780 --> 00:16:11,570
the transaction status, even
if the original payment request

255
00:16:11,570 --> 00:16:13,160
was processed as synchronously.

256
00:16:13,850 --> 00:16:18,800
By using callbacks and webhooks,
merchants can enhance the user experience

257
00:16:19,080 --> 00:16:23,670
by providing timely feedback about
payment outcomes while also improving

258
00:16:23,670 --> 00:16:25,560
the efficiency and reliability of.

259
00:16:25,570 --> 00:16:29,910
Of the payments processing systems,
callbacks and webhooks both facilitate

260
00:16:29,910 --> 00:16:33,960
a synchronous payments processing and
online payments and mobile payments, but

261
00:16:33,960 --> 00:16:38,040
they differ in how they're implemented
and how they communicate the information.

262
00:16:38,790 --> 00:16:40,860
The direction of
communication is different.

263
00:16:41,250 --> 00:16:43,200
Callbacks in the context of payments.

264
00:16:43,230 --> 00:16:46,470
Callbacks usually involve the
server to server communication.

265
00:16:46,765 --> 00:16:50,575
The payment processor directly
communicates with the merchant server

266
00:16:50,885 --> 00:16:52,925
after a payment even has occurred.

267
00:16:53,345 --> 00:16:56,465
This is usually set up during the
initial payment request where the

268
00:16:56,465 --> 00:17:00,725
merchant specifies a return URL
to which the payment processor

269
00:17:00,725 --> 00:17:02,465
will send a status updates.

270
00:17:03,015 --> 00:17:07,535
Webhooks, unlike callbacks are set
up through, through a push mechanism.

271
00:17:07,955 --> 00:17:09,815
So callbacks are a pull mechanism.

272
00:17:10,005 --> 00:17:11,295
Web hooks are a push mechanism.

273
00:17:11,925 --> 00:17:15,865
The merchant registers a webhook
URL with the payments processor.

274
00:17:17,345 --> 00:17:21,395
And when an event related to the payment
occurs, like transaction success or

275
00:17:21,395 --> 00:17:26,675
failure, or update the pyramid processes
and htp, HTTP post request with the

276
00:17:26,675 --> 00:17:31,065
event details to the register, URL
the setup are differences between

277
00:17:31,065 --> 00:17:32,415
the callbacks and the web hooks.

278
00:17:32,685 --> 00:17:37,310
So the callbacks are typically defined
on a. Per request basis, meaning

279
00:17:37,310 --> 00:17:40,700
they need to be set up every time
a payment request is initialized.

280
00:17:41,130 --> 00:17:45,860
So like it's on the go webhooks these
are configured once at system or at

281
00:17:45,860 --> 00:17:50,180
account level and can be reused across
multiple events and transaction.

282
00:17:50,540 --> 00:17:53,930
Once said, the web hook listens
for events it's subscribed to

283
00:17:54,020 --> 00:17:55,940
regardless of specific transaction.

284
00:17:56,690 --> 00:17:59,960
So let's discuss about the use
cases for callbacks and WebBook.

285
00:18:01,000 --> 00:18:04,750
Callbacks are generally used for
direct responses to a payment request,

286
00:18:04,780 --> 00:18:10,105
often used for intermediate direction
handling right after a payment process

287
00:18:10,325 --> 00:18:14,105
process for instance, taking the
user to a success or failure page.

288
00:18:14,385 --> 00:18:19,885
There are more what webhooks are
more versatile and used for a broader

289
00:18:19,885 --> 00:18:23,005
range of actions, such as updating
payment status in the database.

290
00:18:23,230 --> 00:18:27,340
Sending email notifications or triggering
other backend process that do not

291
00:18:27,340 --> 00:18:30,910
require immediate action from the users.

292
00:18:31,260 --> 00:18:37,150
In terms of reliability, callbacks can be
susceptible to issues if the destination

293
00:18:37,150 --> 00:18:39,100
URL isn't available immediately.

294
00:18:40,420 --> 00:18:43,960
When the response is sent, this
could cause loss of information

295
00:18:43,960 --> 00:18:45,370
if not properly managed.

296
00:18:45,730 --> 00:18:49,660
Webhooks are typically designed
to handle failure better.

297
00:18:49,970 --> 00:18:53,030
They can employ mechanisms
like retry, ensuring that data

298
00:18:53,030 --> 00:18:54,950
eventually reaches its destination.

299
00:18:54,950 --> 00:18:58,010
If there are even temporary
issues with the receiving server.

300
00:18:58,650 --> 00:19:02,640
So in summary, while both callbacks
and webhooks aid in a synchronously

301
00:19:02,640 --> 00:19:07,420
payments processing information webhooks
provide a more robust and flexible

302
00:19:07,420 --> 00:19:12,560
solution suitable for automation task
beyond immediate transaction response.

303
00:19:12,980 --> 00:19:16,520
Whereas callbacks are often limited
to handling direct and immediate

304
00:19:16,520 --> 00:19:17,900
response to payment requests.

305
00:19:19,040 --> 00:19:21,020
Okay, putting it all together.

306
00:19:21,160 --> 00:19:25,950
Using asynchronous payment processing
for better experience during high traffic

307
00:19:25,950 --> 00:19:30,190
loads we can use queues as digital post
offices communicating between different

308
00:19:30,190 --> 00:19:32,660
microservices that process, the payments.

309
00:19:32,980 --> 00:19:38,940
Use callbacks and webhooks for proper
updating the status of the transaction

310
00:19:38,940 --> 00:19:41,050
that's been that's been going on.

311
00:19:41,340 --> 00:19:45,630
This approach allows for a decoupled,
scalable, and responsive payment

312
00:19:45,630 --> 00:19:49,830
system improving both user experience
and application reliability.

313
00:19:52,380 --> 00:19:56,350
Not only in terms of making payments
great strides have been made in terms

314
00:19:56,350 --> 00:20:00,940
of payment acceptance as well tap to
be on iPhone for contactless payments.

315
00:20:01,000 --> 00:20:05,435
Gives merchants large and
small easy and secure way.

316
00:20:05,725 --> 00:20:10,065
To accept contactless credit
card and debit cards or even

317
00:20:10,065 --> 00:20:14,185
accept payments through apple Pay
and other digital wallets using

318
00:20:14,185 --> 00:20:16,255
their iPhone or Android phones.

319
00:20:16,675 --> 00:20:21,145
No additional hardware or payment
terminal is required on the Android side.

320
00:20:21,195 --> 00:20:23,775
PayPal and Stripe also
provides something similar.

321
00:20:24,295 --> 00:20:29,825
The payment processing flow is similar
when using your phone as, the point

322
00:20:29,825 --> 00:20:34,230
of sale device, there is additional
step of payment service provider the

323
00:20:34,230 --> 00:20:38,640
merchant app now, which initializes
the payment session with apple Payment

324
00:20:38,640 --> 00:20:41,830
Framework or with PayPal or Stripe.

325
00:20:41,860 --> 00:20:42,730
In a similar way.

326
00:20:44,000 --> 00:20:49,040
The merchant app sends the transaction
to the payment process API, similar

327
00:20:49,040 --> 00:20:53,120
to how the payment flows go through
once the information has been

328
00:20:53,120 --> 00:20:56,120
transferred to the device securely.

329
00:20:56,630 --> 00:20:59,960
Apple provides private a PS for
power and private payment process

330
00:20:59,960 --> 00:21:04,220
to integrate with tap to pay for
token and session management and

331
00:21:04,220 --> 00:21:06,200
configure payment per parameters.

332
00:21:06,680 --> 00:21:10,100
Stripe provides this feature
through terminal Android SDK.

333
00:21:11,210 --> 00:21:15,770
These can, these features can be
integrated easily into an iOS and

334
00:21:15,770 --> 00:21:20,510
Android application, providing the ease
of accept and acceptance of payments

335
00:21:20,760 --> 00:21:23,620
in various financial applications.

336
00:21:25,840 --> 00:21:29,770
So all in all, some of the major
enabling technologies for mobile

337
00:21:29,770 --> 00:21:34,450
payments and its large adoption
are the NFC technologies, QR codes,

338
00:21:34,900 --> 00:21:39,730
tokenization, cloud infrastructures,
enabling highly scalable payments.

339
00:21:40,255 --> 00:21:43,975
Site reliability engineering teams
are integral to the success of modern

340
00:21:43,975 --> 00:21:48,325
payment technologies such as N-F-C-Q-R,
core and Tokenization Systems.

341
00:21:48,655 --> 00:21:51,535
By ensuring the infrastructure
behind these technologies highly

342
00:21:51,535 --> 00:21:56,155
reliable, secure, and scalable,
and is dealt with low latency.

343
00:21:56,845 --> 00:22:01,915
SRE teams employ robust automation,
continuous monitoring, and effective

344
00:22:01,945 --> 00:22:06,300
instant management to maintain
healthy systems and performance.

345
00:22:06,885 --> 00:22:11,175
This proactive approach minimizes the
downtime and ensures fifth resolution

346
00:22:11,175 --> 00:22:15,285
of issues and low latency, which
is crucial for processing real-time

347
00:22:15,285 --> 00:22:17,475
transactions securely and efficiency.

348
00:22:18,285 --> 00:22:22,945
Furthermore, their efforts in handling
token generation and management uphold

349
00:22:23,005 --> 00:22:26,935
to uphold stringent security standards
are necessary for protecting sensitive

350
00:22:26,935 --> 00:22:29,305
payment information and preventing fraud.

351
00:22:30,070 --> 00:22:33,640
By optimizing the technology
infrastructure and refining instant

352
00:22:33,640 --> 00:22:38,200
responses, SRE teams enhance user
experience and build customer trust,

353
00:22:38,620 --> 00:22:42,460
which is essential for widespread our
adoption of these payment technologies.

354
00:22:44,740 --> 00:22:48,660
The major success factor for mobile
payments is having an intuitive experience

355
00:22:48,840 --> 00:22:53,515
for customers to to use to which makes
our mobile payments more adaptable.

356
00:22:54,110 --> 00:22:57,800
We, having a wide range of
acceptance, network and banking,

357
00:22:57,800 --> 00:23:02,390
interop, interoperability can
support that, can support and process

358
00:23:02,390 --> 00:23:05,840
payments across different financial
institution and card networks.

359
00:23:06,140 --> 00:23:08,740
Gives a great advantage in this market.

360
00:23:09,660 --> 00:23:15,670
Ha having, or we if providing open source
SDKs and APIs to integrate with and

361
00:23:15,730 --> 00:23:21,435
enables large range of options to to make
an access mobile payments, leveraging

362
00:23:21,435 --> 00:23:25,695
them, the mobile payment solutions can
be integrated into existing merchant or

363
00:23:25,695 --> 00:23:27,945
customer application checkout experiences.

364
00:23:28,425 --> 00:23:31,715
This leads to better mobile
pen mobile payments penetration

365
00:23:31,765 --> 00:23:33,325
and adoption in the market.

366
00:23:35,570 --> 00:23:38,900
Security innovation is the key in
the success of mobile payments.

367
00:23:38,930 --> 00:23:43,260
With large adoptions comes greater
chance of risk and frauds, advanced

368
00:23:43,260 --> 00:23:46,950
fingerprints, facial recognition
and voice verification technologies

369
00:23:47,340 --> 00:23:51,420
create unique identity sickness that
dramatically enhance account protection.

370
00:23:51,420 --> 00:23:55,770
Using hardware level biometric, ver
verification has been a great boom.

371
00:23:56,405 --> 00:24:00,295
SRD teams implement automated
candidate deployments for biometric

372
00:24:00,295 --> 00:24:05,675
verification service, ensuring the high
availability with the low response times.

373
00:24:05,945 --> 00:24:07,505
Military grade cryptography.

374
00:24:07,505 --> 00:24:12,635
Pro cryptography protocols ensure
complete data security throughout

375
00:24:12,635 --> 00:24:16,895
the entire transaction journey making
interception virtually impossible.

376
00:24:17,345 --> 00:24:20,765
SRE practices include
secret rotation automation.

377
00:24:21,000 --> 00:24:25,850
Encryption cer automation certificate
encryption monitoring and chaos

378
00:24:25,850 --> 00:24:30,415
engineering tests that verify security
resilience during infrastructure failures.

379
00:24:31,380 --> 00:24:35,400
Sophisticated machine learning algorithms
and risk verification continuously

380
00:24:35,400 --> 00:24:40,260
analyze each transaction pattern to
identify and block suspicious activity

381
00:24:40,260 --> 00:24:42,030
before fraudulent charges occur.

382
00:24:42,750 --> 00:24:46,260
SRE Observable observability
platforms provide real-time metrics

383
00:24:46,260 --> 00:24:49,950
or model performance with automated
rollbacks when a false positive

384
00:24:49,950 --> 00:24:51,585
rates exceeds the defined threshold.

385
00:24:53,475 --> 00:24:58,645
Layered security approach combines
something something you have know and

386
00:24:58,675 --> 00:25:02,825
are creating multiple verification
barriers that significantly

387
00:25:02,885 --> 00:25:05,405
reduce unauthorized access Risks.

388
00:25:05,705 --> 00:25:10,435
SRE teams implemented distributed rate
limiting and circulators to protect

389
00:25:10,435 --> 00:25:14,725
authentication service during traffic
spike and maintain sec consistent

390
00:25:14,725 --> 00:25:16,945
security verification performance.

391
00:25:19,170 --> 00:25:24,385
Okay, because of financial the, that we
are discussing here, we obviously have

392
00:25:24,385 --> 00:25:28,975
financial regulation, data protection,
banking standards, and cross borders

393
00:25:29,335 --> 00:25:34,375
rules through which we navigate SRE
teams implement automated compliance

394
00:25:34,375 --> 00:25:39,235
monitoring with the realtime dashboards
that track regulatory requirements across

395
00:25:39,235 --> 00:25:41,785
markets, ensuring 99.9 adherence to.

396
00:25:43,030 --> 00:25:48,160
The changing financial standards SRE
practices include data re, residence

397
00:25:48,160 --> 00:25:52,690
automation, consent management,
observability and chaos testing of privacy

398
00:25:52,690 --> 00:25:57,245
controls to maintain regulatory compliance
while preserving the system reliability.

399
00:25:58,205 --> 00:26:02,605
SRE designs design service level
objectives aligned technical

400
00:26:02,605 --> 00:26:06,165
performance with regulatory
requirements, providing measurable

401
00:26:06,220 --> 00:26:10,480
reliability metrics that both satisfy
banking needs and user expectations.

402
00:26:12,565 --> 00:26:15,205
SRE teams deploy region
specific infrastructure.

403
00:26:15,295 --> 00:26:19,585
Infrastructure with automated regulatory
checkpoints and edge computing

404
00:26:19,770 --> 00:26:24,300
capabilities that maintain compliance
across diverse international jurisdiction.

405
00:26:26,475 --> 00:26:31,065
There are some technical and practical
challenges in adoption of mobile payments.

406
00:26:31,095 --> 00:26:32,595
One is the infrastructure gap.

407
00:26:32,955 --> 00:26:37,545
Rural and developing areas face persistent
connectivity challenges with unreliable

408
00:26:37,545 --> 00:26:41,795
or non-existent internet accesses,
creating digital payment deserts.

409
00:26:42,745 --> 00:26:46,285
SRE team implements edge caching,
offline transaction queuing, and

410
00:26:46,285 --> 00:26:50,305
progressive enhancement strategies
to maintain service availability,

411
00:26:50,305 --> 00:26:54,535
even in areas with intermittent
connectivity, device limitations,

412
00:26:54,595 --> 00:26:59,095
budget and legacy smartphones, like
advanced process and secure elements

413
00:26:59,095 --> 00:27:03,475
necessary for implementing robust
encryption and authentication protocols

414
00:27:03,565 --> 00:27:05,715
or storing encrypted information.

415
00:27:05,955 --> 00:27:11,055
SRE practices include resource
aware degradation parts, lightweight

416
00:27:11,085 --> 00:27:15,645
cryptographic alternatives, and
client capability detection to ensure

417
00:27:15,645 --> 00:27:17,205
consistent service reliability.

418
00:27:17,205 --> 00:27:22,995
Across di diverse device ecosystem,
there are interoperability issues.

419
00:27:23,415 --> 00:27:27,935
Proper proprietary payments ecosystem
created fragmented user experience

420
00:27:27,935 --> 00:27:33,165
forcing consumers to juggle multiple apps
and limiting merchant adoption rates.

421
00:27:35,200 --> 00:27:38,860
SRE teams develop unified monitoring
dashboards and inputs implement

422
00:27:38,860 --> 00:27:42,610
service mesh architecture with
standardized reliability metrics to

423
00:27:42,610 --> 00:27:46,030
identify interoperability failures
before they impact the end users.

424
00:27:48,445 --> 00:27:52,585
Backend integration, decades old
backend infrastructure and some

425
00:27:52,585 --> 00:27:55,855
of the payments ecosystem built
on co COBOL and batch processing

426
00:27:55,855 --> 00:28:00,965
struggles to interface with modern API
driven real time payments protocol.

427
00:28:01,175 --> 00:28:06,665
SRE engineers deploy a release resilient
integration layers with circuit breakers.

428
00:28:06,945 --> 00:28:11,775
Automated retry mechanisms and
comprehensive observability tooling to

429
00:28:11,775 --> 00:28:16,515
maintain high transaction reliability
despite legacy system constraints.

430
00:28:19,070 --> 00:28:23,420
There are some practical real world
barriers as well, which we cannot avoid.

431
00:28:23,470 --> 00:28:26,990
That is the deep rooted nature
of cash preference and technical

432
00:28:27,020 --> 00:28:28,850
technological ignorance and trust.

433
00:28:29,270 --> 00:28:31,280
Trust issues are some of the barriers.

434
00:28:31,970 --> 00:28:35,930
This is slowly changing with
the technology penetration

435
00:28:35,930 --> 00:28:37,700
and mobile adoption globally.

436
00:28:40,205 --> 00:28:44,135
Mobile payments is no exception
to cyber security risks through

437
00:28:44,395 --> 00:28:46,165
malware threats and phishing.

438
00:28:46,495 --> 00:28:49,525
Strong encryption is needed
for transaction request.

439
00:28:49,615 --> 00:28:55,795
Otherwise, they can be exploited
by intercepting and alternating tra

440
00:28:55,885 --> 00:28:59,820
transaction data over network through
kind of man in the middle attacks.

441
00:29:01,945 --> 00:29:05,170
However, the future how's the
future looking from for mobile

442
00:29:05,170 --> 00:29:07,360
payments is always good to look at.

443
00:29:07,780 --> 00:29:12,310
So in with the mobile payments and
payments in general with the growth of

444
00:29:12,310 --> 00:29:16,540
crypto, cryptocurrencies will be soon
supported in mobile payment platforms.

445
00:29:16,835 --> 00:29:20,675
Frictionless transaction will
eliminate a checkout process entirely.

446
00:29:21,035 --> 00:29:26,075
Systems will automatically identify users
and process payments with the help of IOT.

447
00:29:27,095 --> 00:29:30,815
Another thing which we already
have in the market, but will still

448
00:29:30,815 --> 00:29:32,975
grow in future is super apps.

449
00:29:33,305 --> 00:29:36,305
These are all in one platform,
which will combine payments

450
00:29:36,305 --> 00:29:40,505
with broader services, removing
interop, interoperability barriers.

451
00:29:40,795 --> 00:29:43,765
These echo systems will centralize
the financial activities

452
00:29:43,765 --> 00:29:45,055
with the other functions.

453
00:29:47,430 --> 00:29:52,360
Let's quickly go over some more roles
of the SRE and overview of the of

454
00:29:52,360 --> 00:29:55,120
the responsibility and the payments
processing and mobile payments.

455
00:29:55,700 --> 00:29:59,330
SRE plays a critical role
in mobile payment systems.

456
00:29:59,800 --> 00:30:04,030
In payment processing systems and
mobile payments SRE team bridge the gap

457
00:30:04,030 --> 00:30:09,070
between development and operation, while
ensuring that the financials systems

458
00:30:09,100 --> 00:30:13,900
meet stringent availability, latency
and compliance requirements, SRE teams

459
00:30:13,900 --> 00:30:18,370
implement comprehensive monitoring
systems that detect anomalous payment

460
00:30:18,370 --> 00:30:20,830
patterns and transaction velocities.

461
00:30:21,040 --> 00:30:25,690
Maintaining hun high protection rate
through automated threat response

462
00:30:25,690 --> 00:30:28,150
protocols and real time security.

463
00:30:28,610 --> 00:30:33,720
Posture visualization SRE practices
will reshape a payment infrastructure

464
00:30:33,720 --> 00:30:37,470
resilience through automated error
budgeting and chaos engineering

465
00:30:37,470 --> 00:30:41,570
like self-healing payment network,
and predict outage prevention.

466
00:30:43,730 --> 00:30:46,820
Ensuring data protection and
compliance with regulations by

467
00:30:46,820 --> 00:30:48,380
implementing strong encryption.

468
00:30:48,380 --> 00:30:53,660
Access controls are intrusion detection
systems and reg regular security audits.

469
00:30:54,230 --> 00:30:58,640
Having a clear defined SLOs and SLIs
specific to mobile payments such as

470
00:30:58,640 --> 00:31:04,030
transactions, success rate, latent of
processing, and system up times will

471
00:31:04,030 --> 00:31:07,480
help in measuring and maintaining
the reliability of the services.

472
00:31:08,740 --> 00:31:12,910
Predicting traffic patterns and scaling
infrastructure accordingly is crucial

473
00:31:12,910 --> 00:31:17,415
to prevent outage during the peak
demand Sr. Utilizes historical data and

474
00:31:17,415 --> 00:31:21,195
forecasting techniques for efficient
resource allocation during peak loads.

475
00:31:21,505 --> 00:31:24,565
For example, during events like
Black Friday or holiday seasons.

476
00:31:26,290 --> 00:31:31,660
SRE teams implement culturally responsive
monitoring systems and localized

477
00:31:31,990 --> 00:31:37,370
reliability metrics to add address
adoption resistance and failure handling.

478
00:31:37,820 --> 00:31:40,955
SRE teams deploy progressive
user experience patterns,

479
00:31:41,355 --> 00:31:45,365
simplified authentication flows
and visual interface alternatives.

480
00:31:45,775 --> 00:31:49,405
That respect cultural preferences while
maintaining high availability across

481
00:31:49,405 --> 00:31:52,135
demographic, diverse user population.

482
00:31:53,065 --> 00:31:56,485
So SREs have a really important
role in mobile payments.

483
00:31:57,485 --> 00:31:58,535
Thank you for listening.

484
00:31:58,865 --> 00:32:02,195
Hope you've got some insights into
the technical aspects of large

485
00:32:02,195 --> 00:32:05,425
scale fault tolerant payments,
processing flows and the payments

486
00:32:05,425 --> 00:32:07,495
processing systems and how they work.

487
00:32:07,495 --> 00:32:08,785
In the case of mobile payments.

488
00:32:09,455 --> 00:32:12,670
We have also discussed key factors
in the success and the rise of mobile

489
00:32:12,845 --> 00:32:17,125
payments, so of the technical and
cultural barriers and the technological

490
00:32:17,125 --> 00:32:19,555
advan advancements that are happening.

491
00:32:20,065 --> 00:32:23,845
We have also discussed the
key and important role of SRE

492
00:32:23,845 --> 00:32:25,135
in the payments ecosystem.

493
00:32:25,825 --> 00:32:26,785
Once again, thank you.

