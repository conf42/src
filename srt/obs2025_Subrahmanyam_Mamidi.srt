1
00:00:00,500 --> 00:00:01,429
Hello everyone.

2
00:00:02,329 --> 00:00:03,379
Welcome to the session.

3
00:00:04,160 --> 00:00:05,570
I am Superman Maade.

4
00:00:06,200 --> 00:00:12,050
Today we are going to talk about
observability in the cloud, especially

5
00:00:12,050 --> 00:00:16,460
in the banking domain, how it
enhances the security and trust.

6
00:00:16,960 --> 00:00:22,690
Let's explore how the observability
transforms security and compliance

7
00:00:22,750 --> 00:00:24,460
in cloud-based banking systems.

8
00:00:24,960 --> 00:00:29,705
We will go through some practical
frameworks, real world examples and

9
00:00:29,705 --> 00:00:35,464
technical solutions for today's most
pressing financial technology challenges.

10
00:00:35,964 --> 00:00:37,915
Let's begin with the landscape of banking.

11
00:00:37,915 --> 00:00:38,065
It.

12
00:00:38,565 --> 00:00:42,525
We have traditional infrastructures
where banks completely relied

13
00:00:42,574 --> 00:00:47,184
on-premises data centers with the
full control or all the systems with

14
00:00:47,184 --> 00:00:48,294
the recent changes in the cloud.

15
00:00:48,794 --> 00:00:53,534
Organizations began moving selective
workloads to cloud providers while

16
00:00:53,534 --> 00:00:56,264
maintaining critical systems in-house.

17
00:00:56,264 --> 00:01:03,964
Still, this hybrid transition is somewhat
a better when compared to maintaining

18
00:01:03,964 --> 00:01:10,204
the criticality at the in on-premises
and still leveraging the cloud solutions.

19
00:01:10,704 --> 00:01:13,014
But there are for some modern
financial institutions.

20
00:01:14,004 --> 00:01:16,914
Completely leveraging the
distributor, microservices, and

21
00:01:16,975 --> 00:01:19,014
serverless architecture for agility.

22
00:01:19,404 --> 00:01:22,314
The call services cloud native banking.

23
00:01:22,814 --> 00:01:24,404
This is where we have this.

24
00:01:24,904 --> 00:01:30,634
The need for advanced monitoring
across all the layers becomes

25
00:01:30,724 --> 00:01:36,634
essential for the security and
the compliance that comes with the

26
00:01:36,994 --> 00:01:38,914
observability first approach here.

27
00:01:39,414 --> 00:01:43,754
Let's look at some of the challenges
in the banking, especially when

28
00:01:43,754 --> 00:01:45,344
you're talking about the banks.

29
00:01:45,884 --> 00:01:50,684
We have some financial institutions
face its very stringent compliance

30
00:01:50,684 --> 00:01:55,964
requirements from the Basil 3G DPR,
and regional banking authorities.

31
00:01:56,535 --> 00:01:58,350
This regulatory pressure is always there.

32
00:01:58,850 --> 00:02:04,460
As the applications infrastructures are
changing their, the way they are built,

33
00:02:05,119 --> 00:02:09,860
distributed architecture makes it very
complicated because it creates a complex

34
00:02:09,860 --> 00:02:14,149
dependencies across the services, and
traditional monitoring cannot work here.

35
00:02:14,649 --> 00:02:19,569
The surface is also very increasing
because the application landscape

36
00:02:19,779 --> 00:02:26,169
is moving towards multiple cloud
providers and multiple regions.

37
00:02:26,669 --> 00:02:32,069
We are increasing the surface of the
application and thereby we are seeing

38
00:02:32,119 --> 00:02:34,099
the security complexity as well.

39
00:02:34,099 --> 00:02:40,809
At the same time, the most important
the data, see where in the banks

40
00:02:40,869 --> 00:02:45,729
must maintain a strict control or
where and how the customer financial

41
00:02:45,729 --> 00:02:48,279
data flows and precise and forth.

42
00:02:48,779 --> 00:02:53,249
We need to resolve all these
things in this modern architecture.

43
00:02:53,749 --> 00:02:55,700
So how do we build this observability?

44
00:02:56,659 --> 00:02:58,609
So what are the tools
that we have right now?

45
00:02:59,109 --> 00:03:04,320
We collect a lot of information, the real
time quantable measurements like that

46
00:03:04,320 --> 00:03:09,330
track the system performance, resource
utilization, and the customer transaction

47
00:03:09,330 --> 00:03:11,250
volumes across the banking platform.

48
00:03:11,750 --> 00:03:16,760
The applications that provides logs, a
comprehensive chronological records that

49
00:03:16,760 --> 00:03:22,940
we see, a system of events, a system
of incidents and financial transactions

50
00:03:22,940 --> 00:03:25,460
that provide a detailed audit address.

51
00:03:25,960 --> 00:03:31,630
And we have addresses from end to end
visibility of transaction pathways

52
00:03:32,215 --> 00:03:36,250
across the distribution, microservices,
capturing the dependencies,

53
00:03:36,250 --> 00:03:37,990
latencies in the payment processing.

54
00:03:38,560 --> 00:03:44,080
All these three will make this
observability, this robust observability

55
00:03:44,080 --> 00:03:49,060
framework that ensures the complete
visibility into your banking

56
00:03:49,240 --> 00:03:53,980
infrastructure, strengthening the
security posture, maintaining the

57
00:03:53,980 --> 00:04:00,100
regulatory compliance, and identifying
potential issues before they impact the

58
00:04:00,100 --> 00:04:02,620
customer experience or a data integrity.

59
00:04:03,120 --> 00:04:09,980
Let's look at some of the benefits of the
cloud observability in security view, so

60
00:04:09,980 --> 00:04:16,400
we can, we have an opportunity to find
out these suspicious patterns early.

61
00:04:16,900 --> 00:04:20,440
We can identify these suspicions,
patterns, anomalies before

62
00:04:20,440 --> 00:04:23,780
they become breach and with.

63
00:04:24,575 --> 00:04:28,355
Quickly trace the sources, the
ability to make where the source and

64
00:04:28,355 --> 00:04:31,475
the scope of the security instances
across the distribution systems.

65
00:04:31,985 --> 00:04:34,205
We can reduce the
investigation time as well.

66
00:04:34,705 --> 00:04:39,835
Visualize all the service connections
and potential vulnerability points, makes

67
00:04:39,835 --> 00:04:46,195
it attack surface mapping easy so that
you can pinpoint where the problem is

68
00:04:46,225 --> 00:04:51,585
there even after the incident, the post
incident of 4 0 6 make it very easy.

69
00:04:51,855 --> 00:04:56,315
For because of this, maintaining
the comprehensive audit trials for

70
00:04:56,465 --> 00:04:58,445
thorough security investigations

71
00:04:58,945 --> 00:05:01,645
in the view of the compliance
and governance, let's take

72
00:05:01,645 --> 00:05:02,935
some of the advantages.

73
00:05:03,895 --> 00:05:08,905
We have a end-to-end monitoring across
all the banking infrastructures that

74
00:05:08,905 --> 00:05:14,965
enables a complete transparency into
data flows and system interactions.

75
00:05:15,465 --> 00:05:19,425
And we have a real time automated
compliance validations that

76
00:05:19,485 --> 00:05:21,705
ensure the agendas to the bases.

77
00:05:21,705 --> 00:05:25,065
3G DPR and local regulatory frameworks.

78
00:05:25,935 --> 00:05:31,125
A flexible observative framework
allows the rapid real element to

79
00:05:31,425 --> 00:05:35,645
evolving regulatory requirements
without system redesign.

80
00:05:36,145 --> 00:05:42,535
Immutable audit trials and compliance
artifacts provide a comprehensive

81
00:05:42,565 --> 00:05:45,955
evidence for regulatory examinations.

82
00:05:46,455 --> 00:05:50,625
When you're talking about technical
terms, a technical framework, how we could

83
00:05:50,625 --> 00:05:53,145
actually implement a cloud observability.

84
00:05:53,645 --> 00:05:55,985
Here are the four steps we can say that.

85
00:05:56,585 --> 00:06:01,505
The instrumentation, collection
and storage and analysis.

86
00:06:02,045 --> 00:06:07,145
When it comes to the instrumentation, we
need to make our code more intelligent.

87
00:06:07,295 --> 00:06:08,495
How do we do that?

88
00:06:08,735 --> 00:06:14,345
Strategically integrate sophisticated
telemetry code through the critical

89
00:06:14,375 --> 00:06:19,955
banking application and infrastructure
components for a comprehensive visibility.

90
00:06:20,945 --> 00:06:24,305
This integration makes
the code intelligent.

91
00:06:24,335 --> 00:06:25,145
NF two.

92
00:06:25,940 --> 00:06:32,360
Give the sources and give the traces so
that we can trace them easily and identify

93
00:06:32,360 --> 00:06:34,790
this observability, make it better.

94
00:06:35,290 --> 00:06:39,550
How do we collect, not just
collecting it, we need to make

95
00:06:40,030 --> 00:06:43,840
and normalize these metrics as
well also, but how do we do that?

96
00:06:44,260 --> 00:06:45,730
Let's establish a robust.

97
00:06:46,105 --> 00:06:51,055
A fault tolerant data pipeline
to efficiently gather anomal

98
00:06:51,055 --> 00:06:56,365
is metrics, logs, traces from
various diverse banking systems.

99
00:06:56,865 --> 00:07:02,485
We need to keep work on the storage
as well because the data differe

100
00:07:02,545 --> 00:07:04,945
is very important at the bank.

101
00:07:05,305 --> 00:07:08,785
So we need to deploy a
regulatory compliant, highly

102
00:07:08,785 --> 00:07:10,465
secure data repositories.

103
00:07:10,840 --> 00:07:15,640
With a granular retention policies
that satisfy both operational

104
00:07:16,180 --> 00:07:17,830
and the compliance requirements.

105
00:07:18,610 --> 00:07:23,920
Let's leverage and machine learning
algorithms for analysis to correlate

106
00:07:23,920 --> 00:07:28,570
the data streams and detect the
security anomalies and identify

107
00:07:28,870 --> 00:07:30,760
any performance opportunities.

108
00:07:30,940 --> 00:07:32,140
Optimizations there

109
00:07:32,640 --> 00:07:32,850
here.

110
00:07:33,630 --> 00:07:37,580
We are just going through one of
the case study from a retail bank.

111
00:07:37,880 --> 00:07:42,180
It's a real world example of
case where the challenge was

112
00:07:42,480 --> 00:07:44,310
the payment processing system.

113
00:07:44,370 --> 00:07:47,220
A breach went undetected.

114
00:07:47,820 --> 00:07:52,020
There was a payment processing
system breach, and it went undetected

115
00:07:52,020 --> 00:07:58,140
for 72 hours, is very critical,
but this could actually happen

116
00:07:58,140 --> 00:07:59,730
with the traditional wandering.

117
00:08:00,660 --> 00:08:06,840
So in this case, the bank has adopted
the implementing the distributor

118
00:08:06,870 --> 00:08:12,450
tracing across cloud microservices
with anomaly detection, resulting

119
00:08:12,450 --> 00:08:20,760
it to detect the any instances under
five minutes with a 99.8 accuracy.

120
00:08:21,630 --> 00:08:27,210
So this has prevented almost mean 4.2
million in fraud losses, maintained

121
00:08:27,510 --> 00:08:29,340
regulatory complaints at the same time.

122
00:08:29,840 --> 00:08:32,360
Written on investment cloud observable.

123
00:08:32,930 --> 00:08:36,650
Let's talk about some statistics
that we have received so far.

124
00:08:37,460 --> 00:08:43,010
How did the instance reduction happening
after this observability implementation?

125
00:08:43,460 --> 00:08:50,000
There are 62 percentage reduction, meaning
a very few security breaches and complex

126
00:08:50,000 --> 00:08:52,970
violations when in a case of issue.

127
00:08:53,895 --> 00:09:01,515
How fast we are responding back, the
response time has increased to 78% because

128
00:09:01,515 --> 00:09:08,825
we know the complete infrastructure and
we can visualize where the and problem

129
00:09:08,885 --> 00:09:14,935
is, we can increase the, that actually
saves the amount of savings at the

130
00:09:14,935 --> 00:09:18,895
bank that roughly around $3.8 million.

131
00:09:19,395 --> 00:09:22,545
In the audit purpose, okay.

132
00:09:22,845 --> 00:09:27,015
We have a lot of documentation,
reduction in compliance.

133
00:09:27,015 --> 00:09:33,765
Documentation effort is there because
we have a comprehensive analysis of the

134
00:09:33,765 --> 00:09:39,795
logs, which is there, which is actually
making 41 percentage reduction in the

135
00:09:40,455 --> 00:09:44,565
maintaining the documentation efforts that
actually increases the audit efficiency.

136
00:09:45,065 --> 00:09:48,875
Let's look at some of the best
practices for a banking observable.

137
00:09:49,375 --> 00:09:53,755
When you want to think, implement
the observability at the bank or

138
00:09:54,145 --> 00:09:58,305
applications, we should see these
things in the beginning itself.

139
00:09:58,365 --> 00:10:01,305
The build observable into
your architecture from the

140
00:10:01,305 --> 00:10:04,365
beginning, not as afterthought.

141
00:10:04,865 --> 00:10:08,465
We need to create this business
context of mapping the technical

142
00:10:08,465 --> 00:10:13,775
metrics as to a banking business
outcomes and the customer experience.

143
00:10:13,775 --> 00:10:15,755
We should be having that map ready.

144
00:10:16,255 --> 00:10:19,015
Lot of a powered, and
our tools are available.

145
00:10:19,015 --> 00:10:24,145
Let's leverage them, leverage the mission
learning, and to detect the anomalies

146
00:10:24,145 --> 00:10:26,305
in the complex banking transactions.

147
00:10:26,805 --> 00:10:30,165
At the same time, we should be
focusing on the cost management.

148
00:10:30,405 --> 00:10:35,145
This implemented data sampling
strategies to balance this observability

149
00:10:35,145 --> 00:10:37,515
needs with the cloud expenses.

150
00:10:38,015 --> 00:10:42,635
And finally look at the next steps,
how the observability journey goes.

151
00:10:43,295 --> 00:10:44,645
Let's start with the assessment.

152
00:10:45,215 --> 00:10:49,445
If you wanted to implement this
observability at your end, these

153
00:10:49,445 --> 00:10:50,570
are the steps you need to follow.

154
00:10:51,070 --> 00:10:53,200
The first one is always
with the assessment.

155
00:10:53,230 --> 00:10:58,030
Evaluate your current visibility gaps
across the cloud banking infrastructure.

156
00:10:58,780 --> 00:11:04,620
Focus on high risk transaction paths
first, then do a pilot implementation.

157
00:11:05,520 --> 00:11:09,330
Deploy observability tools in
one critical banking service.

158
00:11:09,360 --> 00:11:12,900
Measure the security and
compliance improvements.

159
00:11:13,590 --> 00:11:15,150
Let's roll out to the enterprise level.

160
00:11:15,510 --> 00:11:20,970
Scaling it to the enterprise level is
next comes extend the AB observability

161
00:11:21,360 --> 00:11:26,550
across all the banking systems integrated
with existing security operations.

162
00:11:27,050 --> 00:11:28,370
We need to continue this journey.

163
00:11:28,400 --> 00:11:32,630
The continu of continuation of
the optimization refine your

164
00:11:32,715 --> 00:11:38,900
observability strategy as banking
technologies and threats evolve.

165
00:11:39,470 --> 00:11:40,850
This is a repeated process.

166
00:11:40,940 --> 00:11:41,750
We need to do that.

167
00:11:42,250 --> 00:11:43,180
Thanks for your time.

168
00:11:43,630 --> 00:11:46,730
If you have any questions if you
wanted to touch base with me,

169
00:11:47,150 --> 00:11:49,190
please feel to connect with me.

170
00:11:49,400 --> 00:11:50,690
I'm happy to help that.

171
00:11:51,290 --> 00:11:52,730
Thank you so much for your time again.

