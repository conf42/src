1
00:00:00,500 --> 00:00:04,070
Good morning, afternoon everyone,
and thank you for being here.

2
00:00:04,400 --> 00:00:05,990
My name is Yan Pra.

3
00:00:06,020 --> 00:00:10,300
Today we are going to talk about a
critical evaluation in artificial

4
00:00:10,300 --> 00:00:12,430
intelligence infrastructure.

5
00:00:12,930 --> 00:00:19,279
Moving from monolithic to micro
mind, we'll explore how building

6
00:00:19,279 --> 00:00:21,289
a t AI platform with Multigenic.

7
00:00:21,789 --> 00:00:26,189
Architecture that can unlock
the unprecedented flexibility

8
00:00:26,189 --> 00:00:30,810
and performance that traditional
system simply cannot match.

9
00:00:31,769 --> 00:00:32,970
Let's deep down

10
00:00:33,470 --> 00:00:37,675
the landscape of AI
platform engineering at an.

11
00:00:38,535 --> 00:00:39,705
Inflection point.

12
00:00:39,765 --> 00:00:43,995
Organizations still lying on
our infrastructure and finding

13
00:00:43,995 --> 00:00:48,485
themself constantly constrained by
the system will be this problem.

14
00:00:48,545 --> 00:00:51,275
The path forward is to
transformational, not just on

15
00:00:51,275 --> 00:00:53,825
technology, but also on the philosophy.

16
00:00:53,885 --> 00:00:58,145
It is about embracing a new
model built on modularity.

17
00:00:58,645 --> 00:01:01,375
Specialization and intelligence
coordination over the

18
00:01:01,375 --> 00:01:03,055
complex and monolithic.

19
00:01:03,555 --> 00:01:08,595
The organization that mastered their shift
will be one that define the next ticket.

20
00:01:09,375 --> 00:01:12,914
AI powered business
performance and operation.

21
00:01:13,414 --> 00:01:18,630
The today's bottleneck about the
monolithic, I will not say crisis, but

22
00:01:18,630 --> 00:01:20,550
it's going to be definitely crisis.

23
00:01:21,050 --> 00:01:24,200
First, we see a significant
development slowdown.

24
00:01:25,009 --> 00:01:27,650
It's core base become a more
complex and simple update.

25
00:01:27,710 --> 00:01:29,720
That one took a week.

26
00:01:29,750 --> 00:01:35,350
Now sketch into month because everyone
want to consume the same architecture

27
00:01:35,850 --> 00:01:37,410
of the place or the resource.

28
00:01:37,910 --> 00:01:40,370
This leads to a heavy testing burden.

29
00:01:40,870 --> 00:01:44,170
A minor feature Edison can trigger
need for extensive regression

30
00:01:44,170 --> 00:01:49,710
testing across completely and on the
related part of the system as well.

31
00:01:50,210 --> 00:01:53,750
And finally, the risk
of catastrophic failure.

32
00:01:54,250 --> 00:01:58,090
When there is a tightly coupled
system failed, then they tend to

33
00:01:58,090 --> 00:02:02,889
fail completely on every area,
and it'll bring down your system.

34
00:02:03,389 --> 00:02:07,169
The technical depth in the system
has become a barrier to innovate

35
00:02:07,669 --> 00:02:10,180
with monolithic architecture.

36
00:02:10,680 --> 00:02:19,730
Let's deep down how its impact the AI and
the organizational impact on because of

37
00:02:19,730 --> 00:02:24,790
this monolithic ai, the technical issues
creates a profound organizational problem.

38
00:02:25,290 --> 00:02:32,760
Different business unit have different AI
need, but centralized, monolithic process

39
00:02:32,880 --> 00:02:36,260
you and slows down your development.

40
00:02:36,760 --> 00:02:41,050
The result of growing
disconnect day by day.

41
00:02:41,550 --> 00:02:47,820
Within the organization also create a
problem on your current architecture and

42
00:02:47,820 --> 00:02:50,190
it create a problem on your delivery.

43
00:02:50,250 --> 00:02:51,630
It's impact your delivery.

44
00:02:52,130 --> 00:03:00,100
It is also difficult to maintain
a centralized AI system while

45
00:03:00,520 --> 00:03:01,870
eliminating their limitation.

46
00:03:02,370 --> 00:03:06,390
So going with the monolithic
ai, every organization is

47
00:03:06,390 --> 00:03:07,590
going to face this problem.

48
00:03:08,090 --> 00:03:11,300
Let's talk about a
multi-agent architecture.

49
00:03:11,800 --> 00:03:15,010
Fundamental and how this could help us.

50
00:03:15,510 --> 00:03:19,830
The biggest answer is yes, and it
lies in multi-agent architecture.

51
00:03:19,890 --> 00:03:21,150
The core idea is simple.

52
00:03:21,270 --> 00:03:24,600
A complex intelligent doesn't
require a single complex system.

53
00:03:24,600 --> 00:03:29,520
Instead, we engineered a multiple
focused as in it optimized for a

54
00:03:29,520 --> 00:03:31,800
specific problem or a data drive.

55
00:03:32,070 --> 00:03:33,870
This approach guided by a key.

56
00:03:34,620 --> 00:03:38,310
Principle specialized through
a, through decomposition

57
00:03:39,090 --> 00:03:41,610
flexible communication protocol.

58
00:03:41,700 --> 00:03:42,005
We can.

59
00:03:42,505 --> 00:03:47,425
Established an NCP protocol, which
is standard for AI for agent and work

60
00:03:47,425 --> 00:03:50,365
together intelligent coordination layer.

61
00:03:50,575 --> 00:03:55,845
We can orchestrate a coordination layer
among the agent and a natural fault

62
00:03:55,845 --> 00:04:00,855
tolerance so that any failure, one
part of the system should not bring

63
00:04:00,855 --> 00:04:06,005
down the whole system and evolutionary
capability and allowing system to

64
00:04:06,005 --> 00:04:08,465
grow and adapt and launch easily.

65
00:04:08,965 --> 00:04:12,055
The poor layer of agent
deployment framework.

66
00:04:12,085 --> 00:04:17,375
So to structure this approach
we can use four different layer

67
00:04:17,525 --> 00:04:20,125
of the multi-agent framework.

68
00:04:20,344 --> 00:04:22,414
The first layer is the prescription layer.

69
00:04:23,264 --> 00:04:27,824
And this is the layer where
responsible for your data ingestion.

70
00:04:28,324 --> 00:04:30,574
Processing and initial interpretation.

71
00:04:31,074 --> 00:04:33,384
Then you have a cognition layer.

72
00:04:33,684 --> 00:04:38,784
Contains agent mostly responsible
for analysis, reasoning, decision

73
00:04:38,784 --> 00:04:44,325
making sentiment analysis, and these
agents are applied and domain specific

74
00:04:44,325 --> 00:04:49,625
intelligence to generate insight
prediction or recommendation anon

75
00:04:49,625 --> 00:04:53,385
layer where translate your insight.

76
00:04:53,885 --> 00:04:58,205
Decision into a concrete
operation, that external system or

77
00:04:58,205 --> 00:05:01,535
business process can be achieved.

78
00:05:02,035 --> 00:05:03,565
Then there is a coordination layer.

79
00:05:03,625 --> 00:05:11,145
It's an orchestration of the multi-agent,
where multiple agent can work across

80
00:05:11,145 --> 00:05:15,015
all of the layer, and it facilitated
the dynamic collaboration pattern, that

81
00:05:15,015 --> 00:05:18,675
optimized system performance based on
the current condition of the system.

82
00:05:19,175 --> 00:05:23,585
So let's talk about the performance
engineering and distributed AI system.

83
00:05:24,085 --> 00:05:28,295
Performance in a multigenic system
is fundamentally different from

84
00:05:28,295 --> 00:05:31,855
a monolithic, while monolithic
focuses on on a centralized.

85
00:05:32,680 --> 00:05:36,040
Efficiency and distributed
architecture, Excela, parallel

86
00:05:36,040 --> 00:05:38,140
processing and adaptive source.

87
00:05:38,530 --> 00:05:43,030
So big parallel processing
agent can handle multiple tasks

88
00:05:43,030 --> 00:05:45,290
simultaneously, a different resource.

89
00:05:45,870 --> 00:05:50,100
Dynamic resource utilization means
the system also can scale based

90
00:05:50,100 --> 00:05:55,010
on the actual demand inactive
agent, the time they don't need.

91
00:05:55,010 --> 00:05:55,580
It can also.

92
00:05:56,080 --> 00:06:00,460
Low power more while other
can work when it's required.

93
00:06:00,960 --> 00:06:06,989
This is all enabled by a optimized
communication using an advanced

94
00:06:07,440 --> 00:06:13,440
messaging queue and compression to
ensure that communication supports

95
00:06:13,469 --> 00:06:15,659
rather than hindrance and performance.

96
00:06:16,380 --> 00:06:22,815
So ability to do everything what
you want with the less resource and.

97
00:06:23,315 --> 00:06:27,775
Less latency and more performance.

98
00:06:28,275 --> 00:06:33,375
The platform reliability and the
pulse tolerance, how the multi-gen

99
00:06:33,405 --> 00:06:38,025
distributed system can help you on
reliability and cultural tolerance.

100
00:06:38,355 --> 00:06:40,815
The reliability is another area where.

101
00:06:41,250 --> 00:06:45,659
This architecture excels by distributing
risk across independent component.

102
00:06:45,659 --> 00:06:50,400
We create a system with a
sophisticated fault tolerance.

103
00:06:50,880 --> 00:06:58,229
We can implement key mechanism, like a
graceful degradation and circuit breaker

104
00:06:58,229 --> 00:07:03,120
pattern to contain a failure, continuous
health monitoring and self feeling

105
00:07:03,120 --> 00:07:04,950
capability to automatically recover.

106
00:07:05,429 --> 00:07:10,325
Unlike in a monolithic, that requires
a full restart up your whole system.

107
00:07:10,835 --> 00:07:16,625
A multi-agent distributed system
can use a granular recovery strategy

108
00:07:16,625 --> 00:07:21,395
and restoring functionality in
incrementally and maintaining downtime.

109
00:07:21,395 --> 00:07:25,410
If you have a multiple agent
distributor across different,

110
00:07:25,830 --> 00:07:28,914
and they're consuming different
resources and they are distributed,

111
00:07:28,914 --> 00:07:31,890
then you will have that ability.

112
00:07:32,890 --> 00:07:37,310
To incrementally and minimizing
the downtime and, even

113
00:07:37,310 --> 00:07:39,110
restart them individually.

114
00:07:39,610 --> 00:07:45,090
The legacy system, integration
strategy, of course a full

115
00:07:45,179 --> 00:07:46,829
transition doesn't happen overnight.

116
00:07:47,010 --> 00:07:50,220
A smooth transition with
legacy system is essential.

117
00:07:50,939 --> 00:07:53,220
There are four strategies
to achieve on this.

118
00:07:53,720 --> 00:07:58,939
Adapter pattern implementation creates
a translation layer so the modern agenda

119
00:07:58,939 --> 00:08:01,610
and legacy systems can communicate.

120
00:08:02,360 --> 00:08:08,070
Then data synchronous mechanism ensure
information flows sim seamlessly

121
00:08:08,070 --> 00:08:09,900
between old and new component.

122
00:08:10,755 --> 00:08:15,255
API Gateway Strategies provided
a centralized point to manage

123
00:08:15,585 --> 00:08:19,155
interaction handling, security
and protocol transition, and

124
00:08:19,155 --> 00:08:20,715
an event driven integration.

125
00:08:20,775 --> 00:08:24,765
You just a messaging to loosely
coupled system, allowing them

126
00:08:24,765 --> 00:08:26,265
to coordinate asynchronously.

127
00:08:26,765 --> 00:08:30,865
Let's talk about the operational
excellency and monitoring of the system.

128
00:08:30,865 --> 00:08:35,755
Monitoring a distributed system requires
definitely more advanced approach.

129
00:08:35,755 --> 00:08:39,735
Instead of a simple logging,
and just disaster recovery

130
00:08:39,735 --> 00:08:41,764
or any kind of mechanism.

131
00:08:42,264 --> 00:08:47,484
We need capability like distributed
pressing to follow a request entire

132
00:08:47,484 --> 00:08:49,104
journey across multiple agent.

133
00:08:50,094 --> 00:08:51,924
This is vital for.

134
00:08:52,314 --> 00:08:53,724
Diagnosing performance issues.

135
00:08:54,224 --> 00:08:59,984
We also use a correlation based alerting
where the system can distinguish

136
00:09:00,074 --> 00:09:06,165
with between a minor problem, it can
handle itself, and a significant issue

137
00:09:06,165 --> 00:09:08,180
that requires a human intervention.

138
00:09:08,680 --> 00:09:11,109
Let's talk about security and governance.

139
00:09:12,009 --> 00:09:17,379
Nothing in this world is possible without
talking about security and governance.

140
00:09:17,879 --> 00:09:23,129
In the current world at least, security
in a distributor network must also

141
00:09:23,129 --> 00:09:26,060
evolve beyond traditional perimeters.

142
00:09:26,109 --> 00:09:30,780
We rely on the modern strategies like
zero trust, security model, where every

143
00:09:30,780 --> 00:09:35,910
interaction between agent is authenticated
and authorized independently.

144
00:09:36,410 --> 00:09:40,095
Identity and access management
is to provide agent.

145
00:09:40,595 --> 00:09:45,445
With the secure identity and dynamic
permission distributed audit trials

146
00:09:45,955 --> 00:09:48,955
for regularly to check compliance.

147
00:09:49,455 --> 00:09:56,105
And the last one is the behavioral based
threat detection, where machine learning

148
00:09:56,135 --> 00:10:01,040
establishes a baseline abnormal activity
to quickly identify the anomalies.

149
00:10:01,540 --> 00:10:03,220
Change management and team adaption?

150
00:10:03,220 --> 00:10:04,420
Yes, of course.

151
00:10:04,510 --> 00:10:09,460
When you moving out of monolithic
architecture into a multi-agent

152
00:10:10,400 --> 00:10:15,010
distributed platform the
change management is a key and.

153
00:10:15,510 --> 00:10:18,030
Without this, nothing is going to work.

154
00:10:18,570 --> 00:10:22,980
The transition is as much as about
people as it also about technology.

155
00:10:23,070 --> 00:10:27,720
It requires a cultural transit
transformation shifting team from

156
00:10:27,720 --> 00:10:31,380
a mindset of centralized control
to a distributed collaboration.

157
00:10:31,890 --> 00:10:36,990
To succeed, we must focus on three thing,
skill development program to engineer.

158
00:10:37,635 --> 00:10:42,735
For designing and managing disorder
system process evaluation to

159
00:10:42,735 --> 00:10:49,305
adapt our development cycle for
interdependency pilot program approaches

160
00:10:49,305 --> 00:10:53,100
to gain expenses and demonstrate
value while limiting the risk.

161
00:10:53,600 --> 00:10:58,270
Let's talk about a future proofing
AI platform architecture by

162
00:10:58,300 --> 00:11:00,710
mastering this architecture today.

163
00:11:01,210 --> 00:11:03,550
We are future proofing our platform.

164
00:11:04,270 --> 00:11:09,520
We position ourself to leverage
emerging technologies like edge

165
00:11:09,520 --> 00:11:14,160
computing, integration to distribute
intelligence closer to data source,

166
00:11:15,060 --> 00:11:18,000
self optimizing architecture.

167
00:11:18,075 --> 00:11:23,865
Where AI agent can lend to automatically
allocate resources and predict bottleneck,

168
00:11:23,985 --> 00:11:27,195
at least like Autoscale Auto, identify.

169
00:11:28,095 --> 00:11:32,975
Further down to the line, quantum
computing integration could be enable

170
00:11:32,975 --> 00:11:39,615
new classes of agent per currently
impossible in computation, sustainable

171
00:11:39,615 --> 00:11:42,225
computing with energy efficient.

172
00:11:42,725 --> 00:11:44,405
Design and carbon error.

173
00:11:44,795 --> 00:11:46,025
Resource location.

174
00:11:46,525 --> 00:11:49,455
Embracing the multi-agent features

175
00:11:49,955 --> 00:11:50,615
in conclusion.

176
00:11:51,605 --> 00:11:56,945
This move from a monolithic
to a multi-agent AI is more

177
00:11:56,945 --> 00:11:59,315
than a technological upgrade.

178
00:11:59,945 --> 00:12:06,655
It's a fundamental REMA imaging
re reimagining of how intelligence

179
00:12:06,655 --> 00:12:08,455
system are bolded evolves.

180
00:12:08,955 --> 00:12:10,365
The evidence is clear.

181
00:12:10,575 --> 00:12:14,735
This architecture delivers a
superior platform performance,

182
00:12:14,855 --> 00:12:16,925
reliability, and adaptability.

183
00:12:17,885 --> 00:12:20,795
The framework and tools
are available today.

184
00:12:20,975 --> 00:12:21,935
The multi-agent avail.

185
00:12:22,435 --> 00:12:29,275
The multi-agent revolution has begun
and organization that act decisively

186
00:12:29,275 --> 00:12:31,135
will save the future of AI business.

187
00:12:31,635 --> 00:12:33,165
Thank you very much.

