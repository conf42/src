1
00:00:00,870 --> 00:00:02,790
Hi everyone, this is Sheika.

2
00:00:03,360 --> 00:00:05,100
I work for Guidewire Software.

3
00:00:05,160 --> 00:00:06,450
I'm a project manager there.

4
00:00:06,990 --> 00:00:08,610
I've been with Guidewire.

5
00:00:08,610 --> 00:00:13,290
I've been working in the property
and casualty industry for the last

6
00:00:13,350 --> 00:00:20,730
10 years, and today I'm here to talk
about how observable systems have.

7
00:00:21,230 --> 00:00:25,340
These cloud-based identity systems
today let you see exactly what's

8
00:00:25,340 --> 00:00:27,050
happening to your identity checks.

9
00:00:27,440 --> 00:00:30,260
And they do this by using smart
checking of the biometrics.

10
00:00:30,740 --> 00:00:34,250
Maybe it's fingerprinting, facial
recognition or voice recognition.

11
00:00:34,950 --> 00:00:38,920
There's also AI involved that
analyzes the process to identify

12
00:00:38,920 --> 00:00:40,240
any issues and improvements.

13
00:00:40,780 --> 00:00:43,960
And then we have blockchain
technology to ensure everything

14
00:00:43,960 --> 00:00:45,970
is transparent and it's secure.

15
00:00:46,470 --> 00:00:51,270
The observable systems help the
team identify issues much more

16
00:00:51,270 --> 00:00:54,059
quickly, and that reduces the time.

17
00:00:54,559 --> 00:00:57,830
Time taken to identify a problem by 87%.

18
00:00:58,580 --> 00:01:01,460
That means the systems have less downtime.

19
00:01:01,520 --> 00:01:06,470
We have quicker resolution and response,
and we have better user experience, which

20
00:01:06,530 --> 00:01:09,590
adds to system reliability and resilience.

21
00:01:10,090 --> 00:01:15,350
So observability observable identity
systems give realtime insight into the

22
00:01:15,350 --> 00:01:18,380
entire verification process at the code.

23
00:01:18,380 --> 00:01:23,690
These systems use instrumentation, meaning
they capture important data points as

24
00:01:23,690 --> 00:01:25,760
users go through the verification journey.

25
00:01:26,420 --> 00:01:29,885
This could include biometrics, system
response time, or error patterns.

26
00:01:30,844 --> 00:01:35,054
And all this data is then fed into
the monitoring and alerting tools that

27
00:01:35,054 --> 00:01:39,344
help teams detect issues like a failed
verification or as suspicious login.

28
00:01:40,274 --> 00:01:44,565
And as they, and we can record it, we
can get to know about this in real time

29
00:01:44,804 --> 00:01:49,774
rather than waiting for hours and getting
to know it about hours or days later.

30
00:01:50,274 --> 00:01:52,074
And we don't stop there.

31
00:01:52,074 --> 00:01:53,994
There's also a technical layer involved.

32
00:01:54,024 --> 00:01:58,014
These systems also translate that
raw data into meaningful business

33
00:01:58,014 --> 00:02:02,964
insights to help insurers make smart
decisions around security, process

34
00:02:02,964 --> 00:02:05,004
improvements and customer experience.

35
00:02:05,504 --> 00:02:08,474
For example, let's say insurers
can use this information to

36
00:02:08,474 --> 00:02:11,115
spot security risk early on.

37
00:02:11,734 --> 00:02:13,744
It helps us to modify, oh.

38
00:02:14,244 --> 00:02:15,054
Optimize.

39
00:02:15,144 --> 00:02:20,004
It helps an insurance company
to optimize the customer

40
00:02:20,004 --> 00:02:21,684
journey by removing bottlenecks.

41
00:02:21,984 --> 00:02:25,884
It also justifies investments in
better tools or infrastructure

42
00:02:26,214 --> 00:02:27,714
based on hard data.

43
00:02:28,524 --> 00:02:32,274
In short, we can definitely say that
the observability turns what used to

44
00:02:32,274 --> 00:02:38,304
be a black box into a clear process,
driven in a data driven process

45
00:02:38,304 --> 00:02:40,254
that improved customer experience.

46
00:02:40,754 --> 00:02:41,354
Modern.

47
00:02:41,454 --> 00:02:46,084
These this modern observability has taken
fraud detection to a really next level.

48
00:02:46,504 --> 00:02:50,854
Unlike traditional monitoring, these
systems can now detect even sophisticated

49
00:02:50,854 --> 00:02:57,079
swooping attacks like fake IDs or
deep fakes with 99.99% accuracy.

50
00:02:57,419 --> 00:02:58,919
And they do it in near.

51
00:02:59,749 --> 00:03:00,859
In a real time.

52
00:03:00,960 --> 00:03:01,830
In real time.

53
00:03:02,520 --> 00:03:05,880
This is a huge leap forward giving
businesses, including insurance

54
00:03:05,880 --> 00:03:10,560
companies, a much stronger protection
against fraud and reducing the time

55
00:03:10,560 --> 00:03:11,940
it takes to respond to threats.

56
00:03:12,440 --> 00:03:16,360
Moving on to operational improvements,
to observability observable.

57
00:03:16,390 --> 00:03:20,680
I systems don't just improve security,
but they also offer a lot of.

58
00:03:21,025 --> 00:03:25,705
Operational benefits by giving systems,
giving teams deep visibility into

59
00:03:25,705 --> 00:03:30,985
system performance to help spot and
fix issues before it affects customers.

60
00:03:31,855 --> 00:03:36,145
And this includes capabilities
like transaction tracing,

61
00:03:36,625 --> 00:03:39,130
which helps identify failures.

62
00:03:39,630 --> 00:03:43,020
Early on and helps to understand
why the slowdowns are happening.

63
00:03:43,930 --> 00:03:47,860
It also helps us, helps in capacity
planning to anticipate and prepare

64
00:03:47,860 --> 00:03:52,270
for usage spikes, and also supports
continuous improvement by turning

65
00:03:52,270 --> 00:03:55,840
system data into actionable insights.

66
00:03:56,290 --> 00:04:01,360
And in short, they help operations
run smoother, faster, and more

67
00:04:01,870 --> 00:04:03,490
in a more proactive fashion.

68
00:04:03,990 --> 00:04:10,689
Dispute tracing lets a user track a
single request as it moves to the multiple

69
00:04:11,140 --> 00:04:16,610
web services, multiple microservices
involved in the verification process.

70
00:04:17,110 --> 00:04:20,740
And this helps, one, understand how
each part of the system is performing

71
00:04:20,769 --> 00:04:22,690
and where delays of failures accurate.

72
00:04:23,409 --> 00:04:24,880
Let's go through an example here.

73
00:04:25,390 --> 00:04:30,000
Let's say the ex, let's go through an
identity verification example here.

74
00:04:30,510 --> 00:04:34,350
Imagine a user is going through an
online identity verification process.

75
00:04:35,100 --> 00:04:37,925
Here's how distributed tracing
works across the different

76
00:04:37,930 --> 00:04:39,270
microservices in what?

77
00:04:39,770 --> 00:04:41,990
First they'll use a
document, upload servers.

78
00:04:42,755 --> 00:04:47,285
So the user uploads, the IT
document and tracing captures

79
00:04:47,285 --> 00:04:50,735
how long the document took and
whether the files were successfully

80
00:04:50,735 --> 00:04:53,105
received or there were any errors.

81
00:04:53,105 --> 00:04:55,955
If there were errors, it
also captures the logs.

82
00:04:56,455 --> 00:04:59,794
Then we use the document
verification validation service.

83
00:05:00,335 --> 00:05:03,604
The document is then scanned,
is now scanned for authenticity,

84
00:05:03,664 --> 00:05:05,314
expiration, and tampering.

85
00:05:05,814 --> 00:05:09,534
At this step, the tracing, so shows
if the validation passed or failed

86
00:05:09,835 --> 00:05:11,455
and how much processing it took.

87
00:05:12,414 --> 00:05:17,645
Then we use the biometric matching
service Here, the user takes a selfie

88
00:05:17,645 --> 00:05:24,124
for face match and tracing logs, the
image capture comparison time, and

89
00:05:24,124 --> 00:05:26,104
the confidence score of the match.

90
00:05:26,604 --> 00:05:29,395
The full service is the
data verification service.

91
00:05:29,695 --> 00:05:32,695
The personal info is verified
against a third party sources.

92
00:05:32,875 --> 00:05:35,185
For example, it could be
government databases, it could

93
00:05:35,185 --> 00:05:36,655
be credit bureaus, et cetera.

94
00:05:37,155 --> 00:05:40,544
Here, the tracing records, each
external call and how long they took,

95
00:05:41,265 --> 00:05:43,305
helping spot third party delays.

96
00:05:43,805 --> 00:05:47,975
Last, but the not the least is the
risk assessment engine and all the

97
00:05:47,975 --> 00:05:51,635
results are fed into a risk engine
that calculates a trust score.

98
00:05:52,355 --> 00:05:56,495
Here tracing shows how data flowed
in, how rules were applied, and

99
00:05:56,495 --> 00:05:58,955
if any step triggered risk flag.

100
00:05:59,455 --> 00:06:01,645
Now you must be wondering why it matters.

101
00:06:02,145 --> 00:06:07,185
It matters because with distributed
tracing, we can pinpoint slow services.

102
00:06:07,484 --> 00:06:11,385
Let's say if the biometric
matching is consistently lagging,

103
00:06:11,565 --> 00:06:13,275
it can help us identify that.

104
00:06:13,724 --> 00:06:16,094
It can also spot failures early on.

105
00:06:16,424 --> 00:06:20,085
For example, if the document
validation service is crashing into

106
00:06:20,085 --> 00:06:25,695
intermittently, it'll it'll help us
to identify that it also helps improve

107
00:06:26,055 --> 00:06:30,854
performance and also deliver a smoother
customer experience by solving issues

108
00:06:30,854 --> 00:06:32,635
before users are impacted by it.

109
00:06:33,135 --> 00:06:36,614
Moving on to the advanced correlation
techniques for identity events,

110
00:06:36,645 --> 00:06:38,744
advanced corelation techniques help.

111
00:06:39,315 --> 00:06:43,335
Connect related events across
different identity verification steps.

112
00:06:43,875 --> 00:06:48,224
Turning individual data points
into a clear actionable story.

113
00:06:49,034 --> 00:06:51,044
Let's take a real world example.

114
00:06:51,585 --> 00:06:53,745
Let's say a user is going
through verification.

115
00:06:54,135 --> 00:06:57,645
The document scan is successful,
the biometric matches slightly off,

116
00:06:58,125 --> 00:07:00,135
and the database check returns.

117
00:07:00,195 --> 00:07:04,815
Inconsistent data alone, each
event might seem fine, but.

118
00:07:05,315 --> 00:07:10,835
Or just slightly usual or slightly
unusual, but when correlated or

119
00:07:10,835 --> 00:07:15,784
connected together, they could indicate
a spoofing attempt or an identity fraud.

120
00:07:16,775 --> 00:07:21,094
So how it works, correlation engine
connects events from across the

121
00:07:21,094 --> 00:07:26,105
system, document scanning, biometrics,
checks, backend validations, et

122
00:07:26,105 --> 00:07:28,475
cetera, using machine learning.

123
00:07:28,804 --> 00:07:31,174
They built normal behavioral patterns.

124
00:07:31,895 --> 00:07:34,865
Example, time taken, device
type and match scores.

125
00:07:35,735 --> 00:07:40,475
When patterns deviate even slightly,
the system flags it early for review.

126
00:07:41,435 --> 00:07:47,165
Why it matters, it helps detect complex
fraud patterns that would be invisible

127
00:07:47,255 --> 00:07:52,865
if each component were reviewed In
isolation, it reduces FA reduces false

128
00:07:52,865 --> 00:07:54,530
positives by understanding context.

129
00:07:55,030 --> 00:07:58,770
Enables proactive proactive
action, stopping problems before

130
00:07:58,770 --> 00:08:00,450
they escalate or affect users.

131
00:08:00,950 --> 00:08:04,380
There's also behavioral there's also
behavioral based anomaly detection.

132
00:08:04,880 --> 00:08:09,260
So behavioral based anomaly detection
is about spotting unusual user

133
00:08:09,260 --> 00:08:13,159
behavior that could signal fraud
or security threats even when

134
00:08:13,159 --> 00:08:15,560
credentials are correct, how it works.

135
00:08:16,170 --> 00:08:18,840
First we establish the
behavioral baselines.

136
00:08:19,080 --> 00:08:23,610
The system learns what normal looks
like for each user or a group such

137
00:08:23,610 --> 00:08:25,590
as typical logging times usual.

138
00:08:26,085 --> 00:08:31,755
Devices, locations, common pattern and
document uploads and biometric processes.

139
00:08:32,255 --> 00:08:34,295
Then we apply machine
learning tools to it.

140
00:08:34,625 --> 00:08:38,255
These tools monitor user activity
in real time and compare it to the

141
00:08:38,255 --> 00:08:43,115
established bake line, looking for subtle
deviations faster than normal form.

142
00:08:43,615 --> 00:08:47,020
Repeated, failed biometric
attempts, loggings from

143
00:08:47,020 --> 00:08:48,820
unusual locations and devices.

144
00:08:49,320 --> 00:08:51,300
After that, we calculate the risk scores.

145
00:08:51,930 --> 00:08:55,140
Each action is scored based
on how risky it seems.

146
00:08:55,770 --> 00:09:00,560
The more behavior devis from the
norm, the higher the risk score then

147
00:09:00,560 --> 00:09:04,550
will trigger adaptive authentication
based on the risk scores.

148
00:09:04,910 --> 00:09:05,780
So the risk goes.

149
00:09:06,280 --> 00:09:10,750
Across a certain threshold, the system
can ask for additional verification.

150
00:09:10,930 --> 00:09:15,219
Like in OTP flag, the session
for manual review or block the

151
00:09:15,280 --> 00:09:17,829
action entirely looks too risky.

152
00:09:18,729 --> 00:09:19,000
Why?

153
00:09:19,000 --> 00:09:23,090
It matters because behavioral
based detect goes beyond static

154
00:09:23,090 --> 00:09:24,380
rules or password checks.

155
00:09:24,770 --> 00:09:30,050
It helps catch sophisticated attacks
by focusing on how users behave and

156
00:09:30,050 --> 00:09:32,240
not just what credentials they use.

157
00:09:32,740 --> 00:09:35,950
But with all this information, which
we, behavioral information which we

158
00:09:35,950 --> 00:09:38,050
capture, we also need to take care of.

159
00:09:38,470 --> 00:09:39,190
Privacy.

160
00:09:39,700 --> 00:09:44,200
So implementing observable identity
systems means walking a fine line

161
00:09:44,200 --> 00:09:48,650
between comprehensive monitoring
and user privacy protection.

162
00:09:49,220 --> 00:09:52,880
The key points here, which we need to take
care of is the comprehensive monitoring

163
00:09:52,880 --> 00:09:58,069
needs to ensure strong security and smooth
operations system need to capture detailed

164
00:09:58,220 --> 00:10:02,630
telemetry like user activities, system
performance, and authentication behavior.

165
00:10:03,130 --> 00:10:06,300
We need to take into
account privacy ations.

166
00:10:06,660 --> 00:10:10,680
However, this data often includes
sensitive user information, to limit

167
00:10:10,680 --> 00:10:16,500
what's collected, to only what's necessary
and anonymize or encrypt personal data,

168
00:10:17,220 --> 00:10:19,140
we need to have a balanced approach.

169
00:10:19,560 --> 00:10:23,840
The goal is to find the right
balance, enabling visibility for fraud

170
00:10:23,840 --> 00:10:27,620
detection and troubleshooting without
overstepping privacy businesses.

171
00:10:28,550 --> 00:10:32,840
This includes being transparent about
what data is collected, providing

172
00:10:32,840 --> 00:10:37,910
controls and opts applicable, and
designing systems with privacy.

173
00:10:38,270 --> 00:10:39,470
By default.

174
00:10:39,485 --> 00:10:43,525
If we can say a successful identity,
observability strategy should

175
00:10:43,525 --> 00:10:47,814
deliver security and insight,
but also earning gives a trust

176
00:10:47,819 --> 00:10:49,640
through responsible data practices.

177
00:10:50,140 --> 00:10:52,720
Now let's talk about the roadmap for.

178
00:10:53,220 --> 00:10:57,870
The implementation of these verification
systems, implementing and observable

179
00:10:57,990 --> 00:11:00,000
identity systems is a phase journey.

180
00:11:00,360 --> 00:11:02,040
It's just not a one-time setup.

181
00:11:02,250 --> 00:11:04,560
It evolves across five key stages.

182
00:11:05,100 --> 00:11:06,750
First is the assessment stage.

183
00:11:07,079 --> 00:11:11,760
We start by evaluating the current
capabilities, what telemetry already

184
00:11:11,760 --> 00:11:16,260
being collected, where are the blind
spots in IDD verification, and are

185
00:11:16,260 --> 00:11:18,360
there any tools and gaps in monitoring?

186
00:11:19,319 --> 00:11:23,670
The idea here is to establish a clear
baseline and identify quick wins.

187
00:11:24,569 --> 00:11:26,729
Next will be the instrumentation.

188
00:11:27,209 --> 00:11:33,839
Now we add instrumentation to capture
detailed data across identity workflows.

189
00:11:34,619 --> 00:11:37,589
Example, document upload,
biometric mash, third party

190
00:11:37,589 --> 00:11:39,119
verification, and risk scoring.

191
00:11:39,619 --> 00:11:44,150
We need to make sure we make all steps
traceable with real time data points.

192
00:11:44,650 --> 00:11:46,329
Then we do the integration.

193
00:11:46,900 --> 00:11:51,699
We introduce automated alerts and
adaptive responses, high risk behavior

194
00:11:51,699 --> 00:11:56,199
triggers, setup, authentication,
system error, notify relevant teams.

195
00:11:56,199 --> 00:11:56,860
Instantly.

196
00:11:57,040 --> 00:11:57,880
Instantly.

197
00:11:58,380 --> 00:12:02,579
The idea has to reduce manual
intervention and improve response times.

198
00:12:03,079 --> 00:12:05,569
It's the refinement time,
the refinement step.

199
00:12:06,170 --> 00:12:09,770
We need to continuously improve, and we
can do that by tuning machine learning

200
00:12:09,770 --> 00:12:11,900
models for behavioral based detection.

201
00:12:12,260 --> 00:12:17,060
Updating baselines as user behavior,
evolve and expanding visibility

202
00:12:17,060 --> 00:12:18,560
to new components or channels.

203
00:12:19,060 --> 00:12:22,720
The goal here is to optimize
accuracy, reduce false positives,

204
00:12:22,720 --> 00:12:24,160
and support scalability.

205
00:12:24,760 --> 00:12:28,480
The full implementation can take
any time between six months to 12

206
00:12:28,480 --> 00:12:36,720
months, but if we try the incremental
approach, we can start getting the start

207
00:12:36,720 --> 00:12:38,730
utilizing the benefits within two to.

208
00:12:39,230 --> 00:12:40,880
The key takeaways and next steps.

209
00:12:41,380 --> 00:12:47,280
The first is the measurable benefits 87,
80 7% reduction in meantime to reduction

210
00:12:47,280 --> 00:12:52,560
shows real power of observable systems,
enhanced data detection accuracy through

211
00:12:52,560 --> 00:12:57,570
advanced techniques like behavioral
analysis and event go relation operational

212
00:12:57,570 --> 00:13:04,500
gains to transaction tracing, capacity
planning, and improvement transforms raw.

213
00:13:04,920 --> 00:13:09,960
Telemetry into business intelligence to
better security and process decisions.

214
00:13:10,710 --> 00:13:14,700
We need to make sure that we have
a right balance, privacy balance.

215
00:13:14,700 --> 00:13:18,210
Effective observability requires a
careful balance between monitoring

216
00:13:18,210 --> 00:13:23,370
and data production systems aligned
by privacy, with privacy by default,

217
00:13:23,970 --> 00:13:29,400
respecting user data while ensuring
security, anonymization transparency and

218
00:13:29,400 --> 00:13:31,980
regulatory compliance are non-negotiable.

219
00:13:32,480 --> 00:13:36,439
Mean to use a holistic approach,
need to combine instrumentation

220
00:13:36,439 --> 00:13:40,970
monitoring, machine learning based
analytics, and adaptive authentication

221
00:13:41,000 --> 00:13:43,730
across the identity lifecycle.

222
00:13:44,510 --> 00:13:47,300
Need to support distributed
tracing across microservices.

223
00:13:47,800 --> 00:13:50,199
The journey we need to
have a strategic journey.

224
00:13:50,199 --> 00:13:54,010
Implementation is phased, begins with
assessment that moves to instrumentation

225
00:13:54,860 --> 00:13:56,570
integration automation, definement.

226
00:13:57,070 --> 00:14:00,900
The full rollout takes six to 12
months, but we can see the benefits

227
00:14:00,900 --> 00:14:04,860
within two to three months itself
if we use the incremental approach.

228
00:14:05,360 --> 00:14:08,060
Thanks everyone for having,
that's all I had for today.

229
00:14:08,060 --> 00:14:12,300
Thanks everyone for listening
to this presentation.

