1
00:00:00,500 --> 00:00:01,520
Good morning everyone.

2
00:00:01,880 --> 00:00:05,420
I'm Priya mug from
Stanford Business School.

3
00:00:06,110 --> 00:00:11,719
Today I'll be discussing about scaling
trust VM security with confidential

4
00:00:11,719 --> 00:00:13,819
computing and zero trust architecture.

5
00:00:14,319 --> 00:00:18,519
This topic is important in today's
world because we are at a critical

6
00:00:18,519 --> 00:00:23,199
inflection point in cloud computing
where innovation is outpacing

7
00:00:23,199 --> 00:00:24,445
the traditional security models.

8
00:00:24,945 --> 00:00:30,435
In my research and my product experience
in cloud area cloud domain focuses

9
00:00:30,435 --> 00:00:35,084
on bridging this gap, how to make
virtualized cloud environments not

10
00:00:35,084 --> 00:00:39,644
only performant, but also inherently
safe, secure, and trustworthy.

11
00:00:40,145 --> 00:00:44,495
This work is what led to my paper and
ongoing contributions in confidential

12
00:00:44,495 --> 00:00:46,145
and trusted VM architectures.

13
00:00:46,645 --> 00:00:51,595
As cloud adoption reaches nearly
94% of enterprises, the volume

14
00:00:51,595 --> 00:00:55,615
of sensitive workloads on public
infrastructure has exploded.

15
00:00:56,395 --> 00:01:00,865
More than 75 percentage of that
data is confidential, which includes

16
00:01:00,985 --> 00:01:05,545
financial records, patient information,
or even proprietary algorithms.

17
00:01:06,445 --> 00:01:10,060
Traditional perimeter based VM
security simply wasn't built

18
00:01:10,080 --> 00:01:11,580
for the scale or exposure.

19
00:01:12,080 --> 00:01:16,730
The threat landscape now includes
cross tenant attacks, memory

20
00:01:16,730 --> 00:01:19,130
scraping, and hypervisor breaches.

21
00:01:19,630 --> 00:01:22,509
The cloud success
completely depends on trust.

22
00:01:23,020 --> 00:01:27,429
If customers can't be sure if the data
that they have is safe while it is

23
00:01:27,429 --> 00:01:32,199
being processed, they would hold back
the mission critical workloads, and

24
00:01:32,199 --> 00:01:37,600
my goal here is to examine how we can
extend the protection beyond storage and

25
00:01:37,600 --> 00:01:40,059
transport into an active compute layer.

26
00:01:40,559 --> 00:01:42,329
Here's our roadmap for the talk today.

27
00:01:42,779 --> 00:01:47,879
We'll start with confidential computing,
which protects data while it's being used.

28
00:01:48,329 --> 00:01:52,529
Then we move to trusted launch,
ensuring that VMs vote only from

29
00:01:52,529 --> 00:01:54,389
verified and uncompromised components.

30
00:01:54,889 --> 00:01:59,359
We'll connect these to zero trust
architecture, which assumes no

31
00:01:59,359 --> 00:02:01,489
implicit trust inside the network.

32
00:02:02,090 --> 00:02:05,030
And finally, we'll take a look
at the practical implementation,

33
00:02:05,299 --> 00:02:09,109
how to bring these principles
together in real environments with

34
00:02:09,109 --> 00:02:11,090
compliance and performance in mind.

35
00:02:11,589 --> 00:02:16,389
Confidential computing addresses what
many call the final frontier of data

36
00:02:16,389 --> 00:02:19,389
security, protecting the data in use.

37
00:02:20,079 --> 00:02:24,189
It leverages hardware based,
trusted execution Environments

38
00:02:24,249 --> 00:02:28,799
are called tes, that encrypt data
even while it is being processed.

39
00:02:29,339 --> 00:02:32,609
This means that sensitive
computations happen inside,

40
00:02:32,609 --> 00:02:35,129
isolated and encrypted enclaves.

41
00:02:35,549 --> 00:02:39,480
Invisible to the cloud provider
or the system administrators.

42
00:02:39,979 --> 00:02:43,789
Unlike traditional encryption, which
stops once the data is loaded into

43
00:02:43,789 --> 00:02:48,640
memory, tees extend protection throughout
the entire lifecycle of the workload.

44
00:02:49,480 --> 00:02:52,299
This changes the security
equation completely.

45
00:02:52,839 --> 00:02:57,160
It enables industries like
healthcare, finance, and AI to move

46
00:02:57,160 --> 00:03:01,660
sensitive workloads to the cloud
that they previously couldn't risk.

47
00:03:02,160 --> 00:03:06,630
And my work here highlights how hardware
level innovation is unlocking new

48
00:03:06,630 --> 00:03:08,910
business models for data collaboration.

49
00:03:09,410 --> 00:03:12,380
Let's talk about the
leading TEE technologies.

50
00:03:12,799 --> 00:03:16,040
There are two major
technologies in this space.

51
00:03:16,399 --> 00:03:18,890
The first one is A-M-D-S-C-V-S-N.

52
00:03:19,684 --> 00:03:26,105
And SEV stands for Secure Encrypted
Virtualization and SNP is secure Nested

53
00:03:26,105 --> 00:03:31,535
Paging, which provides per VM memory
encryption with integrity checks.

54
00:03:32,135 --> 00:03:37,234
It prevents hypervisor level attacks and
offers attest station for boot integrity.

55
00:03:37,734 --> 00:03:41,519
The second one is Intel TDX,
or trusted domain extensions.

56
00:03:42,519 --> 00:03:46,989
Which isolates workloads at the
CPU level, creating trust domains

57
00:03:46,989 --> 00:03:48,879
enforced by hardware boundaries.

58
00:03:49,379 --> 00:03:53,489
It supports remote attestation and
adds minimal performance overhead.

59
00:03:54,449 --> 00:03:57,779
Now, both of these are foundational
for building verifiable

60
00:03:57,779 --> 00:03:59,790
confidential workloads in the cloud.

61
00:04:00,290 --> 00:04:04,939
These technologies are the foundation
for confidential computing, and in

62
00:04:04,939 --> 00:04:09,470
my research and cloud experience
at Azure, we've had to evaluate

63
00:04:09,470 --> 00:04:14,119
and integrate both technologies at
hyperscale, ensuring compatibility,

64
00:04:14,150 --> 00:04:16,399
performance, and policy enforcement.

65
00:04:16,899 --> 00:04:20,170
This slide represents the core
innovation that I've been part of

66
00:04:20,170 --> 00:04:22,690
translating into Azure's VM ecosystem.

67
00:04:23,190 --> 00:04:27,390
Now let's look at how organizations
are using these in practice.

68
00:04:28,290 --> 00:04:33,060
Secure multi-party analytic analytics
enables collaboration across

69
00:04:33,060 --> 00:04:35,580
organizations without exposing new data.

70
00:04:36,080 --> 00:04:40,100
The confidential AI training
allows medical or financial data

71
00:04:40,100 --> 00:04:41,930
to be used for model training.

72
00:04:41,930 --> 00:04:47,140
Securely protected key management
ensures cryptographic keys

73
00:04:47,200 --> 00:04:49,210
never appear in plain text.

74
00:04:49,710 --> 00:04:53,190
And why does all matters because
these aren't just theoretical.

75
00:04:53,940 --> 00:04:58,610
They are how regulated industries
can embrace the cloud responsibly.

76
00:04:59,110 --> 00:05:03,220
The practical adoption stories I've
worked on, particularly with financial

77
00:05:03,220 --> 00:05:07,330
workloads shows how confidential
computing builds confidence

78
00:05:07,330 --> 00:05:09,610
across compliance heavy sectors.

79
00:05:10,110 --> 00:05:12,255
Let's dive into what Trusted Launch is.

80
00:05:12,825 --> 00:05:15,555
It is all about ensuring
the boot integrity.

81
00:05:16,055 --> 00:05:17,705
Yts protect data.

82
00:05:17,705 --> 00:05:23,285
Once a VM is running trusted launch
secures, what happens before that,

83
00:05:23,375 --> 00:05:28,595
which is the boot process itself,
it ensures that VM starts only with

84
00:05:28,595 --> 00:05:34,565
verified untempered components using
TPM based cryptographic attestation.

85
00:05:35,065 --> 00:05:38,905
Think of it as a chain of trust
from hardware to firmware to

86
00:05:38,905 --> 00:05:40,345
the operating system itself.

87
00:05:41,290 --> 00:05:45,430
If any component is modified or
injected with malicious code, the

88
00:05:45,460 --> 00:05:50,350
attestation fails preventing the
VM from launching, and that's how

89
00:05:50,350 --> 00:05:55,830
we eliminate root kits before even
workloads even be boot time verification

90
00:05:55,830 --> 00:05:59,970
closes one of the biggest historical
security gaps in virtualization.

91
00:06:00,470 --> 00:06:05,090
My research examined how this feature
could be standardized across heterogeneous

92
00:06:05,090 --> 00:06:10,250
fleets, which directly informed how
large scale clouds can offer verifiable

93
00:06:10,250 --> 00:06:12,650
trust from power on to runtime.

94
00:06:13,150 --> 00:06:15,190
Let's look at how trusted launch works.

95
00:06:15,760 --> 00:06:23,260
Trusted launch is anchored on four steps,
hardware, root of trust, the TPM 2.0

96
00:06:23,260 --> 00:06:25,285
chip stores cryptographic measurements.

97
00:06:25,785 --> 00:06:27,795
The second one is measured boat.

98
00:06:28,665 --> 00:06:32,145
Each boat component is recorded
in platform configuration

99
00:06:32,145 --> 00:06:35,355
registers, then remote attestation.

100
00:06:35,865 --> 00:06:39,705
Those measurements are compared
to good known good baselines.

101
00:06:40,065 --> 00:06:44,925
And finally, the automated enforcement,
which are policies in the orchestrator,

102
00:06:44,925 --> 00:06:46,950
ensure that only trusted VMs can run.

103
00:06:47,280 --> 00:06:47,310
Okay.

104
00:06:48,150 --> 00:06:53,250
Together these create a verifiable
and a repeatable security posture,

105
00:06:53,610 --> 00:06:57,300
one that scales to hundreds and
thousands and millions of VMs.

106
00:06:57,800 --> 00:07:03,320
This architecture makes cloud trust
provable enterprises and governments

107
00:07:03,320 --> 00:07:07,640
increasingly require cryptographic proof
that workloads haven't been tampered with.

108
00:07:08,450 --> 00:07:12,980
And so this trusted launch is a critical
part of providing that requirement.

109
00:07:13,480 --> 00:07:15,610
Here's another scenario of DevOps.

110
00:07:15,610 --> 00:07:20,620
Integration for trusted launch
security is strongest when it's

111
00:07:20,620 --> 00:07:25,990
automated and integrating Trusted
Launch into the CICD pipelines make a

112
00:07:25,990 --> 00:07:28,570
testation part of everyday deployment.

113
00:07:29,560 --> 00:07:34,800
You can define policy as code specifying
which images must be verified.

114
00:07:35,300 --> 00:07:39,200
And then use automated attestation
to validate each VM before

115
00:07:39,200 --> 00:07:40,490
the containers are deployed.

116
00:07:41,450 --> 00:07:45,290
And with continuous monitoring,
the system can alert in real time.

117
00:07:45,290 --> 00:07:49,900
If integrity drips apart, this
moves the VM Trust from one time

118
00:07:49,900 --> 00:07:53,080
check to a continuous process
embedded in the DevOps culture.

119
00:07:53,580 --> 00:07:58,590
The approach turns security from a manual
check into an operational standard.

120
00:07:58,830 --> 00:08:02,730
And it's a key part of what I've
advocated, which is embedding

121
00:08:02,730 --> 00:08:06,870
security in delivery pipelines
rather than just an afterthought.

122
00:08:07,740 --> 00:08:09,210
It's what hyperscale.

123
00:08:09,240 --> 00:08:11,490
It's what enables hyperscale trust.

124
00:08:11,990 --> 00:08:14,660
Now let's connect this to zero trust.

125
00:08:14,930 --> 00:08:18,740
A principle summarized as
never trust, always verify.

126
00:08:19,240 --> 00:08:24,280
In cloud environments, that means
no VM is inherently trusted, even

127
00:08:24,280 --> 00:08:26,170
if it is on the same network.

128
00:08:26,950 --> 00:08:31,690
Every request, every access, and
every connection needs to be verified.

129
00:08:32,190 --> 00:08:36,150
Traditional parameter security
assumes the inside is safe.

130
00:08:36,690 --> 00:08:39,090
Zero trust assumes breach.

131
00:08:39,900 --> 00:08:43,920
It continuously authenticates
and authorizes based on identity

132
00:08:43,980 --> 00:08:46,290
and context and not location.

133
00:08:46,790 --> 00:08:51,410
This approach greatly limits
attack, service and insider risk.

134
00:08:51,910 --> 00:08:55,450
There are three principles
to bring zero trust to life.

135
00:08:56,260 --> 00:08:59,860
Number one, identity
aware microsegmentation.

136
00:09:00,360 --> 00:09:04,260
These are policies that are tied
to workload identities instead of

137
00:09:04,260 --> 00:09:10,230
IP addresses, VMs communicate only
with explicitly authorized services.

138
00:09:10,730 --> 00:09:13,100
The second one is continuous verification.

139
00:09:14,000 --> 00:09:18,770
Every access request is re authenticated
in real time using cryptographic

140
00:09:18,800 --> 00:09:21,680
identity and dynamic policy checks.

141
00:09:22,180 --> 00:09:25,360
The third one is real time
behavioral monitoring.

142
00:09:25,990 --> 00:09:31,635
Any abnormal pattern or unexpected network
con connections, privilege escalations,

143
00:09:31,875 --> 00:09:33,920
triggers, and automated response.

144
00:09:34,420 --> 00:09:38,800
Together, these mechanisms create
a self defending infrastructure.

145
00:09:39,300 --> 00:09:42,390
Now let's tie this back
to practical benefits.

146
00:09:43,350 --> 00:09:47,340
Lateral movement prevention,
microsegmentation limits how

147
00:09:47,340 --> 00:09:49,110
far an attacker can move.

148
00:09:49,140 --> 00:09:53,270
If they actually try to get in,
even with compromised credentials,

149
00:09:53,540 --> 00:09:55,640
they cannot pivot across VMs.

150
00:09:56,140 --> 00:10:01,060
Insider threat mitigation is a continuous
verification and behavior monitoring,

151
00:10:01,330 --> 00:10:03,550
which catches anomalies early.

152
00:10:03,850 --> 00:10:08,770
For example, an admin accessing
unusual data volumes at odd hours.

153
00:10:09,270 --> 00:10:13,470
The combination of confidential
computing, trusted launch, and zero

154
00:10:13,470 --> 00:10:18,300
trust builds a multi-layered defense
that reduces risk significantly.

155
00:10:18,800 --> 00:10:21,920
Security is valuable if it's practical.

156
00:10:22,805 --> 00:10:27,815
Security must also align with regulatory
performance and needs, and this

157
00:10:27,815 --> 00:10:31,985
is important for P-C-I-D-S-S 4.0.

158
00:10:32,255 --> 00:10:37,235
These architectures help protect
cardholder data and enforce

159
00:10:37,235 --> 00:10:39,895
network segmentation for hipaa.

160
00:10:39,980 --> 00:10:45,120
The TEE safeguard protected health
information while it's being processed.

161
00:10:45,620 --> 00:10:50,900
And for GDPR, they enable data,
mini minimization and encryption

162
00:10:50,900 --> 00:10:53,000
requirements through hardware isolation.

163
00:10:53,990 --> 00:10:57,680
From a performance standpoint,
TE overhead is modest.

164
00:10:57,860 --> 00:11:01,160
It's usually two to 10 percentage,
depending on the workload type.

165
00:11:01,660 --> 00:11:06,850
And remote attestation adds hundreds of
milliseconds, but it can be optimized by

166
00:11:06,850 --> 00:11:09,730
caching results and selective TE usage.

167
00:11:10,230 --> 00:11:11,670
And why does all matters?

168
00:11:11,670 --> 00:11:16,800
It's because many innovations fail
at compliance or performance stage.

169
00:11:17,460 --> 00:11:22,170
By grounding my research in measurable
impact, I've been able to influence

170
00:11:22,170 --> 00:11:27,330
enterprise adoption strategies and cost
models that prove security does not have

171
00:11:27,330 --> 00:11:29,100
to actually slow down the innovation.

172
00:11:29,600 --> 00:11:31,550
This pace is evolving quickly.

173
00:11:32,465 --> 00:11:35,545
And I'd like to call out
some key innovations as part

174
00:11:35,545 --> 00:11:36,775
of this discussion today.

175
00:11:37,345 --> 00:11:42,925
First post quantum cryptography,
homophobic encryption, and

176
00:11:42,925 --> 00:11:44,815
ML based anomaly detection.

177
00:11:45,315 --> 00:11:49,425
The post quantum cryptography is a
quantum resistant algorithm which

178
00:11:49,425 --> 00:11:54,405
is being built into tease to future
proof against quantum decryption risk.

179
00:11:54,905 --> 00:11:59,585
The second one, the homophobic encryption
allows computations on encrypted

180
00:11:59,585 --> 00:12:02,105
data without even decrypting it.

181
00:12:03,065 --> 00:12:06,095
It's still in the early
stages, but this could enable

182
00:12:06,095 --> 00:12:08,465
end-to-end encryption analytics.

183
00:12:08,965 --> 00:12:13,700
The third one, machine learning models are
now being used to detect zero day attacks

184
00:12:13,800 --> 00:12:16,135
by analyzing the VM behavior in real time.

185
00:12:16,635 --> 00:12:20,745
Now all of these advances will
make trust, scalable and adaptive

186
00:12:20,805 --> 00:12:22,845
as the threat landscape changes.

187
00:12:23,345 --> 00:12:27,515
And finally, to summarize, our
core challenge is scaling trust.

188
00:12:27,515 --> 00:12:32,615
In a world where infrastructure is shared
and the borders are flowed, confidential

189
00:12:32,615 --> 00:12:38,435
computing, trusted launch, and zero trust,
arens buzzwords, they are the foundation

190
00:12:38,435 --> 00:12:41,585
of secure and resilient digital ecosystem.

191
00:12:42,085 --> 00:12:46,645
Now this body of work from research to
implementation represents how I have

192
00:12:46,645 --> 00:12:51,235
contributed to advancing the security
posture of global cloud infrastructure.

193
00:12:51,735 --> 00:12:55,425
It's about enabling innovation
without fi, and that's the

194
00:12:55,425 --> 00:12:56,835
mission I continue to drive.

195
00:12:57,335 --> 00:13:00,035
Thank you all for joining me
today, and I hope you had a

196
00:13:00,035 --> 00:13:01,625
wonderful, insightful session.

197
00:13:01,865 --> 00:13:02,735
Thank you for your time.

