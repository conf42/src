1
00:00:00,480 --> 00:00:01,230
Hello everyone.

2
00:00:01,230 --> 00:00:01,650
Welcome.

3
00:00:03,420 --> 00:00:12,660
This is working as lead technology,
having 20 years experience

4
00:00:12,870 --> 00:00:15,000
mostly in, financial services.

5
00:00:15,570 --> 00:00:21,030
I'm glad here to speak about
platform engineering security

6
00:00:21,030 --> 00:00:22,935
in financial services.

7
00:00:24,775 --> 00:00:29,400
security is yeah, critical
and constantly evolving topic.

8
00:00:31,380 --> 00:00:40,560
Industry financial services, storm of
threats in 25 from sophisticated AI

9
00:00:40,950 --> 00:00:46,675
attacks, the primary security threats,
phishing and social engineering.

10
00:00:47,475 --> 00:00:49,875
Ransomware insider threats.

11
00:00:50,355 --> 00:00:52,695
Third party and supply changes.

12
00:00:53,145 --> 00:00:56,325
How we are going to provide
security and financial services.

13
00:00:57,435 --> 00:01:04,395
build resident multi talent, multi-tenant
infrastructure that balances unprecedented

14
00:01:04,395 --> 00:01:10,035
security demands with rapid innovation
for financial institutions migrating

15
00:01:10,035 --> 00:01:12,285
to cloud native architectures.

16
00:01:13,575 --> 00:01:18,525
The agenda, evolution of platform
security from traditional infrastructure

17
00:01:18,525 --> 00:01:25,575
to self-service ecosystems with zero
trust architecture, multi-tenant

18
00:01:25,575 --> 00:01:30,080
architecture, isolation boundaries,
service MIS technologies, and secure

19
00:01:30,080 --> 00:01:38,805
by default configurations, container
orchestration, microservices, bernet,

20
00:01:38,955 --> 00:01:41,415
security strategies, admission control.

21
00:01:44,520 --> 00:01:45,960
Security code

22
00:01:49,919 --> 00:01:56,190
policy framework integration,
identity management and observability

23
00:01:57,210 --> 00:02:01,585
access controls, threat detection
complaints about automation.

24
00:02:06,030 --> 00:02:08,009
The evolution of platform security.

25
00:02:08,130 --> 00:02:11,820
Modern platform engineering has
transformed from traditional

26
00:02:11,820 --> 00:02:17,610
infrastructure management to creating
sophisticated self-service ecosystems

27
00:02:18,000 --> 00:02:20,610
that empower development teams.

28
00:02:20,610 --> 00:02:26,070
While strict security controls
financial services, organizations

29
00:02:26,160 --> 00:02:30,660
face unique challenges, stringent
regulatory requirements.

30
00:02:34,200 --> 00:02:35,100
Cyber attacks

31
00:02:37,705 --> 00:02:41,105
I requirements need for business agility.

32
00:02:45,405 --> 00:02:50,565
Security code Multitenant
financial services require careful

33
00:02:51,165 --> 00:02:55,365
of isolation, boundaries, data
segregation, and access control,

34
00:02:57,945 --> 00:03:02,715
implementing sophisticated
micro segmentation strategies

35
00:03:02,715 --> 00:03:07,455
that create defense in depth
at every layer of the stack.

36
00:03:08,385 --> 00:03:13,635
Service miss technologies enabling fine
grain traffic control and the integration

37
00:03:13,635 --> 00:03:18,645
of all interservice communication
within mutual transfer layer services

38
00:03:18,990 --> 00:03:21,930
and policy driven access control.

39
00:03:31,650 --> 00:03:31,800
by

40
00:03:36,090 --> 00:03:44,105
legitimate exceptions, transform
security, enable of innovation service.

41
00:03:44,325 --> 00:03:49,704
ME technologies have emerged as
a current store of secure multi.

42
00:03:50,700 --> 00:03:56,220
Platform in financing, enabling
fine grain traffic control, precise

43
00:03:56,220 --> 00:04:01,290
routing and loading balancing between
services with comprehensive policy

44
00:04:01,290 --> 00:04:04,320
enforcement and end-to-end encryption.

45
00:04:05,070 --> 00:04:09,345
mutual LS for all service to
service communication, ensuring

46
00:04:09,935 --> 00:04:16,144
data confidentiality and integrating
when you're using, encryption and

47
00:04:16,289 --> 00:04:18,065
description, make sure it'll follow that.

48
00:04:19,875 --> 00:04:25,125
the patents while transforming that
data from one system to other system,

49
00:04:25,125 --> 00:04:31,034
from starting to ending portable
security policies that travel with

50
00:04:31,034 --> 00:04:37,820
workloads, ensuring consistent production
regardless of deployment location.

51
00:04:38,700 --> 00:04:44,520
It has to follow the same workloads and
ensuring the consist protection regardless

52
00:04:44,520 --> 00:04:50,370
of the deployment locations, wherever its
transmitting, it has rules, regulations,

53
00:04:51,360 --> 00:04:58,289
container orchestration, security,
Comprehensive, security strategy.

54
00:04:58,320 --> 00:04:59,789
Kubernetes has become the

55
00:05:02,070 --> 00:05:06,150
standard for container
orchestration in financial services.

56
00:05:06,210 --> 00:05:10,859
If we see all the organization,
they're following the Kubernetes

57
00:05:10,919 --> 00:05:14,715
with the microservice nowadays,
but its flexible demand.

58
00:05:14,995 --> 00:05:16,855
Careful security considerations.

59
00:05:17,695 --> 00:05:22,975
Platform engineers develop strategies
that address every aspect of the

60
00:05:22,990 --> 00:05:26,830
container life, image scanning
and vulnerability management.

61
00:05:27,870 --> 00:05:33,974
Secure configuration under, deployment,
runtime protection and monitoring.

62
00:05:34,284 --> 00:05:40,109
They cloud and for the image scanning
and nowadays the document systems game.

63
00:05:40,109 --> 00:05:48,030
So it'll load, the of data into their
systems and, with, random, they can

64
00:05:48,030 --> 00:05:52,560
able to provide the corresponding
document, admission controllers,

65
00:05:53,250 --> 00:05:55,320
enforce policies that prevent.

66
00:05:56,655 --> 00:05:59,835
Configuration from, entering production.

67
00:06:00,735 --> 00:06:07,905
If you see that, admission controls
here, we can provide the, and, based

68
00:06:07,905 --> 00:06:14,565
on that, only the particular, runtime
monitoring, detecting anomalous

69
00:06:14,565 --> 00:06:20,385
behavior that might indicate Compromise
Pro-active transforming security

70
00:06:20,385 --> 00:06:22,245
from reactive incident response.

71
00:06:22,480 --> 00:06:27,160
To predict threat prevention
admission controllers.

72
00:06:27,990 --> 00:06:32,340
Survey the critical gatekeepers
in financial services platforms,

73
00:06:32,730 --> 00:06:36,600
enforcing policies that prevent
insecure configuration from

74
00:06:36,600 --> 00:06:38,250
entering production environment.

75
00:06:38,730 --> 00:06:42,060
When it's layer elevation, each
and every layer have the specific

76
00:06:42,060 --> 00:06:47,010
validations to make sure it'll, hundred
percent the test cases will cause.

77
00:06:47,310 --> 00:06:50,310
That way they're going to
implement checks, everything

78
00:06:50,430 --> 00:06:55,470
from resource limits to security
contract, ensuring workloads meets.

79
00:06:56,485 --> 00:07:00,685
organizational standards policy
and certain automatically rejects

80
00:07:01,255 --> 00:07:06,625
non-compliant workloads and provides
clear feedback mediation steps so that

81
00:07:06,625 --> 00:07:13,135
it, those noncompliant workloads details
because all validation complaints,

82
00:07:13,555 --> 00:07:18,505
reporting and security analysis so that
if something happens, they can go back

83
00:07:18,510 --> 00:07:25,344
to the history and they'll verify it
to track the, where it's, violating.

84
00:07:26,520 --> 00:07:31,979
G and security as a code, in
the DevOps systems, everywhere.

85
00:07:31,979 --> 00:07:33,195
They're the gi.

86
00:07:33,195 --> 00:07:38,430
So gi closely platform
teams, infrastructure.

87
00:07:41,159 --> 00:07:43,109
Infrastructure as a code, as code.

88
00:07:44,190 --> 00:07:49,680
treating rigorous review process
policy as code codifying, security

89
00:07:49,680 --> 00:07:54,755
requirement, ways that missions can
enforce and humans can understand.

90
00:07:56,730 --> 00:08:00,690
progressive Security Gate, validating.

91
00:08:02,729 --> 00:08:09,450
Before changes, secure scanning,
integrating vulnerabilities and

92
00:08:09,450 --> 00:08:12,690
compliance scanning throughout
the deployment pipelines.

93
00:08:13,260 --> 00:08:17,760
If you have even major
critical minor info level.

94
00:08:21,515 --> 00:08:27,125
Making it and providing so that
the security, most of the Secur

95
00:08:29,825 --> 00:08:32,885
99, 99 0.99%

96
00:08:36,184 --> 00:08:41,015
repeatable deployment patterns that
eliminates configuration drift and

97
00:08:41,015 --> 00:08:43,505
ensure consistent security controls.

98
00:08:45,795 --> 00:08:48,255
Identity and the access management.

99
00:08:48,255 --> 00:08:48,705
At scale.

100
00:08:48,825 --> 00:08:54,855
Managing identities across complex
financial services ecosystems

101
00:08:54,855 --> 00:08:59,745
require sophisticated approaches
that balance security with usability,

102
00:09:00,225 --> 00:09:04,605
identity lifecycle management,
automatically provisioning under.

103
00:09:05,475 --> 00:09:12,015
De provisioning access based on the
author, authoritative sources attribute

104
00:09:12,285 --> 00:09:18,735
require access evolving beyond role-based
models to consider context for fine

105
00:09:18,735 --> 00:09:23,445
grain permissions, mission identity
management, implementing robust patterns

106
00:09:24,105 --> 00:09:29,970
for managing services, account, a, keys,
passwords, and other non-human identities.

107
00:09:32,700 --> 00:09:35,430
Incident platform

108
00:09:38,705 --> 00:09:41,850
of telemetry data.

109
00:09:43,065 --> 00:09:48,615
Platform engineers must build systems
that transform this data into actionable

110
00:09:48,615 --> 00:09:54,705
security intelligence in distributed
tracing, providing visibility into

111
00:09:54,705 --> 00:09:59,775
complex request flow, enabling teams
to understand not just what happened,

112
00:10:00,135 --> 00:10:06,370
but why and how security information
and event management creating.

113
00:10:09,000 --> 00:10:15,750
And correlate platform event with
security signals drastically reducing

114
00:10:16,380 --> 00:10:18,900
detection and investigation time.

115
00:10:19,439 --> 00:10:25,949
Automated response, implementing workflows
that contain threats while gathering

116
00:10:28,035 --> 00:10:30,354
evidence for later analysis.

117
00:10:32,104 --> 00:10:34,395
What are the compliance, automations.

118
00:10:35,325 --> 00:10:37,680
Meeting requirement efficiently.

119
00:10:37,815 --> 00:10:38,505
Efficiently.

120
00:10:39,255 --> 00:10:45,195
Financial services organizations
face complexity requirements that

121
00:10:45,195 --> 00:10:50,595
traditionally required manually
processes and extensive documentation.

122
00:10:51,015 --> 00:10:57,015
Platform Mini are automate,
complaints through continuous

123
00:10:57,015 --> 00:11:01,785
monitoring and, evidence
collection, automated as assessment

124
00:11:02,175 --> 00:11:03,645
against regulatory requirements.

125
00:11:06,570 --> 00:11:15,295
Generation immutable investigation
verification, from, in

126
00:11:19,650 --> 00:11:21,535
platform while reducing

127
00:11:23,795 --> 00:11:24,015
and,

128
00:11:34,770 --> 00:11:35,220
Friction.

129
00:11:36,780 --> 00:11:39,720
the most secure platforms
provides no value.

130
00:11:39,810 --> 00:11:42,090
Developers can't use it efficiently.

131
00:11:42,600 --> 00:11:48,210
Platform needs to focus intensively
on creating developer experiences

132
00:11:48,270 --> 00:11:54,390
that make secure choices, the EEG
choices, self-service capabilities,

133
00:11:54,630 --> 00:11:57,569
enabling developer, to provision.

134
00:11:59,474 --> 00:12:06,435
While automating policy source
security requirements are meting,

135
00:12:06,435 --> 00:12:12,165
writing developers will archite
solution without, cons concerning

136
00:12:12,165 --> 00:12:17,599
innovation through templates, examples,
and automated tools, feedback.

137
00:12:19,260 --> 00:12:24,540
Monitoring how developers interact with
platform capabilities and where friction

138
00:12:24,540 --> 00:12:27,450
occurs to continuously refined offerings.

139
00:12:27,810 --> 00:12:31,170
This approach allows developers
to focus on business logic

140
00:12:31,170 --> 00:12:32,880
rather than infrastructure

141
00:12:35,280 --> 00:12:36,510
building for the future.

142
00:12:38,190 --> 00:12:42,405
Architecture a threat landscape
and regulatory continues to evolve.

143
00:12:43,964 --> 00:12:48,974
Platform architecture and can
adapt without reconstruction.

144
00:12:49,785 --> 00:12:56,265
Platform engineering build
evolutionary through modular and

145
00:12:56,265 --> 00:13:02,594
clear interfaces, comprehensive
testing, engineering practices,

146
00:13:04,035 --> 00:13:05,385
updateable security controls as well.

147
00:13:07,905 --> 00:13:09,135
Engineering for security.

148
00:13:11,400 --> 00:13:17,310
Engineering practice platform teams
understand systems, behavior, relevant

149
00:13:17,369 --> 00:13:20,010
weaknesses before attackers can them.

150
00:13:20,670 --> 00:13:27,869
One is control experiments, failure,
injections, observ analysis, security

151
00:13:28,949 --> 00:13:34,619
Harding, the path forward platform
Engineering, security, and financial

152
00:13:34,619 --> 00:13:38,160
services represent critical discipline.

153
00:13:38,865 --> 00:13:41,145
That continues to evolve rapidly.

154
00:13:41,535 --> 00:13:45,015
Success requires balancing,
completing demands.

155
00:13:45,495 --> 00:13:51,350
One is security and usability, creating
security systems that developers can.

156
00:13:54,135 --> 00:13:56,145
Second is complaints and agility.

157
00:13:56,145 --> 00:14:00,465
Meeting regulatory requirements
while enabling rapid innovation so

158
00:14:00,465 --> 00:14:02,535
it won't lead further complexion.

159
00:14:02,925 --> 00:14:06,405
Standardization and innovation,
providing consistent patterns

160
00:14:06,465 --> 00:14:10,425
that don't any creative solutions
so that it'll be adaptive.

161
00:14:10,425 --> 00:14:16,785
Understand so that it'll be easy to
use in the financial, security systems.

162
00:14:17,925 --> 00:14:22,065
Ent future addressing current rates
while building adaptable architectures.

163
00:14:23,110 --> 00:14:28,330
Whenever we are adding that, current
threats, if you're considering it

164
00:14:28,600 --> 00:14:33,160
has to support for the future also
to restrict as well by embracing

165
00:14:33,160 --> 00:14:37,485
security as a fundamental platform
capability rather than and feature

166
00:14:38,770 --> 00:14:43,120
platform engineering teams questioning
their organization for success in your

167
00:14:43,570 --> 00:14:46,930
increasingly complex digital landscape.

168
00:14:48,190 --> 00:14:50,755
Thank you all for giving
me the opportunity.

