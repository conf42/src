1
00:00:00,210 --> 00:00:02,000
All right, let's get started.

2
00:00:02,719 --> 00:00:05,220
And first of all, hello everyone.

3
00:00:05,819 --> 00:00:07,239
Welcome to my talk today.

4
00:00:08,079 --> 00:00:11,849
And this talk was brought by the
Qtion stack with the open source

5
00:00:11,849 --> 00:00:13,059
project that I'm working on.

6
00:00:13,960 --> 00:00:18,399
And today I will go into the simple talk.

7
00:00:18,899 --> 00:00:24,549
I will address the crucial issue we
encounter in software development.

8
00:00:24,549 --> 00:00:29,579
Understanding the challenge is essential
for creating an effective solution.

9
00:00:30,039 --> 00:00:33,519
And driving processes in our bills.

10
00:00:34,409 --> 00:00:36,779
And we were going to
talk about the kitchen.

11
00:00:37,139 --> 00:00:41,479
and how to integrate the kitchen
with your developer platform.

12
00:00:42,049 --> 00:00:45,259
to optimize the software
development project.

13
00:00:45,759 --> 00:00:47,369
the first quick, introduction.

14
00:00:47,809 --> 00:00:48,409
Allow me.

15
00:00:48,979 --> 00:00:49,629
Presenter.

16
00:00:50,209 --> 00:00:50,939
I am.

17
00:00:50,940 --> 00:00:54,429
I work as cloud engineer at the.

18
00:00:54,929 --> 00:01:02,429
are responsible for working on platform
services like Kuber, engine Cloud, cloud

19
00:01:02,429 --> 00:01:08,469
Observability, and also, designing and
building the IDP that serve a large

20
00:01:08,919 --> 00:01:11,990
number of developer, on the daily basis.

21
00:01:11,990 --> 00:01:16,540
And I'm also working on the
<INAUDIBLE> Open source project,

22
00:01:17,090 --> 00:01:21,430
as is, a part of the CNCF sandbox
and platform swimming landscape.

23
00:01:21,490 --> 00:01:24,910
And this is also the tool
we're going to talk today.

24
00:01:25,410 --> 00:01:27,800
about the agenda today.

25
00:01:28,120 --> 00:01:33,700
And I will cover the background before
jumping in the Qsend and IDP itself.

26
00:01:34,589 --> 00:01:42,200
Mostly so that we have enough context
for the solution to make sense.

27
00:01:42,700 --> 00:01:45,550
And we will talk about
the challenge thing.

28
00:01:46,050 --> 00:01:48,180
We're placing, specifically.

29
00:01:49,125 --> 00:01:53,565
the unique one that's contributed
to the birth of this project.

30
00:01:54,165 --> 00:01:59,415
And I will explain some of the basic
concepts of the Qtion, with the platform

31
00:01:59,415 --> 00:02:01,365
of Hadoop tool in the Qtion stack.

32
00:02:02,175 --> 00:02:09,895
And then we will go into the powerful
capability of the Qtion, and demonstrate

33
00:02:10,065 --> 00:02:17,035
how integrating it in our developer
platform that can enhance the Qtion.

34
00:02:17,635 --> 00:02:19,765
our project and driving the chat.

35
00:02:21,135 --> 00:02:29,625
the term DevOps, was officially introduced
in 2009, The foundation of DevOps was

36
00:02:30,135 --> 00:02:36,125
envisioned as a cultural shift, an
enhancing collaboration between the

37
00:02:36,135 --> 00:02:38,345
development and the operation team.

38
00:02:39,035 --> 00:02:45,755
However, at the concept that involved
some, Organizations have veered

39
00:02:45,885 --> 00:02:51,585
away from it of an original intent,
rather than fostering teamwork.

40
00:02:52,455 --> 00:02:58,995
There has been a tendency for some
companies to place an excessive burden

41
00:02:59,035 --> 00:03:07,277
on developers that reallocate various
operational responsibilities to them,

42
00:03:07,277 --> 00:03:18,059
which detracts from the foundational while
the DevOps are fantastic in theory, but

43
00:03:18,059 --> 00:03:21,959
put it in the practice can be his or miss.

44
00:03:22,459 --> 00:03:27,439
Along with the ship to the DevOp,
a few chains are making a bit

45
00:03:27,439 --> 00:03:29,599
charter for the developers.

46
00:03:30,149 --> 00:03:35,669
we are dealing with a huge variety
of tune popping up everywhere.

47
00:03:36,099 --> 00:03:38,799
more people adopting cloud services.

48
00:03:39,299 --> 00:03:47,009
And some pretty complex tools become
more popular like Kubernetes, Terraform,

49
00:03:47,319 --> 00:03:50,810
Istio, CloudFrame, or Qtion, maybe?

50
00:03:50,810 --> 00:03:59,456
After when developers suddenly have
to, What they had around complicate,

51
00:03:59,456 --> 00:04:04,536
complicated tool, cloud native
tool, and just do a single stop like

52
00:04:04,906 --> 00:04:11,106
chaining an environment variable
or fixing basic database setup.

53
00:04:11,776 --> 00:04:15,536
this has, this has led,
crazy amount of mental train.

54
00:04:16,036 --> 00:04:20,716
Totally messing up with the
developer experience and dropping

55
00:04:20,717 --> 00:04:23,356
the productivity to the floor.

56
00:04:23,856 --> 00:04:30,146
Just take a look at how bad things
have gotten over the past 20 years and

57
00:04:30,276 --> 00:04:36,326
honestly, it has been any size that's
going to slow down or change anytime soon.

58
00:04:36,826 --> 00:04:40,976
We use the Chinese platform
as a service set up.

59
00:04:41,526 --> 00:04:47,616
Almost 10 years, but we found
that it's start to hold us

60
00:04:47,636 --> 00:04:50,476
back due to some major issue.

61
00:04:50,936 --> 00:04:56,366
The main problem is about, infrastructure
has gotten super complex all time.

62
00:04:56,367 --> 00:05:03,000
People are swamped with all this
infrastructure knowledge and they

63
00:05:03,000 --> 00:05:09,376
have to, they need to have and the
platform itself has become bottleneck.

64
00:05:09,876 --> 00:05:15,916
When it comes to making infrastructure
capability available, and they often

65
00:05:15,926 --> 00:05:22,916
have many teams involved, which makes the
teamwork and coordination pretty tough.

66
00:05:23,656 --> 00:05:28,996
On the top of that, on the top of that,
configuring our security parameters

67
00:05:28,996 --> 00:05:33,336
and the privacy is harder than ever.

68
00:05:33,336 --> 00:05:33,436
Thanks a lot.

69
00:05:33,936 --> 00:05:38,776
the platform engineering here is
to make it easier for developers.

70
00:05:39,456 --> 00:05:44,756
Many top tech, top tech companies have
set up platform teams, dedicated to

71
00:05:44,756 --> 00:05:50,566
build the making internal developer
platform, the team approach that

72
00:05:50,576 --> 00:05:57,586
works like a product focusing on,
simplifying and the developer journey.

73
00:05:58,086 --> 00:06:03,746
With, with this platform, the
developer no longer have to,

74
00:06:03,796 --> 00:06:06,456
juggle complexing toolchain.

75
00:06:06,466 --> 00:06:09,786
They can focus on what,
focus on what they love most.

76
00:06:09,846 --> 00:06:15,436
Coding, creating amazing application
with a friendly approach, reduce

77
00:06:15,456 --> 00:06:17,626
stress and boost productivity.

78
00:06:18,246 --> 00:06:23,596
Allow team to work quickly and
efficiently without compromise.

79
00:06:24,096 --> 00:06:31,366
On quality, so we are the platform
team defy that we refer as the

80
00:06:31,376 --> 00:06:32,966
voting path for the developer.

81
00:06:33,806 --> 00:06:39,438
This look really do look, complex,
but, I will take a check in the main

82
00:06:39,448 --> 00:06:42,108
point so you can understand it easily.

83
00:06:42,938 --> 00:06:49,058
we believe that the application
team on the top left of your screen.

84
00:06:49,558 --> 00:06:55,528
should focus on the aspect that
are not stick to the environment.

85
00:06:56,418 --> 00:07:02,138
Typically this is intent about that,
the application team want to define

86
00:07:02,138 --> 00:07:07,568
what the application will have, like
the workload of the application.

87
00:07:08,108 --> 00:07:13,934
the ascensor, the other ascensor
Infrastructure like the database

88
00:07:13,934 --> 00:07:20,203
that application use without
worrying about the specific database

89
00:07:20,203 --> 00:07:22,989
specification for given environment.

90
00:07:23,039 --> 00:07:28,519
on the bottom left of the figure, we
involve that the platform team should

91
00:07:28,529 --> 00:07:30,469
be responsible for the certain task.

92
00:07:30,769 --> 00:07:35,219
They need to handle a
standard workload profile.

93
00:07:35,719 --> 00:07:39,589
We're choosing the community
deployment on the customer workload

94
00:07:40,089 --> 00:07:42,489
along with define the behavior line.

95
00:07:42,989 --> 00:07:48,249
In this point, Percy, father, more
platform team, also set a standard.

96
00:07:48,849 --> 00:07:52,259
For the variable dependency line,
that way, networking behavior.

97
00:07:53,099 --> 00:07:55,529
Which, that needs to be consistent.

98
00:07:56,159 --> 00:08:00,419
this is some, this is system time
require different complication

99
00:08:00,419 --> 00:08:02,489
to speak to the each environment.

100
00:08:02,609 --> 00:08:07,919
For example, having the lack of
larger database in the production

101
00:08:07,919 --> 00:08:10,169
and smaller one in the development.

102
00:08:10,669 --> 00:08:14,719
And we believe application developer
should need to handle and worry

103
00:08:14,719 --> 00:08:17,119
about the, the whole approach.

104
00:08:17,299 --> 00:08:21,609
Consider two component, one
being, standard capability,

105
00:08:21,609 --> 00:08:23,689
which we call the, QC model.

106
00:08:24,239 --> 00:08:29,279
and the other being the environment,
specific configuration should,

107
00:08:29,529 --> 00:08:33,359
such as, writing database by
different in different environment.

108
00:08:33,889 --> 00:08:38,339
The fusion platform orchestrator,
which is the term we currently

109
00:08:38,349 --> 00:08:46,229
use and, take into take, in taking
two input one from the, platform.

110
00:08:47,209 --> 00:08:54,189
Team one from the application team
and, we refer and is efficiently merge.

111
00:08:54,359 --> 00:08:59,219
the two aspect allow them with
the approach deployment contact,

112
00:08:59,759 --> 00:09:02,219
we refer as the workspace.

113
00:09:03,149 --> 00:09:08,679
you can think, workspace as a general
concept of the, application environment.

114
00:09:09,179 --> 00:09:16,959
And, this come together, we call, deep
facing and specification, which we hope

115
00:09:16,969 --> 00:09:21,269
that makes straightforward and agnostic
to both environment and platform.

116
00:09:21,649 --> 00:09:28,271
The platform engineer will define element,
elements such as model along with the

117
00:09:28,271 --> 00:09:29,954
environment specific configuration.

118
00:09:30,434 --> 00:09:36,364
And this will, match together to
produce what we refer to as spec,

119
00:09:36,864 --> 00:09:38,394
resources facing data format.

120
00:09:39,364 --> 00:09:45,814
This spec will stop a uniform
format, uniform format, AP cable,

121
00:09:46,524 --> 00:09:52,584
to both kuber the resources and
cloud provider resources in infras.

122
00:09:52,674 --> 00:09:58,094
Ultimately, this spec acts
as a single source of truth

123
00:09:58,484 --> 00:10:04,514
corresponding to one, one to one the
environment's actual infrastructure.

124
00:10:05,014 --> 00:10:10,624
So we will have, going through the
<INAUDIBLE> app configuration, in the

125
00:10:10,624 --> 00:10:15,984
contact of Cuon app configuration,
give developer will play a crucial role

126
00:10:16,044 --> 00:10:18,084
to define the application component.

127
00:10:18,564 --> 00:10:21,504
They just focus on the spec specific?

128
00:10:22,004 --> 00:10:22,334
Yeah.

129
00:10:22,334 --> 00:10:28,784
Key elements such as the ER
configuration, the monitoring system.

130
00:10:28,934 --> 00:10:38,574
The monitoring component and the database,
cloud based database, like using a cloud

131
00:10:38,914 --> 00:10:45,734
and the version of database, for example,
in here, and they don't need to worry

132
00:10:45,734 --> 00:10:53,774
about, without needing to address the
infrastructure concept or the deployment.

133
00:10:54,274 --> 00:10:58,054
Of the required services
and application itself.

134
00:10:58,544 --> 00:11:02,084
this stream, of course allows them
to enhance their productivity,

135
00:11:02,084 --> 00:11:08,144
and especially in the open process
and about the Cuon workspace.

136
00:11:08,874 --> 00:11:13,269
you can understand the workflow
as the, environment, like

137
00:11:13,599 --> 00:11:16,449
production environment, and.

138
00:11:17,309 --> 00:11:23,359
Staging environment, development
environment, the workspace is a

139
00:11:24,019 --> 00:11:30,369
concept that corresponds to a specific
target environment used to deploy

140
00:11:30,639 --> 00:11:34,093
applications in a contemporary use.

141
00:11:34,093 --> 00:11:40,959
This typical refers to the Kubernetes
cluster that hosts the application

142
00:11:41,169 --> 00:11:44,349
workload along with an optional cloud.

143
00:11:44,819 --> 00:11:50,019
provider, and, to provisioning necessary
infrastructure resource such as database.

144
00:11:50,519 --> 00:11:55,869
And, in additional serving as the
deployment works by, to link with,

145
00:11:55,899 --> 00:12:01,119
set up, platform configuration
that apply to all application

146
00:12:01,129 --> 00:12:03,479
deployed within that, workspace.

147
00:12:03,759 --> 00:12:03,959
Thank you.

148
00:12:04,364 --> 00:12:11,164
They can, define, platform, team
can define any resources on the,

149
00:12:11,664 --> 00:12:18,621
environment, the secret store from any
provider, cloud provider, and the code

150
00:12:18,621 --> 00:12:21,114
that application will be deployed on.

151
00:12:21,614 --> 00:12:25,374
So we will go in deeper in the Qt model.

152
00:12:25,954 --> 00:12:30,254
This model, this job really,
this, will, This is our view.

153
00:12:30,254 --> 00:12:34,274
We'll provide a deeper understanding
of the functional objection model.

154
00:12:34,774 --> 00:12:40,894
We, the execution model effectively
manage board C with the resources and

155
00:12:40,894 --> 00:12:48,964
from the, from the app com app developer
and the platform publication, and

156
00:12:48,964 --> 00:12:55,014
translating them into the ation that
show as the middle layer data format.

157
00:12:55,464 --> 00:13:01,564
And calculating both, resource
type and the platform team.

158
00:13:01,634 --> 00:13:06,914
task with the managing the
configuration, refer at the workspace,

159
00:13:07,064 --> 00:13:12,774
configuration with team, the
contact execution, and typically the

160
00:13:12,774 --> 00:13:15,654
configuration set of the default value.

161
00:13:15,654 --> 00:13:18,934
For example, here, they will follow the.

162
00:13:19,484 --> 00:13:26,204
the platform team will define the
model in the workspace that, that,

163
00:13:26,304 --> 00:13:32,129
the application can be used, like the
database we will use, ware database

164
00:13:32,134 --> 00:13:40,349
with the 20 nearby upside and the
instant class of the TBT three micro.

165
00:13:40,849 --> 00:13:45,289
And another profile is the
small class with the size of 50.

166
00:13:45,289 --> 00:13:49,119
And the instant class is the dbt3 small.

167
00:13:49,379 --> 00:13:53,049
And the large class is
using the dbt2 large.

168
00:13:53,669 --> 00:13:57,939
for more specific sector of the
application required customer

169
00:13:57,939 --> 00:14:02,199
testing, it is possible to define
a variety in the configuration.

170
00:14:02,699 --> 00:14:07,689
And, however, this spec will
be for more advanced to use K.

171
00:14:08,099 --> 00:14:16,299
So it is not cover in this, top, you can
learn more in the future website provided

172
00:14:16,799 --> 00:14:19,689
from the perspective of the application.

173
00:14:20,059 --> 00:14:26,489
Developer, the process begin to select
the model and the subsequent created.

174
00:14:27,144 --> 00:14:30,194
created, creating, configuration file.

175
00:14:30,254 --> 00:14:37,164
This file will serve, as a declare
model that will totally describe

176
00:14:37,164 --> 00:14:42,244
application configuration that I
described in the, previous slide.

177
00:14:42,484 --> 00:14:45,544
Furthermore, detail is going first.

178
00:14:45,784 --> 00:14:48,184
We will design in the next slide.

179
00:14:49,024 --> 00:14:50,664
Let go into the next slide.

180
00:14:51,164 --> 00:14:51,644
Okay.

181
00:14:51,704 --> 00:14:53,624
This is the workflow.

182
00:14:53,714 --> 00:15:01,074
This look a little bit complex,
but we will just focus on, three

183
00:15:01,114 --> 00:15:06,774
part of it below here is the
write, generate, and application.

184
00:15:07,544 --> 00:15:12,924
So with the write process, first of
all, platform orchestrator, platform

185
00:15:12,924 --> 00:15:18,514
team will define the model of the
QC model, like database model.

186
00:15:19,289 --> 00:15:28,849
And monitoring model, storage model,
anything, and it will, after defining the

187
00:15:29,139 --> 00:15:36,739
model, it will, the platform team will
define the workspace configuration, like

188
00:15:36,789 --> 00:15:41,569
the environment of the application, like
dev environment and product environment,

189
00:15:41,569 --> 00:15:48,059
that each environment, the platform
engineer will provide the resources.

190
00:15:48,499 --> 00:15:53,679
That's what Spike can use and,
Kubernetes cluster of that environment

191
00:15:54,529 --> 00:15:56,549
and cloud provider of that environment.

192
00:15:57,049 --> 00:16:03,869
And about the application
developer, they will just care

193
00:16:03,869 --> 00:16:06,914
about the app configuration.

194
00:16:07,464 --> 00:16:13,864
conflict about the app workload and
the database that, the database I,

195
00:16:13,894 --> 00:16:19,514
that application use the monitoring,
that application, use the story, that

196
00:16:19,724 --> 00:16:22,774
application use and enter this process.

197
00:16:23,104 --> 00:16:28,504
The configuration are merged
into what is a referral.

198
00:16:29,194 --> 00:16:36,194
To the, as the intent workshop at a
single shot of truth, a single shot of

199
00:16:36,194 --> 00:16:42,484
truth, for all resources and scheduled
for the point in your environment.

200
00:16:43,294 --> 00:16:45,964
One intent is a tab listed.

201
00:16:46,624 --> 00:16:51,704
The next phase is applying that
during which, specific resource,

202
00:16:51,764 --> 00:16:53,584
at a creative or updated.

203
00:16:54,144 --> 00:16:59,554
Importantly, before reaching
the upline step, there is a

204
00:16:59,554 --> 00:17:01,554
crucial step called preview.

205
00:17:02,054 --> 00:17:11,024
This step allows a user to review and
leave different of the resources that's

206
00:17:11,084 --> 00:17:17,824
about to change, ensure that expectations
are set for upcoming modification.

207
00:17:18,324 --> 00:17:21,394
Just a simple, workflow of the Qtion.

208
00:17:22,004 --> 00:17:27,504
And now we're going to provide
some, methods to integrate

209
00:17:27,504 --> 00:17:30,544
the Qtion with, your IDP.

210
00:17:30,884 --> 00:17:37,194
And Qtion will work as the
platform orchestrator in your IDP.

211
00:17:37,694 --> 00:17:42,704
Then the application, application
developer just care about the

212
00:17:42,794 --> 00:17:44,684
developer control plane here.

213
00:17:45,094 --> 00:17:48,854
About the git repository have
the app configuration file.

214
00:17:49,594 --> 00:17:57,224
And then the Qtion will add the
CI pipeline, like building images,

215
00:17:57,254 --> 00:18:03,174
testing, and verifying some spot
of the application workflow.

216
00:18:04,164 --> 00:18:07,014
the next step is the CD pipeline.

217
00:18:07,074 --> 00:18:14,104
It either is we'll get the application
configuration, app configuration

218
00:18:14,104 --> 00:18:19,019
from the SoCo and the Cuon model,
that platform engineering device

219
00:18:19,519 --> 00:18:27,994
before is we're going to, deploy the
application and, Provisioning, require

220
00:18:28,014 --> 00:18:30,774
infrastructure for the application.

221
00:18:31,124 --> 00:18:36,024
This workflow will have
continual delivery, everything

222
00:18:36,284 --> 00:18:38,504
that, application developer.

223
00:18:39,404 --> 00:18:44,744
Don't need to worry about the below
layer, like provisioning database.

224
00:18:45,384 --> 00:18:51,564
how to deploy the application in each
environment, the application global.

225
00:18:51,564 --> 00:18:56,214
Just define everything in the
app configuration, and then

226
00:18:56,214 --> 00:18:58,704
the workflow of the pipeline.

227
00:18:58,704 --> 00:19:00,134
We will do it for them.

228
00:19:00,714 --> 00:19:09,604
The platform team will, define the
Qtion model, define the, workflow of

229
00:19:09,944 --> 00:19:17,284
the CI pipeline or CD pipeline, define
everything, set up the Qtion stack, so

230
00:19:17,294 --> 00:19:23,714
that, AppDeveloper just puts the code to
the version control like GitHub or GitLab,

231
00:19:24,069 --> 00:19:27,299
Watch, watch, CI flow and CD workflow.

232
00:19:28,179 --> 00:19:33,679
And then after that, the application
will be delivered to the something

233
00:19:33,679 --> 00:19:39,079
like committee engine or every
infrastructure will be for business.

234
00:19:39,579 --> 00:19:44,179
If you have any change in the app
configuration, the Qtion tech will

235
00:19:44,189 --> 00:19:48,229
handle that task and change like
they can change the database size,

236
00:19:48,229 --> 00:19:54,999
they can remove the database, or
add more database, for example.

237
00:19:55,499 --> 00:20:01,319
The Qtion currently operates as a
command line interface tool that's

238
00:20:01,329 --> 00:20:03,509
functional as the event driven interface.

239
00:20:03,529 --> 00:20:09,889
Platform orchestrator is, introduced
a protocol driven collaboration

240
00:20:10,229 --> 00:20:15,769
paradigm that allows platform owner
and application developer can to

241
00:20:15,819 --> 00:20:18,899
execute their own independently.

242
00:20:19,359 --> 00:20:25,079
The Qsync then orchestrator orchestrate
their contribution dynamically matching

243
00:20:25,159 --> 00:20:27,659
and generating the final output.

244
00:20:28,414 --> 00:20:35,784
Infrastructure pacing specification
refer at, spec, subsequent apply by tion.

245
00:20:36,714 --> 00:20:44,544
However, the existing version tion with
the limitation in providing the scale.

246
00:20:44,694 --> 00:20:51,514
Both of this, user can user have to
encounter challenge related to the

247
00:20:51,574 --> 00:20:53,584
credential management resources.

248
00:20:54,224 --> 00:21:01,194
Visibility from flexibility in managing
permission and the effort, required

249
00:21:01,224 --> 00:21:03,754
to integrate with other systems.

250
00:21:04,304 --> 00:21:09,844
in the response to the challenge, we
are posting a Qtion server, and this

251
00:21:09,894 --> 00:21:17,334
will be by the version of the Qtion will
operate as the long run main service.

252
00:21:17,334 --> 00:21:17,504
Okay.

253
00:21:18,049 --> 00:21:23,819
and this will expose the REST
service endpoint, thereby enhance its

254
00:21:23,829 --> 00:21:26,419
functionality and user experience.

255
00:21:26,809 --> 00:21:33,829
And it can easily integrate with the
internal developer portal like Backstair.

256
00:21:34,449 --> 00:21:39,699
We'll have more about the
backstage plugin and you guys

257
00:21:39,819 --> 00:21:42,779
can easily integrate it in on it.

258
00:21:43,379 --> 00:21:52,219
about integrate on it, like fusion,
presently, currently can integrate it in

259
00:21:52,219 --> 00:21:56,139
your CI pipeline work as the, common line.

260
00:21:56,964 --> 00:22:04,434
And, but in the future, using server will
release and you can have your centralized

261
00:22:05,114 --> 00:22:09,124
platform orchestrator by every project.

262
00:22:09,674 --> 00:22:15,794
You can call to the platform orchestrator
to handle the tasks, like deploying

263
00:22:15,794 --> 00:22:22,294
application provisioning infrastructure,
just, wait for the fusion server.

264
00:22:22,794 --> 00:22:26,484
in the future in this will really show.

265
00:22:26,984 --> 00:22:30,764
And it's also the last slide of this talk.

266
00:22:31,394 --> 00:22:38,204
Thank you for attend my talk today and
here is my in some information about me.

267
00:22:38,384 --> 00:22:43,684
You can, contact me to learn
more about the Q or going through

268
00:22:43,684 --> 00:22:49,534
the Houston Q website here, to
learn more about the project and.

269
00:22:50,144 --> 00:22:53,254
I'm waiting for the release
of the Qt 79 server.

270
00:22:54,204 --> 00:22:58,144
thank you, again, for attending this talk.

271
00:22:59,144 --> 00:23:03,534
And, hope you guys have a
nice day with the conference.

272
00:23:03,964 --> 00:23:04,384
Goodbye.

