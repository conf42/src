1
00:00:00,500 --> 00:00:01,240
Hello everyone.

2
00:00:01,370 --> 00:00:04,010
Good morning, good afternoon, good
evening, wherever you are from.

3
00:00:04,170 --> 00:00:05,760
Thank you for tuning into my talk today.

4
00:00:06,460 --> 00:00:08,469
A quick disclaimer before we get started.

5
00:00:08,540 --> 00:00:11,450
This presentation includes some
research points and also some

6
00:00:11,450 --> 00:00:15,589
demos, which are purely based
on my view and as an attendee.

7
00:00:15,679 --> 00:00:19,400
You are encouraged to perform your
own research and any professional

8
00:00:19,400 --> 00:00:22,250
before you start implementing
this within your organization.

9
00:00:22,750 --> 00:00:23,770
Speaker introduction.

10
00:00:23,980 --> 00:00:27,840
My name is Anto Pel and I'm a
cybersecurity professional with

11
00:00:27,840 --> 00:00:30,900
background in computer science
and master's in cybersecurity.

12
00:00:31,590 --> 00:00:38,480
I hold many industry certifications
like C-I-S-S-P-C-S-S-L-P-C-A-S-P.

13
00:00:38,510 --> 00:00:43,085
Some of these are industry specific
security certifications and, I basically

14
00:00:43,085 --> 00:00:47,025
like, enjoying challenging myself
and I was able to acquire all these

15
00:00:47,025 --> 00:00:52,125
skills when I was working in different
organizations in different roles.

16
00:00:52,545 --> 00:00:56,655
And I'm also like multi-cloud
certified in all the three

17
00:00:56,655 --> 00:01:01,605
clouds across Azure, GCP and AWS.

18
00:01:02,105 --> 00:01:07,185
And I am a lead cloud
security engineer at Humana.

19
00:01:07,685 --> 00:01:10,385
Where I'm leading some of the
cloud security initiatives

20
00:01:10,445 --> 00:01:12,065
across the enterprise.

21
00:01:12,515 --> 00:01:16,805
And I'm basically passionate about
threat hunting and capture the flag,

22
00:01:16,805 --> 00:01:21,665
even some challenges because they give
me an opportunity to think like a bad

23
00:01:21,665 --> 00:01:25,505
actor so that we can start building
controls in a more effective way.

24
00:01:25,995 --> 00:01:29,595
And I also contribute to the home
automation project, and I like

25
00:01:29,655 --> 00:01:34,375
connecting with people talking about
home automation, cybersecurity insights.

26
00:01:34,375 --> 00:01:38,655
I. General automation, any of such
please reach out to me on LinkedIn

27
00:01:38,775 --> 00:01:39,705
if you would like to connect.

28
00:01:39,885 --> 00:01:44,225
And also you can use the QR
code, which is out there to

29
00:01:44,225 --> 00:01:45,785
basically connect me on LinkedIn.

30
00:01:46,605 --> 00:01:51,235
Moving on to our topic today, which
is cloud security poster management

31
00:01:51,480 --> 00:01:52,950
and cloud native integration.

32
00:01:53,490 --> 00:01:57,090
So we are gonna be doing a deep
dive understanding what cloud

33
00:01:57,090 --> 00:01:59,040
security poster management is.

34
00:01:59,440 --> 00:02:03,040
And specifically focusing
on cloud native integration.

35
00:02:03,790 --> 00:02:09,520
So what we are gonna be talking about is
how do you secure the cloud with cloud

36
00:02:09,520 --> 00:02:15,280
native provider capabilities so that
whenever any kind of like deployment

37
00:02:15,280 --> 00:02:21,520
goes through the cloud, you can secure
it either if it comes from your IAC

38
00:02:21,520 --> 00:02:23,740
or even if it comes from the platform.

39
00:02:24,370 --> 00:02:26,355
So let's see our agenda today.

40
00:02:27,325 --> 00:02:30,955
So we are gonna be starting with
understanding threat landscape,

41
00:02:31,105 --> 00:02:32,335
which is out there, right?

42
00:02:32,875 --> 00:02:36,655
Because this is gonna give you some
understanding about the growing complexity

43
00:02:36,655 --> 00:02:41,200
inside the cloud and what are some smart
things that you can do to secure it?

44
00:02:41,810 --> 00:02:43,820
Understanding building blocks of what?

45
00:02:43,820 --> 00:02:47,240
Cloud security, PORs management,
what really makes all these things.

46
00:02:47,690 --> 00:02:51,760
And understanding infrastructure as
code security understanding, what

47
00:02:51,760 --> 00:02:53,500
that is and why do you need it.

48
00:02:54,070 --> 00:02:58,660
And we are gonna be doing a deep dive
into cloud native security policies

49
00:02:58,660 --> 00:03:03,280
today, understanding how do you
implement it, and also like understanding

50
00:03:03,620 --> 00:03:06,260
what are the need for having those.

51
00:03:06,275 --> 00:03:08,705
Policies and the CSP specific level.

52
00:03:09,425 --> 00:03:15,035
And then we are gonna be doing a
deep dive into event driven security,

53
00:03:15,035 --> 00:03:19,595
architecture, security, portion
management, exception management, get an

54
00:03:19,595 --> 00:03:24,695
understanding about what are all these
three things with some key takeaways.

55
00:03:25,400 --> 00:03:28,460
Moving on to the next slide where we
are gonna be talking about current

56
00:03:28,460 --> 00:03:30,050
cloud security challenges, right?

57
00:03:31,010 --> 00:03:36,320
As you might have all seen the cloud
workloads, the utilization of cloud is

58
00:03:36,320 --> 00:03:42,380
going up, and the cloud in general comes
with shared responsibility model, right?

59
00:03:42,890 --> 00:03:46,130
Where cloud provider is
responsible for few things.

60
00:03:46,370 --> 00:03:50,540
As a customer, you are responsible
for managing few things, especially

61
00:03:50,540 --> 00:03:53,930
securing those configurations,
which the cloud provider would.

62
00:03:53,960 --> 00:03:59,390
Give you access to, you need to ensure
those are properly secured, right?

63
00:03:59,720 --> 00:04:02,749
If not, you can see the growing
attack surface based on the

64
00:04:02,749 --> 00:04:04,489
research published out there.

65
00:04:05,210 --> 00:04:07,429
The attack surface is growing up, right?

66
00:04:08,239 --> 00:04:11,449
And because the attack
surface is going up.

67
00:04:12,020 --> 00:04:15,670
Monitoring it and also ensuring
proper configuration is getting

68
00:04:15,670 --> 00:04:18,519
deployed is a complex task.

69
00:04:18,610 --> 00:04:22,630
We need to ensure we are
driving automation to drive.

70
00:04:23,275 --> 00:04:25,855
The configuration complexity, right?

71
00:04:26,065 --> 00:04:29,605
Because without that, it's gonna be
really complex for us to start like

72
00:04:29,605 --> 00:04:33,655
configuring all these things at multiple
different places and basically lose

73
00:04:33,655 --> 00:04:35,395
the track of what we are monitoring.

74
00:04:35,395 --> 00:04:36,505
These all agonist.

75
00:04:36,895 --> 00:04:41,515
And that might lead to some gaps
and that's where the attackers could

76
00:04:41,875 --> 00:04:46,075
leverage that part to start at the
attacking some of the things that, they

77
00:04:46,075 --> 00:04:48,505
are basically running in the cloud,
so we're not, when you also look into

78
00:04:48,505 --> 00:04:49,795
the compliance requirements, right?

79
00:04:50,515 --> 00:04:51,745
The fines are rosing.

80
00:04:52,360 --> 00:04:56,220
The reason why is, when you run
some of these things in the cloud or

81
00:04:56,370 --> 00:05:01,410
on-prem, and when you are in a specific
sector, you should be meeting some

82
00:05:01,410 --> 00:05:02,760
of these compliance requirements.

83
00:05:03,180 --> 00:05:05,645
For example, you need to understand
how data should be segregated.

84
00:05:06,060 --> 00:05:11,565
What is PCI DSS and how many days
you can basically do retention

85
00:05:11,565 --> 00:05:12,945
of some of these records.

86
00:05:13,305 --> 00:05:17,505
So with all of these things, if you're
not doing compliance in a proper way

87
00:05:17,505 --> 00:05:23,235
or format, even if you have a breach,
or even if it is caught in an audit or

88
00:05:23,235 --> 00:05:27,015
if it's caught in a breach, and then
that's where the discovery happened.

89
00:05:27,465 --> 00:05:29,174
That would lead to huge fines.

90
00:05:29,564 --> 00:05:32,804
And as you can see, the
fines are going up and up.

91
00:05:33,374 --> 00:05:38,444
The reason why is the complexity and
interpretation of the requirements, you

92
00:05:38,444 --> 00:05:42,424
know how those things are done When we
look into the foundation pillars, right?

93
00:05:42,974 --> 00:05:46,604
Inside largee poster management,
we have basically four pillars.

94
00:05:46,965 --> 00:05:51,734
The first pillar where we start with
is IAC infrastructure code scanning.

95
00:05:52,349 --> 00:05:54,989
Where we proactively scan
for any kind of security

96
00:05:55,169 --> 00:05:56,729
misconfigurations within the pipeline.

97
00:05:57,229 --> 00:05:59,779
And the second aspect of that
is, or the second pillar of

98
00:05:59,779 --> 00:06:01,249
that is cloud native validation.

99
00:06:02,149 --> 00:06:06,089
So this is security validation
layer where, which is closely tied

100
00:06:06,179 --> 00:06:08,039
to the cloud security provider.

101
00:06:08,369 --> 00:06:13,079
And this is the area on focus that we
are gonna be doing a deep dive today,

102
00:06:13,579 --> 00:06:15,199
understanding how to configure it.

103
00:06:15,349 --> 00:06:16,879
What are some of the advantages with it?

104
00:06:17,779 --> 00:06:21,379
And then we are gonna be doing a
deeper dive into runtime remediation.

105
00:06:21,879 --> 00:06:27,580
So runtime remediation basically comprises
of looking even in real time triggering

106
00:06:27,580 --> 00:06:32,379
functions to correct it if there is a
misconfiguration, which was failed to

107
00:06:32,379 --> 00:06:34,719
be detected in one and two pillars.

108
00:06:35,619 --> 00:06:40,409
And next, stitching all these
1, 2, 3 together is compliance

109
00:06:40,409 --> 00:06:43,709
reporting on how exactly we are.

110
00:06:44,654 --> 00:06:50,384
Showing compliance and monitoring it is
really key in understanding the attack

111
00:06:50,384 --> 00:06:55,154
surface and as well as the regulatory
compliance because understanding what

112
00:06:55,244 --> 00:07:00,764
is out there and how they are know the
resources are running is really a key in

113
00:07:01,264 --> 00:07:02,884
coming up with your different strategy.

114
00:07:03,384 --> 00:07:07,584
Moving onto the next slide about
infrastructure as code security scanning.

115
00:07:07,764 --> 00:07:14,714
Think about what you can do at this
layer is you are basically enabling

116
00:07:14,714 --> 00:07:20,174
predeployment scanning in this phase where
whenever your IAC code goes through the

117
00:07:20,174 --> 00:07:26,884
pipeline, you're enabling this feature
so that people or developers can get

118
00:07:26,884 --> 00:07:32,284
early guidance and you have a policy
integration there within the pipeline.

119
00:07:33,004 --> 00:07:39,064
So that all these misconfigurations
are caught so that nothing is going

120
00:07:39,064 --> 00:07:43,534
out there inside the cloud basically
is in a misconfigured format.

121
00:07:44,034 --> 00:07:49,824
A lot of times these all come with
integrations with VCS systems where

122
00:07:49,884 --> 00:07:54,534
anytime when you submit a pull request,
it automatically scans with specific

123
00:07:54,534 --> 00:07:58,704
set of policies to ensure it's meeting
compliance, and then it moves on to the

124
00:07:58,704 --> 00:08:00,394
next stage to merging into the main.

125
00:08:00,894 --> 00:08:06,974
So we did a deep dive into this
topic, so you can use the link which

126
00:08:06,974 --> 00:08:09,884
is out there or scan the QR code.

127
00:08:10,664 --> 00:08:12,804
So we did a deep dive into this topic.

128
00:08:12,954 --> 00:08:18,724
So what we did do is we have
shown how to use an OPA agent for

129
00:08:18,784 --> 00:08:21,364
performing and authoring ISE policies.

130
00:08:21,864 --> 00:08:25,164
So that you can basically
stop misconfigurations before

131
00:08:25,164 --> 00:08:26,004
entering into the cloud.

132
00:08:26,454 --> 00:08:28,074
So please watch the video.

133
00:08:28,164 --> 00:08:33,054
That should really help you to understand
how do you prevent any misconfigurations

134
00:08:33,444 --> 00:08:34,824
before it goes to the cloud.

135
00:08:35,324 --> 00:08:40,454
So integration is very important in
the DevSecOps model, so that you are

136
00:08:41,414 --> 00:08:47,584
enabling feedback so that anytime when
people know about this misconfigurations.

137
00:08:48,084 --> 00:08:52,424
Developers should basically get a
complete understanding of what is expected

138
00:08:52,424 --> 00:08:56,924
value so that you don't have to chase
behind some of these things during the

139
00:08:56,924 --> 00:09:02,914
runtime and remediating these things
during the runtime has potential issues.

140
00:09:03,904 --> 00:09:08,985
With, configuration being drifted, or
sometimes what we see is vulnerabilities

141
00:09:08,985 --> 00:09:10,935
are high, which needs to be remediated.

142
00:09:10,935 --> 00:09:16,275
We tend to go and remediated, the service
goes off in a different direction.

143
00:09:16,545 --> 00:09:20,204
So it's really important to fix this
in the shift left approach because

144
00:09:20,324 --> 00:09:24,135
fixing them during the right time on
the shift right side is really huge.

145
00:09:24,135 --> 00:09:29,865
The cost to remediation is very
huge, and what really helps here is

146
00:09:30,194 --> 00:09:32,115
having that frosting collaboration.

147
00:09:32,444 --> 00:09:38,025
With your developer community security
teams to understand the pattern

148
00:09:38,895 --> 00:09:40,875
by enabling the DevSecOps model.

149
00:09:41,354 --> 00:09:44,175
Within your organization would
really help you to do that.

150
00:09:44,675 --> 00:09:47,795
So this is a topic of focus today
where we are gonna be focusing on

151
00:09:47,795 --> 00:09:51,614
cloud native security policies where
we are gonna be looking at GCP org

152
00:09:51,614 --> 00:09:58,495
policies, Azure policies AWS SAPs to
understand why do we need it and what

153
00:09:58,495 --> 00:10:00,055
is centralized policy management.

154
00:10:00,555 --> 00:10:04,155
Because a lot of these policies should be
managed in a way like they're centralized

155
00:10:04,214 --> 00:10:06,765
so that you get maximized value.

156
00:10:07,064 --> 00:10:11,564
And how do you automate it so that
anytime when a new resource goes into

157
00:10:11,564 --> 00:10:17,114
the cloud, it basically gets scanned
and the policy gets basically enforced.

158
00:10:17,614 --> 00:10:20,974
So today during the demo, what we
are gonna be doing is we are gonna

159
00:10:20,974 --> 00:10:25,925
be looking into two specific cloud
providers, Azure and GCP, right?

160
00:10:26,404 --> 00:10:29,555
We are gonna be creating a mis
complicated resource in Azure.

161
00:10:30,124 --> 00:10:35,584
Then we are gonna be authoring a cloud
native security policy in Azure and then

162
00:10:35,584 --> 00:10:37,954
redeploying the resource to check and see.

163
00:10:38,479 --> 00:10:39,979
What is the difference, right?

164
00:10:40,009 --> 00:10:42,199
How exactly you're able to
stop the misconfiguration.

165
00:10:42,699 --> 00:10:45,039
And the same thing in GCP two.

166
00:10:45,609 --> 00:10:48,969
We aren't gonna be reviewing some of
the policies on how do you enforce it.

167
00:10:49,659 --> 00:10:53,720
And we are gonna start like creating
some virtual machines which are.

168
00:10:54,665 --> 00:10:58,145
Not appropriate to be deployed.

169
00:10:58,564 --> 00:11:03,504
And you can see how basically within
GCP those are getting blocked.

170
00:11:04,284 --> 00:11:10,944
So if you can see my screen currently,
so we are inside Azure Cloud.

171
00:11:11,444 --> 00:11:12,794
So this is Azure Cloud.

172
00:11:13,294 --> 00:11:18,624
Right within the Azure, what we are gonna
be doing is we are gonna be, so within a

173
00:11:18,624 --> 00:11:20,694
subscription, we have a resource group.

174
00:11:21,474 --> 00:11:27,294
We are gonna be going and creating
a resource called Azure Storage.

175
00:11:27,794 --> 00:11:33,579
So this resource is basically
used to store any kind of like.

176
00:11:34,079 --> 00:11:37,859
Data within the cloud, maybe like some
kind of block access kind of data.

177
00:11:38,279 --> 00:11:41,229
Like it could be like,
files or any of such.

178
00:11:41,279 --> 00:11:44,649
So this is a configuration which I was
referring to where you're trying to

179
00:11:44,649 --> 00:11:46,239
create these things within the cloud.

180
00:11:46,569 --> 00:11:49,179
It's gonna ask you, so for
this one we can give a demo.

181
00:11:49,179 --> 00:11:49,599
Name him,

182
00:11:50,099 --> 00:11:50,759
and.

183
00:11:51,259 --> 00:11:55,349
The name should be unique and we are
gonna be doing as we can see here,

184
00:11:55,349 --> 00:11:56,729
these are all the configurations.

185
00:11:57,329 --> 00:12:01,560
So what we are gonna do is we are
gonna intentionally misconfigure this

186
00:12:01,560 --> 00:12:03,359
particular storage account, right?

187
00:12:03,689 --> 00:12:06,540
So you see I'm selecting minimum TLS 1.0.

188
00:12:06,630 --> 00:12:08,560
Just not, it's an insecure version.

189
00:12:09,069 --> 00:12:14,294
So at the same time, on the
networking side, this has enabled.

190
00:12:14,759 --> 00:12:18,180
To get access across the internet, right?

191
00:12:18,269 --> 00:12:22,139
The firewall is basically opened, so
anyone from the internet can access it

192
00:12:22,680 --> 00:12:26,930
if they have proper keys at the same
time, this is what the data prediction

193
00:12:26,930 --> 00:12:32,210
looks like for soft delete and encryption
tag, and I'm not gonna change anything.

194
00:12:32,210 --> 00:12:35,320
I'm just gonna create it as you can see.

195
00:12:35,440 --> 00:12:38,350
We have submitted it and the
deployment is going through.

196
00:12:38,440 --> 00:12:43,400
Let's wait for a couple of minutes and
let's see how the deployment happens.

197
00:12:43,430 --> 00:12:45,440
So what we really are doing here is.

198
00:12:45,940 --> 00:12:50,890
We have intentionally
misconfigured this resource, right?

199
00:12:51,130 --> 00:12:54,100
So this resource is, as you see now,

200
00:12:54,600 --> 00:12:57,630
Microsoft basically accepted it
as you basically accepted it.

201
00:12:57,630 --> 00:12:58,740
Hey, this is a configuration.

202
00:12:58,740 --> 00:12:59,250
Looks good.

203
00:12:59,970 --> 00:13:02,490
Now I'm gonna start like
creating the resource.

204
00:13:02,520 --> 00:13:06,090
And if you go to the
resource here, you can see.

205
00:13:06,915 --> 00:13:08,295
Some of these settings, right?

206
00:13:08,415 --> 00:13:09,315
It's recommending.

207
00:13:09,345 --> 00:13:10,245
It's recommending, right?

208
00:13:10,295 --> 00:13:15,175
You need to have TLS 1.2,
it's not enforcing it, right?

209
00:13:15,745 --> 00:13:17,935
And if you also look into
some of these things, right?

210
00:13:18,435 --> 00:13:22,485
Networking, you have
enabled from all networks.

211
00:13:23,325 --> 00:13:27,105
And if you have shared access keys
and basically enabled for all networks

212
00:13:27,105 --> 00:13:28,965
is enabled, then think about it.

213
00:13:28,965 --> 00:13:32,235
Like anyone with access to the
key can access it from any place.

214
00:13:33,090 --> 00:13:37,210
Rather than giving access from a
specific subnet or having from a specific

215
00:13:37,210 --> 00:13:40,100
location same time with data protection.

216
00:13:40,230 --> 00:13:42,560
As you see it comes
with the default things.

217
00:13:43,340 --> 00:13:44,000
And

218
00:13:44,500 --> 00:13:50,310
if you look into configuration settings,
so the minimum TLS version is 1.0.

219
00:13:50,360 --> 00:13:53,930
So we know this is a misconfigured
version, or I mean at least a

220
00:13:53,930 --> 00:13:56,240
version, which is not greatest
from security perspective.

221
00:13:56,720 --> 00:14:03,830
So we wanna make sure any storage
accounts moving forward are basically

222
00:14:03,830 --> 00:14:08,900
enabled with TRS one or two so that
at least we maintain that security.

223
00:14:09,560 --> 00:14:14,270
So what we do in Azure is we have
something called as Azure policy.

224
00:14:15,080 --> 00:14:20,120
So this is basically gonna help you to
write and author those policies which

225
00:14:20,120 --> 00:14:22,490
are required for ensuring compliance.

226
00:14:23,285 --> 00:14:27,675
So anytime when you submit anything
for deployment, this is where you

227
00:14:27,675 --> 00:14:31,775
can basically author policies to say
how that deployment should look like.

228
00:14:32,645 --> 00:14:36,665
So what we're gonna do here is
we are gonna be doing a deep dive

229
00:14:37,415 --> 00:14:41,525
into policy authoring and how
that policy is basically applied.

230
00:14:42,025 --> 00:14:45,145
Let's do PLS 1.2.

231
00:14:45,954 --> 00:14:48,935
And Azure has, a lot of
built-in policies, right?

232
00:14:48,935 --> 00:14:52,030
So when you look into some of these
policies, it, you should really be

233
00:14:52,030 --> 00:14:56,300
able to understand how those things
are authored and how you can do it.

234
00:14:56,300 --> 00:14:59,120
So you can also do a custom
policy definition if you have a

235
00:14:59,120 --> 00:15:00,620
specific customized requirement.

236
00:15:01,370 --> 00:15:03,740
But for this demo, what we are
gonna be doing is we are gonna

237
00:15:03,740 --> 00:15:05,180
be creating a storage account.

238
00:15:05,945 --> 00:15:08,195
Policy with minimum TRS version.

239
00:15:08,765 --> 00:15:13,885
So if you look into it, what the policy
is basically saying is stating is the

240
00:15:13,885 --> 00:15:17,215
allowed values are allowed and denied
and disabled, which basically means like

241
00:15:17,215 --> 00:15:21,925
what's the policy, how it should look, be
like, if it's an audit policy, it's just

242
00:15:21,925 --> 00:15:23,635
gonna audit, it's not gonna do anything.

243
00:15:23,695 --> 00:15:27,315
If it's a denied policy, then you
know it's basically gonna deny if it's

244
00:15:27,315 --> 00:15:29,325
not meeting any of these parameters.

245
00:15:29,745 --> 00:15:32,565
So I'm gonna apply this
policy as a denied policy.

246
00:15:33,305 --> 00:15:37,595
And I'm gonna be setting a
scope to the working place

247
00:15:37,595 --> 00:15:38,795
where we are currently working.

248
00:15:39,295 --> 00:15:44,965
And what I'm gonna do is I'm gonna
be setting the parameter here to

249
00:15:44,965 --> 00:15:49,675
say, Hey, if it is not t ls 1.2,
then the deployment should be denied.

250
00:15:50,455 --> 00:15:58,045
So I'm gonna set it to deny and I'm gonna
add a little bit of a. Message, which

251
00:15:58,045 --> 00:16:00,195
basically says this is part of testing.

252
00:16:00,435 --> 00:16:02,899
Just so that you can customize
this mess message however you

253
00:16:02,899 --> 00:16:06,200
want it so that developers can
basically get some understanding

254
00:16:06,200 --> 00:16:07,460
of what needs to be selected.

255
00:16:08,180 --> 00:16:13,560
But this demo is putting this
and looks like there is a

256
00:16:13,560 --> 00:16:16,560
scope issue, should be fixed.

257
00:16:17,060 --> 00:16:17,359
Okay.

258
00:16:17,389 --> 00:16:22,155
If you look into it so right now
the policy is basically created and.

259
00:16:22,655 --> 00:16:28,175
If you check here into the assignments,
so this is the policy that we

260
00:16:28,175 --> 00:16:30,245
applied at that specific scope.

261
00:16:30,745 --> 00:16:36,505
Right now, what we are gonna do is since
we have applied this policy, we are

262
00:16:36,505 --> 00:16:42,535
gonna go again under this resource group
and start creating a storage account.

263
00:16:43,035 --> 00:16:46,185
At this time, if I'm selecting
the misconfiguration, it

264
00:16:46,185 --> 00:16:47,444
should potentially deny.

265
00:16:47,944 --> 00:16:52,025
So if I go to advance, I'm
setting it to 1.2 intentionally.

266
00:16:52,155 --> 00:16:55,984
So that, to see what happens if you
move forward with the deployment.

267
00:16:56,484 --> 00:16:57,354
So

268
00:16:57,854 --> 00:17:00,674
again, so this is going through
the deployment phase at the minute.

269
00:17:01,174 --> 00:17:06,274
It's evaluating to ensure hey, is this
deployment, meeting the standards?

270
00:17:06,724 --> 00:17:11,804
And then within couple of minutes we
should be able to see the results around

271
00:17:12,044 --> 00:17:13,604
how the deployment is going forward.

272
00:17:14,104 --> 00:17:14,224
I.

273
00:17:14,724 --> 00:17:19,974
So if you go to the resource, the, you
can basically see like this particular

274
00:17:19,974 --> 00:17:23,784
storage account was created, but
let's quickly check the policy, right?

275
00:17:24,414 --> 00:17:27,144
To see that particular policy is active.

276
00:17:27,644 --> 00:17:29,344
Okay, let's.

277
00:17:29,844 --> 00:17:31,989
So the name of the policy was TLS.

278
00:17:32,489 --> 00:17:32,779
Okay.

279
00:17:33,279 --> 00:17:38,529
Let's quickly make sure, okay, this is
an audit policy currently, so as you

280
00:17:38,529 --> 00:17:43,439
can see, if you view compliance, you can
see there is one non-compliant resource.

281
00:17:43,499 --> 00:17:47,909
So this is how the audit functionality
works, and this is what it is gonna show

282
00:17:47,909 --> 00:17:51,389
you if the specific storage account is not
configured the way it is supposed to be

283
00:17:51,389 --> 00:17:55,859
configured, but not what we are gonna do
now is we are gonna go back, change the

284
00:17:55,859 --> 00:17:59,939
configuration of this from audit to deny.

285
00:18:00,584 --> 00:18:06,334
So that it actually denies it right
away when the misconfiguration

286
00:18:07,144 --> 00:18:12,424
is provided to the cloud provider
while creating the storage account.

287
00:18:12,484 --> 00:18:14,194
So let's create another
storage account here.

288
00:18:14,694 --> 00:18:16,044
Yeah, you can just pick a random name.

289
00:18:16,044 --> 00:18:19,554
I'm just gonna give something like
this because I just for testing

290
00:18:20,394 --> 00:18:24,734
and I'm gonna give TLS 1.0 now,
making sure this gets, yeah.

291
00:18:24,914 --> 00:18:26,054
In the proper resource group.

292
00:18:26,054 --> 00:18:26,534
Yes.

293
00:18:26,604 --> 00:18:30,654
I'm just gonna leave everything
and the validation is in

294
00:18:30,654 --> 00:18:32,694
progress, so as you can see.

295
00:18:33,194 --> 00:18:36,104
This was delighted by the policy, right?

296
00:18:36,614 --> 00:18:40,484
This is part of SRE demo, which we
are just basically just put it right

297
00:18:40,484 --> 00:18:45,214
there, and as you can see here,
what we are seeing is, the TLS one

298
00:18:45,214 --> 00:18:51,034
machine 1.2 is not selected, and that
is the reason why this particular.

299
00:18:51,964 --> 00:18:55,244
Configuration, or this particular
storage account is getting

300
00:18:55,244 --> 00:18:57,014
blocked from getting it deployed.

301
00:18:57,524 --> 00:19:02,744
So if I go back and change the
configuration to 1.2, which is a

302
00:19:02,774 --> 00:19:07,814
compliant configuration, it's gonna
perform the validation again, I. Right.

303
00:19:08,324 --> 00:19:10,754
And now it's giving me
option to create it.

304
00:19:10,874 --> 00:19:14,304
So this is gonna give you some
understanding into, how do you use

305
00:19:14,304 --> 00:19:16,044
those policies and how do you author it?

306
00:19:16,434 --> 00:19:18,624
And when you look into
Compliance pacs, right?

307
00:19:18,684 --> 00:19:21,174
When you go back here,
look into Compliance pacs.

308
00:19:21,674 --> 00:19:25,544
So you would be having, for example,
if you're coming from a specific

309
00:19:25,754 --> 00:19:29,774
industry and you would like to
basically enable a pack, for example,

310
00:19:29,774 --> 00:19:33,164
FedRAMP or ISO or NIST or any of such.

311
00:19:33,689 --> 00:19:39,119
You can basically search by the compliance
pack here and you can see a bunch of

312
00:19:39,119 --> 00:19:43,829
list of all policies which are applicable
to that specific compliance standard.

313
00:19:43,859 --> 00:19:47,579
And you can basically assign us
initiative so that all these particular

314
00:19:47,579 --> 00:19:51,779
policies would be assigned at that
specific scope so that you can

315
00:19:51,809 --> 00:19:57,909
basically start monitoring it to a
specific compliance level based on the.

316
00:19:58,584 --> 00:19:59,184
Requirement.

317
00:19:59,514 --> 00:20:02,724
So that is what we did inside Azure.

318
00:20:02,754 --> 00:20:08,424
If we quickly go back to the notes here,
so what we did here is we basically

319
00:20:08,424 --> 00:20:12,944
checked like the account like storage
account to ensure it's meeting a

320
00:20:12,944 --> 00:20:19,559
specific requirement and it is also
like ensuring like without TLS 1.2.

321
00:20:19,784 --> 00:20:22,124
The storage account would not be deployed.

322
00:20:22,664 --> 00:20:27,214
So now what we are gonna do is we are
gonna do the similar activity inside

323
00:20:27,214 --> 00:20:32,764
another cloud, which is like GCP, where
you're gonna be getting some understanding

324
00:20:32,824 --> 00:20:39,094
into how do you do it and where
exactly you need to do it inside IEM.

325
00:20:39,784 --> 00:20:43,714
And you'll be getting an
understanding about what those are.

326
00:20:44,214 --> 00:20:47,574
So if you see my screen here.

327
00:20:48,074 --> 00:20:51,484
So let's log into GCP, right?

328
00:20:51,984 --> 00:20:56,244
And here what we have here is a project.

329
00:20:57,084 --> 00:20:59,874
So anything that you deploy
in GCP is part of a project.

330
00:21:00,504 --> 00:21:07,564
So when you go to I am, and when you
click on organizational policies.

331
00:21:08,434 --> 00:21:12,484
So this is exactly where you
come and author those policies.

332
00:21:13,174 --> 00:21:17,074
So these are constraints where you can
basically start creating constraints

333
00:21:17,074 --> 00:21:22,944
and forcing them to ensure, like any
misconfiguration would not go through, but

334
00:21:22,944 --> 00:21:25,224
example here, I'm gonna come to storage.

335
00:21:25,284 --> 00:21:30,894
So these are some of the constraints
that you can enforce so that if the

336
00:21:30,894 --> 00:21:34,824
storage account is not meeting any
of these parameters, for example, you

337
00:21:34,824 --> 00:21:36,584
say  public access prevention, right?

338
00:21:36,944 --> 00:21:38,594
You basically manage the policy.

339
00:21:38,624 --> 00:21:42,764
Just edit the policy here
so that it is enforced.

340
00:21:42,824 --> 00:21:45,584
So anytime an storage account
is created, if it is open to the

341
00:21:45,584 --> 00:21:47,054
public, then it is gonna block it.

342
00:21:47,564 --> 00:21:50,084
So let's see some of the
already enforced policies here.

343
00:21:50,144 --> 00:21:53,774
So for example, there is something
called custom machine type, which

344
00:21:53,774 --> 00:21:57,064
basically means like, if you're trying
to deploy any kind of virtual machine

345
00:21:57,534 --> 00:22:01,214
and if that machine is not meeting
a specific kind of skew levels.

346
00:22:01,449 --> 00:22:03,249
Then it is basically gonna be denied.

347
00:22:03,609 --> 00:22:05,799
So let's test that scenario out here.

348
00:22:05,829 --> 00:22:07,539
So I'm gonna create a virtual machine.

349
00:22:08,039 --> 00:22:11,219
What I'm gonna do is I'm gonna
basically come and say, I'm

350
00:22:11,219 --> 00:22:12,899
gonna create a very big machine.

351
00:22:13,399 --> 00:22:13,519
I.

352
00:22:14,019 --> 00:22:18,119
And let's see if this gonna,
let's see if this gets created.

353
00:22:18,209 --> 00:22:18,509
Okay.

354
00:22:18,869 --> 00:22:20,999
As you can see here, there
is a compliance violation.

355
00:22:21,499 --> 00:22:26,689
It basically says Hey, this particular
machine cannot be provisioned because it's

356
00:22:26,689 --> 00:22:28,459
not meeting the compliance requirement.

357
00:22:28,959 --> 00:22:33,639
Where SKU sites or machine type
should be in a specific sku.

358
00:22:34,359 --> 00:22:35,469
Or a specific type.

359
00:22:35,919 --> 00:22:38,349
So what we'll do is like we
again, go back, we'll again,

360
00:22:38,349 --> 00:22:39,759
try to create a new instance.

361
00:22:40,339 --> 00:22:41,779
Let me pick something.

362
00:22:42,279 --> 00:22:45,639
Okay, now let's do the same thing.

363
00:22:46,139 --> 00:22:47,339
Let's create instance.

364
00:22:47,839 --> 00:22:50,269
I've just put everything as
default, haven't changed anything.

365
00:22:50,769 --> 00:22:54,919
This is the minimum skew, like
where it is allowed, as you can see.

366
00:22:54,919 --> 00:22:58,129
Now, this is going through with
the deployment without any issues.

367
00:22:58,459 --> 00:23:04,489
So this is how you would enforce those
cloud native policies within GCP.

368
00:23:05,209 --> 00:23:09,039
So within the organizational
policies here, right?

369
00:23:09,539 --> 00:23:13,099
So coming back to the presentation.

370
00:23:13,599 --> 00:23:19,959
We have reviewed two use cases, one in
Azure Cloud, one in GCP, to understand

371
00:23:20,289 --> 00:23:25,299
how these things get deployed and
how you could use org policies and

372
00:23:25,449 --> 00:23:32,049
GCP org policies and Azure policies
to basically block the deployment,

373
00:23:32,109 --> 00:23:35,664
which is not meeting the compliance
or your security requirement.

374
00:23:36,324 --> 00:23:38,584
So you understood what
Cloud Native Security is.

375
00:23:39,084 --> 00:23:39,924
How do you enforce it?

376
00:23:39,984 --> 00:23:44,934
Within AWS, we have a concept
called AWS Service Control Policies.

377
00:23:45,294 --> 00:23:49,494
That's how you are basically
configuring those policies within

378
00:23:49,494 --> 00:23:52,254
AWS as part of organizations.

379
00:23:52,754 --> 00:23:55,634
So moving on to the next one,
even driven security automation.

380
00:23:55,814 --> 00:24:01,494
So think about this as a third pillar
where we talked about if there is any

381
00:24:01,494 --> 00:24:03,234
kind of misconfiguration detected.

382
00:24:03,984 --> 00:24:08,574
It is gonna be analyzed immediately
based on what in the activity locks,

383
00:24:09,234 --> 00:24:16,044
and then an automated response, like a
form of a function, is triggered so that

384
00:24:16,104 --> 00:24:22,014
automatic correction happens, and then
again, a validation happens to ensure that

385
00:24:22,014 --> 00:24:24,204
particular misconfiguration was corrected.

386
00:24:24,954 --> 00:24:28,524
So that it's not a
misconfiguration anymore, right?

387
00:24:28,884 --> 00:24:31,844
So what we need to do here is
understand here is understand

388
00:24:31,844 --> 00:24:33,944
what is the MTTR, right?

389
00:24:34,214 --> 00:24:37,364
So for example, if you detected
a misconfiguration and how

390
00:24:37,364 --> 00:24:38,624
soon do you want to correct it?

391
00:24:38,924 --> 00:24:41,564
If you would like to wait for a
day, or is it something like you

392
00:24:41,564 --> 00:24:43,574
just want to do it 10 to 15 minutes.

393
00:24:43,964 --> 00:24:47,834
So this is something where we need
to balance, cost and security because

394
00:24:47,834 --> 00:24:49,124
some of these tools come with.

395
00:24:49,479 --> 00:24:52,989
Cost, especially when you're
reading events in real time

396
00:24:53,169 --> 00:24:56,319
and basically deploying any
kind of functions to deploy it.

397
00:24:56,979 --> 00:25:02,629
Because as company scales, events would
basically, grow and the automation

398
00:25:02,629 --> 00:25:04,339
should also grow, which leads to cost.

399
00:25:04,579 --> 00:25:10,219
So balancing that entity R is
really key in enabling the event

400
00:25:10,224 --> 00:25:11,244
driven automation solution.

401
00:25:11,744 --> 00:25:15,614
So as we have seen, how do
we monitor everything from a

402
00:25:15,614 --> 00:25:17,024
compliance monitoring perspective?

403
00:25:17,524 --> 00:25:19,174
Real time monitoring is really important.

404
00:25:19,564 --> 00:25:23,854
And the same time mapping all those
policies to a specific compliance

405
00:25:23,954 --> 00:25:28,004
framework is really important because
what those would give you is give

406
00:25:28,004 --> 00:25:31,544
you an understanding of what the
risk is of not staying noncompliant.

407
00:25:32,264 --> 00:25:36,509
I. It's gonna give you a understanding
about, Hey, what is the threat out

408
00:25:36,509 --> 00:25:40,139
there if I'm not doing some X, Y,
and Z configuration, and if that

409
00:25:40,139 --> 00:25:41,579
threat could be exported or not.

410
00:25:41,849 --> 00:25:44,399
So that's how you need to
prioritize it based on the risk.

411
00:25:44,729 --> 00:25:48,989
And anomaly detection is a key part
of it, because if you are still doing

412
00:25:48,989 --> 00:25:53,279
everything right, there might be an
insider or any of such patterns where.

413
00:25:54,119 --> 00:25:58,229
Something activity, which is deviating
from normal activity, is basically

414
00:25:58,229 --> 00:26:02,579
really helpful in categorizing the
benchmark and would basically help

415
00:26:02,579 --> 00:26:05,699
you to understand what your risk
is when you're basically doing it.

416
00:26:05,969 --> 00:26:09,959
So some of these solutions are now
coming up with the AI driven security

417
00:26:09,959 --> 00:26:11,759
insights, which are basically.

418
00:26:12,259 --> 00:26:15,709
Predictive threat intelligence kind of
thing, where based on your workloads,

419
00:26:15,709 --> 00:26:18,709
if something is getting deviated,
it's basically gonna notify you.

420
00:26:18,739 --> 00:26:24,589
Or if you see a pattern where it, there
is a suspicious behavior by someone

421
00:26:24,979 --> 00:26:29,479
who's intentional, or for example, or it
might be something, for example, some of

422
00:26:29,479 --> 00:26:31,129
these identities are machine identities.

423
00:26:31,489 --> 00:26:35,799
If it basically identifies some
kind of like privileged scope

424
00:26:35,799 --> 00:26:39,119
for example, there is a creep in,
permission is required, what is

425
00:26:39,119 --> 00:26:40,739
required and what is country doing.

426
00:26:41,129 --> 00:26:45,809
So all of those really are key
in understanding and creating the

427
00:26:45,809 --> 00:26:49,719
baseline so that when you monitor
those things it should be able to

428
00:26:49,719 --> 00:26:53,979
detect any of this misconfigurations
and you would be getting a better

429
00:26:53,979 --> 00:26:55,809
understanding of what's the behavior.

430
00:26:56,199 --> 00:26:58,989
And these, some of these tools
come with AI insights, which

431
00:26:58,989 --> 00:27:00,339
basically see those patterns.

432
00:27:00,339 --> 00:27:01,299
And would you.

433
00:27:01,754 --> 00:27:05,774
On behavioral analytics and automated
vulner vulnerability prioritization,

434
00:27:06,314 --> 00:27:09,814
where, for example, if you would like
to prioritize vulnerability from getting

435
00:27:09,814 --> 00:27:13,804
it patched, having these insights
would really help you, Hey, this is

436
00:27:13,864 --> 00:27:18,564
a public facing application, was an
internal application with exploitation.

437
00:27:18,594 --> 00:27:19,374
Whatever that is.

438
00:27:19,424 --> 00:27:23,014
At the same time it's with, some of
these scoring models out there, which

439
00:27:23,014 --> 00:27:24,994
really give you some insights into.

440
00:27:25,539 --> 00:27:31,149
What really these codes are, and at the
same time with these codes, which one

441
00:27:31,149 --> 00:27:32,764
can you prioritize in fixing it first?

442
00:27:33,729 --> 00:27:38,569
So understanding the roadmap is really
important for implementation because when

443
00:27:38,569 --> 00:27:42,679
you pick A-C-S-P-M tool of your choice,
you need to understand, where exactly

444
00:27:42,679 --> 00:27:45,649
you're trying to deploy these things.

445
00:27:46,079 --> 00:27:48,329
Is it just one cloud
multicloud hybrid cloud?

446
00:27:48,329 --> 00:27:51,209
What are the approaches need
to ensure the tool is properly

447
00:27:51,209 --> 00:27:55,539
configured or properly supported
to begin with in the initial phase,

448
00:27:55,569 --> 00:27:57,459
and then you properly have policies.

449
00:27:57,494 --> 00:28:01,724
Proper policies defined, and then you
will have to start implementing those

450
00:28:01,724 --> 00:28:04,694
CSPM tools for tool implementation.

451
00:28:04,754 --> 00:28:09,194
And you need to have some of
these tools come with integrations

452
00:28:09,224 --> 00:28:11,414
like from IAC side to CSPM sites.

453
00:28:11,414 --> 00:28:13,904
For IAC side, you need to
ensure it's properly integrated.

454
00:28:14,559 --> 00:28:18,209
Two C-I-S-C-D pipelines where it supports
all the orchestration tools, which are

455
00:28:18,209 --> 00:28:22,229
currently running there so that it detects
those pattern early on and just blocks

456
00:28:22,229 --> 00:28:24,479
it and for the runtime sake of acuity.

457
00:28:24,479 --> 00:28:27,689
Also, some of these tools have
capability so that it can basically

458
00:28:27,689 --> 00:28:31,169
into it, and the pillar tool is
what we have seen in those demo.

459
00:28:31,379 --> 00:28:34,289
That's where some of these
tools don't have coverage, like

460
00:28:34,289 --> 00:28:36,929
direct integration, and that's
something that you'll have to do.

461
00:28:37,429 --> 00:28:40,679
Continuous optimization is
something which is really crucial.

462
00:28:40,739 --> 00:28:44,350
For example, policy naming
and policy enforcements.

463
00:28:44,350 --> 00:28:48,969
It should be consistent across all these
different tools of starting from IAC to

464
00:28:48,969 --> 00:28:54,250
run time and to monitoring to ensure like
there is proper integration in place.

465
00:28:54,750 --> 00:28:56,879
So exception management, again, is a key.

466
00:28:56,969 --> 00:29:02,549
Where we understand, hey, we have
security requirements, but for some

467
00:29:02,549 --> 00:29:04,889
reason this is a business decision.

468
00:29:04,889 --> 00:29:10,469
Again, we are unable to meet those
requirements for X, Y, and Z reasons.

469
00:29:10,859 --> 00:29:16,409
And a business owner has basically
taken or basically accepted that

470
00:29:16,679 --> 00:29:20,764
risk so that there is a temporary
exception in place while a

471
00:29:20,764 --> 00:29:23,284
permanent solution is identified or.

472
00:29:23,914 --> 00:29:27,404
Maybe that is the way,
basically security benefit.

473
00:29:27,904 --> 00:29:32,074
Is really not much, even though if
you have those controls enabled.

474
00:29:32,584 --> 00:29:35,134
So that's how we can basically
do security exceptions.

475
00:29:35,134 --> 00:29:39,759
And this all should be driven by risk
based approach, by following risk

476
00:29:39,759 --> 00:29:44,149
assessment strategies under understanding
the scope and ensuring, like what we

477
00:29:44,149 --> 00:29:50,229
have seen is some of these exceptions get
started with the scope of a, and there is

478
00:29:50,229 --> 00:29:52,479
a scope creep, which happens to a, B, C.

479
00:29:52,779 --> 00:29:55,029
So we need to make sure prob
all of these are currently.

480
00:29:55,419 --> 00:29:58,509
Can exactly monitored in the way
they're supposed to be monitored.

481
00:29:58,989 --> 00:30:03,219
And all the documents all the approval
should be documented for any kind of

482
00:30:03,219 --> 00:30:05,084
like auditing or compliance requirements.

483
00:30:05,584 --> 00:30:10,204
So key takeaways from this presentation
are we have seen the complete journey from

484
00:30:10,204 --> 00:30:12,304
shift left where we have first demoted.

485
00:30:12,674 --> 00:30:17,104
The video for that is already,
kind, it's part of the link there.

486
00:30:17,134 --> 00:30:18,154
So please see that.

487
00:30:18,244 --> 00:30:22,414
And what we have now seen today here
is leveraging cloud native security

488
00:30:22,414 --> 00:30:26,944
controls and how those controls are built,
and how do you embrace automation to

489
00:30:26,944 --> 00:30:28,444
basically deploy some of those controls.

490
00:30:28,444 --> 00:30:31,464
And why do you need a,
specific AI driven insights to

491
00:30:31,464 --> 00:30:32,874
prioritize some of these things.

492
00:30:33,204 --> 00:30:37,014
So in the future, at some point of
time, we're gonna be doing a deep dive

493
00:30:37,014 --> 00:30:41,954
into exception management because this
is a growing area of interest inside

494
00:30:41,954 --> 00:30:47,334
cybersecurity where we see scope creeps
and also what some of the platforms

495
00:30:47,664 --> 00:30:52,654
that are coming up would really help in
automating some of these tasks so that

496
00:30:52,684 --> 00:30:54,634
you can deploy that exemption at scale.

497
00:30:54,934 --> 00:30:57,094
So you can be doing a future deep dive at.

498
00:30:57,339 --> 00:31:01,119
Third to around this topic
at some point of time later.

499
00:31:01,619 --> 00:31:04,749
So that concludes my topic here.

500
00:31:04,819 --> 00:31:07,999
Thank you very much for your time
and if you would like to connect

501
00:31:08,119 --> 00:31:13,549
or scan or basically chat, please
scan the QR code and I look forward

502
00:31:13,549 --> 00:31:15,019
for, to connecting with you.

503
00:31:15,919 --> 00:31:17,539
Thank you all for your time today.

