1
00:00:00,500 --> 00:00:01,909
Hey, hi everyone.

2
00:00:01,999 --> 00:00:02,599
I'm Shiv.

3
00:00:02,879 --> 00:00:06,869
And I'm here to present a very
interesting topic on forecasting

4
00:00:07,059 --> 00:00:08,709
which is platform first forecasting.

5
00:00:08,829 --> 00:00:12,819
And basically we are going to
talk about engineering scalable

6
00:00:12,819 --> 00:00:15,610
machine learning systems that
drive a lot of business value.

7
00:00:16,270 --> 00:00:20,190
And for the next 15 minutes, I want
to discuss fundamentally how to

8
00:00:20,190 --> 00:00:22,730
build a really robust forecasting.

9
00:00:22,900 --> 00:00:28,100
Scalable forecasting systems that
add consistent business value, right?

10
00:00:28,170 --> 00:00:34,620
And it goes beyond just focusing
specifically on accuracy and focuses

11
00:00:34,620 --> 00:00:39,390
on the whole architecture of the whole,
of the forecasting system in general.

12
00:00:39,960 --> 00:00:44,700
A little bit about myself before we
dive into the details is I'm chef.

13
00:00:44,820 --> 00:00:49,410
I have almost 13 years of work experience
across multiple industries in planning

14
00:00:49,410 --> 00:00:51,850
supply chain SNOB, and forecasting.

15
00:00:52,180 --> 00:00:53,810
I've worked with Caterpillar Dell.

16
00:00:54,405 --> 00:00:59,065
And right now with Amazon where I lead
a team for a team of demand planners,

17
00:00:59,305 --> 00:01:02,845
a forecasting team for Amazon, trying
to build something very similar

18
00:01:02,845 --> 00:01:04,615
that I'm going to talk about here.

19
00:01:04,870 --> 00:01:08,890
Highly scalable forecasting, machine
learning based forecasting systems that

20
00:01:08,890 --> 00:01:10,780
are helping support Amazon's growth.

21
00:01:11,320 --> 00:01:12,160
Rapid growth, I would say.

22
00:01:12,660 --> 00:01:16,660
At a high level the agenda that
I would be covering today is

23
00:01:17,020 --> 00:01:18,610
five key agenda items here.

24
00:01:18,660 --> 00:01:22,510
First we'll talk about what Platform
Engineering Revolution means that

25
00:01:22,510 --> 00:01:24,220
is really upcoming right now.

26
00:01:24,270 --> 00:01:27,555
The Accurate Architectural
Foundations on which it is built.

27
00:01:27,625 --> 00:01:27,955
Why?

28
00:01:28,455 --> 00:01:33,065
It goes beyond accuracy as a
metric to you, define the success

29
00:01:33,065 --> 00:01:34,535
criteria for good forecast.

30
00:01:34,595 --> 00:01:39,305
And then implementation strategies
really important on how we put this whole

31
00:01:39,305 --> 00:01:41,135
architecture into use for the business.

32
00:01:41,135 --> 00:01:45,065
And then some really cool real
world success to stories where

33
00:01:45,479 --> 00:01:47,310
this is already being used.

34
00:01:47,810 --> 00:01:48,229
Awesome.

35
00:01:48,350 --> 00:01:51,789
Rethinking the whole machine learning
based forecasting through a platform lens.

36
00:01:52,160 --> 00:01:55,879
It's really important that the machine
learning landscape it's really important

37
00:01:55,879 --> 00:01:59,059
to understand that the machine learning
landscape has undergone a lot of shift.

38
00:01:59,599 --> 00:02:03,929
It has, it is not just about
this science model which is

39
00:02:03,929 --> 00:02:04,979
this machine learning model.

40
00:02:04,979 --> 00:02:09,384
It's about a lot of different elements
that enable this model to be successful.

41
00:02:09,679 --> 00:02:13,799
The tuning, the the platform in which it
is built the architecture that supports

42
00:02:13,799 --> 00:02:18,609
its deployment, that its usability the
pipeline of data that feeds these models.

43
00:02:18,929 --> 00:02:22,669
Hence the platform based platform
First forecasting represents a

44
00:02:22,699 --> 00:02:25,954
very holistic approach to machine
learning system design, and it.

45
00:02:26,529 --> 00:02:28,569
Fundamentally prioritizes
three things, right?

46
00:02:28,629 --> 00:02:29,829
Operational excellence.

47
00:02:30,199 --> 00:02:36,854
Fundamentally how this whole architecture
is put to use scalability of multi-year

48
00:02:36,914 --> 00:02:41,564
vision on building a system that does
not require complete re-engineering

49
00:02:41,564 --> 00:02:42,914
every one or two years, right?

50
00:02:42,914 --> 00:02:45,944
It has a really good
five to 10 year roadmap.

51
00:02:46,519 --> 00:02:48,439
And then of course business alignment.

52
00:02:48,609 --> 00:02:53,439
How the business teams are eventually
going to use it and put it to use.

53
00:02:53,789 --> 00:02:58,469
A key insight I would love to add based
on my personal experiences brilliant

54
00:02:58,469 --> 00:03:02,459
models setting in research notebooks
provide almost zero business value.

55
00:03:02,879 --> 00:03:07,319
While moderately accurate models
deployed well through these scalable

56
00:03:07,319 --> 00:03:12,079
systems, add much more value than
very sophisticated models that.

57
00:03:12,424 --> 00:03:15,874
End up living in research
papers all their life, right?

58
00:03:15,874 --> 00:03:22,714
So it's very important to learn and
understand how we can deploy these

59
00:03:22,714 --> 00:03:27,409
complex models for the business
to use, and then derive a lot

60
00:03:27,409 --> 00:03:28,579
of really good value from them.

61
00:03:29,079 --> 00:03:32,439
Platform engineering revolution
in machine learning has happened

62
00:03:32,439 --> 00:03:34,909
through, in my view, three main steps.

63
00:03:35,339 --> 00:03:38,279
First is abstraction without
over oversimplification.

64
00:03:38,279 --> 00:03:42,959
Of course, abstraction helps a lot
where really good, effective platforms

65
00:03:42,959 --> 00:03:48,699
hide the complexity of the models and
allow the user to interact with the

66
00:03:48,699 --> 00:03:51,429
models using really simple and easy.

67
00:03:51,949 --> 00:03:53,149
Parameters, right?

68
00:03:53,164 --> 00:03:56,944
And I think that is a really
important successful success

69
00:03:56,944 --> 00:03:59,524
criteria for this whole architecture.

70
00:04:00,004 --> 00:04:02,224
Progressive disclosure of complexity.

71
00:04:02,434 --> 00:04:07,084
It's really important that a user of
some of these architecture and models

72
00:04:07,384 --> 00:04:10,444
are not overwhelmed with information.

73
00:04:10,709 --> 00:04:14,754
And complexity because the moment
that happens it really hampers its

74
00:04:15,534 --> 00:04:17,634
deployment and its adoption in general.

75
00:04:17,904 --> 00:04:22,449
So it's very important that anyone who's
going to use it is going to first we have

76
00:04:22,509 --> 00:04:27,549
to assume that they have minimal technical
expertise and then create a really clear

77
00:04:27,969 --> 00:04:34,429
glide path on how we can onboard them
and show them the complexity over time.

78
00:04:34,984 --> 00:04:36,994
And lastly, API first design.

79
00:04:37,044 --> 00:04:39,974
It's really important that
APIs evolve over time.

80
00:04:40,044 --> 00:04:45,099
So clear versioned APIs for all
platform interactions needs to be done.

81
00:04:45,099 --> 00:04:48,909
And it enables loose coupling
between these forecasting systems

82
00:04:48,909 --> 00:04:52,434
and that consumers and it helps
long-term scalability as well.

83
00:04:52,934 --> 00:04:54,284
Critical architectural components.

84
00:04:54,284 --> 00:04:59,729
I think four key components that
enable this vision of platform.

85
00:04:59,729 --> 00:05:03,629
First forecasting ML systems
is first is data, of course.

86
00:05:03,629 --> 00:05:06,479
Data is the brand butter of
and machine learning model.

87
00:05:06,929 --> 00:05:13,359
Being able to build really solid
data pipelines as well as a clean.

88
00:05:13,859 --> 00:05:16,854
Usable data feeds is.

89
00:05:17,844 --> 00:05:19,104
Fundamentally backbone of it.

90
00:05:19,164 --> 00:05:24,319
So that is the very first step of
making this architecture successful.

91
00:05:24,859 --> 00:05:26,479
Having a solid data architecture.

92
00:05:26,729 --> 00:05:28,419
Number two is stream processing.

93
00:05:28,719 --> 00:05:32,869
Of course, technologies like Apache
Kafka enables processing of a lot

94
00:05:32,869 --> 00:05:35,889
of the data that we feed into these
models at a very high velocity.

95
00:05:36,189 --> 00:05:40,724
And being able to have something that
can absorb and understand this data.

96
00:05:41,169 --> 00:05:42,699
Is super, super important.

97
00:05:43,689 --> 00:05:46,834
Security controls, again, a
foundational element, right?

98
00:05:46,894 --> 00:05:49,654
Data privacy and intellectual prop.

99
00:05:50,194 --> 00:05:53,424
Property production are like
foundation of any system that

100
00:05:53,424 --> 00:05:54,934
consumes and manages a ton of data.

101
00:05:55,574 --> 00:05:58,724
And being able to build something
like that is really important.

102
00:05:59,244 --> 00:06:03,074
And a core building block for the
architecture that we are discussing.

103
00:06:03,714 --> 00:06:05,034
Lastly, feature stores.

104
00:06:05,364 --> 00:06:08,494
Every machine learning model every
machine learning system, I should

105
00:06:08,494 --> 00:06:11,674
say, is unique in its own self, right?

106
00:06:11,734 --> 00:06:14,814
Being able to understand, what
features are going to be built for

107
00:06:14,814 --> 00:06:19,044
those specific use cases for those
specific businesses is really important.

108
00:06:19,384 --> 00:06:21,874
And hence, understanding
where the specialization is

109
00:06:21,874 --> 00:06:24,364
needed is very important.

110
00:06:24,574 --> 00:06:28,384
For tracking and for future
service capabilities.

111
00:06:28,514 --> 00:06:33,494
So we know what we need to continuously
evolve and what we need to maintain.

112
00:06:33,994 --> 00:06:36,989
Now talking a bit about
the success metrics, right?

113
00:06:37,089 --> 00:06:42,489
How do we make sure that we
understand the success of a

114
00:06:42,489 --> 00:06:44,709
forecasting system or an architecture?

115
00:06:45,024 --> 00:06:49,734
H how is that fundamentally
understood by the business?

116
00:06:49,794 --> 00:06:53,844
The first thing in my view is
that goes beyond accuracy, right?

117
00:06:53,904 --> 00:06:58,764
The fundamental accuracy may
wave RMC or any of those standard

118
00:06:58,884 --> 00:07:00,504
accuracy measurement, metrics.

119
00:07:00,784 --> 00:07:02,464
The first one being, business alignment.

120
00:07:02,944 --> 00:07:09,074
How does the forecast enable anyone
to make decisions or understand

121
00:07:09,074 --> 00:07:11,564
the risks, the trade offs, the
constraints in the business?

122
00:07:11,924 --> 00:07:16,214
Because a forecast can be a single
number, but having context to

123
00:07:16,214 --> 00:07:17,414
that number is really important.

124
00:07:17,774 --> 00:07:18,524
Is it too high?

125
00:07:18,614 --> 00:07:19,934
What is, what happened last week?

126
00:07:20,234 --> 00:07:23,084
Is it too low versus
what happened last year?

127
00:07:23,144 --> 00:07:25,019
Same time, and having those.

128
00:07:25,729 --> 00:07:28,549
Having that perspective
is really important.

129
00:07:29,209 --> 00:07:31,849
And that is where the business
alignment comes in place,

130
00:07:31,849 --> 00:07:33,169
where the forecast is there.

131
00:07:33,529 --> 00:07:38,329
But does it align to the business's
goals of, is it growing at the rate

132
00:07:38,389 --> 00:07:42,314
at which the business should be
growing on a weekly level or at a,

133
00:07:42,364 --> 00:07:44,649
monthly or a yearly growth rate level?

134
00:07:45,329 --> 00:07:48,429
The second BI item is
operational efficiency.

135
00:07:48,929 --> 00:07:53,239
One of the key things in my personal
experience that I've seen is some really

136
00:07:53,239 --> 00:08:00,639
good models have really bad diplomats
which ends up being perceived by the

137
00:08:00,639 --> 00:08:04,149
business as not a really good model then.

138
00:08:04,254 --> 00:08:06,474
The science might be really
amazing, but guess what?

139
00:08:06,894 --> 00:08:10,854
Being able to deploy it and create
recurring, really solid outputs

140
00:08:10,854 --> 00:08:15,854
every single week or month is
really foundational to the system.

141
00:08:15,914 --> 00:08:21,119
And hence the ability to use to, to
pick the right model and then deploy it

142
00:08:21,119 --> 00:08:22,639
for the business is really important.

143
00:08:23,149 --> 00:08:26,359
Then that is what get encompassed
in this operational efficiency.

144
00:08:26,359 --> 00:08:30,919
How is and lastly of course, is
the model consistently creating an.

145
00:08:31,699 --> 00:08:32,179
Guess what?

146
00:08:32,239 --> 00:08:33,949
One day it created an output.

147
00:08:33,949 --> 00:08:35,164
The second day it did not.

148
00:08:35,774 --> 00:08:40,844
It's just not consistent and reliable, no
matter how good the science behind it is.

149
00:08:40,844 --> 00:08:44,734
And that perfectly draws into the
reliability and consist consistency.

150
00:08:45,184 --> 00:08:47,134
Part of it is not just.

151
00:08:47,299 --> 00:08:50,869
The performance of the model on a
weekly, week to week basis, but does

152
00:08:50,869 --> 00:08:54,769
it perform really well in a highly
stressed and a complex environment?

153
00:08:55,029 --> 00:08:58,629
Businesses go through peaking
periods and non peaking periods.

154
00:08:59,019 --> 00:09:03,204
Can it, can the model and the
architecture handle those periods

155
00:09:03,504 --> 00:09:08,874
consistently week over week, day over day
throughout the year without any issues?

156
00:09:09,184 --> 00:09:13,584
And there can be bottlenecks or
exceptions where it may not do that due.

157
00:09:14,084 --> 00:09:19,964
May not I should say perform at the same
level as a different time of the year, but

158
00:09:19,964 --> 00:09:25,394
being able to understand why and how, and
having, being able to, having, being able

159
00:09:25,394 --> 00:09:30,454
to plan for it ahead of time is a key part
of this whole architecture as a whole.

160
00:09:30,454 --> 00:09:34,784
The user satisfaction in the end,
the customer is the customer's

161
00:09:34,784 --> 00:09:36,254
word is everything, right?

162
00:09:36,304 --> 00:09:38,344
Having that customer
obsession to understand.

163
00:09:39,274 --> 00:09:43,144
Is the forecasting platform
being used on a regular basis?

164
00:09:43,204 --> 00:09:45,264
Is it being deployed?

165
00:09:45,564 --> 00:09:48,774
Is it helping make really good
decisions in the end of the day?

166
00:09:48,834 --> 00:09:55,334
Is the final stamp that confirms
this, whether the forecasting process

167
00:09:55,334 --> 00:09:57,704
is successful or not, in a nutshell?

168
00:09:58,204 --> 00:10:01,234
Next I want to talk a little bit
about asymmetric error handling.

169
00:10:01,294 --> 00:10:07,174
This is a really important topic and
the reason I say that is oftentimes

170
00:10:07,474 --> 00:10:10,104
in businesses and throughout
my experience, I've seen that

171
00:10:10,554 --> 00:10:15,414
businesses index on a single value,
single number as a forecast, right?

172
00:10:15,444 --> 00:10:18,164
The forecast next week is going
to be a hundred thousand let's say

173
00:10:18,194 --> 00:10:20,384
units that are going to be sold but.

174
00:10:21,194 --> 00:10:24,014
That single data point may
not tell the whole story.

175
00:10:24,644 --> 00:10:30,674
Oftentimes businesses have different
risk appetites and over forecasting

176
00:10:30,674 --> 00:10:35,564
might create less of an issue than under
forecasting or vice versa, and that.

177
00:10:36,254 --> 00:10:41,914
Is an equally important data point
or strategy to understand for the

178
00:10:41,914 --> 00:10:46,234
business than just looking at the
single number forecast and its accuracy.

179
00:10:46,724 --> 00:10:50,415
To give really good examples is
the first one I wanted to list

180
00:10:50,415 --> 00:10:51,944
down here is inventory management.

181
00:10:52,585 --> 00:10:56,245
Certain businesses, stockouts are
a much bigger problem than having

182
00:10:56,275 --> 00:11:00,685
excess inventory where inventory
costs might be very low and

183
00:11:00,685 --> 00:11:02,155
stockouts might be very expensive.

184
00:11:02,155 --> 00:11:02,245
And.

185
00:11:02,745 --> 00:11:07,035
Maybe having access inventory is an okay
thing in some situations and making sure

186
00:11:07,035 --> 00:11:11,295
the service level is really high, because
when the service level is low, guess what?

187
00:11:11,355 --> 00:11:12,315
You lose customers.

188
00:11:12,675 --> 00:11:18,815
Or the other way around where
stockouts might be a much bigger sorry.

189
00:11:18,865 --> 00:11:20,095
I should say the other way around.

190
00:11:20,245 --> 00:11:25,505
Excess inventory might be a much bigger
issue than stockouts, where having.

191
00:11:26,005 --> 00:11:30,875
Constrained inventory doesn't really
create as much of business laws.

192
00:11:31,635 --> 00:11:32,805
As we would expect.

193
00:11:33,105 --> 00:11:35,895
So being able to understand
for the business, which one is

194
00:11:35,895 --> 00:11:39,885
more important and which one is
not, is a very important input.

195
00:11:39,945 --> 00:11:41,625
Similarly, infrastructure capacity.

196
00:11:41,625 --> 00:11:47,055
This is a classic example of should we go
and invest more money in building more,

197
00:11:47,055 --> 00:11:50,055
in more capacity to serve our customers?

198
00:11:50,145 --> 00:11:50,655
Guess what?

199
00:11:50,950 --> 00:11:53,590
When we invest, it's really expensive.

200
00:11:53,830 --> 00:11:58,430
And when we invest, and guess
what the de like the utilization

201
00:11:58,430 --> 00:11:59,420
does not come through.

202
00:11:59,510 --> 00:12:02,570
You're sitting on a lot of
depreciation cost Similarly.

203
00:12:03,295 --> 00:12:04,825
If we don't invest, guess what?

204
00:12:04,825 --> 00:12:05,995
There's a service degradation.

205
00:12:06,525 --> 00:12:07,935
Is that okay for our customers?

206
00:12:08,025 --> 00:12:11,115
Being able to quantify and
understand which one is more

207
00:12:11,115 --> 00:12:13,305
important is extremely important.

208
00:12:13,835 --> 00:12:16,265
Sim something similar happens
in financial forecasting.

209
00:12:16,445 --> 00:12:19,805
The regulatory requirements and
the risk of management protocols

210
00:12:20,195 --> 00:12:24,725
should the business go very heavy
on, regulatory compliance, which

211
00:12:24,725 --> 00:12:29,915
requires a lot of, manpower and our
time investment versus moving fast

212
00:12:29,975 --> 00:12:32,905
where, the business can choose.

213
00:12:33,325 --> 00:12:36,835
To be compliant at a bare minimum
and keep moving fast to grow the

214
00:12:36,835 --> 00:12:42,035
business or being excessively indexed
over meeting, the financial goals.

215
00:12:42,415 --> 00:12:45,785
And the punchline being, being, effective.

216
00:12:45,815 --> 00:12:50,220
Asymmetric error handling requires,
a lot of loss function design

217
00:12:50,250 --> 00:12:53,300
that reflects actual business
consequences rather than just.

218
00:12:54,065 --> 00:12:58,415
Something that is for mathematical
convenience and having a platform

219
00:12:58,415 --> 00:13:02,755
architecture that understands and takes
this feedback is really important.

220
00:13:03,255 --> 00:13:06,725
Next microservices
architecture of ML systems.

221
00:13:07,085 --> 00:13:10,565
The decomposition of the, this
monolith of forecasting system

222
00:13:11,075 --> 00:13:15,955
into focused microservices provides
numerous advantages including improved

223
00:13:15,955 --> 00:13:20,525
scalability, enhanced maintainability,
greater deployment flexibility.

224
00:13:20,865 --> 00:13:24,015
And the four big buckets that I
want to talk about with respect

225
00:13:24,015 --> 00:13:28,565
to these microservices is first is
data and ingestion services, right?

226
00:13:29,075 --> 00:13:32,565
Being able to handle diverse
sources varying frequency.

227
00:13:32,565 --> 00:13:38,055
It updates daily, it updates hourly,
and at the same time, having a really

228
00:13:38,055 --> 00:13:42,585
high quality of data, maintaining high
quality of data is really important.

229
00:13:42,955 --> 00:13:45,635
The second one is feature
engineering services.

230
00:13:45,695 --> 00:13:49,545
Again, being able to transform
the raw data into something

231
00:13:49,545 --> 00:13:50,430
that the model can consume.

232
00:13:50,965 --> 00:13:54,535
And understand and interpret,
and then create a final output

233
00:13:54,985 --> 00:13:57,230
is another foundational element.

234
00:13:57,770 --> 00:14:03,610
The model training services every model
requires some training, some assistance in

235
00:14:03,610 --> 00:14:05,230
the short term or even in the long term.

236
00:14:05,290 --> 00:14:10,720
And being able to do that in a
flexible and controllable and a well

237
00:14:10,720 --> 00:14:13,360
understood manner is a key step.

238
00:14:13,980 --> 00:14:19,350
In terms of making the whole model,
the forecasting process and the

239
00:14:19,350 --> 00:14:21,330
whole architecture successful, right?

240
00:14:21,330 --> 00:14:22,710
So it's a very important pillar.

241
00:14:22,740 --> 00:14:24,780
And lastly, prediction.

242
00:14:25,200 --> 00:14:28,840
Serving services like providing
real-time access to model predictions

243
00:14:28,870 --> 00:14:33,400
through scalable load latency interfaces
enables our customers to consume

244
00:14:33,400 --> 00:14:38,200
the data and reduces any friction in
terms of them for them to understand,

245
00:14:38,200 --> 00:14:40,030
Hey, what is a forecasting output?

246
00:14:40,795 --> 00:14:41,695
How do we use it?

247
00:14:41,695 --> 00:14:45,960
Where can it be immediately where
it can be synthesized to be used

248
00:14:46,380 --> 00:14:48,150
for day-to-day decision making?

249
00:14:48,270 --> 00:14:51,310
And that's really important for
the success of our customer.

250
00:14:51,310 --> 00:14:57,550
So being able to have really solid data
pipelines through dashboards, through

251
00:14:57,650 --> 00:15:03,260
ui, ux interfaces for the customer to
consume that information and deploy

252
00:15:03,260 --> 00:15:05,280
that immediately is another key step.

253
00:15:05,780 --> 00:15:09,490
Next I want to talk about containerization
and orchestration strategies.

254
00:15:09,550 --> 00:15:11,240
Again, this is really important.

255
00:15:11,870 --> 00:15:17,000
When we look at, building really complex
systems, because if we don't containerize

256
00:15:17,000 --> 00:15:23,065
and, understand the building blocks of
or I should say being able to design how

257
00:15:23,065 --> 00:15:27,095
these building blocks interact with each
other, the system get really complicated

258
00:15:27,125 --> 00:15:32,050
and of course become a roadblock in the
long term to build scalable solutions.

259
00:15:32,550 --> 00:15:36,740
There, there are some key considerations
that we should consider when a

260
00:15:36,740 --> 00:15:40,050
containerizing, these massive
architectures that we built.

261
00:15:40,110 --> 00:15:43,920
One is fundamentally understanding
how these containers are going

262
00:15:43,920 --> 00:15:47,880
to handle the machine learning
work, machine learning workloads.

263
00:15:48,510 --> 00:15:51,730
Every ML model has a different
workload requirement.

264
00:15:52,120 --> 00:15:55,330
Every architecture or use case has
a different workload requirement,

265
00:15:55,330 --> 00:15:59,740
and being able to understand
and containerize it based on the

266
00:15:59,740 --> 00:16:01,930
requirement is a foundational.

267
00:16:02,315 --> 00:16:05,695
I would say, or more than a foundation,
like I think is one of the first

268
00:16:05,695 --> 00:16:09,620
steps are design steps that needs
to be considered when thinking

269
00:16:09,620 --> 00:16:11,180
through the whole architecture.

270
00:16:11,610 --> 00:16:15,405
Of course there, there are other elements
to it, like horizontal part auto scaling

271
00:16:15,405 --> 00:16:20,505
for demand patents is, has been one
of the latest go-to methodologies.

272
00:16:20,875 --> 00:16:22,795
In the recent times that
I've seen serviceness.

273
00:16:22,810 --> 00:16:25,450
Technologies for network and
security is another use case.

274
00:16:25,950 --> 00:16:28,420
Persistent storage management
for large data sets.

275
00:16:28,670 --> 00:16:29,900
Particularly important when.

276
00:16:30,890 --> 00:16:36,250
If we look at a longer horizon of
an implementation, like four to five

277
00:16:36,250 --> 00:16:38,470
years, the data set is going to grow.

278
00:16:38,500 --> 00:16:39,700
How are we going to handle it?

279
00:16:39,700 --> 00:16:42,070
What are the policies of
keeping and storing data?

280
00:16:42,630 --> 00:16:46,980
How do our customers want to read and
consume this data on a day-to-day basis?

281
00:16:47,480 --> 00:16:51,280
And lastly batch processing
capabilities for periodic tasks.

282
00:16:51,340 --> 00:16:55,860
Like you, you may not want to
query a 20 million to 20 billion.

283
00:16:56,170 --> 00:16:58,495
Row table every single day.

284
00:16:59,250 --> 00:17:01,980
Maybe the customer only needs
the latest and greatest.

285
00:17:02,180 --> 00:17:05,570
Let's say the forecast, the version of the
forecast that we published only yesterday.

286
00:17:06,050 --> 00:17:10,320
Maybe we can do batch processing
to manage the machine the full

287
00:17:10,470 --> 00:17:14,490
workload of this whole architecture,
much better by segmenting and

288
00:17:14,950 --> 00:17:18,430
understanding what is needed by the
customer on a day-to-day basis versus

289
00:17:18,880 --> 00:17:21,040
on lesser frequency and frequency.

290
00:17:21,310 --> 00:17:21,850
In general.

291
00:17:22,350 --> 00:17:25,380
And again, each system has
its unique requirement.

292
00:17:25,900 --> 00:17:30,240
And hence being able to understand
and document and then make sure

293
00:17:30,240 --> 00:17:36,370
that each of those, criteria and
considerations are understood and

294
00:17:36,515 --> 00:17:38,525
is a part of the design process.

295
00:17:39,425 --> 00:17:41,485
It's it becomes really.

296
00:17:41,845 --> 00:17:45,235
Helpful, particularly in the long
term for that system to scale.

297
00:17:45,735 --> 00:17:48,880
Lastly yeah API design best
practices for immune systems.

298
00:17:48,910 --> 00:17:53,895
Really important again restful API design
principles provide a solid foundation,

299
00:17:53,985 --> 00:17:59,215
but must be adapted to handle the unique
characteristics of prediction services,

300
00:17:59,215 --> 00:18:01,735
resource modeling for prediction must.

301
00:18:01,970 --> 00:18:04,130
Balance, simplicity with expressiveness.

302
00:18:04,160 --> 00:18:07,945
Simplicity being really important for
majority of the architecture with a

303
00:18:07,945 --> 00:18:13,940
unique touch of what is the, what is that
complexity that is needed that is bare,

304
00:18:14,440 --> 00:18:19,130
like foundationally needed, that cannot be
that, that not be present fundamentally.

305
00:18:19,610 --> 00:18:22,220
So the second one is request and response.

306
00:18:22,270 --> 00:18:26,680
Schema design must be flexible enough
to accommodate diverse input formats

307
00:18:26,680 --> 00:18:30,370
while providing sufficient structure
for validation and documentation.

308
00:18:30,890 --> 00:18:34,930
Authentication and authorization are
really important that we don't give

309
00:18:34,930 --> 00:18:36,400
all the access to every single user.

310
00:18:36,835 --> 00:18:41,455
It should be based on
every individual profile.

311
00:18:41,815 --> 00:18:46,285
And being able to manage that is
becomes much more easier on the

312
00:18:46,285 --> 00:18:48,725
architecture to manage, multiple users.

313
00:18:48,725 --> 00:18:49,835
Particularly as you scale.

314
00:18:50,105 --> 00:18:54,145
Not all users will have complete access.

315
00:18:54,475 --> 00:18:57,415
While the majority of the users
will have very specific access,

316
00:18:57,475 --> 00:18:59,335
while others will have the.

317
00:18:59,835 --> 00:19:03,650
Higher level access in the hierarchy
so that they can change stuff

318
00:19:03,650 --> 00:19:05,000
and evolve things much better.

319
00:19:05,190 --> 00:19:09,550
A PA version strategies we discussed
about this previously versioning

320
00:19:09,550 --> 00:19:14,120
is really important, particularly
as we scale so that we have, really

321
00:19:14,120 --> 00:19:18,590
good backward compatibility of
a system and we don't get stuck.

322
00:19:19,130 --> 00:19:20,390
In long term scalability.

323
00:19:20,890 --> 00:19:24,600
Now on the fun part, real world
implementation success stories and the

324
00:19:24,600 --> 00:19:28,660
first two, like EI, I'll talk about
three, e-commerce global logistics

325
00:19:28,720 --> 00:19:30,750
and financial service organization.

326
00:19:30,750 --> 00:19:34,320
I think these three other ones that
I have been very close to personally.

327
00:19:34,950 --> 00:19:40,140
And I can really vouch on how platform
based these platform based architectures

328
00:19:40,140 --> 00:19:41,755
have really helped businesses.

329
00:19:42,115 --> 00:19:43,255
The first one, e-commerce.

330
00:19:43,305 --> 00:19:46,905
I think working with Amazon, I
think I've learned, like e-commerce

331
00:19:46,905 --> 00:19:50,925
grows rapidly and the use cases of
forecasting systems is very unique.

332
00:19:51,285 --> 00:19:55,275
Forecasting a pen number of pens that
we would sell throughout the year is

333
00:19:55,275 --> 00:20:00,845
very different than forecasting the
number of phones or, chairs or couches

334
00:20:00,905 --> 00:20:06,650
that will sell in a year throughout the
year and having different and because

335
00:20:06,650 --> 00:20:09,320
it's so different across the things.

336
00:20:09,420 --> 00:20:13,000
Because it is so different across
these specific use cases we deploy

337
00:20:13,240 --> 00:20:18,920
different machine learning methodologies
across each of these SKUs, and which

338
00:20:18,950 --> 00:20:24,530
in the end requires a very high
compute, highly complex architecture.

339
00:20:25,010 --> 00:20:28,725
To manage right In the end, because
the data sources are different, the

340
00:20:28,785 --> 00:20:33,090
ML models are different, the end users
are different, and hence the whole

341
00:20:33,095 --> 00:20:36,395
containerization that I mentioned
above, the microservices I mentioned

342
00:20:36,395 --> 00:20:42,185
above, becomes really important because
we can build these systems like Lego

343
00:20:42,185 --> 00:20:46,495
block, Lego blocks where certain
level blocks may not be important for

344
00:20:46,495 --> 00:20:48,445
one type of a forecasting use case.

345
00:20:48,675 --> 00:20:49,920
It might be very useful for others.

346
00:20:50,420 --> 00:20:54,820
And being able to do that is, has been
one of the most interesting challenges

347
00:20:54,820 --> 00:20:56,410
that we have o overcome, right?

348
00:20:56,460 --> 00:21:01,790
Global logistics similarly like
every leg of a logistics has a

349
00:21:01,790 --> 00:21:03,290
very different customer base.

350
00:21:03,320 --> 00:21:07,130
And a use case, a first mile is different
than a last mile or a middle line.

351
00:21:07,550 --> 00:21:13,670
And being able to meet and fulfill
the, fulfill those specific

352
00:21:13,670 --> 00:21:16,340
use cases of each leg requires.

353
00:21:17,060 --> 00:21:22,190
Platform based forecasting because
it for, it, it builds a really

354
00:21:22,190 --> 00:21:27,020
solid foundation to meet different
requirements using very similar Lego

355
00:21:27,020 --> 00:21:31,455
blocks with a solid architecture
financial service organization.

356
00:21:31,575 --> 00:21:35,585
Again really important
where regulatory compliance.

357
00:21:36,065 --> 00:21:40,995
Is very important in now in any business
and being able to forecast and understand

358
00:21:41,385 --> 00:21:45,555
where risks exist, be it, our credit
risk or market forecasting, the sales

359
00:21:45,555 --> 00:21:49,885
forecasting that we use to understand
the long term cash flows, et cetera.

360
00:21:50,305 --> 00:21:52,195
And having really.

361
00:21:52,600 --> 00:21:53,290
Good.

362
00:21:53,620 --> 00:21:57,190
Interpretability in these models
and bias detection mechanisms

363
00:21:57,220 --> 00:22:01,300
enables a very successful
financial benefits any business.

364
00:22:01,390 --> 00:22:05,165
But because the finance because the
financial systems will tell a much

365
00:22:05,165 --> 00:22:08,795
tour picture of the future state of
the organization than anything else.

366
00:22:09,295 --> 00:22:11,240
Lastly, the future
direction and conclusion.

367
00:22:11,545 --> 00:22:12,655
Conclusion I think.

368
00:22:13,300 --> 00:22:17,090
The key emerging trends that we
have seen from our point of view is

369
00:22:17,090 --> 00:22:21,380
automobile technologies have been,
have started to democratize, right?

370
00:22:21,470 --> 00:22:27,260
Like a lot of the models that we see
today are available in almost any system.

371
00:22:27,390 --> 00:22:33,575
It, majority of them are available
in most Python libraries or even AWS

372
00:22:33,575 --> 00:22:36,315
platforms, which can be leveraged almost.

373
00:22:36,750 --> 00:22:38,460
By anyone at a very low cost.

374
00:22:38,790 --> 00:22:43,135
And hence the being able to the
federated learning piece where

375
00:22:43,465 --> 00:22:48,785
people are collaborating together
to build singular models which are

376
00:22:48,965 --> 00:22:51,035
successful across multiple businesses.

377
00:22:51,695 --> 00:22:55,395
And then real time machine learning
with continuous adaptation where

378
00:22:55,395 --> 00:22:59,205
the model evolves every single day,
every single hour, I would say.

379
00:22:59,505 --> 00:23:01,915
And then, of course,
sustainable computing practices.

380
00:23:01,915 --> 00:23:04,175
And agreeable is another key part of it.

381
00:23:04,675 --> 00:23:09,775
The key takeaway is I think the punchline
being, successful forecasting platforms

382
00:23:09,835 --> 00:23:13,825
balance, technical sophistication
with operational pragmaticism, right?

383
00:23:13,920 --> 00:23:18,520
It's about building a very complex
system while also being able to deploy

384
00:23:18,520 --> 00:23:22,630
it successfully for the business
to make really good decisions.

385
00:23:23,080 --> 00:23:26,560
And it's not just tied to the
accuracy and accuracy should

386
00:23:26,560 --> 00:23:29,000
not be used as a bottleneck.

387
00:23:29,390 --> 00:23:33,320
To deploy complex and stable and
really good systems to enable the

388
00:23:33,710 --> 00:23:38,625
organizations to make solid and really
good decisions in the end of the day.

389
00:23:39,125 --> 00:23:39,185
Yeah.

390
00:23:39,685 --> 00:23:40,105
Awesome.

391
00:23:40,165 --> 00:23:40,585
Thank you.

392
00:23:40,615 --> 00:23:41,605
That's all that I had.

393
00:23:41,795 --> 00:23:45,990
I know I had a very little time to cover
a really complex topic in the end, but if

394
00:23:45,990 --> 00:23:50,340
you have any questions, feel free to reach
out to me on LinkedIn and I would happy

395
00:23:50,780 --> 00:23:54,870
and I would be happy to discuss more with
you guys and share more of what I know.

396
00:23:55,530 --> 00:23:55,920
Thank you.

