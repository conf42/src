1
00:00:00,600 --> 00:00:02,490
Hey everyone, this is Joshua Goum.

2
00:00:02,550 --> 00:00:05,750
I have been in the software industry
for more than 13 years in development

3
00:00:05,750 --> 00:00:07,070
and quality engineering space.

4
00:00:07,400 --> 00:00:09,800
Today I'll be talking about the
triple threat, which is a technologist

5
00:00:09,800 --> 00:00:10,910
reducing the testing costs.

6
00:00:11,240 --> 00:00:14,640
Primarily we'll talk about the
generative ai, predictive analytics and

7
00:00:14,640 --> 00:00:18,509
self-healing frameworks, how transforming
their to the testing landscape for

8
00:00:18,509 --> 00:00:19,919
forward thinking organizations.

9
00:00:20,419 --> 00:00:23,659
The traditional testing limitations we
are talking about time and test creation.

10
00:00:23,709 --> 00:00:26,080
Manual script consumes
valuable engineering resources.

11
00:00:26,439 --> 00:00:27,879
Teams struggle with the coverage gaps.

12
00:00:28,210 --> 00:00:30,790
When you have a manual testers creating
the test scripts, you are going to

13
00:00:30,790 --> 00:00:32,980
have the coverage gaps and reactive.

14
00:00:33,349 --> 00:00:35,149
Defect detection problems.

15
00:00:35,149 --> 00:00:37,579
Discover too late critical issues
to reach production environment.

16
00:00:37,579 --> 00:00:39,769
When you have a P one issues
in production, it's going to,

17
00:00:39,769 --> 00:00:41,089
damage the trust of the customer.

18
00:00:41,539 --> 00:00:44,300
Also, it's going to impact that
top line or bottom line revenues.

19
00:00:44,749 --> 00:00:46,669
And the third one is the
high maintenance overhead.

20
00:00:46,969 --> 00:00:50,834
When you have the automation scripts
which breaks with the U changes, our false

21
00:00:50,834 --> 00:00:52,604
positives drain the resources and trust.

22
00:00:53,104 --> 00:00:55,984
So we, the solution for all
this problems is our solution.

23
00:00:55,984 --> 00:00:59,074
What we're talking about is the A
testing triangle with the generative

24
00:00:59,074 --> 00:01:01,474
AI and predictive analytics
and self-healing frameworks.

25
00:01:02,179 --> 00:01:05,209
The first one is a gender dua, where you
can create a comprehensive test script

26
00:01:05,300 --> 00:01:08,089
autonomously identifying the edge cases.

27
00:01:08,149 --> 00:01:12,200
Human testers often miss, so when you,
obviously, when you create the gender

28
00:01:12,200 --> 00:01:16,310
dua, the test scripts, it's going to have
a, better coverage than the manual test.

29
00:01:16,410 --> 00:01:17,949
Test case script creation.

30
00:01:18,279 --> 00:01:21,399
The predictive analytics leverage
historical data to focus testing

31
00:01:21,399 --> 00:01:24,490
resources on high risk areas
with a greater potential impact.

32
00:01:24,759 --> 00:01:28,360
What we are talking about is whatever
areas having, when gather the historical

33
00:01:28,360 --> 00:01:32,219
data and see where you have higher P
one bucks, which is causing the revenue,

34
00:01:32,490 --> 00:01:34,140
and you can deploy your resources there.

35
00:01:35,074 --> 00:01:36,694
The third one is the
self-healing frameworks, right?

36
00:01:37,234 --> 00:01:40,354
Automatically adapt to UA changes,
eliminates the false positives

37
00:01:40,354 --> 00:01:43,564
and maintenance and test integrity
without manual intervention.

38
00:01:43,984 --> 00:01:47,414
When you have all these three, you will
have the, if you if you go through the

39
00:01:47,414 --> 00:01:52,004
numbers right, by reducing the manual test
creation by up to 70%, cutting maintenance

40
00:01:52,004 --> 00:01:56,624
cost by 65% and accelerating release
cycle by 40%, instead of looking at a.

41
00:01:56,814 --> 00:02:00,244
Testing as a bottleneck, then you are
looking at it as a competitive advantage.

42
00:02:00,724 --> 00:02:04,854
The results is the high quality release,
faster time to market, and dramatically

43
00:02:04,854 --> 00:02:07,854
lowering the testing costs across
your entire development pipeline.

44
00:02:08,354 --> 00:02:09,884
So the first one is generative ia, right?

45
00:02:09,944 --> 00:02:13,224
The before generative IA before when
you have a time consuming manual

46
00:02:13,224 --> 00:02:17,034
script creation requiring specialized
expertise coverage gaps, leaving

47
00:02:17,034 --> 00:02:20,515
critical scenarios untested and
excessive developer hours devoted

48
00:02:20,734 --> 00:02:24,334
from the feature development variable
quality dependent on the individual.

49
00:02:24,619 --> 00:02:27,889
Tester skill levels right after
the generative wave, we are talking

50
00:02:27,889 --> 00:02:31,069
about a power skip generation
in minutes instead of days.

51
00:02:31,369 --> 00:02:35,629
Comprehensive coverage, including edge
cases, human affirm needs and development

52
00:02:35,629 --> 00:02:39,829
resource allocated to high value
innovation and consistent enterprise

53
00:02:39,829 --> 00:02:43,814
grade quality across all test suits, not
just one area where you have the experts.

54
00:02:44,314 --> 00:02:46,054
The second one is a predictive analytics.

55
00:02:46,154 --> 00:02:48,744
What is what it is like an
anticipating the issues, right?

56
00:02:49,174 --> 00:02:50,224
Risk identification, right?

57
00:02:50,254 --> 00:02:52,264
High risk models flagged
before deployment.

58
00:02:52,534 --> 00:02:55,899
Using the historical data, you can
identify the what is the high risk areas.

59
00:02:56,644 --> 00:03:01,144
And focus testing their resources
directed to vulnerable areas and,

60
00:03:01,254 --> 00:03:04,824
defect prevention, critical issues
caught before production, a score

61
00:03:04,854 --> 00:03:06,394
patterns, and complex metrics.

62
00:03:06,634 --> 00:03:08,614
And you can follow this
through this cycle.

63
00:03:08,664 --> 00:03:11,724
Over a period of time you are going
to refine and get a better results.

64
00:03:12,224 --> 00:03:14,294
The third one we are talking about
is self feeling frameworks, right?

65
00:03:14,294 --> 00:03:18,254
Automated maintenance where U UA
changes, breaks, existing tests, right?

66
00:03:18,434 --> 00:03:22,124
A demands, failure patterns, and
test scripts automatically updated.

67
00:03:22,574 --> 00:03:24,194
Fix verified without human intervention.

68
00:03:24,194 --> 00:03:27,164
There is multiple tools available
as of today in the market.

69
00:03:27,444 --> 00:03:29,659
You can see what works
best for your needs.

70
00:03:30,159 --> 00:03:32,199
You are talking about the real
world results by industry, right?

71
00:03:32,259 --> 00:03:35,259
You can see across healthcare
or FinTech or e-commerce, right?

72
00:03:35,559 --> 00:03:35,979
Test case.

73
00:03:36,119 --> 00:03:39,189
Test case creation time is
reduced by almost like 70%.

74
00:03:39,609 --> 00:03:44,339
Defect detection is increased by 40%, and
maintenance hours decreased by almost 80%.

75
00:03:44,839 --> 00:03:45,619
That this is a grade.

76
00:03:45,619 --> 00:03:50,419
We are talking about time savings
of 74% and 63% of cost reduction,

77
00:03:50,629 --> 00:03:55,239
and 40, 41% of defect prevention
and 3.5 x of coverage increment.

78
00:03:55,739 --> 00:03:57,629
Now how it can be implemented, right?

79
00:03:57,899 --> 00:03:59,969
You are talking about architectural
integration patterns, right?

80
00:03:59,969 --> 00:04:01,409
First standalone implementation, right?

81
00:04:01,439 --> 00:04:02,999
Begin with the isolated tools.

82
00:04:03,389 --> 00:04:06,509
Test E each AI component
independently before integration.

83
00:04:07,109 --> 00:04:08,399
Then you can do the portion integration.

84
00:04:08,399 --> 00:04:12,299
Connect to components, build confidence
in the approach with the, in a limited

85
00:04:12,299 --> 00:04:15,089
scope, full ecosystem integration, right?

86
00:04:15,089 --> 00:04:16,559
Implement complete feedback loop.

87
00:04:16,589 --> 00:04:19,079
Allow all components to
share data and insights.

88
00:04:19,579 --> 00:04:22,239
Obviously you cannot a hundred
percent rely on the ai.

89
00:04:22,449 --> 00:04:24,819
You need to have ethical AI
governance framework where you have a

90
00:04:24,819 --> 00:04:29,319
transparency, light clear documentation
of AI decisions, explainable test

91
00:04:29,319 --> 00:04:33,530
generation, logic editable, prediction,
rational and accuracy, right?

92
00:04:34,069 --> 00:04:38,329
Regular validation against human
experts, continuous model retraining.

93
00:04:38,739 --> 00:04:40,539
Confidence scoring for predictions.

94
00:04:40,929 --> 00:04:44,759
The third one is a human oversight the
finalization authority with the QA leads.

95
00:04:45,129 --> 00:04:49,574
Regular review of AA performance over
rate capability for all automated actions.

96
00:04:50,074 --> 00:04:51,784
Next one is a tool chain
integration approach, right?

97
00:04:51,784 --> 00:04:53,465
Where you have the a PA
integration in the first place.

98
00:04:53,465 --> 00:04:55,965
We are connecting through
standard rest interfaces.

99
00:04:56,174 --> 00:04:59,205
Then you have the pipeline embeddings
with integrating into CACD workflows.

100
00:04:59,505 --> 00:05:02,205
Then you have the data sharing where
you are gathering all the data,

101
00:05:02,205 --> 00:05:06,075
extra centralized matrix repository,
like elastic search or some kind of

102
00:05:06,075 --> 00:05:08,234
repository, UN unified dashboards, right?

103
00:05:08,445 --> 00:05:10,215
Create a comprehensive
visualization layer, right?

104
00:05:10,215 --> 00:05:12,195
It can be Grafana, Splunk,
or something else, right?

105
00:05:12,695 --> 00:05:14,945
The implementation roadmap, what
we are talking about, the phase

106
00:05:14,945 --> 00:05:15,844
one is a foundation, right?

107
00:05:15,844 --> 00:05:16,474
Selecting tools.

108
00:05:16,474 --> 00:05:19,085
Obviously you have hundreds
of tools or maybe thousands of

109
00:05:19,085 --> 00:05:20,164
tools available in the market.

110
00:05:20,465 --> 00:05:23,645
You have to see what is the right fit
for your needs and your enterprise.

111
00:05:24,094 --> 00:05:25,684
Establish the baseline metrics.

112
00:05:25,955 --> 00:05:28,414
Try shell team members in
shell deployment, right?

113
00:05:28,414 --> 00:05:31,114
Implement individual components,
validate results against control

114
00:05:31,114 --> 00:05:32,945
groups and integration, right?

115
00:05:32,945 --> 00:05:35,044
Connect component feedback loops.

116
00:05:35,080 --> 00:05:39,520
Monitor system performance, then you
can expand scale across teams, refine

117
00:05:39,520 --> 00:05:41,140
process, document best practices.

118
00:05:41,640 --> 00:05:43,980
When you do these things right, the
key takeaways where we are talking

119
00:05:43,980 --> 00:05:45,300
about is the AI synergy, right?

120
00:05:45,570 --> 00:05:47,940
The combination of technologies
create greater impact than

121
00:05:47,940 --> 00:05:48,750
individual tools, right?

122
00:05:49,050 --> 00:05:52,110
Like obviously each EA tool will
bring what we bring to the table is

123
00:05:52,110 --> 00:05:53,250
going to have a different result.

124
00:05:53,250 --> 00:05:56,370
But when you combine all different
technologies are different tools,

125
00:05:56,610 --> 00:05:59,610
you are going to have a greater
impact and proven results, right?

126
00:05:59,700 --> 00:06:02,099
Real world implementation
demonstrates significant return

127
00:06:02,099 --> 00:06:03,300
investment across industries.

128
00:06:03,659 --> 00:06:05,039
When these three technologies.

129
00:06:05,175 --> 00:06:06,315
Together implemented.

130
00:06:06,555 --> 00:06:09,055
We already seen so many,
enterprise level results.

131
00:06:09,085 --> 00:06:11,185
Enterprise level companies
giving, getting the better

132
00:06:11,185 --> 00:06:12,935
results proven results with this.

133
00:06:13,325 --> 00:06:14,465
And practical pathways.

134
00:06:14,645 --> 00:06:17,525
Smart small with a modular
implementation before full integration

135
00:06:18,005 --> 00:06:19,295
and human partnership, right?

136
00:06:19,595 --> 00:06:22,295
A enhances human testers
rather than replacing them.

137
00:06:22,425 --> 00:06:23,145
With that, I'm done.

138
00:06:23,145 --> 00:06:23,985
Thank you very much.

