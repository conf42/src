1
00:00:00,140 --> 00:00:04,399
Hey everyone, my name is Razelle Scarlett
and today I'm going to be talking

2
00:00:04,400 --> 00:00:08,090
to you about prompting AI to build
a pregnancy app that I could trust.

3
00:00:08,599 --> 00:00:11,449
All right, so let me just give
you a little bit of background.

4
00:00:11,480 --> 00:00:14,530
For me, in my opinion, I don't
think we talk about pregnancy

5
00:00:14,530 --> 00:00:15,839
in the workplace enough.

6
00:00:16,149 --> 00:00:17,539
It's a taboo topic.

7
00:00:17,539 --> 00:00:21,110
It's also a very sensitive
subject for many pregnant women,

8
00:00:21,120 --> 00:00:23,460
of course, are birthing people.

9
00:00:24,380 --> 00:00:30,170
But I also think, because of the
lack of discussion, this also leads

10
00:00:30,170 --> 00:00:34,079
to poor maternity leave policies
because a lot of our industries

11
00:00:34,090 --> 00:00:36,269
like tech are so male dominated.

12
00:00:36,880 --> 00:00:42,790
And then that leads to overworked
expecting moms and also I think we've

13
00:00:42,820 --> 00:00:47,900
ended up developing a lot of pregnancy
invasive app or privacy invasive

14
00:00:47,910 --> 00:00:53,210
pregnancy apps try saying that three
times but basically I think we a lot

15
00:00:53,210 --> 00:00:57,580
of the tech industry will be like
oh let's get into this area in the

16
00:00:57,580 --> 00:01:03,100
2020s or 2015s or whatever like let's
get into this area where it seems

17
00:01:03,120 --> 00:01:08,435
underserved let's make these apps
for, feminine personal health data.

18
00:01:08,715 --> 00:01:15,105
And then they figure out, Ooh, like we
don't care that much, or at least as a

19
00:01:15,105 --> 00:01:19,235
user, you figure out, Whoa, they don't
really care that much for my privacy.

20
00:01:19,555 --> 00:01:23,665
this is nice to track, but it's
also sharing my data with a

21
00:01:23,675 --> 00:01:25,345
ton of different, platforms.

22
00:01:25,615 --> 00:01:28,065
before I go any further,
my name is Rizal Scarlett.

23
00:01:28,115 --> 00:01:30,165
I'm a staff developer advocate at Block.

24
00:01:30,415 --> 00:01:32,785
I'm very passionate
about open source and AI.

25
00:01:32,955 --> 00:01:36,845
And I'm passionate about the data
privacy as well, which almost

26
00:01:36,855 --> 00:01:38,995
seems opposite of each other.

27
00:01:39,385 --> 00:01:42,115
And one of the reasons I'm
interested in this particular topic

28
00:01:42,115 --> 00:01:43,995
today is I'm 35 weeks pregnant.

29
00:01:44,265 --> 00:01:47,765
And with that, I will tell
you the agenda as well.

30
00:01:48,035 --> 00:01:51,325
So we're going to talk about lack of
data privacy online, something I found

31
00:01:51,325 --> 00:01:52,735
called the centralized web nodes.

32
00:01:53,205 --> 00:01:56,335
AI agents tips and tricks
for using AI agents.

33
00:01:56,825 --> 00:02:01,165
We'll do a bit of a demo and
I'll show you all some resources.

34
00:02:01,165 --> 00:02:02,465
So it's going to be lots of fun.

35
00:02:02,995 --> 00:02:07,105
So I'm already used to, and you
all are probably as well, apps

36
00:02:07,105 --> 00:02:10,525
that just collect massive amounts
of personal data about you.

37
00:02:10,805 --> 00:02:14,215
And really we just
accept it for what it is.

38
00:02:14,775 --> 00:02:17,785
and oftentimes we accept it for
what it is because that's just

39
00:02:17,785 --> 00:02:19,855
how the internet has been, but.

40
00:02:20,305 --> 00:02:22,925
That shouldn't be how it always is, right?

41
00:02:23,225 --> 00:02:28,325
I started thinking this is really weird
when I downloaded A app when I decided

42
00:02:28,325 --> 00:02:34,515
oh, I think I want to start a family and
tiktok instagram reels facebook target

43
00:02:34,754 --> 00:02:40,615
Everyone youtube every commercial had
to do with becoming a mom And i'm like

44
00:02:40,615 --> 00:02:42,495
dang, how do you guys already know?

45
00:02:42,495 --> 00:02:47,545
I just downloaded the app And nothing
else has occurred besides downloading

46
00:02:47,545 --> 00:02:51,975
the app and I figured this can be also
annoying and very invasive if someone has

47
00:02:51,975 --> 00:02:58,134
experienced a miscarriage and now they're
being constantly reminded by this, by

48
00:02:58,145 --> 00:03:00,635
different applications about motherhood.

49
00:03:00,825 --> 00:03:06,235
So the question that I pose to you all
is who should really own your data?

50
00:03:06,235 --> 00:03:08,385
And from my perspective, it should be you.

51
00:03:08,865 --> 00:03:09,935
You should own your own data.

52
00:03:10,645 --> 00:03:15,885
so one thing I looked into it is
called DWNs or decentralized web nodes.

53
00:03:15,885 --> 00:03:16,845
They're open source.

54
00:03:17,225 --> 00:03:21,065
They are, basically a personal
data storage mechanism.

55
00:03:21,065 --> 00:03:26,395
So you can think of it like a Dropbox,
but it's encrypted and you as the user

56
00:03:26,415 --> 00:03:31,035
have ownership over it and you can control
who has access to different types of

57
00:03:31,045 --> 00:03:34,935
data in it and how that's made possible
is with something called protocols.

58
00:03:35,205 --> 00:03:41,035
These are javascript objects or json
objects where here you can see you

59
00:03:41,035 --> 00:03:46,835
can define who can do certain things,
who can read, who can write, who

60
00:03:46,835 --> 00:03:49,875
can query your data and all of that.

61
00:03:50,135 --> 00:03:54,235
So in this particular situation
they're saying for this web app.

62
00:03:55,020 --> 00:03:57,560
Anyone can create a chat,
but only the author and the

63
00:03:57,560 --> 00:03:59,090
recipient can read that chat.

64
00:03:59,370 --> 00:04:02,750
And you can, if you've made a pregnancy
app or anything like that, you can

65
00:04:02,750 --> 00:04:07,160
say, Oh, I only want the provider to
be able to read this, or I only want

66
00:04:07,230 --> 00:04:13,260
my partner, my, parents or just myself
to be able to have access to this data

67
00:04:13,760 --> 00:04:16,750
So I thought of like a wild kooky idea.

68
00:04:16,750 --> 00:04:19,170
Can I use ai to help me build this app?

69
00:04:19,410 --> 00:04:23,390
that uses decentralized web nodes
partially i'm a little lazy.

70
00:04:23,620 --> 00:04:27,330
So let's see what we could
do and I decided to look into

71
00:04:27,340 --> 00:04:29,240
different types of ai tools.

72
00:04:29,540 --> 00:04:33,460
I've used github copilot heavily I
wanted to try something new so i'm

73
00:04:33,470 --> 00:04:38,285
trying out goose today and goose is a
developer So Agent local to your machine.

74
00:04:38,435 --> 00:04:39,945
It's available in your terminal.

75
00:04:39,975 --> 00:04:44,285
Also available in your ideas like
Visual Studio Code or IntelliJ.

76
00:04:44,575 --> 00:04:46,965
And like I said, it's open
source and it ends up having

77
00:04:47,005 --> 00:04:49,015
full context of your project.

78
00:04:49,815 --> 00:04:54,935
Now I do want to emphasize it's not an
LLM and we're used to LLMs, which are

79
00:04:55,355 --> 00:04:59,105
Known as large language models, they're
trained on large amounts of data and

80
00:04:59,105 --> 00:05:05,655
use prediction algorithms to generate,
summarize, translate, and analyze Content

81
00:05:05,685 --> 00:05:11,375
so that content can be anything images
video code or just text and we probably

82
00:05:11,375 --> 00:05:18,445
most used to using like GPTs from OpenAI
like GPT 3, GPT 4, Sonnet, Gemini.

83
00:05:18,445 --> 00:05:21,545
Maybe you don't even realize you're
using it because sometimes it's

84
00:05:21,545 --> 00:05:27,214
abstracted away with a user interface
such as ChatGPT or Cloud or GitHub

85
00:05:27,215 --> 00:05:31,455
Copilot or Midjourney or Google or
Dolly or all these different things.

86
00:05:31,785 --> 00:05:34,175
But we're interacting with
LLMs behind the scenes.

87
00:05:34,445 --> 00:05:40,225
Instead, as I mentioned, Goose is an
And now, the AI world, we're having a

88
00:05:40,225 --> 00:05:41,985
tough time with definitions right now.

89
00:05:41,985 --> 00:05:46,015
So people are struggling with
figuring out what exactly is an

90
00:05:46,075 --> 00:05:50,625
agent, but the way I've defined it,
at least in the context of boost is

91
00:05:50,625 --> 00:05:55,515
that it's software that can execute
operations without human intervention.

92
00:05:55,815 --> 00:06:00,365
Or what little human intervention, and
basically their agents are given a goal.

93
00:06:00,425 --> 00:06:03,715
They decide on what actions need
to be made to reach that goal.

94
00:06:03,955 --> 00:06:06,595
And they take that
action to reach the goal.

95
00:06:07,095 --> 00:06:11,835
So in my personal opinion, I think
Goose is more of a semi autonomous agent

96
00:06:12,145 --> 00:06:13,795
because it can do everything for you.

97
00:06:14,130 --> 00:06:18,590
But it does take some time to
pause and check in if you're

98
00:06:18,590 --> 00:06:20,090
okay with some of the commands.

99
00:06:20,410 --> 00:06:24,210
And I like that because I know that
AI hallucinates like I recognize

100
00:06:24,220 --> 00:06:27,830
that I know that it makes mistakes
so I feel safer knowing that I'm

101
00:06:27,830 --> 00:06:30,480
maintaining some level of control.

102
00:06:31,030 --> 00:06:35,920
so I also wanted to know just for
my personal gain is like agents

103
00:06:36,210 --> 00:06:39,250
The way it sounds, it's just
automation, but what's the difference?

104
00:06:39,540 --> 00:06:43,380
So agents are more given goals to
achieve, and then they learn, adapt, and

105
00:06:43,380 --> 00:06:45,650
make decisions to achieve those goals.

106
00:06:45,660 --> 00:06:49,400
Whereas with automation, it's
given a situation, response to

107
00:06:49,400 --> 00:06:53,030
the predetermined action, if the
situation matches one of its recipes.

108
00:06:53,530 --> 00:06:56,360
The way that Goose works in
particular is you bring your own

109
00:06:56,370 --> 00:06:59,600
LLM, whatever you prefer to use.

110
00:06:59,600 --> 00:07:07,680
Do you like OpenAI's GPT's or do you like
to use Sonnet by Claude or whatever it is?

111
00:07:07,950 --> 00:07:11,560
You bring the one that you think
is good for your situation and

112
00:07:11,570 --> 00:07:12,740
the one that you like to use.

113
00:07:13,000 --> 00:07:15,950
Then you prompt Goose and you say
something like, hey, I want to create

114
00:07:15,950 --> 00:07:22,745
some unit tests and Goose It goes to
the LLM and it's yo, LLM, yo GPT-4 row,

115
00:07:23,025 --> 00:07:24,945
Brazil wants to create some unit test.

116
00:07:24,975 --> 00:07:26,175
How do I do that?

117
00:07:26,525 --> 00:07:30,655
I need you to make a plan for me and
then the LL m's, okay, first you're

118
00:07:30,655 --> 00:07:32,995
gonna install React testing library.

119
00:07:33,595 --> 00:07:36,665
Then you're going to look at this
first method and you're going

120
00:07:36,685 --> 00:07:40,345
to write a unit test for this
and that and so on and so forth.

121
00:07:40,985 --> 00:07:45,365
Goose comes back to you, it communicates
the plan to you, and then it executes

122
00:07:45,365 --> 00:07:46,895
the plan through shell commands.

123
00:07:47,175 --> 00:07:49,815
Now we know sometimes
shell commands fail, right?

124
00:07:50,105 --> 00:07:52,895
Maybe sometimes it didn't
type in the right thing.

125
00:07:53,200 --> 00:07:55,970
Or your environment's weird or whatever.

126
00:07:56,200 --> 00:08:00,960
So we have some different options
or goose has different options for

127
00:08:00,960 --> 00:08:05,270
what it does when a command fails, it
might ask the LLM for an updated plan.

128
00:08:05,270 --> 00:08:09,020
It might be like, yo, when I installed
react, test and library didn't work.

129
00:08:09,290 --> 00:08:13,110
And then it might be like the LLM might
be like, Oh, I forgot to specifically

130
00:08:13,260 --> 00:08:14,970
tell you which version to install.

131
00:08:15,200 --> 00:08:17,900
Sometimes the command might be
running too long and it'll stop

132
00:08:17,900 --> 00:08:19,940
and tell you, Hey, can you.

133
00:08:20,245 --> 00:08:24,665
Tell me what command I need to run
or can you run the command yourself?

134
00:08:24,665 --> 00:08:27,575
It might be a little bit faster
or sometimes the command might

135
00:08:27,575 --> 00:08:30,585
need elevated permissions like
your password and it might be

136
00:08:30,585 --> 00:08:32,255
like yo It asks for your password.

137
00:08:32,305 --> 00:08:33,035
I don't know it.

138
00:08:33,245 --> 00:08:35,635
Can you run it on your end
and tell me when you're done?

139
00:08:36,390 --> 00:08:41,550
So just letting you know this demo,
the demos I'll be doing will not be

140
00:08:41,550 --> 00:08:45,990
perfect because AI is non deterministic,
meaning it's unpredictable, likely

141
00:08:45,990 --> 00:08:47,650
to have a different result each time.

142
00:08:47,940 --> 00:08:53,110
So no matter how much I practiced
before, it might show me something crazy.

143
00:08:53,360 --> 00:08:57,850
So we're going to switch over to that
in a quick second, and start the demo.

144
00:08:58,710 --> 00:08:59,070
Okay.

145
00:08:59,070 --> 00:09:01,870
So I switched back over to my terminal.

146
00:09:02,170 --> 00:09:04,030
because this is where I'm
going to interact with Goose.

147
00:09:04,410 --> 00:09:07,530
and I made a directory and everything.

148
00:09:08,370 --> 00:09:13,630
So what I'm going to go ahead
and do is instead of necessarily,

149
00:09:13,670 --> 00:09:18,510
so to start a session, I'm going
to say Goose session start.

150
00:09:18,870 --> 00:09:28,134
And instead of me deciding to create
a pregnancy web app, we're like,

151
00:09:28,355 --> 00:09:31,375
More relatable first, then we're
going to do the pregnancy web app

152
00:09:31,395 --> 00:09:33,805
just to see how Boost acts, right?

153
00:09:33,825 --> 00:09:40,125
So it started up a session for me and I'm
going to say, let's create a collaborative

154
00:09:40,625 --> 00:09:45,445
real time drawing web app using Next.

155
00:09:45,445 --> 00:09:45,615
js.

156
00:09:46,115 --> 00:09:50,865
So right now when it's responding it's
going chatting with that llm coming

157
00:09:50,865 --> 00:09:55,225
up with a plan for me And it's going
to be able to print that plan out and

158
00:09:55,225 --> 00:09:56,825
show and communicate that with me.

159
00:09:57,325 --> 00:09:58,015
So we'll see

160
00:09:58,515 --> 00:10:02,095
it's taking a bit probably because I
have a whole bunch of stuff running.

161
00:10:02,135 --> 00:10:06,885
Oh, perfect So it came up with a plan.

162
00:10:06,885 --> 00:10:08,495
It's it's going to do some basic setup.

163
00:10:08,495 --> 00:10:10,085
It's going to set up canvas.

164
00:10:10,085 --> 00:10:13,775
It's going to, implement a
web socket in the backend.

165
00:10:13,805 --> 00:10:19,075
And then it starts creating the
project, with these files and all of

166
00:10:19,075 --> 00:10:21,085
that for me, which is super exciting.

167
00:10:21,085 --> 00:10:23,805
And it's okay, just go
ahead and run the project.

168
00:10:24,075 --> 00:10:24,715
for me.

169
00:10:24,825 --> 00:10:25,385
Oh my God.

170
00:10:25,415 --> 00:10:25,945
Perfect.

171
00:10:25,945 --> 00:10:30,525
for the sake of time, I actually
just, had, my own on the side running

172
00:10:30,525 --> 00:10:32,655
or I already used goose to do this.

173
00:10:32,655 --> 00:10:36,445
This is you watch a cooking show and
they're like, we made some cupcakes.

174
00:10:36,785 --> 00:10:38,745
But we already made some cupcakes.

175
00:10:38,775 --> 00:10:42,175
So I did use goose to create this
beforehand, just for the sake

176
00:10:42,175 --> 00:10:45,275
of time, since this is supposed
to be a 15 to 20 minute talk.

177
00:10:46,025 --> 00:10:48,545
And here we have a
collaborative drawing app.

178
00:10:48,715 --> 00:10:50,415
It's nothing too crazy, simple.

179
00:10:50,415 --> 00:10:54,395
We can always go back and say,
Hey, add color, add buttons for

180
00:10:54,435 --> 00:10:56,195
toggling erasers and stuff like that.

181
00:10:56,415 --> 00:10:59,165
But we have something that we see works.

182
00:10:59,595 --> 00:10:59,885
All right.

183
00:11:00,385 --> 00:11:05,165
Next thing I want to show y'all is
the actual creation of the pregnancy

184
00:11:05,165 --> 00:11:10,755
web app, but I want to Do something a
little bit more like it's a little bit

185
00:11:10,775 --> 00:11:17,045
different here and what i'm gonna do is
I recognize that decentralized web nodes.

186
00:11:17,065 --> 00:11:21,810
They're not like this common technology
They're new, not a lot of people are

187
00:11:21,810 --> 00:11:27,680
using them yet, and so therefore the
LLM and Goose may not have information

188
00:11:27,690 --> 00:11:29,480
about decentralized web nodes like that.

189
00:11:29,910 --> 00:11:37,090
So what I did instead is I created
what is called a Goose hints file.

190
00:11:37,520 --> 00:11:43,150
So I'm going to go ahead and recreate
that with you guys and let's see,

191
00:11:43,650 --> 00:11:48,240
we're going to do touch Goose hints.

192
00:11:49,165 --> 00:11:52,515
And I'm going to open this up in Vim.

193
00:11:53,475 --> 00:12:01,255
All right, so in my Goosens file, you
can give context to your, to Goose, so

194
00:12:01,265 --> 00:12:03,035
it can know how to operate on things.

195
00:12:03,035 --> 00:12:08,525
What I did is I went to the documentation
for DWNs, and I'm like, I copied

196
00:12:08,525 --> 00:12:10,705
and pasted all the relevant parts.

197
00:12:10,775 --> 00:12:12,825
So I'm going to go ahead and do that.

198
00:12:12,975 --> 00:12:14,725
And let's exit this drawing web app.

199
00:12:15,225 --> 00:12:18,605
I'm going to go ahead and copy
and paste this so it knows

200
00:12:18,635 --> 00:12:20,455
what to do and when to do it.

201
00:12:21,065 --> 00:12:21,915
All right, cool.

202
00:12:22,285 --> 00:12:28,795
So now we've inserted it
and I'm going to do right.

203
00:12:29,295 --> 00:12:30,275
Okay, awesome.

204
00:12:30,285 --> 00:12:35,755
So we have our goose hints while giving
goose a bit of context, but we also want

205
00:12:35,755 --> 00:12:38,455
to, or at least I want to make a plan.

206
00:12:38,815 --> 00:12:43,335
So we saw goose make its own plan,
but you can also make your own

207
00:12:43,365 --> 00:12:45,805
plan for goose if you wanted to.

208
00:12:46,055 --> 00:12:51,695
and I think of this as the, Oh, I know
what to do, but I'm just lazy to manually

209
00:12:51,695 --> 00:12:54,195
do it and I want Goose to do this for me.

210
00:12:54,485 --> 00:12:57,975
So I'm going to create
another, file called a plan.

211
00:12:58,095 --> 00:12:59,335
yaml.

212
00:12:59,835 --> 00:13:02,285
And, alrighty.

213
00:13:02,645 --> 00:13:04,045
And we're going to open it up.

214
00:13:04,045 --> 00:13:05,685
We're going to say touch plan.

215
00:13:05,685 --> 00:13:05,875
yaml.

216
00:13:06,375 --> 00:13:09,490
And, Oh, I already did that.

217
00:13:10,450 --> 00:13:11,610
let me see if I have made two.

218
00:13:11,980 --> 00:13:13,370
I'm gonna do vi.

219
00:13:13,380 --> 00:13:15,950
I'm gonna open it up and
say vi plan not yaml.

220
00:13:15,950 --> 00:13:21,200
All right now in my plan, I made
this ahead of time just for the sake

221
00:13:21,200 --> 00:13:24,390
of time We have a kickoff message
telling it what we're going to

222
00:13:24,390 --> 00:13:25,820
do We're going to create a next.

223
00:13:25,820 --> 00:13:30,160
js web app that acts as a pregnancy due
date calculator and I gave it tasks I'm

224
00:13:30,160 --> 00:13:35,560
like first create a directory install
this project or dependency create a ui

225
00:13:35,560 --> 00:13:41,440
where users can input their The first day
of their last cycle, all of that stuff.

226
00:13:41,800 --> 00:13:45,700
And then we're going to say, quit already.

227
00:13:46,020 --> 00:13:51,490
Now we can start a square, a
goo session, an SQ goo session.

228
00:13:51,810 --> 00:13:55,590
We can say SQ goo session, star dash plan.

229
00:13:55,650 --> 00:13:56,770
And then we can say plan.

230
00:13:56,800 --> 00:13:57,340
yaml.

231
00:13:57,340 --> 00:14:00,120
So we're saying, started
with this particular plan.

232
00:14:00,460 --> 00:14:03,710
and it's supposed to see what I did wrong.

233
00:14:03,760 --> 00:14:04,170
Oh, okay.

234
00:14:04,910 --> 00:14:07,860
Let's put you in that yammer with
a because that's how I spelled

235
00:14:07,890 --> 00:14:12,080
the end of the extension So now
it's going to go ahead and follow

236
00:14:12,270 --> 00:14:13,590
what I told it to do, right?

237
00:14:13,590 --> 00:14:19,990
It's making that directory it's cd'ing
into the directory and it is going

238
00:14:20,010 --> 00:14:27,520
to install all the things I told it
to install, like Next and React and

239
00:14:27,520 --> 00:14:31,100
Web5 API for the DWN and all of that.

240
00:14:31,590 --> 00:14:35,330
Now, for the sake of time, again,
like I said, these run pretty long.

241
00:14:35,670 --> 00:14:39,865
I've already Done this again and we
see the code that it wrote for it.

242
00:14:40,095 --> 00:14:44,115
I've already done this on the side Just
to make things a little bit faster.

243
00:14:44,125 --> 00:14:45,355
It says run npm run dev.

244
00:14:45,825 --> 00:14:48,675
I'm already doing that So
we can see what it made.

245
00:14:48,735 --> 00:14:49,985
I'm gonna bring it over here.

246
00:14:50,015 --> 00:14:56,265
It's pretty plain It's pretty plain, but
let's say if Your last cycle the first day

247
00:14:56,265 --> 00:15:04,610
of your last cycle was I don't know Oh,
let's pick a random date April 4, 2024.

248
00:15:05,110 --> 00:15:10,190
When you calculate the date, that would
say that you're 30 weeks pregnant.

249
00:15:10,580 --> 00:15:13,780
your due date will be
Wednesday, January 8, 2025.

250
00:15:13,790 --> 00:15:16,610
But the thing we care about is,
okay, it's been written into

251
00:15:16,610 --> 00:15:17,910
our decentralized web node.

252
00:15:18,200 --> 00:15:19,740
How do we know that for sure?

253
00:15:19,750 --> 00:15:21,305
I told it to print out.

254
00:15:21,445 --> 00:15:26,005
If it worked, or to print out
the data that it printed to the

255
00:15:26,005 --> 00:15:27,655
decentralized web node, and it did.

256
00:15:27,915 --> 00:15:31,915
So we have a record here, and this
is something I would expect, what my,

257
00:15:32,175 --> 00:15:36,575
experience with decentralized web nodes
is where it has all the stuff in here,

258
00:15:36,635 --> 00:15:39,855
all the encoded data and the record ID.

259
00:15:39,855 --> 00:15:42,665
So it was successful,
which is really exciting.

260
00:15:42,915 --> 00:15:49,455
And actually, I have some time to show you
all the web app that I actually had made.

261
00:15:50,200 --> 00:15:55,000
So I'm going to cancel all of this
Exit so that was just a demo one,

262
00:15:55,230 --> 00:16:01,870
but I made a more flourishing one
so localhost 3002 A little bit more

263
00:16:01,870 --> 00:16:04,120
detailed and we have time to show this.

264
00:16:04,370 --> 00:16:05,750
I'm so glad that we do.

265
00:16:06,250 --> 00:16:10,670
So this web app, it's not the
cutest, but I thought it was

266
00:16:10,670 --> 00:16:12,250
cool that I made this with AI.

267
00:16:12,250 --> 00:16:14,940
It took time to be a
little bit more detailed.

268
00:16:15,170 --> 00:16:19,280
And so I'm like, all right, if I
get started, click here to log in.

269
00:16:19,380 --> 00:16:23,450
And then I put in what would be
my username and I want to be.

270
00:16:23,950 --> 00:16:28,110
I'm signing in as self,
not provider, not partner.

271
00:16:28,140 --> 00:16:29,410
Set my username.

272
00:16:29,740 --> 00:16:34,240
And then here is where I
can like, track my cycle.

273
00:16:34,510 --> 00:16:35,180
if I wanted to.

274
00:16:35,180 --> 00:16:38,810
So I could say, oh, Monday, October 28.

275
00:16:38,850 --> 00:16:40,400
And then maybe the end date.

276
00:16:40,770 --> 00:16:46,650
Was Wednesday the 30th and then I can
put The flow types maybe started heavy

277
00:16:46,960 --> 00:16:49,770
Medium light or something like that.

278
00:16:50,030 --> 00:16:55,870
It shows the colors for it or not the
colors But the indicators for it and

279
00:16:55,870 --> 00:17:00,160
we know it was saved in my personal
decentralized web node because it gets

280
00:17:00,160 --> 00:17:06,075
printed out here I'm saying that it was
it was Added successfully and we can see

281
00:17:06,075 --> 00:17:11,375
that same object that I expect to see
from a decentralized web node so That

282
00:17:11,375 --> 00:17:15,705
was like something I did on the side with
ai it would take way too long for me to

283
00:17:15,705 --> 00:17:21,795
show you or with goose in particular,
and for the designs, I actually used vo.

284
00:17:21,825 --> 00:17:24,925
dev So i'll show you all that vo.

285
00:17:25,235 --> 00:17:25,335
dev.

286
00:17:25,635 --> 00:17:29,335
This is owned by verselle and
you can think of oh How would I?

287
00:17:29,700 --> 00:17:34,080
how would I like prototype or
design like a little web app?

288
00:17:34,080 --> 00:17:36,160
This is pretty nice and fun to use.

289
00:17:36,470 --> 00:17:39,570
and I want to go back and just
show you all if you wanted to

290
00:17:39,880 --> 00:17:43,320
get into a goose or try out.

291
00:17:43,755 --> 00:17:45,435
AI agents a little bit.

292
00:17:45,735 --> 00:17:50,865
I would encourage you to go to
github.com/block/goose to check

293
00:17:50,865 --> 00:17:53,235
out the repo and install it.

294
00:17:53,295 --> 00:17:57,855
And then we have
documentation@block.github.io slash goose.

295
00:17:58,175 --> 00:18:01,745
thank you so much and I hope this
was an interesting talk for you.

296
00:18:01,745 --> 00:18:01,805
Bye.

