1
00:00:00,000 --> 00:00:00,870
Hello everyone.

2
00:00:00,990 --> 00:00:05,370
This is Sunil Kumar and I
work in AI data engineering.

3
00:00:06,060 --> 00:00:13,069
Today I want to talk about using go
for realtime NLP in ai, introduction

4
00:00:13,069 --> 00:00:15,679
to NLP and realtime processing.

5
00:00:15,830 --> 00:00:22,670
NLP is a crucial component in many time
AI applications, but it comes with its

6
00:00:22,699 --> 00:00:25,939
own set of challenges in terms of latency.

7
00:00:26,600 --> 00:00:28,580
Scalability and efficiency.

8
00:00:28,970 --> 00:00:34,220
Understanding these challenges in first
step in leveraging the right tools,

9
00:00:34,370 --> 00:00:41,500
techniques to build high performance NLP
Powered Solutions while using go for NLP

10
00:00:41,710 --> 00:00:47,170
Go compile nature concurrency support,
scalability and memory efficiency, making

11
00:00:47,170 --> 00:00:49,960
it a powerful choice for real time.

12
00:00:49,960 --> 00:00:52,510
NLP processing in AI applications.

13
00:00:53,010 --> 00:01:02,870
Key NLP libraries in Go Spago Pros,
NLP Tensor Flow Go API Go feed use

14
00:01:02,870 --> 00:01:05,780
cases for realtime NLP with Go.

15
00:01:06,350 --> 00:01:13,370
We have five use cases, chat bot and
AI assistance, sentiment analysis,

16
00:01:13,639 --> 00:01:17,270
real time streaming, Kafka go.

17
00:01:18,080 --> 00:01:24,760
Spam filtering and content moderation
was to text NLP pipelines how Go

18
00:01:24,820 --> 00:01:28,960
Handles real-time NLP efficiently go.

19
00:01:28,960 --> 00:01:34,045
Unique feature like goin low memory
usage and integration with streaming

20
00:01:34,045 --> 00:01:40,615
platform, making it a powerful choice for
building high performance for real-time.

21
00:01:40,615 --> 00:01:41,845
NLP applications.

22
00:01:42,345 --> 00:01:45,165
Implementing real-time
text processing in go.

23
00:01:45,945 --> 00:01:52,095
By leveraging the strength in concurrency
performance and integration with streaming

24
00:01:52,335 --> 00:01:58,665
platform developers can build efficient
real-time NLP processing pipelines to

25
00:01:58,665 --> 00:02:01,755
handle a wide range of text processing.

26
00:02:01,935 --> 00:02:05,375
Task a sample code go
routine for parallel.

27
00:02:05,435 --> 00:02:06,035
NLP.

28
00:02:06,410 --> 00:02:11,600
This slide explains how goin can
be used for parallel processing of

29
00:02:11,930 --> 00:02:15,560
NLP task by leveraging concurrency.

30
00:02:16,220 --> 00:02:21,980
Goins allows for efficient
utilization of a system, resources,

31
00:02:22,070 --> 00:02:24,365
and faster processing of text data.

32
00:02:24,865 --> 00:02:28,595
Integrating go with Kafka for real time.

33
00:02:28,755 --> 00:02:29,235
NLP.

34
00:02:29,770 --> 00:02:34,180
Kafka Streaming provides a realtime
data processing platform that

35
00:02:34,180 --> 00:02:41,170
can be leveraged to consume and
process the text data for NLP Task.

36
00:02:41,710 --> 00:02:47,920
By integrating, go with Kafka,
developers can build scalable high

37
00:02:47,920 --> 00:02:52,740
performance pipelines that can be
process streaming data in real time.

38
00:02:53,240 --> 00:02:58,609
Go routines and channels allows for
efficient parallel processing of messages.

39
00:02:59,570 --> 00:03:01,190
While low memory footprint.

40
00:03:01,280 --> 00:03:06,530
The language ensures that the NLP
workloads can handle high throughput

41
00:03:06,590 --> 00:03:08,989
with performance degradation.

42
00:03:09,489 --> 00:03:13,089
Deploying NLP models in go
with 10 share flow APIs.

43
00:03:13,825 --> 00:03:19,464
Deploying pre-trained NLP
models in GO is a made possible

44
00:03:19,464 --> 00:03:22,194
through the 10 flow go API.

45
00:03:22,694 --> 00:03:28,004
This allows developer to seamlessly
integrate powerful mission learning

46
00:03:28,004 --> 00:03:30,404
models into their GO applications.

47
00:03:31,154 --> 00:03:38,329
Enabling advanced NLP capabilities
by leveraging the 10 flow go API

48
00:03:38,829 --> 00:03:41,709
go developers access wide range of.

49
00:03:42,429 --> 00:03:46,899
Pre trained NLP models and
deploy them within their

50
00:03:46,899 --> 00:03:48,609
realtime processing pipelines.

51
00:03:49,109 --> 00:03:55,049
The future of NLP with GO looks
promising this potential for an

52
00:03:55,049 --> 00:04:00,674
extended ecosystem, deeper integrations
with AI framework and increased

53
00:04:00,734 --> 00:04:06,344
adoption in real time applications
as a GO community continues to.

54
00:04:06,844 --> 00:04:14,104
We can expect to see more innovative
solutions and use cases for leveraging the

55
00:04:14,104 --> 00:04:17,854
language unique strength in NLP domain.

56
00:04:18,354 --> 00:04:23,784
The best practice for go in realtime
NLP by following these best practice.

57
00:04:24,189 --> 00:04:29,049
Developer can leverage the strength
of GO programming language to build

58
00:04:29,229 --> 00:04:33,489
high performance, scalable and
efficient real-time NLP solutions,

59
00:04:33,849 --> 00:04:36,369
a variety of AI applications.

60
00:04:36,869 --> 00:04:39,479
Performance comparison, go versus Python.

61
00:04:39,479 --> 00:04:44,029
For NLP feature, speed go is faster.

62
00:04:44,529 --> 00:04:45,189
Concurrency.

63
00:04:45,219 --> 00:04:51,969
Python has limited ability to handle
multitask at once while go Does it better?

64
00:04:52,779 --> 00:04:54,009
NLP libraries.

65
00:04:54,099 --> 00:04:59,919
Python has lot of NLP libraries,
but GO has fewer options.

66
00:05:00,419 --> 00:05:02,909
Memory, usage, Python use.

67
00:05:02,999 --> 00:05:04,259
More memory than Go.

68
00:05:04,949 --> 00:05:05,729
Scalability.

69
00:05:06,449 --> 00:05:10,019
Go is better than Python
when it comes to scaling.

70
00:05:10,519 --> 00:05:16,909
Challenges of using go for NLP while
go is a strength in speed, concurrency

71
00:05:16,969 --> 00:05:20,929
and memory efficient, making it
promising choice for real-time NLP.

72
00:05:21,739 --> 00:05:26,209
The current limitations in the
GO NLP ecosystem needs to be

73
00:05:26,269 --> 00:05:31,099
addressed through continued library
development and community growth.

74
00:05:31,599 --> 00:05:36,669
The Go programming language is
promising choice for NLP processing in

75
00:05:36,669 --> 00:05:42,820
AI applications, offering significant
advantages in the terms of performance

76
00:05:43,030 --> 00:05:50,500
scalability while NLP ecosystem in GO is
still maturing the language core strength

77
00:05:50,950 --> 00:05:57,760
and integration with other tools, making
it compelling option for developers.

78
00:05:58,260 --> 00:05:59,719
Perform solution.

79
00:06:00,219 --> 00:06:02,469
Thank you so much for
this great opportunity.

80
00:06:02,469 --> 00:06:04,599
I hope you guys enjoyed my conversation.

81
00:06:04,869 --> 00:06:05,289
Thank you.

