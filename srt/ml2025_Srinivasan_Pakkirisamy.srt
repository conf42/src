1
00:00:01,140 --> 00:00:02,100
Greetings everyone.

2
00:00:02,850 --> 00:00:07,445
Welcome to Con 42, machine
Learning 2025 s. I'm Srin.

3
00:00:07,465 --> 00:00:13,110
Was ami, director of Technology
Portfolio at SPL Consulting Inc. With

4
00:00:13,110 --> 00:00:15,330
over 23 years of experience in it.

5
00:00:15,870 --> 00:00:19,500
Specialist in enterprise cloud
architecture, multi-cloud

6
00:00:19,500 --> 00:00:21,510
integrations, data management.

7
00:00:21,900 --> 00:00:25,630
I also have specialization in
financial systems, Oracle Cloud,

8
00:00:25,630 --> 00:00:27,820
ERP, and payment processing.

9
00:00:28,990 --> 00:00:34,780
Do you know that over 67% of
multi-cloud integration projects

10
00:00:34,780 --> 00:00:39,340
implementation overrun because of
the challenges in the data and the

11
00:00:39,340 --> 00:00:41,170
complexities in the integrations?

12
00:00:41,950 --> 00:00:46,180
So today's sessions, we will
cover mastering multi-cloud ERP

13
00:00:46,180 --> 00:00:50,230
integration, your framework for data
normalization and synchronization.

14
00:00:51,010 --> 00:00:55,840
So ERP implementations and the systems
evolved over the period of time.

15
00:00:56,425 --> 00:01:02,245
From monolithic architecture to highly
distributed cloud native implementations.

16
00:01:03,055 --> 00:01:09,715
So organizations are adapted to implement
multiple clouds based on the domain

17
00:01:09,715 --> 00:01:13,975
specialization, rather than implementing
a single ERP or single cloud ERP.

18
00:01:15,175 --> 00:01:20,095
So example, if you take financials,
Oracle Cloud, ERP is based in

19
00:01:20,095 --> 00:01:24,490
the market, whereas Workday is
for the human capital management.

20
00:01:25,000 --> 00:01:28,510
Salesforce for customer relationship
management and bully under

21
00:01:28,510 --> 00:01:30,520
for supply chain optimization.

22
00:01:30,790 --> 00:01:37,960
So if the enterprise want to use best
of the domain cloud ERP system, then

23
00:01:38,590 --> 00:01:43,990
implementing these multi-cloud in the
enterprise ecosystem is inevitable.

24
00:01:44,950 --> 00:01:51,040
So this strategic approach delivers a
superior domain specific functionality

25
00:01:51,040 --> 00:01:53,890
for the enterprises and the business.

26
00:01:54,235 --> 00:02:02,005
However, it also brings lot of challenges
and data models, inconsistent APIs

27
00:02:02,305 --> 00:02:06,085
and varying issues across the board.

28
00:02:07,085 --> 00:02:09,965
Let's us look at this
multi-cloud ERP ecosystem.

29
00:02:11,915 --> 00:02:18,725
Oracle Cloud ERP, specialized in financial
domain is implemented by almost 41

30
00:02:18,725 --> 00:02:20,525
percentage of the Fortune 500 companies.

31
00:02:20,540 --> 00:02:27,080
Is, so it has various modules, example,
general ledger, account receivable,

32
00:02:27,170 --> 00:02:32,660
account payables, fix address, and
it also has superior functionalities

33
00:02:33,020 --> 00:02:36,260
of financial consolidations
and reporting functionalities.

34
00:02:38,630 --> 00:02:46,880
Workday is a human capital
management specialized ERP, and it

35
00:02:46,880 --> 00:02:49,185
has unified data architecture for.

36
00:02:49,955 --> 00:02:55,985
The complete workforce operations
for any enterprises, it holds over 38

37
00:02:55,985 --> 00:03:01,565
percentage of market share across the
enterprises with over 10,000 employees.

38
00:03:03,005 --> 00:03:09,455
However, Workday is using so based
web services with the complex

39
00:03:09,455 --> 00:03:11,615
external schemas for their data needs.

40
00:03:13,265 --> 00:03:16,835
Salesforce is customer
relationship management.

41
00:03:17,705 --> 00:03:25,025
ERP system, almost 56 percentage
of the multi-cloud ERP ecosystem

42
00:03:25,025 --> 00:03:28,205
holds Salesforce for its CRM needs.

43
00:03:29,585 --> 00:03:35,285
The Salesforce ecosystem uses even
driven architecture generating almost

44
00:03:35,285 --> 00:03:41,045
two 12.4 million even notifications
daily in large scale implementations.

45
00:03:43,625 --> 00:03:44,585
On the other hand.

46
00:03:45,275 --> 00:03:48,515
Is specialized in supply chain
orchestration with over 28

47
00:03:48,515 --> 00:03:52,115
percentage of market penetration
among global enterprises.

48
00:03:52,865 --> 00:03:57,805
If you look at these, all these ERP
systems, they're superior in functionality

49
00:03:57,865 --> 00:04:05,125
in their respective domain and almost
have a very good market share across

50
00:04:05,185 --> 00:04:10,875
the Fortune 500 and other enterprises
with the large scale operations.

51
00:04:12,150 --> 00:04:18,360
So the enterprise has adopted these
different ERP systems to support

52
00:04:18,360 --> 00:04:25,290
their functionalities and their domain
needs, which gives the complexity.

53
00:04:27,780 --> 00:04:30,870
The very first challenge,
which we are going to look at

54
00:04:30,960 --> 00:04:35,130
multi-cloud ERP implementation is
schema heterogeneity challenges.

55
00:04:36,360 --> 00:04:38,040
We looked at why enterprises.

56
00:04:38,789 --> 00:04:44,640
Or adapting to implement multiple
cloud ERP to gain the superior

57
00:04:44,640 --> 00:04:47,760
functionalities available in each domain.

58
00:04:48,270 --> 00:04:52,469
However, the fundamental challenge in
multiple cloud ERP integration lies in

59
00:04:53,099 --> 00:04:55,679
reconciling their divergent data models.

60
00:04:56,250 --> 00:05:02,010
Each cloud ERP provider, they
designed their data model with

61
00:05:02,070 --> 00:05:06,479
different architecture philosophies
to support and gain the.

62
00:05:08,025 --> 00:05:15,225
Superior functionality in each of
the domain, though this gives very

63
00:05:16,665 --> 00:05:23,355
good architecture and data model for
individual Cloud ERP, integrating

64
00:05:23,355 --> 00:05:25,935
these data models across the cloud.

65
00:05:25,935 --> 00:05:30,915
ERP is always complex
and provides challenges.

66
00:05:32,325 --> 00:05:33,945
The substantial barrier.

67
00:05:34,980 --> 00:05:40,140
Is to integrate or exchange
this data, which has different

68
00:05:41,010 --> 00:05:43,200
schema, our properties.

69
00:05:44,910 --> 00:05:48,810
If you look at it, the Oracle Cloud
ERP, which holds the financial

70
00:05:48,810 --> 00:05:54,515
data, has complex chart of account
segments, lot of business rules.

71
00:05:55,025 --> 00:05:58,620
However, these start off
accounts and business rules are

72
00:05:58,650 --> 00:06:02,700
exchanged with other cloud ERP
to derive accounting information.

73
00:06:04,229 --> 00:06:10,140
Similarly, the workday, which holds the
employee data, has 23 related objects

74
00:06:10,140 --> 00:06:13,349
with over 200 plus attributes per record.

75
00:06:14,309 --> 00:06:20,309
When this is exchanged with other
cloud ERP in the ecosystem, they

76
00:06:20,489 --> 00:06:22,199
do not need all these attributes.

77
00:06:22,590 --> 00:06:27,659
However, the exchange
substantially become complex.

78
00:06:28,755 --> 00:06:32,895
To get any user related
information from Workday,

79
00:06:35,655 --> 00:06:40,424
the blue yonder system, which holds the
product informations, there are a lot of

80
00:06:40,455 --> 00:06:48,585
master repositories and syncing them with
other cloud ERP, bringing lot of latency.

81
00:06:50,505 --> 00:06:56,025
The CRM, which holds the partner data,
it has a lot of fragmented attributes.

82
00:06:57,885 --> 00:07:02,475
Which also brings the complexity
across the cloud ERPs.

83
00:07:03,555 --> 00:07:05,505
So this schema heterogeneity

84
00:07:07,515 --> 00:07:11,925
always provides some challenges
which needs to be solved.

85
00:07:14,055 --> 00:07:20,145
Semantic mapping complexities beyond the
structural differences, which we saw the

86
00:07:20,145 --> 00:07:24,780
semantic variations compound normalization
challenges in multi-cloud ERP ecosystem.

87
00:07:26,054 --> 00:07:30,465
Even when the systems appear to
represent similar business concepts,

88
00:07:31,094 --> 00:07:36,044
subtle differences in terminology,
hierarchies, and business rules create

89
00:07:36,044 --> 00:07:38,205
significant integration obstacles.

90
00:07:39,405 --> 00:07:45,204
Let us look at this example of how the
business partner represented across

91
00:07:45,204 --> 00:07:51,624
multiple cloud ERP systems, the supplier
representation in Oracle, whereas.

92
00:07:51,965 --> 00:07:56,974
In Oracle Cloud, ERP the financial
relationship payment terms and tax

93
00:07:56,974 --> 00:08:01,655
information and accounting classification
of the suppliers are maintained where the

94
00:08:01,655 --> 00:08:07,085
enterprise do business with any purchasing
relationship is called supplier.

95
00:08:07,955 --> 00:08:15,124
However, the same supplier is
represented as account in Salesforce,

96
00:08:15,695 --> 00:08:19,775
whereas the primary attributes
around these accounts are.

97
00:08:20,809 --> 00:08:25,219
Related to relationship attributes,
how we communicate with them, what

98
00:08:25,219 --> 00:08:29,090
is the cases with them, what is
their histories and what are the

99
00:08:29,090 --> 00:08:30,650
opportunities we have with them?

100
00:08:31,369 --> 00:08:34,590
It's completely different than
what it is being represented

101
00:08:34,590 --> 00:08:40,890
in Oracle, the same supplier,
which is mentioned in Oracle now.

102
00:08:40,895 --> 00:08:43,650
If you look at the blue
yonder, it's called vendor.

103
00:08:44,070 --> 00:08:48,480
Whereas the primary focus or the
attributes for the blue yonder system is.

104
00:08:49,485 --> 00:08:53,115
The logistic performance
metrics, delivery capabilities,

105
00:08:53,205 --> 00:08:54,705
and supply chain reliability.

106
00:08:56,085 --> 00:09:03,225
So the semantic reconciliation,
almost 43 percentage of development

107
00:09:03,225 --> 00:09:05,115
effort is spent on this.

108
00:09:07,665 --> 00:09:10,515
We have seen schema
heterogeneity challenges and

109
00:09:11,145 --> 00:09:13,395
semantic mapping complexities.

110
00:09:14,790 --> 00:09:18,660
However, organization have developed
several sophisticated technical

111
00:09:18,660 --> 00:09:20,910
mechanisms to address these challenges.

112
00:09:21,930 --> 00:09:26,880
How these challenges or approaches
vary in complexity and architectural

113
00:09:26,880 --> 00:09:32,250
impact with the selection, typically
based on specific integration

114
00:09:32,250 --> 00:09:35,189
requirements and technical constraints.

115
00:09:35,819 --> 00:09:38,189
Also, based on the
organization's capabilities

116
00:09:40,380 --> 00:09:40,680
there are.

117
00:09:41,590 --> 00:09:45,460
Predominant options available for
us to handle these challenges.

118
00:09:46,900 --> 00:09:51,310
The first and widely used option
across the enterprises are EDL.

119
00:09:52,420 --> 00:09:57,790
So you extract the data from the source
cloud, ERP, transform it to the target,

120
00:09:58,300 --> 00:10:03,280
and finally load the transform our map
data in, into the target cloud, ERP.

121
00:10:04,360 --> 00:10:09,880
So this ETL option is
widely used and very simple.

122
00:10:11,020 --> 00:10:17,830
In terms of the implementation,
however, most of the work are mapping

123
00:10:17,830 --> 00:10:19,810
are being done in the transform layer.

124
00:10:22,510 --> 00:10:27,850
The second option, which we
have is schema mapping engines.

125
00:10:28,510 --> 00:10:31,840
So you have sophisticated engine
which take care of all your

126
00:10:31,840 --> 00:10:36,220
heterogeneous schema, mappings, and.

127
00:10:37,915 --> 00:10:39,355
Across different systems.

128
00:10:39,385 --> 00:10:46,225
Cloud ERP systems, it reduces the
development effort because the engine

129
00:10:46,225 --> 00:10:52,415
provides the mapping for various cloud
ERPs, which can be adapted by different

130
00:10:52,415 --> 00:10:55,475
integrations and seamlessly will work.

131
00:10:58,385 --> 00:11:05,255
The canonical data models are evolving
as a trend and standardization.

132
00:11:06,290 --> 00:11:15,410
To normalize these complexities, whereas
each source ERP system, the cloud ERP

133
00:11:15,410 --> 00:11:18,440
system, which is master in their data,

134
00:11:19,440 --> 00:11:25,260
agree with other cloud ERP systems across
the enterprise to standardize the format

135
00:11:25,470 --> 00:11:32,310
or the canonical data model and publish
them as a publisher subscriber model.

136
00:11:33,765 --> 00:11:38,805
So that the consumer will have
standardized data and attributes

137
00:11:38,955 --> 00:11:41,445
available in the form of the
canonical data model to them.

138
00:11:43,455 --> 00:11:49,425
So this takes lot of
initial design complexity.

139
00:11:49,965 --> 00:11:56,865
However, in the long run, it
reduces the overall, the mapping

140
00:11:56,895 --> 00:12:00,405
or the implementations record by
the consumers in the latter part.

141
00:12:02,955 --> 00:12:09,435
Latency inconsistency challenges in
the distributed multi-cloud ERP system.

142
00:12:10,095 --> 00:12:18,435
Various data elements are shared across
ERP systems, thus bring a significant

143
00:12:18,435 --> 00:12:21,885
timing challenges that can compromise
the business process Integrity.

144
00:12:23,445 --> 00:12:28,155
If you look at it approximately around
68% of the organization's report.

145
00:12:28,770 --> 00:12:32,370
Their business impact from
timing related data ies across

146
00:12:32,370 --> 00:12:34,020
integrated cloud platforms.

147
00:12:35,340 --> 00:12:38,220
These delays can occur
due to various reasons.

148
00:12:39,330 --> 00:12:45,450
Example, there is a network latency
or large processing queues between one

149
00:12:45,450 --> 00:12:51,575
cloud ERP to other cloud ERP, or there
are validation rules which the data

150
00:12:51,645 --> 00:12:53,935
will not go through to the target cloud.

151
00:12:54,055 --> 00:12:54,495
ERP.

152
00:12:55,755 --> 00:12:58,635
Sometimes there are middleware
transformation overhead.

153
00:12:59,025 --> 00:13:00,375
All of these causes two things.

154
00:13:00,375 --> 00:13:06,285
One is either there is a latency,
sometimes there is a integrity challenges.

155
00:13:08,625 --> 00:13:11,865
So if you look at it, transaction
propagation delays, there are

156
00:13:11,865 --> 00:13:16,365
almost eight to 15 seconds is
for the standard transactions.

157
00:13:16,785 --> 00:13:19,755
Up to few minutes for the
complex ones across the cloud.

158
00:13:19,755 --> 00:13:23,745
ERP systems, the eventual
consistency models.

159
00:13:24,090 --> 00:13:28,020
There are 47% of the data entries
operate under even true consistency.

160
00:13:29,400 --> 00:13:31,710
The even best triggers are very complex.

161
00:13:31,830 --> 00:13:35,380
It brings overhead to to
the cloud ERP data model.

162
00:13:36,850 --> 00:13:42,310
High volume data streaming also
contributes to these latency

163
00:13:42,760 --> 00:13:44,380
and consistency challenges

164
00:13:46,990 --> 00:13:50,860
with latency under data
integrity challenges.

165
00:13:52,315 --> 00:13:54,535
There needs a conflict
less solution strategy.

166
00:13:56,035 --> 00:13:59,865
So in the multi-cloud ERP, there
are a lot of bidirectional data

167
00:13:59,865 --> 00:14:03,465
flows between the cloud ERP systems.

168
00:14:05,115 --> 00:14:10,185
First, we have to detect the conflict on
time and also need to provide you proper

169
00:14:10,185 --> 00:14:14,665
resolutions to handle this integrity
and the data conflict resolution.

170
00:14:16,495 --> 00:14:18,715
The research indicates that approximately.

171
00:14:19,045 --> 00:14:24,325
Six to 8% records in the bidirectional
synchronization scenarios.

172
00:14:24,325 --> 00:14:26,785
Experience these update conflicts.

173
00:14:28,135 --> 00:14:35,045
This postage may increase up to 12 to 15%
if the data is getting modified frequently

174
00:14:35,045 --> 00:14:37,535
across the multi cloud ERP systems.

175
00:14:38,585 --> 00:14:42,825
So there are certain strategies available
for us to resolve this conflict.

176
00:14:43,905 --> 00:14:45,315
The widely used.

177
00:14:45,660 --> 00:14:46,200
Approach.

178
00:14:46,200 --> 00:14:48,120
Our strategy is time-based.

179
00:14:48,580 --> 00:14:49,150
Resolution.

180
00:14:50,350 --> 00:14:55,720
What it means is always giving the
precedence to the most recent update.

181
00:14:55,750 --> 00:15:01,520
If there is a conflict between
multiple updates, ignore the one

182
00:15:01,520 --> 00:15:06,380
which we received earlier, go
with the latest or recent update.

183
00:15:06,980 --> 00:15:10,960
So this is called time-based
time timestamp based approach.

184
00:15:12,190 --> 00:15:16,000
The second one, which we have
is domain specific rules.

185
00:15:16,060 --> 00:15:22,240
Say example, when there are conflict
error between the data element, the

186
00:15:22,540 --> 00:15:28,180
domain specific rule or the data
element wins that conflict and it takes

187
00:15:28,180 --> 00:15:29,950
the priority over the other element.

188
00:15:29,950 --> 00:15:33,910
Say example, if accounting
financial system, Oracle Cloud,

189
00:15:34,060 --> 00:15:36,640
ERP, is the master or the supplier.

190
00:15:36,640 --> 00:15:38,290
If Blue Yonder is the master or.

191
00:15:38,905 --> 00:15:42,565
The customer, if Salesforce is
the master, the domain specific

192
00:15:42,565 --> 00:15:46,495
system takes the precedence over
the other systems and holds that

193
00:15:46,495 --> 00:15:48,265
attribute are the data integrity.

194
00:15:48,355 --> 00:15:52,740
So that is the domain specific
conflict resolution approach.

195
00:15:54,610 --> 00:15:57,430
The next one is manual reconciliation.

196
00:15:57,610 --> 00:16:02,440
Say example, you cannot use time-based,
or we cannot use domain specific rule.

197
00:16:02,710 --> 00:16:07,450
However, it needs a manual intervention
to reconcile the data to understand

198
00:16:07,450 --> 00:16:09,400
which takes precedents and apply it.

199
00:16:09,880 --> 00:16:12,550
There is still a 15%
adoption to this strategy.

200
00:16:14,750 --> 00:16:19,580
The last one, which is conflict free,
replicated data types is the industry

201
00:16:19,580 --> 00:16:20,930
standard, which we want to go to.

202
00:16:21,305 --> 00:16:23,645
It is 8% adoption.

203
00:16:23,705 --> 00:16:30,845
The way it is implemented will avoid
the conflict and it'll be conflict free.

204
00:16:30,845 --> 00:16:31,985
Replicated data type

205
00:16:34,055 --> 00:16:35,585
framework for synchronization.

206
00:16:37,655 --> 00:16:40,955
An effective synchronization
framework for the multi-cloud ERP

207
00:16:40,955 --> 00:16:45,815
system must incorporate several
architectural components that

208
00:16:45,845 --> 00:16:47,735
collectively address complex.

209
00:16:48,665 --> 00:16:55,295
Requirements for data consistency and
re resilience organizations implementing

210
00:16:55,325 --> 00:17:01,445
comprehensive frameworks experience
approximately 76% fewer data consistency

211
00:17:02,945 --> 00:17:07,685
incidents compared to those relying
on point to point integrations.

212
00:17:08,645 --> 00:17:13,325
If you look at this different
architecture or framework, the

213
00:17:13,325 --> 00:17:15,550
Oracle has a B, C, C connector.

214
00:17:16,325 --> 00:17:18,575
Which simplifies the extraction.

215
00:17:19,385 --> 00:17:22,865
Thus, it reduces the
extraction complexity by 45%.

216
00:17:24,635 --> 00:17:29,915
If you look at the sales force, which
has this change data capture, it reduces

217
00:17:29,915 --> 00:17:37,955
almost 97% in the data volume compared to
full synchronization, the even streaming

218
00:17:37,955 --> 00:17:42,875
backbone for bullion, which publishes
the data or stream the data into Kafka.

219
00:17:44,150 --> 00:17:49,190
Also almost process 50,000 to
hundred K messages per second.

220
00:17:50,720 --> 00:17:55,970
The smart batching strategies,
which improves almost one 20%

221
00:17:56,480 --> 00:17:58,430
with the adaptive approaches.

222
00:18:00,000 --> 00:18:08,010
Adapting your right framework and
strategy between the multiple cloud

223
00:18:08,010 --> 00:18:10,140
ERP based on their capabilities.

224
00:18:11,190 --> 00:18:17,610
Will improve the data synchronization
and reduce the data inconsistency

225
00:18:17,610 --> 00:18:23,640
issues while we are doing data
normalization approaches and solution

226
00:18:23,640 --> 00:18:32,190
for heterogeneous schema challenges and
semantic mapping complexities, and also

227
00:18:32,190 --> 00:18:38,050
synchronization framework to address
data inconsistency and latency issues.

228
00:18:39,160 --> 00:18:43,330
One should not overlook
the security issues.

229
00:18:43,840 --> 00:18:48,730
The multi-cloud ERP system brings
in, compared to the single cloud

230
00:18:48,730 --> 00:18:52,900
deployment are the on-premise
deployments, which are more protected.

231
00:18:53,710 --> 00:19:00,100
The exchange of data between the
multi-cloud ERP system, especially the

232
00:19:00,100 --> 00:19:03,700
sensitive data, brings more vulnerability.

233
00:19:04,780 --> 00:19:10,060
So approximately 41 percentage of
security in more security incidents

234
00:19:10,510 --> 00:19:14,740
related to the data exchange in
the multi-cloud ERP system compared

235
00:19:14,740 --> 00:19:16,600
to the single cloud ERP systems.

236
00:19:17,560 --> 00:19:20,590
So we need to have some
security consideration.

237
00:19:23,230 --> 00:19:25,885
Those are like, say cross
platform authentication.

238
00:19:26,470 --> 00:19:32,190
So how do we authenticate between multiple
cloud ERP systems, the widely used.

239
00:19:32,485 --> 00:19:37,165
Authentication, make comment
2.0, which is almost 82%.

240
00:19:37,485 --> 00:19:41,185
Enterprises adapted these kind of
approaches to secure their multiple

241
00:19:41,185 --> 00:19:42,865
cloud ERP systems and its data.

242
00:19:44,395 --> 00:19:48,705
However, there are 72% multi-cloud
ERP implementer encounter

243
00:19:48,735 --> 00:19:51,315
regulatory related violations, okay.

244
00:19:51,345 --> 00:19:52,845
During the initial deployment.

245
00:19:53,655 --> 00:19:59,505
So automated compliance monitoring
reduces these kind of security incidents.

246
00:19:59,895 --> 00:20:01,965
Almost by 63%.

247
00:20:03,255 --> 00:20:07,035
The data, which is tranent because
there are a lot of data exchange

248
00:20:07,035 --> 00:20:11,955
between the multi-cloud ERP system
should be encrypted so that tss

249
00:20:12,145 --> 00:20:15,855
misconfigurations are outdated security.

250
00:20:16,345 --> 00:20:17,215
Cheaper suits.

251
00:20:17,275 --> 00:20:21,685
Those are contributing almost 28% of
these kind of integration incidents.

252
00:20:21,745 --> 00:20:26,725
Okay, so the organizations which
are adopting layered encryption

253
00:20:26,725 --> 00:20:30,565
approaches experience 52%
fewer data exposure incidents.

254
00:20:32,155 --> 00:20:33,955
The last one, data drift detection.

255
00:20:34,315 --> 00:20:39,895
So 24% of integration failures attributed
to undetected schema changes between

256
00:20:39,895 --> 00:20:41,755
these multiple cloud ERP systems.

257
00:20:42,115 --> 00:20:45,535
So organizations implying
automated drift detection.

258
00:20:45,985 --> 00:20:51,325
Identify 83 percentage of potential
issues before it impacts the business.

259
00:20:52,325 --> 00:20:56,515
The proposed implementation strategy
to address these multi-cloud

260
00:20:56,755 --> 00:20:58,965
ERP data integration issues.

261
00:20:59,970 --> 00:21:04,800
A faced approach to address these
normalization and synchronization

262
00:21:04,800 --> 00:21:08,970
challenges provides the necessary
structure to manage the complexity

263
00:21:08,970 --> 00:21:10,380
of multi-cloud ERP integration.

264
00:21:11,490 --> 00:21:17,250
So organizations implying structured
approaches experience approximately 43%

265
00:21:17,250 --> 00:21:22,560
higher success rate than the organizations
those attempting to concurrently

266
00:21:22,560 --> 00:21:24,570
implementing these strategies.

267
00:21:25,950 --> 00:21:27,330
If you look at the strategy.

268
00:21:28,110 --> 00:21:32,730
The first step should be the
data profiling and mapping

269
00:21:33,960 --> 00:21:36,960
comprehensive analysis on the data.

270
00:21:37,980 --> 00:21:41,500
And its mapping is very much record.

271
00:21:42,910 --> 00:21:45,820
They should be the initial
phase of the project.

272
00:21:47,170 --> 00:21:51,190
It also should understand the
quality data, quality issues,

273
00:21:52,420 --> 00:21:54,130
what should be addressed.

274
00:21:54,970 --> 00:21:59,380
Once the data profiling and
mapping is done, then enterprise

275
00:21:59,380 --> 00:22:03,850
should move on to make sure to
design the canonical model design.

276
00:22:04,810 --> 00:22:12,310
So spending quality time in this phase
to understand the actual canonical

277
00:22:12,310 --> 00:22:19,270
model, which will be used by multiple
cloud ERPs in the ecosystem will

278
00:22:19,270 --> 00:22:21,400
benefit the enterprise in the long run.

279
00:22:23,020 --> 00:22:27,730
Once the canonical model design
is done, now the enterprise should

280
00:22:28,420 --> 00:22:33,820
carefully choose the integration
burden across the cloud ERP systems.

281
00:22:35,260 --> 00:22:39,850
Choosing the right integration
burden will solve many of the data

282
00:22:39,850 --> 00:22:41,950
latency and inconsistency issues.

283
00:22:43,300 --> 00:22:49,570
Once organization completed this
phase, we should move on to.

284
00:22:50,050 --> 00:22:52,270
Synchronization mechanism implementation.

285
00:22:53,020 --> 00:22:57,790
Almost 63 percentage of projects
encounter significant technical obstacles.

286
00:22:57,790 --> 00:22:58,720
During this phase.

287
00:22:59,710 --> 00:23:04,030
Incremental deployment achieves
more frequent delivery milestones.

288
00:23:06,310 --> 00:23:12,520
Then once all these phases
are achieved, the enterprise

289
00:23:13,270 --> 00:23:15,285
continue to monitor and govern.

290
00:23:16,030 --> 00:23:20,080
All these implementations and
synchronization processes and frameworks,

291
00:23:20,650 --> 00:23:27,010
so the comprehensive monitoring
reduces almost 54 percentage of their

292
00:23:27,140 --> 00:23:28,760
meantime rate to their resolution.

293
00:23:30,110 --> 00:23:35,035
Effective implementations capture 25 to
40 distinct metrics per integration flow.

294
00:23:36,745 --> 00:23:40,790
Data profiling and mapping constitute
the essential face-to-face in

295
00:23:40,790 --> 00:23:42,195
multi-cloud ERP integration.

296
00:23:43,235 --> 00:23:46,655
Providing a very comprehensive
analysis of the data structures,

297
00:23:46,715 --> 00:23:51,485
relationships, and business rules
across the platforms these foundations

298
00:23:51,485 --> 00:23:56,015
ensures the subsequent integration
design decisions are based on accurate

299
00:23:56,015 --> 00:23:57,635
understanding of the data landscape.

300
00:23:58,475 --> 00:24:02,305
So there are various profiling
tools available in the market which

301
00:24:02,305 --> 00:24:04,525
automatically analyze the sample dataset.

302
00:24:05,320 --> 00:24:09,370
To identify the patterns, relationships,
and quality characteristics that

303
00:24:09,370 --> 00:24:10,990
influence the integration design.

304
00:24:13,360 --> 00:24:18,010
Apart from doing this automated
schema analysis, we should also focus

305
00:24:18,010 --> 00:24:23,800
on collaborative mapping, effective
profiling actions beyond simple structural

306
00:24:23,800 --> 00:24:28,510
analysis to include semantic evaluation,
business role, and documentation,

307
00:24:28,990 --> 00:24:32,350
and quality assessment in this phase.

308
00:24:34,030 --> 00:24:39,490
Typically Bo involves both technical
specialist and also the domain business

309
00:24:39,490 --> 00:24:46,190
domain expert who provide the crucial
context about the data quality assessment.

310
00:24:46,190 --> 00:24:50,120
Also very key in this data
profiling and mapping phase.

311
00:24:51,380 --> 00:24:55,490
The next implementation phase
is canonical model design phase.

312
00:24:56,480 --> 00:25:00,470
The canonical model design represents
a strategic architectural decision

313
00:25:00,560 --> 00:25:04,130
that significantly influence
long-term integration sustainability.

314
00:25:05,360 --> 00:25:10,730
This phase focuses on the development
of intermediate data models that

315
00:25:10,730 --> 00:25:15,620
bridge the platform specific schemas,
providing a consistent reference

316
00:25:15,620 --> 00:25:17,480
point for all integration flows.

317
00:25:19,130 --> 00:25:22,010
If you look at it, the
canonical model design phase.

318
00:25:23,105 --> 00:25:28,875
Almost reduces 37 percentage of them
maintenance costs for the integrations

319
00:25:28,875 --> 00:25:31,125
across the multiple cloud ERP systems.

320
00:25:32,505 --> 00:25:36,745
In a typical large scale enterprise
multi-cloud ERP system implementation,

321
00:25:36,745 --> 00:25:39,145
there will be around 1 22 3 50.

322
00:25:39,245 --> 00:25:43,185
Different canonical definition
needs to be done for various data

323
00:25:43,185 --> 00:25:47,005
elements which should be shared
across the multiple cloud ERP system.

324
00:25:48,145 --> 00:25:53,575
However, considering these large scale
implementations and the effort needed to

325
00:25:53,635 --> 00:25:59,965
implement this canonical model design,
there is almost a 25 to 30 percentage

326
00:25:59,965 --> 00:26:06,205
of initial effort increase will be
experienced in this implementation phase.

327
00:26:08,305 --> 00:26:12,205
The next and crucial phase in
the implementation approach is

328
00:26:12,265 --> 00:26:13,795
integration pattern, selection phase.

329
00:26:14,635 --> 00:26:19,945
Enterprise should carefully select the
integration pattern for the various data

330
00:26:19,945 --> 00:26:25,615
elements, which is shared between the
multiple cloud ERP systems, based on that

331
00:26:25,615 --> 00:26:29,185
timing constraints, when the data should
be available, whether it is real time or

332
00:26:29,185 --> 00:26:35,675
batch based on the volume, whether it's
a low volume data exchange or the high

333
00:26:35,675 --> 00:26:41,295
volume data exchange between the multiple
cloud ERP and what are the transformation

334
00:26:41,295 --> 00:26:43,065
complexity associated with this.

335
00:26:43,370 --> 00:26:48,080
Data elements, and also if there
is a data exchange failure between

336
00:26:48,080 --> 00:26:52,410
the cloud ERP systems, what are the
recovery mechanism which is needed?

337
00:26:53,220 --> 00:26:57,480
All these inputs will determine the
right integration pattern to be selected

338
00:26:57,570 --> 00:27:02,130
by the enterprise for a particular data
element in a large scale enterprise,

339
00:27:02,190 --> 00:27:06,330
multi-cloud ERP implementation,
typically there will be five to eight

340
00:27:06,330 --> 00:27:10,590
distinct integration patterns used
for various data elements needs.

341
00:27:12,195 --> 00:27:14,595
What are the future
directions and conclusions?

342
00:27:15,255 --> 00:27:20,035
So the AI driven mapping tools which
are available now in the market, will

343
00:27:20,635 --> 00:27:28,255
use machine learning approaches to
automate most complex mapping task and

344
00:27:28,255 --> 00:27:33,095
reduce the implementation time, and
also improve the accuracy through patent

345
00:27:33,215 --> 00:27:35,615
organization and suggestion capabilities.

346
00:27:37,325 --> 00:27:42,065
Also industry is evolving the
standardized exchange format for

347
00:27:42,065 --> 00:27:46,745
the data elements, which will reduce
all the custom transformations

348
00:27:46,805 --> 00:27:48,425
and mapping, which is needed.

349
00:27:50,255 --> 00:27:53,825
The last one is the advanced
conflict resolutions.

350
00:27:53,855 --> 00:27:57,305
The Next Generation Conflict
Restoration Tools using the machine

351
00:27:57,305 --> 00:28:03,515
learning capabilities will know the
context awareness, thus provide.

352
00:28:04,805 --> 00:28:07,565
Yeah, better reconciliation
and concrete resolution.

353
00:28:07,625 --> 00:28:08,285
Mechanism.

354
00:28:10,595 --> 00:28:12,395
Key takeaways from this conference.

355
00:28:12,395 --> 00:28:16,955
Note, multi-cloud ERP integration
requests, careful orchestration

356
00:28:16,955 --> 00:28:22,655
of data, normalizations, semantic
mapping, and synchronous approaches.

357
00:28:23,765 --> 00:28:26,945
We have seen a lot of challenges
which needs to be addressed

358
00:28:26,945 --> 00:28:30,845
through these approaches, and
also the success depends on them.

359
00:28:31,355 --> 00:28:34,145
Balancing specialized to
functionality with the cohesive

360
00:28:34,145 --> 00:28:35,915
data flow across platforms.

361
00:28:37,415 --> 00:28:41,405
The framework, or the implementation
approach we have outlined provides a

362
00:28:41,405 --> 00:28:46,085
structured methodology for tackling these
complex challenges while maintaining

363
00:28:46,085 --> 00:28:48,895
the security and performance in line.

364
00:28:50,695 --> 00:28:55,465
So begin with the comprehensive
data profiling, develop robust

365
00:28:55,465 --> 00:28:59,455
canonical models and select
appropriate integration patterns.

366
00:28:59,800 --> 00:29:04,990
For each data flow scenario in
a multi-cloud ERP ecosystem.

367
00:29:06,400 --> 00:29:11,110
Thanks everyone for spending time with
me to go through this conference note.

