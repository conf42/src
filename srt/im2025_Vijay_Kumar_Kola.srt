1
00:00:06,800 --> 00:00:07,440
Hi everyone.

2
00:00:08,580 --> 00:00:10,200
Thank you for joining me today.

3
00:00:11,490 --> 00:00:13,290
My name is Kumar.

4
00:00:15,150 --> 00:00:22,830
I'm executer to present on the topic
that is critical for modern enterprise

5
00:00:23,520 --> 00:00:32,610
a power testing preventing SAP
and Salesforce instant before they

6
00:00:32,610 --> 00:00:35,040
happen in the production environment.

7
00:00:36,900 --> 00:00:40,885
Enterprise instance often arise from.

8
00:00:42,945 --> 00:00:48,765
Testing of Complex SAP
and Salesforce system.

9
00:00:49,695 --> 00:00:51,525
But here the good news is this one.

10
00:00:51,975 --> 00:00:58,245
By leveraging artificial intelligence
and mission learning organizations can

11
00:00:58,245 --> 00:01:05,295
identify the potential failures before
the impact to the productions systems.

12
00:01:06,555 --> 00:01:12,585
This approach dramatically reduced the
testing cost while boosting the test

13
00:01:12,585 --> 00:01:21,495
coverage and the accuracy with the, along
with the quality validations, or the next

14
00:01:22,574 --> 00:01:28,905
20, 30 minutes, we are going to explore
why this matters, the challenges we face,

15
00:01:29,354 --> 00:01:34,574
how AI can transform the test strategies.

16
00:01:35,475 --> 00:01:36,975
Let's dive in.

17
00:01:52,560 --> 00:01:54,330
Let's start with the big picture.

18
00:01:55,140 --> 00:01:56,610
SAPS four.

19
00:01:56,610 --> 00:02:04,050
HANA and Salesforce are the backbone
of the countless global business

20
00:02:04,110 --> 00:02:10,620
operations, covering everything from
simple chain management, which is

21
00:02:10,620 --> 00:02:14,880
supply chain man management tool,
customer relationship management.

22
00:02:15,780 --> 00:02:22,200
Now with artificial intelligence,
open this platforms.

23
00:02:23,130 --> 00:02:23,670
Think.

24
00:02:24,480 --> 00:02:29,910
Predict you, analyticals and
SAP, sales and distributions,

25
00:02:30,330 --> 00:02:32,760
metal management, finance.

26
00:02:33,945 --> 00:02:41,175
Transport management modules, so many
modules and our automated code to

27
00:02:41,175 --> 00:02:49,605
cash business process in Salesforce
system, we are witnessing a revolution.

28
00:02:50,445 --> 00:02:53,325
But this revolution comes with challenges.

29
00:02:55,095 --> 00:03:04,005
AI introduce dynamic adaptive
systems that traditionally testing

30
00:03:04,005 --> 00:03:06,225
methods struggling to keep on.

31
00:03:07,815 --> 00:03:14,895
Considering the AI system in SAP
automates the general entry to ensure

32
00:03:15,555 --> 00:03:19,635
with the SO and JXP regulations.

33
00:03:20,595 --> 00:03:28,995
When we are talking about the SO and JX
P regulations, it's a very important for

34
00:03:28,995 --> 00:03:32,145
the complaints and regulator industry.

35
00:03:33,300 --> 00:03:40,380
A single mismatch could lead a significant
financial losses or legal issues

36
00:03:43,920 --> 00:03:45,660
or a picture in Salesforce platform.

37
00:03:46,350 --> 00:03:54,300
Mispricing a contract, it going to
be break the customer trust as well

38
00:03:54,300 --> 00:03:56,130
as it going to impact the revenues.

39
00:03:57,240 --> 00:03:59,370
These are not just possibilities.

40
00:03:59,460 --> 00:04:02,730
These are the real risks
in the current environment.

41
00:04:02,730 --> 00:04:08,910
Today, the tradition testing,
it's a static scripts with manual

42
00:04:08,910 --> 00:04:14,730
process for the shot and automation.

43
00:04:14,730 --> 00:04:19,709
Also, whatever the automation which
we are doing that is also have the

44
00:04:19,709 --> 00:04:24,180
some limitations with the test data
as well as this one, the actions

45
00:04:24,180 --> 00:04:28,290
which we perform through automations,
but because of a algorithm.

46
00:04:31,435 --> 00:04:37,200
Over the time, this demands new approach
with the continuous quality validations.

47
00:04:37,440 --> 00:04:42,990
Along with this one, complaints,
regulations, controls to maintain

48
00:04:42,990 --> 00:04:49,140
the data integrity and system
performance, user confidence and coming.

49
00:04:50,490 --> 00:04:51,330
What does this means?

50
00:04:51,450 --> 00:04:53,940
Intelligent testing to bring in the table.

51
00:04:55,380 --> 00:04:56,460
It's a game changer.

52
00:04:58,020 --> 00:05:07,320
This approach leverages the advanced tool
like Tic Toska Robotic Process Automation.

53
00:05:07,440 --> 00:05:09,390
We also call as A RPA.

54
00:05:09,390 --> 00:05:16,890
Frameworks and a agent simulate the
real world scenario, actively identify

55
00:05:16,890 --> 00:05:24,150
the issues in SAP, for instance,
intelligent testing can monitor aid

56
00:05:24,150 --> 00:05:28,380
driven outputs across all the tracks like.

57
00:05:29,909 --> 00:05:33,825
S-E-M-G-T-S-S-D-M-M, uh, it's gone.

58
00:05:33,990 --> 00:05:39,150
It's, it's, it's, uh, all the tracks
including Salesforce, but catching

59
00:05:39,570 --> 00:05:45,780
the issues before the escalate in
the Salesforce, validating the price,

60
00:05:45,780 --> 00:05:51,240
accuracy and workflow efficiency,
the key factor in the customer

61
00:05:51,270 --> 00:05:54,060
satisfaction and business success.

62
00:05:55,260 --> 00:06:00,060
And does, and it does not stop
here with the raise of generative,

63
00:06:00,330 --> 00:06:02,850
a stakes even get even higher.

64
00:06:03,300 --> 00:06:09,330
The technology capable of creating the
content of making decision requires

65
00:06:09,330 --> 00:06:12,960
testing the beyond the functionality.

66
00:06:14,940 --> 00:06:21,300
Now, intelligent testing, not
only verifying through validation,

67
00:06:21,420 --> 00:06:24,539
but also verify the ethical Aus

68
00:06:26,760 --> 00:06:28,680
aligning with the certifications like.

69
00:06:29,100 --> 00:06:36,300
SAPA ethics and mitigating the biases
that could, that could be otherwise.

70
00:06:36,330 --> 00:06:38,790
It's a compromise of fairness.

71
00:06:39,870 --> 00:06:44,370
Without this, the, we risk the
deployment failure complaints,

72
00:06:44,370 --> 00:06:48,330
breaches, and loss of credibility.

73
00:06:48,510 --> 00:06:50,670
That could be industry back.

74
00:06:53,220 --> 00:06:59,010
Let me share some real time example, my
own experience, um, where I serve this

75
00:06:59,010 --> 00:07:10,590
as, as a senior quality assurance guy,
we design and developed few agents that

76
00:07:10,590 --> 00:07:20,160
generate the test score, execute the
test plans in the tool, the agent will

77
00:07:20,340 --> 00:07:27,840
analyze this one, the changes the live
compare reports, what SAP transports.

78
00:07:29,429 --> 00:07:30,450
Which is changes.

79
00:07:31,020 --> 00:07:38,489
And if coming back to the sales force,
what GitHub, GitHub pull request is it?

80
00:07:39,060 --> 00:07:43,620
How this automatically determines
the regression impacts?

81
00:07:45,599 --> 00:07:51,719
This is one project where the, our
intelligent tool reduce the manual

82
00:07:51,780 --> 00:07:54,989
testing by 40 to 50 percentage.

83
00:07:55,710 --> 00:08:00,659
By reading this one, the SAP changes,
what are the changes they brought?

84
00:08:01,740 --> 00:08:03,809
What are the business
process they're changing?

85
00:08:04,109 --> 00:08:10,200
What are those object and what are the
Salesforce objects has been changing

86
00:08:10,260 --> 00:08:12,210
by going through this one full request.

87
00:08:12,210 --> 00:08:13,289
Our change summary.

88
00:08:14,190 --> 00:08:18,120
By reading this one, our
intelligent tool, well intelligent

89
00:08:18,120 --> 00:08:21,240
testing related automation, ai.

90
00:08:21,870 --> 00:08:22,919
It ensures this one.

91
00:08:22,919 --> 00:08:27,630
We have comprehensive coverage
for the AI and enhanced future.

92
00:08:28,664 --> 00:08:33,044
And, uh, without overlooking the
critical, the complaints is validation.

93
00:08:34,934 --> 00:08:39,914
If I going through further here
on the intelligent testing,

94
00:08:42,194 --> 00:08:49,515
the, um, the RPA bots, generally
RPA bots we create for automating

95
00:08:49,515 --> 00:08:52,125
the repetitive rule-based tasks.

96
00:08:53,385 --> 00:08:55,275
The bots is mainly familiar with this one.

97
00:08:55,275 --> 00:09:02,564
Financial workflows such as general inter
posting, accounting, reconciliations,

98
00:09:04,215 --> 00:09:07,485
various analysis and financial statements.

99
00:09:07,485 --> 00:09:10,005
Scratch check with the high precisions.

100
00:09:11,170 --> 00:09:15,710
But not only that, even, uh, the
eds, electronic data interchange,

101
00:09:16,120 --> 00:09:19,350
electronic data interchange.

102
00:09:21,225 --> 00:09:26,535
Sales order tions the implementing
of RPA bots in controlling testing,

103
00:09:26,625 --> 00:09:31,035
we are minimizing the human error
and boosting the efficiency here.

104
00:09:31,845 --> 00:09:35,985
And the recent audits also
where the bots identified the

105
00:09:36,045 --> 00:09:40,665
discrepancies in SOX complaint
as process and the manual review.

106
00:09:40,935 --> 00:09:46,065
It might be missed on this,
the SOX complaints is that

107
00:09:46,065 --> 00:09:47,775
manual reviews might be missed.

108
00:09:47,835 --> 00:09:49,695
The permitting, the
potential regulation is,

109
00:09:51,975 --> 00:09:58,425
let's not to forget this tic, where the
corner stones of the intelligent testing

110
00:10:00,075 --> 00:10:05,925
I have used to build, uh, automated
regression test cases for multi modules in

111
00:10:05,925 --> 00:10:15,345
SAP as well as Salesforce, for instance,
upgrades and the roll loads where SD

112
00:10:15,345 --> 00:10:17,595
and mm, which is sales and distribution.

113
00:10:17,625 --> 00:10:19,065
Mm. Integrations comes.

114
00:10:19,485 --> 00:10:25,485
With the aid driven automation, the
Toska module based allow us to simulate

115
00:10:25,485 --> 00:10:33,315
the end number of scenarios defect early
escalating, the go live by the weeks.

116
00:10:33,375 --> 00:10:37,695
It's a, in the, especially in the
logistics area, the real world

117
00:10:37,995 --> 00:10:42,675
application, it's not only ensure
the seamless integrations and

118
00:10:42,765 --> 00:10:48,975
transitions from the legacy system
to SAP, but also make them the SOCs

119
00:10:49,005 --> 00:10:51,225
and JXP stakeholders Confluence.

120
00:10:52,485 --> 00:10:58,485
Let's, we'll go with the, some of the
examples here, how the intelligent

121
00:10:58,605 --> 00:11:07,215
testing safeguard the, our operations
dive into this one, into AI much faster

122
00:11:07,725 --> 00:11:11,925
and more reliable in the deployment.

123
00:11:14,535 --> 00:11:19,035
But here the question for all of
us, are we prepared for this shift?

124
00:11:21,645 --> 00:11:26,655
A become more embedded in our workflows.

125
00:11:27,885 --> 00:11:35,235
The demand of intelligent testing
will only grow the organization that

126
00:11:35,295 --> 00:11:40,245
adapts will lead the package while this

127
00:11:42,675 --> 00:11:44,595
don't, may fall behind.

128
00:11:45,615 --> 00:11:49,065
This is not just about technology,
this is about the building trust.

129
00:11:49,485 --> 00:11:56,985
Ensuring the complaints is unlocking the
full potential of AI enterprise solution.

130
00:11:58,065 --> 00:12:01,420
So what can we do first?

131
00:12:02,410 --> 00:12:10,155
Investing in the right tools, platforms
like Tosca, RPA, frameworks at this time.

132
00:12:11,325 --> 00:12:17,595
Second, trying the teams
beyond the tradition testing.

133
00:12:18,615 --> 00:12:22,245
Embarrassing the AI adaptability.

134
00:12:23,775 --> 00:12:27,615
Third culture, which is continuous
improvement, where testing

135
00:12:27,615 --> 00:12:30,855
is, involves the technology.

136
00:12:35,780 --> 00:12:36,000
Now,

137
00:12:38,925 --> 00:12:43,095
the intelligent testing, it's
just a technical requirement.

138
00:12:43,755 --> 00:12:46,335
It's a strategic as well.

139
00:12:47,895 --> 00:12:51,765
Let's we go to the deserve
to shape the future where the

140
00:12:51,765 --> 00:12:53,805
technologies empower us all.

141
00:13:04,960 --> 00:13:13,695
So what will happen if this intelligent,
it'll not serve this one if you're

142
00:13:13,695 --> 00:13:15,945
not covering the major testing.

143
00:13:15,975 --> 00:13:17,205
What will happen on this?

144
00:13:19,410 --> 00:13:22,709
The main thing, this one, it, the testing.

145
00:13:22,740 --> 00:13:27,060
If it's not happened, the impact
will be on the business operations.

146
00:13:28,319 --> 00:13:31,380
It'll damage this when your
relationship with the customer,

147
00:13:32,459 --> 00:13:39,569
it, uh, stick the loss of the
financial, it'll impact the business.

148
00:13:40,199 --> 00:13:45,630
So that is the reason it's a very
critical to have this intelligent testing.

149
00:13:46,110 --> 00:13:50,730
So far, we've gone through this one,
why the intelligent testing is required

150
00:13:51,480 --> 00:13:53,970
and how that makes the difference.

151
00:13:54,870 --> 00:13:59,189
On top of this one, manual
testing and automation testing,

152
00:14:06,300 --> 00:14:09,420
understanding the enterprise
testing challenges.

153
00:14:10,439 --> 00:14:13,140
Now, let's break down
the challenges First.

154
00:14:14,700 --> 00:14:21,900
The complexity landscapes, like
SAP environment, the, the, the SAP

155
00:14:21,900 --> 00:14:27,840
is having a multiple SAP system
and also S four SAP, S four hana.

156
00:14:27,960 --> 00:14:35,880
It has a multiple modules that interact
interdependencies and also it's creating

157
00:14:35,880 --> 00:14:38,190
a cascading failure of potential as well.

158
00:14:39,930 --> 00:14:40,920
In the Salesforce.

159
00:14:40,980 --> 00:14:48,390
On another hand, bringing the extension,
customization, frequent updates, the

160
00:14:48,390 --> 00:14:50,175
system rarely operates isolation.

161
00:14:50,635 --> 00:14:56,040
But this integrate with the
legacy applications, external

162
00:14:56,310 --> 00:15:02,460
applica APIs application program
links and the data warehouses.

163
00:15:03,330 --> 00:15:06,090
The tradition testing has a limits

164
00:15:08,430 --> 00:15:12,120
where the manual testing
creation is a time intensity.

165
00:15:13,260 --> 00:15:17,790
After it misses the full coverage of
the testing of the system interaction.

166
00:15:18,719 --> 00:15:23,790
On top of this one, resource constraints
force the trade off between the thorough

167
00:15:24,540 --> 00:15:27,390
testing as well as delivery timelines.

168
00:15:28,380 --> 00:15:33,240
On top of this one, the statics
test suites become outdated as

169
00:15:33,240 --> 00:15:39,209
system evolves leading graduation
degradation of efficiency.

170
00:15:41,339 --> 00:15:47,370
So they understand here, there's this,
each client, each business operation.

171
00:15:47,880 --> 00:15:52,859
The landscape as well as testing
challenge just will be different.

172
00:15:53,130 --> 00:15:54,780
I'll try to cover a few of them here.

173
00:16:03,089 --> 00:16:10,829
So, as I mentioned earlier, SAPS, Fourna
and Salesforce are powerful platforms.

174
00:16:11,204 --> 00:16:17,834
That drive the critical business
operations and a right now, we are

175
00:16:17,834 --> 00:16:23,685
using to enhance our testing efficiently
become the forbit challenges.

176
00:16:24,555 --> 00:16:26,204
Let's, I'll drill on on this.

177
00:16:26,235 --> 00:16:30,944
First, let's consider the scalability
integrations, which we have discussed

178
00:16:30,944 --> 00:16:34,454
on this one, which is interacting
with the multiple models, which

179
00:16:34,454 --> 00:16:39,855
is thousands of transaction data
flows across the global terms.

180
00:16:40,785 --> 00:16:46,720
Each transactions, which we are,
we are rmi, that will create

181
00:16:46,920 --> 00:16:50,175
a number of, uh, table data

182
00:16:52,845 --> 00:16:59,745
along with this one that will impact with
the SOX and JX P process controls as well.

183
00:17:00,630 --> 00:17:06,780
Salesforce with the CPQ with a multi-cloud
setup, add the layers of customization

184
00:17:07,350 --> 00:17:09,089
where the price rules has been changed.

185
00:17:09,660 --> 00:17:14,460
Now understanding this by going
through this one S four as as

186
00:17:14,460 --> 00:17:18,930
well as Salesforce, they have
challenges in the data dependencies.

187
00:17:20,190 --> 00:17:26,940
Both platform rely on the vast data
sets, like example, SAP, for financial

188
00:17:26,940 --> 00:17:31,620
recognition, Salesforce for customer
analyticals, ensuring this one data

189
00:17:31,680 --> 00:17:36,720
errors production without compromising
the security constraint hurdle.

190
00:17:37,650 --> 00:17:42,180
In my experience, I've since many
project where inconsistent test

191
00:17:42,240 --> 00:17:47,610
data lead to missed defects in the
integrations, which can be any SDMM,

192
00:17:47,610 --> 00:17:53,580
anything, also discovering the post
go live, it'll be costing to the weeks

193
00:17:53,580 --> 00:17:55,415
of rework and the project delays.

194
00:17:57,840 --> 00:18:02,820
The third one, this one, the
face of change adds the pressure

195
00:18:04,740 --> 00:18:06,300
with the continuous upgrades.

196
00:18:07,710 --> 00:18:12,570
SAP has the releases, which is
quarterly or service back upgrades,

197
00:18:13,320 --> 00:18:14,730
and Salesforce has this one

198
00:18:16,740 --> 00:18:22,770
seasonal upgrades, which is winter,
summer upgrades, testing phase, shrinking

199
00:18:22,830 --> 00:18:29,250
windows to validate the functionality
like the certain, uh, duration.

200
00:18:29,250 --> 00:18:34,770
We need to test our entire, uh,
functionalities in those two environments

201
00:18:35,520 --> 00:18:40,500
before it goes to the production
by adding artificial intelligence

202
00:18:41,130 --> 00:18:43,230
and automation into the mix.

203
00:18:43,560 --> 00:18:50,460
The challenges was intensify a
driven futures like predictive

204
00:18:50,460 --> 00:18:53,705
analytics in SAP and.

205
00:18:54,720 --> 00:19:01,710
Automate code generation in
Salesforce evolve dynamically and

206
00:19:01,710 --> 00:19:04,410
making the static steps absolute.

207
00:19:05,310 --> 00:19:10,590
This is evident where recent project,
where a model adjustment in Salesforce

208
00:19:10,590 --> 00:19:16,710
require retesting 70% of the suite
stretching the timeline within.

209
00:19:23,490 --> 00:19:25,200
And what are the example?

210
00:19:25,350 --> 00:19:30,990
We have undergone this one key issues,
this lack of comprehensive test coverage

211
00:19:30,990 --> 00:19:33,690
with the thousands of testation.

212
00:19:34,470 --> 00:19:41,340
With the 5,000 per SAP module,
Salesforce, this critical path is

213
00:19:41,670 --> 00:19:47,730
prioritizing the critical path is tough
complaints requirement like GXP in any

214
00:19:48,990 --> 00:19:52,385
medical, medical or formal, critical.

215
00:19:53,955 --> 00:19:59,835
Financial, uh, industry stocks
demands a hundred percentage accuracy

216
00:20:00,675 --> 00:20:06,375
and, uh, the resource constraints
often limit the testing for 70, 60

217
00:20:06,375 --> 00:20:08,475
percentage or 70 80 percentage coverage.

218
00:20:08,475 --> 00:20:10,485
Leave the risk unadressed on this.

219
00:20:11,145 --> 00:20:13,215
So what can we do?

220
00:20:13,815 --> 00:20:18,615
The first step is this one adapting
the intelligent testing framework.

221
00:20:19,935 --> 00:20:27,135
The tools like toca present, toca, which I
have used, automate the regression suites,

222
00:20:27,135 --> 00:20:33,885
can handle the multi modules in SAP, the
reduce the 50 percentage of efforts, RP

223
00:20:33,975 --> 00:20:36,825
parts, other tools which is implemented.

224
00:20:36,975 --> 00:20:42,225
Automate the reputative validation, ensure
our consistency in financial framework.

225
00:20:42,975 --> 00:20:47,445
The second thing, this one, investing
the robotic test data management.

226
00:20:49,220 --> 00:20:50,385
This test data.

227
00:20:51,540 --> 00:20:54,510
Can mimic the production safely on this.

228
00:20:55,470 --> 00:21:00,750
And that is the shift left testing
catches the defects, a lean CSCD

229
00:21:00,960 --> 00:21:04,170
pipeline to keep the face up the updates.

230
00:21:05,910 --> 00:21:10,140
It is not only the about the
tool, it's a strategy that team

231
00:21:10,140 --> 00:21:11,490
needs to be trying to understand.

232
00:21:11,490 --> 00:21:18,060
These platforms must be ed,
the core investment, not on a

233
00:21:18,150 --> 00:21:21,120
after through the difficulty.

234
00:21:21,120 --> 00:21:26,340
Engaging 30 percentage may prove
very costly after go live on the S.

235
00:21:32,490 --> 00:21:38,580
So by going through this one
E complexity, land complexity

236
00:21:38,580 --> 00:21:44,040
landscape and traditional testing
limitations, the instant to preventive

237
00:21:45,810 --> 00:21:50,610
actions, whatever the points we've
discussed, it's need to be carefully.

238
00:21:51,420 --> 00:21:57,720
We need to address this information
will be held on the our building.

239
00:21:57,720 --> 00:21:59,850
This one AI and machine learning process.

240
00:22:00,930 --> 00:22:04,230
Now, AI and machine learning
testing in the core technologies,

241
00:22:05,280 --> 00:22:09,450
the predictive analyticals for the
risk assessment mission, learning

242
00:22:09,450 --> 00:22:12,635
from test optimization, NLPs.

243
00:22:12,930 --> 00:22:14,730
How we are going to do on this?

244
00:22:15,150 --> 00:22:21,060
So how do we address these
challenges in the real time?

245
00:22:21,840 --> 00:22:29,580
So everyone, the usage of this one, this
core technologies is very, but let me

246
00:22:29,580 --> 00:22:35,160
put in article B, how we can address
these challenges either entering a

247
00:22:35,160 --> 00:22:41,745
mission, learning, let's, I mean, uh,
with the focus of this predictive anal

248
00:22:42,810 --> 00:22:43,920
analyticals for the risk assessment.

249
00:22:45,000 --> 00:22:50,639
Machine learning from test optimization
and the natural language processing

250
00:22:50,639 --> 00:22:52,230
for the requirement analysis.

251
00:22:54,750 --> 00:22:59,310
Testing involved for a manual
checklist for data-driven sciences

252
00:23:00,305 --> 00:23:05,639
and a and machine learning are
the for beaten of the resolutions.

253
00:23:06,270 --> 00:23:13,290
These technologies are reshaping
how ensuring this quality in complex

254
00:23:13,290 --> 00:23:20,129
systems like SAPS four HANA and
the Salesforce, where error can

255
00:23:20,129 --> 00:23:22,980
have far reaching consequences.

256
00:23:24,540 --> 00:23:31,950
Let's debr one by one First, predictive
analytical for the risk assessment.

257
00:23:33,330 --> 00:23:37,830
This technology using a historical
data, it could be the defect data

258
00:23:37,830 --> 00:23:43,050
or the issues in the production
environment, which we coming across.

259
00:23:44,129 --> 00:23:49,980
And AA modules to forecast where
the defects are likely to be occur.

260
00:23:51,389 --> 00:23:57,090
Imagine you are, you're doing SAPS four
HANA upgrade or rollout with hundreds

261
00:23:57,090 --> 00:24:03,870
of modules and tracks, T cores, where
single update could be triggered.

262
00:24:03,870 --> 00:24:09,570
The cascade of issues like a price
example, price issue, or currency issue.

263
00:24:11,220 --> 00:24:17,760
The predictive analyticals trained in
the on the past defect patterns can

264
00:24:17,760 --> 00:24:26,610
prioritize the high risk areas like
complaints, critical workflows under

265
00:24:27,455 --> 00:24:31,855
JXP SOS FDA regulations part level.

266
00:24:33,689 --> 00:24:39,689
In my work, I have been seeing this
action, a predictive model flagged for

267
00:24:39,689 --> 00:24:42,929
potential failures, a enhanced that.

268
00:24:44,685 --> 00:24:49,335
Sales and distribution module and
inventory module to reduce the production

269
00:24:49,335 --> 00:24:55,575
deployment at least for 25 to 30
percentage during a recent upgrade.

270
00:24:57,525 --> 00:25:02,985
The next one, machine learning
and test optimization.

271
00:25:04,755 --> 00:25:13,485
This approach leverages the algorithm
to refine the test suites by eliminating

272
00:25:13,485 --> 00:25:18,645
the redundant and focus what it's matter.

273
00:25:19,965 --> 00:25:26,175
Tradition testing after involves
how and of test cases saying

274
00:25:26,175 --> 00:25:27,765
this one, take this one.

275
00:25:28,155 --> 00:25:29,895
S 400,000 test cases.

276
00:25:29,895 --> 00:25:35,625
Salesforce thousand test cases may
have char the outdated data updates,

277
00:25:36,855 --> 00:25:41,920
machine learning, analyze the ex
execution results to identify the most.

278
00:25:43,500 --> 00:25:48,060
Impactful testing, cutting
efforts by 40 percentage.

279
00:25:48,960 --> 00:25:55,320
As we discussed earlier, when the
changes comes from S four, we are

280
00:25:55,380 --> 00:26:01,680
going to read the one, the changes
about which object is impacting.

281
00:26:02,550 --> 00:26:04,320
Similarly in Salesforce.

282
00:26:04,320 --> 00:26:07,320
We are going to read out on this
one, what is the change summary?

283
00:26:07,890 --> 00:26:13,950
Our pull request is what the score
change for by reading this one.

284
00:26:14,310 --> 00:26:19,800
When we implement mission learning
driven tool that optimize your regression

285
00:26:19,830 --> 00:26:25,320
testing, cutting the unnecessary work,
at least for 40 to 60 percentage.

286
00:26:25,830 --> 00:26:31,740
On top of this one, they're shortening
the test cycle from weeks to days

287
00:26:32,400 --> 00:26:33,870
while maintaining the coverage.

288
00:26:34,230 --> 00:26:38,790
This is not only saves the
time, but also adapt the dynamic

289
00:26:38,790 --> 00:26:41,100
nature of aid driven future.

290
00:26:43,500 --> 00:26:52,830
Finally, the NLP that we call is a natural
language processing for requirement

291
00:26:52,950 --> 00:27:02,400
analysis, NLP, and interprets the
requirement from unstructured text,

292
00:27:03,120 --> 00:27:10,230
email documents, user stories from
xera or any, any pa any format turning

293
00:27:12,660 --> 00:27:21,480
in inputs into pre, uh, six or, uh,
test cases, sorry, precious test cases.

294
00:27:23,310 --> 00:27:24,990
The, the requirement.

295
00:27:25,260 --> 00:27:29,910
You can say this one, there is
a blueprint or FTDs function.

296
00:27:31,380 --> 00:27:36,600
Documents or technical requirement
documents or functional requirement

297
00:27:36,600 --> 00:27:41,340
documents or specs, any format in this.

298
00:27:42,090 --> 00:27:49,530
It'll read this one data and it'll be
convert into this one into precise test

299
00:27:49,530 --> 00:27:57,300
cases in Salesforce CPQ project, where
the client requirements then evolved.

300
00:27:57,690 --> 00:28:03,540
NLP used 50 pages of specs,
either functional technical

301
00:28:03,540 --> 00:28:04,980
specs or user stories.

302
00:28:05,790 --> 00:28:12,270
Identify this key test scenarios
to reduce the at least by 32.

303
00:28:12,450 --> 00:28:14,160
For 30 to 50%.

304
00:28:15,360 --> 00:28:23,520
I've used this in my career to
analyze the SAP notes, GitHub pull

305
00:28:23,520 --> 00:28:28,680
request transports a live compare
reports or the objects list.

306
00:28:29,115 --> 00:28:38,235
Ensuring this one we have have a
clearly articulated our test cases.

307
00:28:39,375 --> 00:28:44,205
Along with this one, the
evident of test conditions.

308
00:28:44,685 --> 00:28:50,205
This technology is crucial for managing
the complex AI requirement where

309
00:28:50,355 --> 00:28:53,985
intent context matters as much as code.

310
00:28:54,765 --> 00:28:59,325
Let's share the real world
example during S four ANA

311
00:28:59,325 --> 00:29:02,685
implementation prior to analyticals.

312
00:29:02,775 --> 00:29:12,285
Identify the high risk areas like a
global trade system co due to a modular

313
00:29:12,285 --> 00:29:15,525
adjustment by focusing the testing.

314
00:29:15,525 --> 00:29:18,990
There we have ed, potential
regulator, beaches.

315
00:29:20,690 --> 00:29:20,910
Um.

316
00:29:22,725 --> 00:29:26,264
The machine learning also, meanwhile,
the machine learning optimized the test

317
00:29:26,264 --> 00:29:29,625
speed cutting down the return test cases.

318
00:29:30,855 --> 00:29:38,445
NLP clarified the requirement from
20 pages change log, ensuring this

319
00:29:38,445 --> 00:29:39,764
one we have the full coverage.

320
00:29:40,275 --> 00:29:47,264
This combination prevented from delay
that could have the cost of millions.

321
00:29:48,465 --> 00:29:48,945
So,

322
00:29:51,945 --> 00:29:53,895
but how does this technology work?

323
00:29:53,895 --> 00:29:59,504
Together we are talking about the
predictive analyticals pinpoint the

324
00:29:59,504 --> 00:30:04,965
risk mission learning, streamline
execution, NLP, ensuring the

325
00:30:05,025 --> 00:30:06,735
alignment with the business needs.

326
00:30:07,155 --> 00:30:13,125
Together they're creating the
proactive testing ecosystem ideal

327
00:30:13,125 --> 00:30:20,565
for AA enhanced platform, where the
tradition method will the challenges.

328
00:30:21,794 --> 00:30:27,554
The integration of this tool required the
skill team to robust the data pipeline.

329
00:30:28,245 --> 00:30:29,655
But the pace off is clear.

330
00:30:29,895 --> 00:30:35,534
The faster releases, uh, fewer
defects and greater confluence.

331
00:30:37,544 --> 00:30:38,504
What next?

332
00:30:40,034 --> 00:30:44,475
Start by adapting this technology
increment, the, perhaps a pilot

333
00:30:44,504 --> 00:30:49,935
with the predictive analyticals
for your next SAP updates,

334
00:31:01,425 --> 00:31:05,835
a power testing strategies
in SAP environment.

335
00:31:05,895 --> 00:31:09,195
We are going to break down
this one, our strategies, uh,

336
00:31:10,274 --> 00:31:12,254
ASAP as well as Salesforce.

337
00:31:12,254 --> 00:31:16,485
First, let's, we'll go with
the focus on SAP environment.

338
00:31:17,540 --> 00:31:17,760
Uh.

339
00:31:18,780 --> 00:31:22,590
So when we are focusing with
this one intelligent module with

340
00:31:22,590 --> 00:31:27,540
integration testing, automate the
con customization, impact analysis,

341
00:31:27,570 --> 00:31:30,540
performance, scalability, predictions.

342
00:31:32,580 --> 00:31:39,389
As we discussed, S four is a very
critical, powerful business functions

343
00:31:39,450 --> 00:31:46,710
we have with the complex integrations,
frequent updates, the tradition techniques

344
00:31:47,160 --> 00:31:54,480
after fails, a shot, a stepping it
transform the landscape, offering

345
00:31:54,480 --> 00:32:01,440
the targeted strategies to ensure
this one reliability and efficiency.

346
00:32:02,850 --> 00:32:07,320
Let's this have a three
key approaches here.

347
00:32:08,460 --> 00:32:12,210
First, intelligent module integrations.

348
00:32:13,530 --> 00:32:16,045
This strategy uses a, a two.

349
00:32:18,375 --> 00:32:24,435
Validate interaction across the,
all the SAP models where change is

350
00:32:24,435 --> 00:32:33,165
one, like updating SD can impact MM.
Or finance a e. A agent analyze the

351
00:32:33,165 --> 00:32:39,045
data flow and predict the integration
points, reduce the manual efforts.

352
00:32:40,665 --> 00:32:51,135
We implemented by using a tool, Tosca Tic
Tosca and RPA, where an A module tested

353
00:32:51,315 --> 00:33:01,035
between SD and finance integration and
SDN Mm integration for a inventory system.

354
00:33:01,875 --> 00:33:07,335
It caught the data mismatch during
the pilot and preventing the.

355
00:33:08,520 --> 00:33:12,325
Post-launch failure and
saves the rework as well.

356
00:33:13,065 --> 00:33:17,490
In the financial point of view,
we, we have caught the defect

357
00:33:17,490 --> 00:33:24,720
on the group currencies and the
conversions and also the reports.

358
00:33:24,865 --> 00:33:29,250
We, we found the defects that was
helped us to avoid the rework,

359
00:33:29,370 --> 00:33:30,480
the production environment.

360
00:33:31,800 --> 00:33:38,190
The next one, the automate the
customization, impact analysis.

361
00:33:39,780 --> 00:33:43,620
SAP environments, often
future custom codes.

362
00:33:44,610 --> 00:33:55,500
Think pricing logic complaints as rules
for air socks and JXPA automates the

363
00:33:56,040 --> 00:34:03,150
assessment, how this customization
reacts for updates and transport.

364
00:34:04,695 --> 00:34:12,885
A recent project, we've used a technology
to analyze this one for live compare data.

365
00:34:13,485 --> 00:34:19,185
Identify this one, what the changes
on this, how this going to affect

366
00:34:19,185 --> 00:34:24,014
in our current business process, and
how many test cases will be impacted.

367
00:34:24,435 --> 00:34:32,534
So we predict this one and we packaged
by doing this one upfront itself.

368
00:34:33,705 --> 00:34:40,514
The regression team was saved 35
percentage of testing time by predicting

369
00:34:40,815 --> 00:34:44,175
and doing the early work on this.

370
00:34:46,784 --> 00:34:50,264
Finally, the performance
and scalability prediction.

371
00:34:52,304 --> 00:34:58,725
This leverage AI to simulate the load,
predict system behavior under stress.

372
00:34:59,415 --> 00:35:01,875
Critical for SA real time demands.

373
00:35:03,225 --> 00:35:09,855
The tradition testing teams might
miss how an AI enhanced SCM module or

374
00:35:10,395 --> 00:35:14,085
CRM module handles the peak traffic.

375
00:35:16,365 --> 00:35:21,015
We deployed Predict Q Model that
forecast the performance during the

376
00:35:22,095 --> 00:35:24,225
high value with the maximum load,

377
00:35:26,235 --> 00:35:32,715
and we are revealing the
scalability of bottlenecks and

378
00:35:32,715 --> 00:35:35,265
adjusting our configuration.

379
00:35:35,265 --> 00:35:42,029
Pre-launch AWAI 20 percentage
slowdown by proving this AI

380
00:35:42,375 --> 00:35:46,125
value, maintaining a up time.

381
00:35:49,305 --> 00:35:53,085
Let's, we have some
real time example here.

382
00:35:55,605 --> 00:36:00,330
AA predicted demand data
in a CM conflict with, uh.

383
00:36:01,785 --> 00:36:02,595
Stocks level.

384
00:36:04,185 --> 00:36:09,285
Automated customization impact analysis
that flagged the custom GXP complaints

385
00:36:09,285 --> 00:36:11,145
as scripted need to be adjusted.

386
00:36:11,835 --> 00:36:15,945
While performance and scalability
prediction ensure the system handle

387
00:36:15,945 --> 00:36:26,025
the 50 to 60% of traffic spike
together, the strategy shaved together.

388
00:36:26,085 --> 00:36:34,155
This strategies shaved up two
weeks of testing cycle and

389
00:36:34,275 --> 00:36:36,645
ensure this one flawless go lie.

390
00:36:38,230 --> 00:36:39,405
Why this matter?

391
00:36:41,055 --> 00:36:48,555
C'S complexity, as we mentioned, and
the thousands of transactions and

392
00:36:48,555 --> 00:36:55,995
few F print updates, a integrations
demands the precise testing,

393
00:36:57,225 --> 00:36:59,025
the A power test strategies.

394
00:37:00,000 --> 00:37:04,200
Reduce the risk, optimize the
resource, align with the business

395
00:37:04,200 --> 00:37:07,410
goals, the change, the integration.

396
00:37:07,440 --> 00:37:08,400
AI required

397
00:37:10,410 --> 00:37:16,170
robust data, the FA pay off the
fewer defects, faster deployments.

398
00:37:24,660 --> 00:37:31,350
Now let's we go back to the Salesforce
specific, a testing approach.

399
00:37:36,299 --> 00:37:40,320
There are three trailer made approach.

400
00:37:40,320 --> 00:37:40,740
Stand out

401
00:37:42,810 --> 00:37:49,950
Salesforce specific, a testing approach,
focusing on declarative configuration

402
00:37:49,950 --> 00:37:57,360
validation, third party testing and
user experience impact prediction.

403
00:37:59,760 --> 00:38:07,230
The Salesforce power custom
centric operations worldwide from

404
00:38:07,650 --> 00:38:13,350
CPQ to multi-cloud deployments
and the integration with ai

405
00:38:14,010 --> 00:38:16,650
transforming how we can work.

406
00:38:17,850 --> 00:38:22,350
But this is brings unique
testing challenges.

407
00:38:22,860 --> 00:38:27,720
Tradition methods often miss the issues,

408
00:38:30,330 --> 00:38:35,730
but by using a aid driven future, let's
explore this targeted strategies to

409
00:38:35,760 --> 00:38:38,130
ensure the quality and reliability.

410
00:38:40,230 --> 00:38:43,860
The first is declarative
configuration validations.

411
00:38:46,050 --> 00:38:51,870
The Salesforce declarative tools
flows, workflows, and the validation

412
00:38:52,920 --> 00:38:55,350
enables the rapid customization.

413
00:38:55,980 --> 00:38:59,250
Often enhanced by AI for automation.

414
00:39:00,210 --> 00:39:05,190
AI testing validates this
configuration for accuracy edge cases.

415
00:39:06,360 --> 00:39:12,630
I used a power tool to test the
CPQ pricing flow where a module

416
00:39:12,720 --> 00:39:15,120
adjusted discount dramatically.

417
00:39:16,170 --> 00:39:23,160
And, uh, the, when I said this one
dramatically or the based on the country,

418
00:39:23,190 --> 00:39:30,150
based on the customer, the setup,
the price dynamically, uh, changes.

419
00:39:30,570 --> 00:39:34,500
And moreover, in the when the
real time to transaction is cha.

420
00:39:34,530 --> 00:39:38,640
Uh, when we are real time when trying
to create the order in the backend

421
00:39:38,940 --> 00:39:43,320
by user, any user has been changing
this one validations that dramatically

422
00:39:43,560 --> 00:39:48,600
the system will choose, um, review
on that and immediately the system

423
00:39:48,660 --> 00:39:50,010
will dynamically update this one.

424
00:39:50,550 --> 00:39:53,820
So we brought, we brought that situation.

425
00:39:53,820 --> 00:39:55,500
Where's the scenario?

426
00:39:55,800 --> 00:40:00,060
And simultaneously we are checking this
one, the how this AA can adjust on this,

427
00:40:00,480 --> 00:40:02,400
this validation caught a logical error.

428
00:40:02,400 --> 00:40:04,395
Sometimes the word is going of.

429
00:40:05,220 --> 00:40:07,410
Some, uh, 15 to 20 percentage.

430
00:40:07,920 --> 00:40:12,150
We, we have prevented a revenue losses
of thousand during this one piloted.

431
00:40:12,150 --> 00:40:16,140
So this approach ensure this one
configuration aligned with the business

432
00:40:16,140 --> 00:40:19,350
rules even adapt, EY and AI adapt stem.

433
00:40:20,730 --> 00:40:26,130
Next third party integration testing
Salesforce after integrated with the

434
00:40:26,130 --> 00:40:31,320
external systems with SAP or payment
gateways or marketing platforms

435
00:40:31,680 --> 00:40:38,160
where AI enhanced the data, syncing
our decision making AI testing

436
00:40:38,160 --> 00:40:43,050
simulate this interaction, detecting
the failures at the boundaries.

437
00:40:43,860 --> 00:40:44,850
In project.

438
00:40:45,090 --> 00:40:51,335
At, in project I implemented air
driven testing for the Salesforce.

439
00:40:52,235 --> 00:40:52,455
Uh.

440
00:40:53,365 --> 00:40:59,550
PAP integration where a agent predicted
data inconsistency during the peak loads.

441
00:41:00,030 --> 00:41:04,410
It's identifies a sync delay
allowing us to adjust the EPA

442
00:41:04,410 --> 00:41:08,670
calls frequency before go live, the
awaiting the customer facing issues.

443
00:41:10,800 --> 00:41:15,360
And finally, the user
experience impact predictions.

444
00:41:16,290 --> 00:41:21,210
A predicts how changes new
future a enhancements are.

445
00:41:21,210 --> 00:41:26,370
Update after an end user from
sales representative to customers

446
00:41:26,550 --> 00:41:28,680
using machine learning modules.

447
00:41:29,310 --> 00:41:34,320
It is analyzed the user
patents and simulate this one.

448
00:41:34,560 --> 00:41:35,550
UI impacts.

449
00:41:37,530 --> 00:41:43,110
I deployed this to access the access,
the Salesforce CPQ updates with the A

450
00:41:43,110 --> 00:41:48,480
driven code generator, the prediction
flag with the uua lag for mobile

451
00:41:48,480 --> 00:41:52,710
user prompting, the redesigning
the improved customer satisfaction

452
00:41:53,190 --> 00:41:56,310
scoring by 22 30% edge post launch.

453
00:41:56,550 --> 00:42:01,710
This ensure this one, the seamless
experience in a augmented environment.

454
00:42:02,820 --> 00:42:10,620
Let's share some live example here
during, uh, rollouts declarative

455
00:42:10,800 --> 00:42:12,180
configuration validation.

456
00:42:12,270 --> 00:42:16,650
Ensure this one, the pricing rules
worked across the region, catching

457
00:42:16,650 --> 00:42:18,270
the currency conversion glitch.

458
00:42:18,750 --> 00:42:24,330
Third party integration testing, validate
the payment gateway link and preventing

459
00:42:24,330 --> 00:42:29,940
the transaction failures during a
high volume sales user experience.

460
00:42:29,940 --> 00:42:34,045
Impact predictions, conforming that
updates did not slow down in the.

461
00:42:34,965 --> 00:42:35,595
Sales team.

462
00:42:35,985 --> 00:42:39,735
This leading a successful launch
of zero deployment complaints.

463
00:42:40,665 --> 00:42:41,444
Why this matter?

464
00:42:43,365 --> 00:42:48,705
The Salesforce flexibility, there's
thousands of configurations and

465
00:42:48,825 --> 00:42:52,215
integrations and user touch plan demands.

466
00:42:52,305 --> 00:42:58,125
These AI approaches reduce the
risk, optimize the deployment,

467
00:42:58,455 --> 00:43:00,705
enhance the user satisfaction.

468
00:43:00,705 --> 00:43:05,654
This challenges lies in the data
quality and tool integration.

469
00:43:05,654 --> 00:43:08,505
This benefits the few
defects, faster releases,

470
00:43:17,444 --> 00:43:22,935
implementing the framework, building
a powered testing capabilities.

471
00:43:25,605 --> 00:43:27,075
Let's outline the framework.

472
00:43:27,345 --> 00:43:28,665
Let's start with this one.

473
00:43:28,845 --> 00:43:30,825
Assessment and planning phase.

474
00:43:32,055 --> 00:43:33,765
Evaluate the existing.

475
00:43:34,634 --> 00:43:42,795
Testing capabilities, infrastructure
readiness and organization maturity.

476
00:43:44,145 --> 00:43:48,735
Only the stakeholders in
objective and success metrics.

477
00:43:48,825 --> 00:43:52,395
Ensuring this one system
support the data needs

478
00:43:54,674 --> 00:43:56,295
the next technology stack.

479
00:43:56,295 --> 00:43:57,075
Tool selection,

480
00:43:59,955 --> 00:44:00,404
excuse me.

481
00:44:00,795 --> 00:44:05,865
Then data strategy, model development,
developing the strategies for data

482
00:44:05,865 --> 00:44:13,875
collection, storing while maintaining
the security using interactive, excuse

483
00:44:13,875 --> 00:44:17,290
me, for the continuous refinement.

484
00:44:17,680 --> 00:44:21,315
Finally, the integration
with the existing workflows.

485
00:44:21,735 --> 00:44:28,759
Ensuring a tool will measure the seamless
with CACD pipeline test management.

486
00:44:37,785 --> 00:44:41,145
Sorry, the assessment
of, uh, planning phase.

487
00:44:42,195 --> 00:44:42,585
So

488
00:44:45,435 --> 00:44:52,365
let, let, let's walk through framework
step by step first, as we discussed

489
00:44:52,365 --> 00:44:55,815
at the beginning, assessment of
planning phase, what is this?

490
00:44:56,355 --> 00:44:57,255
What it does?

491
00:44:58,185 --> 00:45:08,265
Actually, this evaluates your current
testing landscapes and the process skill

492
00:45:08,265 --> 00:45:12,765
gaps and identify the pain point, sorry.

493
00:45:13,000 --> 00:45:19,395
Identify the pain points like manual
coverage gaps, slow regression cycles.

494
00:45:21,345 --> 00:45:29,090
I lead the assessment for the S four
and uncover 60% of test cases where.

495
00:45:30,405 --> 00:45:32,835
Redundant due to outdated scripts.

496
00:45:34,545 --> 00:45:41,415
This phase let's goals says, reduce
the defects by 30 percentage.

497
00:45:41,565 --> 00:45:43,365
Build a roadmap for the

498
00:45:45,705 --> 00:45:52,635
business objects, for the complaints,
SOX or gxp, FDA and speed.

499
00:45:54,045 --> 00:46:03,525
The next data strategies
module, development A. A

500
00:46:03,885 --> 00:46:05,775
thrives on the quality data.

501
00:46:05,985 --> 00:46:12,045
So the steps mainly focus on
gathering and preparing the data sets,

502
00:46:15,045 --> 00:46:19,875
test results, defects, logs, user
behavior, developing the AM modules,

503
00:46:19,995 --> 00:46:25,575
trial and made to your needs, like ing
the risk and optimizing the test cases.

504
00:46:27,299 --> 00:46:33,600
We designed a module using a historical
SAPS four, as well as Salesforce

505
00:46:36,150 --> 00:46:44,250
data to forecast defect prone areas,
improving the test focus by 30 to 40% day.

506
00:46:44,279 --> 00:46:47,850
This phase requires a clean
and secure interactive mod

507
00:46:51,210 --> 00:46:53,250
to reflect the real world scenarios.

508
00:46:54,990 --> 00:46:59,580
The third one is this one, the
technology stack and tool selection,

509
00:47:00,330 --> 00:47:03,060
choosing the AI tool fit your ecosystem,

510
00:47:05,415 --> 00:47:12,810
and we selected few projects,
toka ml, FAT M two, enhance SAP

511
00:47:12,810 --> 00:47:14,759
testing, cutting the execution time.

512
00:47:14,910 --> 00:47:19,440
We did this one and the scalability
of future growth on that.

513
00:47:21,535 --> 00:47:24,720
Finally, the integration
with the existing close.

514
00:47:26,850 --> 00:47:34,350
This step embedded a testing in CACD
pipeline Q processing and the team

515
00:47:34,350 --> 00:47:42,570
practice the seamless integrations, which
is reduce the DF 20 percentage defect.

516
00:47:42,570 --> 00:47:46,680
Quarterly proving of this,
you can ask me this one.

517
00:47:46,800 --> 00:47:48,570
Why does this framework matters?

518
00:47:49,830 --> 00:47:52,890
Building a power testing
is one of the project.

519
00:47:52,920 --> 00:47:54,420
It is a transformation.

520
00:47:54,660 --> 00:48:01,920
Without assessment, your risk
mis, uh, misaligned goals without

521
00:48:01,920 --> 00:48:04,800
data and models a lack accuracy.

522
00:48:05,550 --> 00:48:09,000
Without the right tool,
scalability suffers, and without

523
00:48:09,000 --> 00:48:10,920
integration adaption styles.

524
00:48:11,220 --> 00:48:14,640
The challenge is this one,
balancing investment with the

525
00:48:15,150 --> 00:48:22,410
results, but the payoff, faster,
smarter testing and and level.

526
00:48:24,585 --> 00:48:25,455
How do we start?

527
00:48:25,965 --> 00:48:26,745
Begin with this one.

528
00:48:26,745 --> 00:48:30,855
Some pilot project assessment
phase, focus on single model.

529
00:48:31,155 --> 00:48:35,205
It could be the S-D-R-M-M or finance.

530
00:48:35,235 --> 00:48:42,765
Build a data strategy, the accessible
test data, select the tool and

531
00:48:42,945 --> 00:48:45,405
integrate increment incrementally.

532
00:48:46,425 --> 00:48:50,475
The this phase approach
cut down the data leakage.

533
00:48:50,865 --> 00:48:53,655
2235 percentage showing a major success.

534
00:49:02,655 --> 00:49:05,805
The technical implementation requirement

535
00:49:08,475 --> 00:49:13,635
during the technical implementation
needs the, the robust, robust

536
00:49:13,635 --> 00:49:19,990
data, the key types including, uh,
historical test results production.

537
00:49:21,525 --> 00:49:26,085
Logs, user behavior data
and the configuration.

538
00:49:26,985 --> 00:49:34,455
High quality drives data is crucial
for effective module training

539
00:49:36,465 --> 00:49:36,945
only.

540
00:49:37,605 --> 00:49:46,245
Deduction data preparation, cleaning,
labeling sensitive information ensure

541
00:49:46,395 --> 00:49:48,705
our compliance model, integrity.

542
00:49:49,785 --> 00:49:55,485
The foundation strategies paramount
for a L learning capabilities.

543
00:49:56,955 --> 00:50:02,745
Operationally, the seamless integration,
which is key with the C-E-C-A-D, sorry,

544
00:50:02,955 --> 00:50:08,985
with CACD pipelines, the test tool,
tool management, like you can see zero

545
00:50:09,435 --> 00:50:14,115
or Q test and automation Framework.

546
00:50:14,205 --> 00:50:17,475
Framework like a selenium is critical.

547
00:50:17,924 --> 00:50:23,415
Scalability and performance and data
security is vital, especially for the

548
00:50:24,404 --> 00:50:27,464
large system like SAP and Salesforce.

549
00:50:28,665 --> 00:50:34,694
Adhering to regulator like GDPR must be
core part of the operation framework.

550
00:50:43,484 --> 00:50:48,285
Technical deep, A testing architecture.

551
00:50:49,814 --> 00:50:52,575
Let's take a deep look
into this one architecture.

552
00:50:53,055 --> 00:50:55,935
The core, a engine has a three component.

553
00:50:56,714 --> 00:51:06,884
One is data registration layer collects
cell logs, performance metrics, the

554
00:51:06,884 --> 00:51:14,924
machine learning engine process, the data
testing intelligence, the decision, eh.

555
00:51:16,230 --> 00:51:16,725
Uh, sorry.

556
00:51:16,785 --> 00:51:23,775
The decision engine commands the insights
and generate the actionable recommendation

557
00:51:23,775 --> 00:51:25,425
based on the business practice,

558
00:51:27,525 --> 00:51:28,275
the integration.

559
00:51:28,275 --> 00:51:34,425
API first designed the flexible
tool chain and even driven the

560
00:51:34,515 --> 00:51:38,535
architecture for the real time
response view with the bi directions

561
00:51:38,655 --> 00:51:41,385
by enabling the backbone integration.

562
00:51:43,995 --> 00:51:47,925
So the main thing, this one here,
we, we are doing on this one.

563
00:51:47,985 --> 00:51:53,085
The scalability relies on the
distributing processing of the

564
00:51:53,145 --> 00:51:59,715
various demands, catching the
performance, multi modules tell the

565
00:51:59,715 --> 00:52:01,605
business what they need from this.

566
00:52:09,029 --> 00:52:15,900
So the main thing, this one in SAP and
Salesforce, the core A engines where

567
00:52:15,960 --> 00:52:21,089
you collect the information that's
based on that, we, we are generating

568
00:52:21,089 --> 00:52:25,470
the predictive analysis that will
enhance using this machine learning.

569
00:52:25,470 --> 00:52:30,690
We process this one, that algorithm that
makes this one rule based decision that

570
00:52:30,779 --> 00:52:32,730
the core components will go into on that.

571
00:52:33,029 --> 00:52:36,930
From there, we are going to integrate
this one architecture platform.

572
00:52:37,140 --> 00:52:39,270
Then the scalability
concentration will come

573
00:52:41,940 --> 00:52:48,870
risk based testing and, uh, predictive
and intelligent risk assessment,

574
00:52:49,290 --> 00:52:53,400
predictive failure analysis, dynamic test.

575
00:52:55,980 --> 00:52:56,460
Again,

576
00:52:58,980 --> 00:53:02,130
this will vary based on the,
which project you're working for,

577
00:53:02,130 --> 00:53:03,450
which your client you're working.

578
00:53:04,770 --> 00:53:07,410
Intelligent risk assessment model.

579
00:53:07,530 --> 00:53:10,500
Use that AI to access
the failure properties.

580
00:53:10,560 --> 00:53:13,050
Again, failure probability, it'll come.

581
00:53:13,050 --> 00:53:16,410
Considering this one, the what
data you've been fitted concerning

582
00:53:16,410 --> 00:53:18,810
that complex business process.

583
00:53:18,900 --> 00:53:22,260
Like each, as I mentioned this
one, each application, each

584
00:53:22,260 --> 00:53:24,570
business process critical.

585
00:53:25,020 --> 00:53:29,910
And how you customize by predicting
failure analysis enable the oration,

586
00:53:30,240 --> 00:53:34,410
forcing the failures modules by analyzing
the code changes, integration patterns.

587
00:53:35,160 --> 00:53:39,180
So very important how you are feeding
this one, uh, predictive analytics.

588
00:53:39,390 --> 00:53:41,235
Based on that system start reacting.

589
00:53:42,465 --> 00:53:47,520
Dynamic test A are just the testing
focus in the real time based on

590
00:53:47,520 --> 00:53:49,230
the risk and business needs too.

591
00:53:49,680 --> 00:53:53,250
Ensuring this one, you have
this one given this one, right?

592
00:53:53,790 --> 00:54:00,030
Uh, impact areas and also the mission
learning, especially the corrections

593
00:54:00,030 --> 00:54:02,640
we are naming, enabling the practice.

594
00:54:03,945 --> 00:54:04,785
Interventions.

595
00:54:04,905 --> 00:54:09,255
This will truly chain your,
truly will enhance your ai.

596
00:54:09,285 --> 00:54:10,905
How you are building on this?

597
00:54:11,685 --> 00:54:16,125
So as I told you this one, the
based on your, the predictive

598
00:54:16,935 --> 00:54:21,915
data, which is how you feed in,
uh, how you feed your, uh, system.

599
00:54:22,155 --> 00:54:26,385
Based on that, the algorithm we need
to build based on that, it will be

600
00:54:26,385 --> 00:54:31,935
paid off by cutting the defect much
earlier in the production system before,

601
00:54:31,935 --> 00:54:33,825
uh, going to the production system,

602
00:54:36,705 --> 00:54:41,625
automate the test generation
and smart selection.

603
00:54:41,685 --> 00:54:43,995
Let's talk about the automation here.

604
00:54:46,995 --> 00:54:52,695
A driven test case creates the creation,
uses the machine learning, analyze

605
00:54:52,695 --> 00:54:57,855
this one, system specs, user behavior,
generating the comprehensive test

606
00:54:57,855 --> 00:55:00,580
cases or standard and edge scenarios.

607
00:55:02,880 --> 00:55:07,380
So NLP translates the requirement
to ex executable, at least

608
00:55:07,380 --> 00:55:09,270
for 30 to 40 percentage.

609
00:55:09,840 --> 00:55:16,080
We need to review and we need to
adjust this one, our rules and we

610
00:55:16,080 --> 00:55:21,360
need to review whatever the, uh, test
intelligent tested, are generated.

611
00:55:23,255 --> 00:55:29,250
Put this one the test conditions and
feed our, um, automated, uh, NLP.

612
00:55:29,340 --> 00:55:34,440
And based on that, whatever the
data you are getting, um, make sure

613
00:55:34,440 --> 00:55:38,190
this one that is being maintained
in very sensitive informa.

614
00:55:38,340 --> 00:55:44,790
I mean since to be, um, the ensuring
this one, the integrated works

615
00:55:44,790 --> 00:55:49,920
well, the adapt to test, uh, suite
optimization, continuously defined

616
00:55:49,920 --> 00:55:54,720
suite by identifying the redundant test
cases, coverage gaps, and generating

617
00:55:54,720 --> 00:55:56,550
the additional test cases as we need.

618
00:55:57,509 --> 00:56:00,390
And, uh, this, again, this
is very continuous program.

619
00:56:00,390 --> 00:56:02,040
The system is key on changes.

620
00:56:02,040 --> 00:56:06,240
The new rules will come, some of them
business process will going to be updated.

621
00:56:06,540 --> 00:56:10,680
So this is a continuous implement
activity where you have to make this

622
00:56:10,680 --> 00:56:14,730
one automate test case generation
and smart selection simultaneously.

623
00:56:14,730 --> 00:56:18,509
You're going to bring this money,
your regulation, library, new cases.

624
00:56:18,509 --> 00:56:19,230
At the same time.

625
00:56:19,230 --> 00:56:24,270
You have to make sure this one, some
of the uh, uh, the test cases, which

626
00:56:24,270 --> 00:56:30,509
is not, uh, not u currently not in the
business process and then not, not useful

627
00:56:30,509 --> 00:56:32,190
for, to identify the defect on that.

628
00:56:32,400 --> 00:56:33,870
So you have to enhance this one.

629
00:56:34,140 --> 00:56:36,509
Then only your AA will shine on this

630
00:56:38,609 --> 00:56:44,634
self, self-healing systems track
to monitoring on this here, here

631
00:56:44,725 --> 00:56:50,700
where, uh, where it's exactly, um,
I mean, uh, here where I'm exceeded

632
00:56:50,700 --> 00:56:52,650
here, there's self-healing systems.

633
00:56:54,045 --> 00:56:58,725
So autonomously, uh, issue resolution
uses the machine learning to

634
00:56:58,725 --> 00:57:03,555
identify the issue, and we are
preventing the corrections, uh, uh,

635
00:57:03,585 --> 00:57:08,715
by using a AA vision, detecting the
deviation with that signal problem.

636
00:57:09,404 --> 00:57:12,765
The continuous validation and
monitoring prevents the ongoing health.

637
00:57:13,634 --> 00:57:15,165
Catching this one, the issues.

638
00:57:15,495 --> 00:57:18,495
So when, and this is usually
used to come across this one ey.

639
00:57:19,395 --> 00:57:22,545
Like whenever this one, the position
of this one, the fearless lens has

640
00:57:22,545 --> 00:57:26,745
been changed, our self feeling system
with a vision, it'll go and it'll

641
00:57:26,745 --> 00:57:28,545
be to the corrective adjustments.

642
00:57:28,695 --> 00:57:32,654
And so that, um, without your
communicating the system, system

643
00:57:32,654 --> 00:57:34,424
will, we have driven the rules.

644
00:57:34,665 --> 00:57:39,795
And based on that, uh, it'll be, it'll
go and correct this one and wait for our

645
00:57:39,795 --> 00:57:42,165
confirmation once we confirm on this one.

646
00:57:42,615 --> 00:57:45,705
And it'll be implemented in
this one irrigation library.

647
00:57:45,735 --> 00:57:48,765
So we made the checklist
before implementing.

648
00:57:48,765 --> 00:57:50,505
The one of our review will come on.

649
00:57:50,505 --> 00:57:55,185
This one, and I'll confirm on this, is
again, feedback loop integration enabled

650
00:57:55,185 --> 00:57:58,995
continuous learning, analyzing the test
effectiveness, instant prevent success.

651
00:57:59,235 --> 00:58:03,585
This is how we are preventing even the
instance in the fu um, production system.

652
00:58:03,825 --> 00:58:07,875
This is applicable for both
SPO as well as, uh, uh.

653
00:58:08,610 --> 00:58:12,810
Salesforce integration
with the CSCD pipeline.

654
00:58:13,650 --> 00:58:18,750
Um, as we discussed earlier, the seamless
pipeline integration leverage the existing

655
00:58:19,230 --> 00:58:25,200
architecture tool, standardizing a PA
flexible across the architecture, the

656
00:58:25,205 --> 00:58:29,700
real time the quality gates makes the
intelligent deployment decision based on

657
00:58:29,700 --> 00:58:31,799
the test results and the risk assessment.

658
00:58:32,880 --> 00:58:35,279
Uh, mainly we are covering
the business criticality.

659
00:58:35,970 --> 00:58:40,290
The automated rollback decision
monitors the post deployment metrics

660
00:58:41,250 --> 00:58:46,950
and triggering the rollbacks and the
instant, the safe way decision aggregate.

661
00:58:47,009 --> 00:58:50,700
Um, I mean the safe net supports
the aggressive deployment while

662
00:58:50,700 --> 00:58:55,140
maintain the reliability on this, this
main thing is this one seamlessly.

663
00:58:55,200 --> 00:58:59,400
How you're integrating on that, how
you maintain the real time quality

664
00:58:59,400 --> 00:59:03,660
gate and, uh, automate the roll
practition making on anything, uh, that

665
00:59:03,660 --> 00:59:05,700
safely we can maintain the deploys.

666
00:59:08,580 --> 00:59:16,350
Measuring success and, uh, me, uh, metrics
and ROI, how do we know it is working?

667
00:59:16,980 --> 00:59:23,730
Measuring success involves the quantity to
metrics improve the test coverage early,

668
00:59:23,730 --> 00:59:30,540
um, defect, uh, detections, reducing
the testing time and cycles, fewer

669
00:59:30,540 --> 00:59:33,270
deployment issues and co cost savings.

670
00:59:34,890 --> 00:59:39,900
Quant, uh, quality to and quantitative
we see enhance, uh, developer experience

671
00:59:39,990 --> 00:59:46,500
better per quality, increase team
confidence, improve the risk management.

672
00:59:46,980 --> 00:59:52,529
Long-term value includes the
faster innovations market,

673
00:59:52,529 --> 00:59:57,299
competitive customer satisfaction,
and up to new, new technologies.

674
00:59:57,540 --> 01:00:01,770
This metrics proved the return
on investment of a power testing.

675
01:00:04,830 --> 01:00:05,399
Here we go.

676
01:00:05,430 --> 01:00:07,649
The future of enterprise testing.

677
01:00:08,730 --> 01:00:14,730
Looking ahead, AI testing is shifting
us from reactor to predictive approach.

678
01:00:16,049 --> 01:00:21,600
Advanced mission learning like deep
learning, will detect the substant

679
01:00:21,629 --> 01:00:27,240
failure patterns while cloud navigate the
testing with a scale and microservices

680
01:00:29,069 --> 01:00:31,620
emerging integrations patterns.

681
01:00:32,939 --> 01:00:41,819
API first design, event driven
architecture and low code platforms

682
01:00:41,910 --> 01:00:46,049
will bring the new challenges and
opportunities Organization adapts.

683
01:00:46,049 --> 01:00:51,330
This capabilities will gain the
competitive advantage in the

684
01:00:52,470 --> 01:00:54,029
reliability and deliverable.

685
01:00:54,060 --> 01:00:55,379
The future is bright.

686
01:00:59,549 --> 01:01:00,270
I would like to.

687
01:01:02,655 --> 01:01:04,425
Tell you this brings us Anna end.

688
01:01:04,785 --> 01:01:06,345
Thank you so much for your attention.

689
01:01:06,615 --> 01:01:14,715
I hope you gain valuable insights,
how AA can prevent the instance in S

690
01:01:14,715 --> 01:01:19,275
four SAP Anna, Salesforce environment.

691
01:01:20,385 --> 01:01:24,735
I'm happy to take the questions, but
as this is online, I'm stopping here.

692
01:01:25,365 --> 01:01:26,205
Thank you everyone.

