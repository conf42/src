1
00:00:00,090 --> 00:00:00,740
Hello, everyone.

2
00:00:01,460 --> 00:00:02,300
My name is Prashant.

3
00:00:02,850 --> 00:00:06,840
And I've been working for more than
a decade as a logic design engineer.

4
00:00:07,550 --> 00:00:11,170
It's an honor to be here today
to talk about a topic that is

5
00:00:11,170 --> 00:00:15,079
becoming increasingly important
in our connected world.

6
00:00:15,579 --> 00:00:19,399
The intersection of hardware
security and artificial intelligence.

7
00:00:20,269 --> 00:00:24,079
I would like to guide you through
some of the core ideas behind dual

8
00:00:24,099 --> 00:00:26,339
state hardware security models.

9
00:00:26,944 --> 00:00:31,434
Why they are critical in the rapidly
evolving AI era and how these

10
00:00:31,434 --> 00:00:35,954
models can help protect sensitive
data and critical systems from

11
00:00:35,954 --> 00:00:38,724
the multitude of emerging threats.

12
00:00:39,614 --> 00:00:44,554
We are at a crossroads where AI's
power to transform industries and

13
00:00:44,574 --> 00:00:47,454
everyday life intersects with the some.

14
00:00:47,954 --> 00:00:52,104
Sometimes overlooked vulnerabilities
and hardware can introduce.

15
00:00:52,824 --> 00:00:53,554
Let's dive in.

16
00:00:54,054 --> 00:00:58,944
The first point I would like to
emphasize is that AI isn't just

17
00:00:59,024 --> 00:01:00,944
another software application.

18
00:01:01,474 --> 00:01:05,354
AI is fundamentally different
from traditional systems because

19
00:01:05,384 --> 00:01:09,914
it involves high speed data
processing, specialized hardware

20
00:01:09,974 --> 00:01:12,834
accelerators, and complex algorithms.

21
00:01:13,384 --> 00:01:18,274
These advanced components open up
new possibilities for innovation.

22
00:01:18,774 --> 00:01:23,384
But they also increase the attack
surface for malicious actors.

23
00:01:23,914 --> 00:01:27,994
When we scale up our capacity to
process data, we are also scaling up

24
00:01:28,004 --> 00:01:30,344
potential entry points for attacks.

25
00:01:31,154 --> 00:01:35,704
Hardware level exploits are no
longer the realm of science fiction.

26
00:01:36,604 --> 00:01:40,634
They are real, tangible threats
that can undermine even the

27
00:01:40,634 --> 00:01:43,324
most sophisticated AI solutions.

28
00:01:43,824 --> 00:01:48,594
We often focus on the software
vulnerabilities in AI pipelines,

29
00:01:49,234 --> 00:01:55,704
misconfigurations of libraries,
inadequate encryption, or insecure APIs.

30
00:01:56,164 --> 00:02:02,114
But hardware vulnerabilities can be much
more, much harder to detect and remedy.

31
00:02:02,614 --> 00:02:07,454
Once compromised, a piece of hardware can
be extremely difficult to fully repair

32
00:02:07,494 --> 00:02:12,654
because it forms the foundation on which
all software security measures rest.

33
00:02:13,384 --> 00:02:18,314
If your hardware is compromised,
every layer above it, your operating

34
00:02:18,314 --> 00:02:22,824
system, your applications, and even
your AI models could be at risk.

35
00:02:23,474 --> 00:02:27,129
In other words, hardware is the bedrock.

36
00:02:27,389 --> 00:02:32,989
That's why strong hardware security
protocols are absolutely non negotiable

37
00:02:33,119 --> 00:02:35,879
in this new era of AI driven innovation.

38
00:02:36,379 --> 00:02:41,289
To illustrate, Consider high profile
vulnerabilities like Spectre and Meltdown.

39
00:02:41,849 --> 00:02:45,829
These exploits took advantage
of speculative execution

40
00:02:45,839 --> 00:02:48,289
features in modern processors.

41
00:02:49,189 --> 00:02:52,689
Something previously thought
to be a purely performance

42
00:02:52,689 --> 00:02:54,749
focused aspect of CPU design.

43
00:02:55,629 --> 00:03:03,129
They showed that even innovations meant to
speed up computation can become an avenue

44
00:03:03,139 --> 00:03:06,109
for data leaks if not carefully secured.

45
00:03:06,829 --> 00:03:11,919
As AI continue to demand greater
performance from processors and

46
00:03:11,929 --> 00:03:19,279
GPUs, we must stay vigilant about how
performance enhancing features might

47
00:03:19,349 --> 00:03:22,449
inadvertently introduce security gaps.

48
00:03:22,685 --> 00:03:23,044
Address space

49
00:03:23,544 --> 00:03:27,044
partitioning, a foundation of trust.

50
00:03:27,394 --> 00:03:31,984
One of the most fundamental aspects
of secure hardware platform is robust

51
00:03:31,984 --> 00:03:33,874
hard address space partitioning.

52
00:03:34,474 --> 00:03:38,114
When we talk about address space
partitioning, we are referring to

53
00:03:38,114 --> 00:03:42,834
the division of memory into distinct
regions, secure versus non secure.

54
00:03:43,334 --> 00:03:48,444
This concept ensures that cryptographic
operations, sensitive key storage,

55
00:03:48,734 --> 00:03:53,974
and mission critical codes execute
exclusively in protected memory zones.

56
00:03:54,604 --> 00:03:59,944
While user level applications and
other non critical processes run in

57
00:03:59,944 --> 00:04:02,974
separate, lower privileged areas.

58
00:04:03,474 --> 00:04:04,554
Why does that matter?

59
00:04:05,554 --> 00:04:09,144
Okay, imagine you have
two rooms in a building.

60
00:04:09,464 --> 00:04:12,834
One is a vault and the other
is a regular office space.

61
00:04:13,434 --> 00:04:18,054
You want to ensure that only authorized
personnel can enter the vault.

62
00:04:18,724 --> 00:04:22,344
If you design the building so
that the vault can be reached.

63
00:04:22,514 --> 00:04:28,084
only through multiple locked doors,
each requiring a unique key or code.

64
00:04:28,584 --> 00:04:31,864
You are effectively creating
a layered security model.

65
00:04:32,504 --> 00:04:38,674
In hardware design, specialized components
like memory management units or security

66
00:04:38,674 --> 00:04:40,714
controllers serve as these locked doors.

67
00:04:41,554 --> 00:04:45,274
They ensure strict separation
between what's trusted and what's

68
00:04:45,274 --> 00:04:50,164
not, blocking unauthorized access
attempts as the silicon level.

69
00:04:50,664 --> 00:04:55,624
Not only does this approach prevent
direct data theft, it also mitigates

70
00:04:55,674 --> 00:05:00,514
the spread of malicious code or
ransomware by containing threats.

71
00:05:01,014 --> 00:05:06,214
If malicious software compromises one area
of the system, address based partitioning

72
00:05:06,214 --> 00:05:10,244
can stop that threat from splitting
into the rest of the environment.

73
00:05:11,124 --> 00:05:16,794
In the context of AI, where large
datasets and complex models are often

74
00:05:16,794 --> 00:05:22,424
in use, this segregation is crucial for
safeguarding both the data itself and the

75
00:05:22,424 --> 00:05:28,384
proprietary algorithm that organizations
rely on their competitive edge.

76
00:05:28,884 --> 00:05:33,634
Secure boot, establishing a trusted,
Next, let's talk about secure boot.

77
00:05:34,394 --> 00:05:39,544
Secure boot ensures that every component
in the boot chain from the moment

78
00:05:39,744 --> 00:05:44,694
you power on your device to the point
at which the operating system loads

79
00:05:45,054 --> 00:05:47,314
has been cryptographically verified.

80
00:05:48,134 --> 00:05:52,684
This process typically involves
digital signature cryptographic

81
00:05:52,724 --> 00:05:56,014
hashing and Authenticated code checks.

82
00:05:56,514 --> 00:05:58,844
Why is this so essential?

83
00:05:59,384 --> 00:06:03,944
Because once the system boots, software
based security measures take over.

84
00:06:04,444 --> 00:06:08,394
If the foundation is already
compromised, the entire security

85
00:06:08,394 --> 00:06:10,894
structure is built on shaky ground.

86
00:06:11,804 --> 00:06:15,344
In practice, secure boot
might work like this.

87
00:06:15,344 --> 00:06:15,859
Upon.

88
00:06:16,039 --> 00:06:16,559
power up.

89
00:06:17,069 --> 00:06:22,139
A small piece of firmware anchored into
hardware checks the digital signature

90
00:06:22,219 --> 00:06:24,559
of the next stage of the bootloader.

91
00:06:25,219 --> 00:06:30,019
Only if that signature is valid
does it allow the bootloader to run.

92
00:06:30,829 --> 00:06:35,709
The bootloader in turn verifies the
OS kernel or other critical system

93
00:06:36,209 --> 00:06:38,119
components using the same principle.

94
00:06:38,619 --> 00:06:40,509
It's a cascading chain of trust.

95
00:06:40,999 --> 00:06:45,429
If one link is broken, everything
that follows is flagged or

96
00:06:45,469 --> 00:06:46,849
prevented from executing.

97
00:06:47,589 --> 00:06:53,839
This mechanism is incredibly effective
at blocking rootkits and other low

98
00:06:53,839 --> 00:06:58,879
level attacks that Attempt to hide
from security tools by loading

99
00:06:58,889 --> 00:07:01,049
before the OS is fully operational.

100
00:07:01,549 --> 00:07:07,009
In AI systems, ensuring that every
layer is authenticated before it runs

101
00:07:07,369 --> 00:07:14,579
is doubly important because tampering
at the boot stage might enable an

102
00:07:14,629 --> 00:07:17,549
attacker to manipulate AI processes.

103
00:07:18,049 --> 00:07:22,759
undetected or even compromise
the data your AI models rely on.

104
00:07:23,259 --> 00:07:26,769
Even with a secure boot
process, the job isn't done.

105
00:07:27,319 --> 00:07:31,549
Systems need continuous
runtime integrity checks.

106
00:07:32,549 --> 00:07:38,799
Throughout a device's operation, advanced
algorithms monitor from, for anomalies

107
00:07:38,899 --> 00:07:42,219
in memory access, execution flaws.

108
00:07:42,394 --> 00:07:43,774
and stack behaviors.

109
00:07:44,734 --> 00:07:48,934
If something deviates from the
established baseline, the system can

110
00:07:48,944 --> 00:07:54,544
take immediate action, whether that's
alerting an administrator, blocking

111
00:07:54,774 --> 00:07:59,164
certain processes, or even shutting
down to prevent a larger breach.

112
00:07:59,664 --> 00:08:03,054
One of the execute exciting
development here is the use of

113
00:08:03,074 --> 00:08:05,414
machine learning in anomaly detection.

114
00:08:06,264 --> 00:08:12,134
Instead of relying on static rule
sets that might not catch new type of

115
00:08:12,134 --> 00:08:18,574
attacks, AI based monitoring solutions
can learn from historical data about

116
00:08:18,584 --> 00:08:21,534
what constitutes normal system behavior.

117
00:08:22,034 --> 00:08:27,164
Then they quickly flag events
that deviate from that baseline.

118
00:08:27,664 --> 00:08:31,744
Picture a constant real time
audit of everything happening

119
00:08:31,744 --> 00:08:32,814
at the hardware level.

120
00:08:33,584 --> 00:08:38,114
When an irregularity shows up, like
a process attempting to read or

121
00:08:38,114 --> 00:08:41,134
write to a secure region of memory.

122
00:08:42,094 --> 00:08:47,184
that triggers a deeper analysis
or a direct counter measure.

123
00:08:47,684 --> 00:08:51,804
This continuous vigilance approach
is particularly important for

124
00:08:51,874 --> 00:08:57,414
AI workloads that run 24 7,
handle large quantities of data.

125
00:08:57,784 --> 00:09:00,074
and require stable system performance.

126
00:09:00,574 --> 00:09:03,964
Building on the concept of address
space partitioning, address

127
00:09:03,964 --> 00:09:08,284
level boundary markers provide an
extra layer of separation between

128
00:09:08,284 --> 00:09:10,334
secure and non secure processes.

129
00:09:10,954 --> 00:09:14,174
You might have heard of ARM
Trust Zone or Intel's SGX.

130
00:09:14,674 --> 00:09:18,554
These are specialized technologies
that create physically or logically

131
00:09:18,594 --> 00:09:21,014
isolated enclaves on the chip.

132
00:09:21,294 --> 00:09:25,524
itself by running critical
security operations in a

133
00:09:26,184 --> 00:09:28,764
separate hardware isolated zone.

134
00:09:29,464 --> 00:09:33,184
The system maintains a high
level protection even if the main

135
00:09:33,224 --> 00:09:35,894
operating environment is compromised.

136
00:09:36,394 --> 00:09:41,994
These boundary markers enforce what's
known as the principle of least privilege.

137
00:09:42,334 --> 00:09:47,464
Only the processes that genuinely need
access to critical data or operations

138
00:09:47,794 --> 00:09:53,734
can gain entry and even then only
through rigorously controlled interface.

139
00:09:54,404 --> 00:10:01,514
If attackers try to escalate privileges
or perform side channel attacks,

140
00:10:02,134 --> 00:10:06,624
these enclaves and security monitors
serve as an additional barrier.

141
00:10:07,124 --> 00:10:12,974
Raising the cost and complexity
for any malicious actor with AI.

142
00:10:13,344 --> 00:10:19,074
These enclaves can securely store and
process private data, such as encryption

143
00:10:19,564 --> 00:10:25,254
keys or unique model parameters,
ensuring that sensitive assets remain

144
00:10:25,264 --> 00:10:27,624
protected at the hardware level.

145
00:10:28,124 --> 00:10:32,514
We have already touched briefly on how
machine learning can bolster security,

146
00:10:32,804 --> 00:10:35,124
but let's explore that a bit more deeply.

147
00:10:35,854 --> 00:10:41,084
AI driven anomaly detection has become
a powerful tool in security operations.

148
00:10:41,624 --> 00:10:45,654
It's particularly relevant in
hardware security for a few reasons.

149
00:10:46,184 --> 00:10:50,714
First, hardware level events can
generate a tremendous amount of

150
00:10:50,854 --> 00:10:53,474
telemetry, performance counters.

151
00:10:53,804 --> 00:10:58,384
memory accesses logs, cache
uses patterns, and more.

152
00:10:59,214 --> 00:11:03,274
These data points can be analyzed
by machine learning models to spot

153
00:11:03,584 --> 00:11:08,294
subtle patterns that might elude
traditional signature based approaches.

154
00:11:08,794 --> 00:11:14,514
Second, because AI systems often have
predictable workflows like training,

155
00:11:14,604 --> 00:11:17,374
inference, or data Pre processing.

156
00:11:18,014 --> 00:11:22,344
An AI driven security module can
develop a clear sense of normal

157
00:11:22,354 --> 00:11:24,984
behavior for each workload type.

158
00:11:25,884 --> 00:11:31,624
The moment something useful, unusual
happens, such as privilege change,

159
00:11:32,104 --> 00:11:36,994
privilege level change, without
authorization or an abnormal frequency

160
00:11:37,044 --> 00:11:41,694
of memory reads in a secure region,
the anomaly detection system can

161
00:11:41,704 --> 00:11:43,704
flag it for further investigation.

162
00:11:44,204 --> 00:11:48,324
This level of precision can stop
attacks before they escalate.

163
00:11:48,824 --> 00:11:55,194
Finally, AI's ability to evolve alongside
new and emerging threats makes it ideal

164
00:11:55,204 --> 00:11:58,334
for hardware security environments.

165
00:11:59,234 --> 00:12:02,604
Attackers continually adapt their tactics.

166
00:12:02,704 --> 00:12:05,264
Static rules can become obsolete.

167
00:12:05,764 --> 00:12:10,834
With an AI based monitoring solution
that learns from new data in real time.

168
00:12:11,219 --> 00:12:13,529
System can adapt at the same pace.

169
00:12:14,179 --> 00:12:20,229
This arms race of AI versus AI might
be inevitable, but a sophisticated

170
00:12:20,239 --> 00:12:25,919
hardware level defense provides
defenders a robust starting advantage

171
00:12:26,419 --> 00:12:28,849
in addition to real time monitoring.

172
00:12:29,069 --> 00:12:32,059
Periodic validation routines are crucial.

173
00:12:32,519 --> 00:12:37,709
Self tests at regular intervals verify
that memory boundaries remain intact.

174
00:12:38,379 --> 00:12:43,239
Cryptographic keys haven't been
tampered with, and no unauthorized

175
00:12:43,459 --> 00:12:45,349
or corrupted code is running.

176
00:12:45,849 --> 00:12:50,269
These validations act like a system
wide refresh, reaffirming the

177
00:12:50,299 --> 00:12:55,779
hardware's trustworthiness even
if the system has been operating

178
00:12:55,779 --> 00:12:58,109
continuously for days or weeks.

179
00:12:58,609 --> 00:13:03,819
For AI driven systems that might be
training on new data sets performing

180
00:13:04,209 --> 00:13:08,729
batch inferences, these checks
ensure that the environment hasn't

181
00:13:08,729 --> 00:13:11,019
been quietly subverted over time.

182
00:13:11,789 --> 00:13:17,999
By regularly recalculating cryptographic
hashes or verifying digital signatures,

183
00:13:18,499 --> 00:13:23,559
we reinforce the chain of trust
initially established by Secure Boot.

184
00:13:24,249 --> 00:13:29,364
This layered approach Secure
At startup, continuous runtime

185
00:13:29,384 --> 00:13:34,664
checks and periodic validations
goes a long way toward creating a

186
00:13:34,744 --> 00:13:36,984
resilient hardware security posture.

187
00:13:37,484 --> 00:13:41,684
If we step back and look at these
individual components, address

188
00:13:41,684 --> 00:13:47,334
space partitioning, and secure boot
runtime checks, boundary markers,

189
00:13:47,434 --> 00:13:51,989
anomaly detection, And periodic
validations, they come together to

190
00:13:51,989 --> 00:13:54,429
form what we call a dual state models.

191
00:13:54,929 --> 00:13:59,749
Essentially, there are two separate
states in which processes can

192
00:13:59,749 --> 00:14:01,949
operate secure and non secure.

193
00:14:02,509 --> 00:14:05,169
This dual state design
is particularly valuable.

194
00:14:05,464 --> 00:14:08,244
in the AI era for three main reasons.

195
00:14:08,744 --> 00:14:10,454
Intellectual property protection.

196
00:14:11,234 --> 00:14:15,264
AI models and algorithms can
be extremely valuable assets.

197
00:14:15,734 --> 00:14:20,144
A dual state model isolates
the proprietary model or

198
00:14:20,144 --> 00:14:21,774
data in a secure zone.

199
00:14:22,494 --> 00:14:26,574
Making it much harder for attackers
to steal or reverse engineer.

200
00:14:27,544 --> 00:14:28,644
Data security.

201
00:14:29,064 --> 00:14:34,924
By encrypting or segregating sensitive
data in the secure zone, organizations

202
00:14:34,964 --> 00:14:41,504
can better comply with regulations like
GDPR, HIPAA, or others, and maintain user

203
00:14:41,504 --> 00:14:44,304
trust by preventing unauthorized accesses.

204
00:14:44,804 --> 00:14:46,114
Resilient operations.

205
00:14:46,514 --> 00:14:51,194
Even if the part of the non secure
state becomes compromised, the secure

206
00:14:51,204 --> 00:14:57,144
state can detect and contain the threat
that reduces downtime and isolates the

207
00:14:57,164 --> 00:15:02,384
impact of any breach, allowing critical
AI operations to continue safely.

208
00:15:02,884 --> 00:15:08,499
From protecting intellectual property,
To safeguarding personal health

209
00:15:08,499 --> 00:15:13,729
data, a dual state architecture
makes it exponentially more difficult

210
00:15:13,729 --> 00:15:16,239
for attackers to gain a foothold.

211
00:15:16,829 --> 00:15:20,509
While it's not a catch all
solution, it raises the cost and

212
00:15:20,519 --> 00:15:22,879
complexity of attacks significantly.

213
00:15:23,379 --> 00:15:28,049
Let's not forget another critical
factor, supply chain security.

214
00:15:28,699 --> 00:15:34,759
As AI hardware becomes more specialized,
organizations often source components

215
00:15:34,769 --> 00:15:37,999
from multiple suppliers around the globe.

216
00:15:38,469 --> 00:15:41,729
Each link in the supply chain
can introduce vulnerabilities.

217
00:15:42,339 --> 00:15:48,239
From counterfeit chips to tempered
firmware and a compromise at the supply

218
00:15:48,239 --> 00:15:53,959
chain level can defeat even the strongest
security measures at run time to tackle

219
00:15:53,969 --> 00:16:00,159
this issue, more organizations are
pushing for greater transparency in the

220
00:16:00,159 --> 00:16:07,109
manufacturing process techniques like
secure device identifiers temper evident

221
00:16:07,159 --> 00:16:12,549
packaging and formal attestation processes
can help verify that hardware hasn't

222
00:16:12,549 --> 00:16:18,769
been altered before it arrives in your
data center or on your production floor.

223
00:16:19,269 --> 00:16:24,629
In the context of dual state security,
if we can't trust the underlying

224
00:16:24,639 --> 00:16:29,159
hardware from the very beginning,
We compromise the entire stack.

225
00:16:30,059 --> 00:16:34,269
Therefore, supply chain security
is increasingly considered an

226
00:16:34,309 --> 00:16:39,559
essential step in creating a
truly trustworthy AI environment.

227
00:16:40,059 --> 00:16:41,509
We have covered a lot of,

228
00:16:42,009 --> 00:16:46,619
okay, we have covered a lot of ground and
I would like to close by taking a look.

229
00:16:47,119 --> 00:16:47,539
Okay.

230
00:16:47,569 --> 00:16:47,829
Yeah.

231
00:16:48,329 --> 00:16:53,039
By taking a look at the horizon,
AI systems are only becoming

232
00:16:53,039 --> 00:16:56,909
more sophisticated and deeply
embedded in our daily lives.

233
00:16:57,499 --> 00:17:02,109
As their importance grows, so does
the creativity and determination of

234
00:17:02,199 --> 00:17:04,879
adversaries looking to exploit them.

235
00:17:05,479 --> 00:17:10,649
Some areas that demand our
ongoing attention include quantum

236
00:17:10,649 --> 00:17:12,609
resilient, resistant encryption.

237
00:17:13,179 --> 00:17:17,119
As quantum computing becomes
more practical, it threatens

238
00:17:17,149 --> 00:17:19,129
traditional cryptographic techniques.

239
00:17:19,639 --> 00:17:24,629
We need to adopt encryption schemes that
can withstand these quantum attacks,

240
00:17:25,139 --> 00:17:30,829
particularly for hardware components
intended for use over a decade or more.

241
00:17:31,329 --> 00:17:34,489
Neuromorphic computing defenses.

242
00:17:34,599 --> 00:17:39,939
Neuromorphic chips mimic the neural
structures of the human brain and can

243
00:17:39,959 --> 00:17:42,629
significantly boost AI performance.

244
00:17:43,129 --> 00:17:45,899
Yet, they also introduce
new attack vectors.

245
00:17:46,399 --> 00:17:52,929
We need specialized security strategies
tailored to these emerging architectures.

246
00:17:53,429 --> 00:17:55,149
Cross industry collaboration.

247
00:17:55,779 --> 00:18:01,309
Collaboration among hardware vendors,
academic researchers, and industry

248
00:18:01,309 --> 00:18:06,889
consortia can drive the creation of
common standards, best practices,

249
00:18:06,979 --> 00:18:09,239
and open hardware from firmwares.

250
00:18:09,739 --> 00:18:14,779
Sharing threat intelligence
across organizations helps us stay

251
00:18:15,179 --> 00:18:17,289
one step ahead of adversaries.

252
00:18:17,789 --> 00:18:22,879
We should also consider the growing
trend of edge AI, where small

253
00:18:22,999 --> 00:18:28,669
devices, IoT sensors, smartphones,
and other edge computing devices

254
00:18:28,679 --> 00:18:31,049
handle critical workloads locally.

255
00:18:31,549 --> 00:18:37,879
These devices can be even more vulnerable
due to power and resource constraints.

256
00:18:38,244 --> 00:18:43,944
As AI increasingly move to the edge,
ensuring robust hardware security in those

257
00:18:43,984 --> 00:18:46,444
compact environment will be paramount.

258
00:18:46,944 --> 00:18:50,724
Okay, in summary, a layered
security approach that starts at the

259
00:18:50,734 --> 00:18:52,974
hardware is absolutely essential.

260
00:18:53,544 --> 00:18:59,354
If we want to build AI solutions that
are both innovative and trustworthy, dual

261
00:18:59,364 --> 00:19:02,724
state architecture secure both processes.

262
00:19:03,244 --> 00:19:05,934
Continuous monitoring and AI enhanced.

263
00:19:06,434 --> 00:19:09,704
Anomaly detection all play a
critical role in the puzzle.

264
00:19:10,374 --> 00:19:16,034
By implementing these measures, along with
rigorous supply chain checks and ongoing

265
00:19:16,044 --> 00:19:22,084
validation, we can protect intellectual
property, guard sensitive data, and

266
00:19:22,094 --> 00:19:27,474
ensure the resilience of systems that
increasingly control everything from

267
00:19:27,484 --> 00:19:32,654
healthcare diagnostics to autonomous
vehicles and financial trading algorithms.

268
00:19:33,154 --> 00:19:36,694
As we move forward, it will
be a collective effort.

269
00:19:37,044 --> 00:19:41,944
Security is never the responsibility
of just one department or one industry.

270
00:19:42,314 --> 00:19:46,624
It's a shared obligation of hardware
engineers, AI researchers, data

271
00:19:46,624 --> 00:19:48,594
scientists, and policymakers.

272
00:19:49,504 --> 00:19:53,684
Our objective should be to make
security a fundamental design

273
00:19:53,764 --> 00:19:56,714
requirement, not an afterthought.

274
00:19:57,324 --> 00:20:03,259
Only then we Can we confidently
harness the AI's enormous potential

275
00:20:03,899 --> 00:20:08,749
without putting at risk the very
data and processes we aim to improve?

276
00:20:09,589 --> 00:20:11,339
Thank you so much for your attention.

277
00:20:11,669 --> 00:20:16,979
I hope this talk has shed some light on
the importance of hardware security in

278
00:20:16,979 --> 00:20:23,029
the AI era and how dual state models can
help us address the challenges ahead.

279
00:20:23,719 --> 00:20:28,049
I'd be, I would be more than
happy to take any questions.

280
00:20:28,559 --> 00:20:28,929
Thank you.

