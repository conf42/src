1
00:00:00,500 --> 00:00:05,859
Hi, this is, I have a total
of 18 plus years of experience

2
00:00:05,920 --> 00:00:07,840
in information technology.

3
00:00:08,410 --> 00:00:12,129
Currently, I am working as a
principal software engineer

4
00:00:12,160 --> 00:00:14,025
in Liberty Mutual Insurance.

5
00:00:14,525 --> 00:00:20,195
Today I'm going to talk about how
ML driven Slack integration cut mean

6
00:00:20,195 --> 00:00:27,244
time to resolution by 88.5 percentage
across 17 enterprise systems.

7
00:00:27,744 --> 00:00:29,964
Now we are going to
talk about the problem.

8
00:00:30,789 --> 00:00:32,499
Enterprise applications.

9
00:00:32,619 --> 00:00:37,899
Processing millions of diary
transactions generated an overwhelming

10
00:00:37,989 --> 00:00:40,419
volume of errors and alerts.

11
00:00:40,809 --> 00:00:46,179
This led to critical issues being
buried in noise and severely

12
00:00:46,179 --> 00:00:48,039
impacting our operations.

13
00:00:48,549 --> 00:00:53,349
With manual monitoring across 17
production systems, supporting

14
00:00:53,349 --> 00:00:56,605
over two 30,000 daily active users.

15
00:00:57,164 --> 00:01:02,355
Our teams faced significant
challenges, which are mentioned below.

16
00:01:02,984 --> 00:01:06,509
Slow average detection
times of 1 62 minutes.

17
00:01:07,419 --> 00:01:15,429
A staggering 68.2 percentage of critical
issues discovered first by customers

18
00:01:15,970 --> 00:01:24,489
after H'S incidents averaging a prolonged
1 31 minutes to detection SLA compliance

19
00:01:24,489 --> 00:01:29,259
plummeting to a 62.3 percentage.

20
00:01:29,759 --> 00:01:31,914
This slide, we are
talking about the agenda.

21
00:01:32,640 --> 00:01:37,950
The challenge alert fat, you
understanding the presu issue of alert

22
00:01:37,950 --> 00:01:40,890
fat you and its enterprise wide impact.

23
00:01:41,490 --> 00:01:46,470
The ML solution architecture slide
is going to talk about designing a

24
00:01:46,650 --> 00:01:52,650
robust middleware system for efficient
and low overhead exception capture.

25
00:01:53,150 --> 00:01:59,060
The Intelligent Alert registration
le talk about leveraging EML for

26
00:01:59,120 --> 00:02:03,710
context aware routing of critical
alerts to optimal channels.

27
00:02:04,670 --> 00:02:10,699
The results and business impact slide
is going to talk about demonstrating

28
00:02:10,730 --> 00:02:15,709
quantifiable improvements in mean
time to resolution, cost savings,

29
00:02:15,769 --> 00:02:17,810
and developer productivity.

30
00:02:18,320 --> 00:02:21,680
The implementation guides
is going to talk about.

31
00:02:22,300 --> 00:02:27,670
Practical ML OPS patterns for
deploying your own intelligent

32
00:02:27,700 --> 00:02:29,320
error monitoring system.

33
00:02:29,820 --> 00:02:35,179
The challenge alert, fat fatigue,
you the hidden cost of scale.

34
00:02:35,779 --> 00:02:41,480
Our 17 enterprise systems, were
generating two 30 K plus daily active

35
00:02:41,480 --> 00:02:44,974
users, 3.7 million daily transactions.

36
00:02:45,959 --> 00:02:52,199
12 k plus Diary error events,
eight 60 plus diary alerts.

37
00:02:52,799 --> 00:02:57,119
On the right hand side, we have
represented the operational impact.

38
00:02:57,659 --> 00:03:00,989
The meantime to resolution
is represented in minutes.

39
00:03:01,169 --> 00:03:04,439
The customer reported
issues are represented.

40
00:03:04,979 --> 00:03:09,059
The SLA compliance percentage is
represented on the right hand side.

41
00:03:09,584 --> 00:03:11,084
Alert to action ratio.

42
00:03:11,744 --> 00:03:17,684
This alert overload meant engineers
spent 23 percentage of their

43
00:03:17,684 --> 00:03:23,504
time triaging alerts, diverting
crucial effort from building new

44
00:03:23,504 --> 00:03:26,714
futures and resolving core issues.

45
00:03:27,214 --> 00:03:30,754
Next, we are going to talk about
the ML solution architecture.

46
00:03:31,254 --> 00:03:36,084
Middleware system capturing
exceptions with minimal overhead.

47
00:03:36,864 --> 00:03:43,314
The key technical specifications,
99.7 percentage of exception capture

48
00:03:43,314 --> 00:03:45,864
rate across all systems only.

49
00:03:46,699 --> 00:03:50,539
3.2 milliseconds overhead per transaction.

50
00:03:51,049 --> 00:03:54,709
Distributed tracing for
context preservation.

51
00:03:54,919 --> 00:04:01,789
Event driven architecture with Kafka
backbone, containerized ML interference

52
00:04:01,849 --> 00:04:04,879
endpoint, the ML classification models.

53
00:04:05,454 --> 00:04:11,064
93.8 percentage of accuracy
in prioritizing errors by

54
00:04:11,124 --> 00:04:14,184
business impact NEM approach.

55
00:04:14,184 --> 00:04:20,154
Combining random forest for categorical
futures, LSTM first stack trace

56
00:04:20,154 --> 00:04:26,814
analysis, gradient boosting for time
series patterns, continuous retraining

57
00:04:26,845 --> 00:04:28,944
pipeline with human feedback.

58
00:04:29,444 --> 00:04:33,884
The ML model Futures, what
makes an alert critical?

59
00:04:34,634 --> 00:04:37,214
We have divided into four categories.

60
00:04:37,304 --> 00:04:42,644
The exception characteristics is the
first category, the stack trace pattern

61
00:04:42,799 --> 00:04:45,284
matching exception type classification.

62
00:04:45,974 --> 00:04:49,634
Mrs. Semantic analysis
code path frequency.

63
00:04:49,994 --> 00:04:54,644
The next category is business
context based on affected user

64
00:04:54,644 --> 00:04:59,534
count estimation, transaction
financial value, business process

65
00:04:59,534 --> 00:05:02,594
criticality, data integrity impact.

66
00:05:03,434 --> 00:05:07,304
The temporal patterns is the
third category based on the

67
00:05:07,304 --> 00:05:08,919
time of delayed correlation.

68
00:05:09,779 --> 00:05:11,489
Error frequency trends.

69
00:05:11,759 --> 00:05:13,289
Business hour waiting.

70
00:05:13,739 --> 00:05:18,449
Seasonal pattern matching based
on the historical response.

71
00:05:18,959 --> 00:05:21,419
Prior resolution times SLA.

72
00:05:21,419 --> 00:05:25,019
Breach prediction,
historical escalation rate.

73
00:05:25,439 --> 00:05:27,449
Developer response patterns.

74
00:05:28,169 --> 00:05:32,584
Models are trained using 18 months
of historical incident data.

75
00:05:33,329 --> 00:05:40,349
Encompassing 12,387 resolved
incidents with complete

76
00:05:40,349 --> 00:05:43,139
resolution, workflows and outcomes.

77
00:05:43,639 --> 00:05:47,809
This slide is going to talk about
intelligent alert registration,

78
00:05:48,709 --> 00:05:53,644
the adapter, routing, getting
right alert to the right person.

79
00:05:54,614 --> 00:05:56,684
Contextual evaluation is.

80
00:05:57,184 --> 00:06:04,269
It means each alert is evaluated across
14 parameters, including severity, system

81
00:06:04,299 --> 00:06:07,779
impact, time of day, and team workload.

82
00:06:08,349 --> 00:06:13,449
The ML decision engine leverages ML
to determine the optimal notification

83
00:06:13,449 --> 00:06:18,164
channel and urgency level based
on predicted business impact.

84
00:06:18,879 --> 00:06:23,919
The channel selection routes alerts
to the most appropriate channel Slack,

85
00:06:23,919 --> 00:06:30,699
direct messages, Microsoft teams, or
email based on context and urgency.

86
00:06:31,199 --> 00:06:37,529
The alert delivery formats alerts with
actionable information and includes

87
00:06:37,589 --> 00:06:40,769
severity, appropriate urgency signals.

88
00:06:41,639 --> 00:06:47,339
The intelligent rate limiting our
ML powered rate limiting algorithms

89
00:06:47,399 --> 00:06:54,634
effectively prevented alert storms
during major incidents achieving 68.2

90
00:06:54,634 --> 00:06:57,034
percentage of reduction in overall alert.

91
00:06:57,974 --> 00:07:05,024
Volume during incidents 99.8,
percentage detection rate of unique

92
00:07:05,084 --> 00:07:11,684
issues maintained automated clustering
of related errors, predictive

93
00:07:11,684 --> 00:07:14,324
suppression of cascading failures.

94
00:07:14,824 --> 00:07:18,299
Now we are going to talk about
the results and business impact.

95
00:07:18,799 --> 00:07:21,979
The transfer to results
across the enterprise.

96
00:07:22,039 --> 00:07:26,689
On the left hand side, we have represented
the key performance improvements.

97
00:07:27,529 --> 00:07:34,699
On the right hand side, we are going to
show that tangible business impact, 88.5%

98
00:07:34,699 --> 00:07:38,089
of mean time to resolution reduction.

99
00:07:38,884 --> 00:07:46,744
$2.3 million of annual savings, 23.5
percentage of developer productivity,

100
00:07:47,644 --> 00:07:51,754
73.4 percentage of alert volume reduction.

101
00:07:52,324 --> 00:07:59,644
The meantime to resolution is decreased
from 1 62 to just 18.6 minutes.

102
00:08:00,144 --> 00:08:06,084
We are able to get $2.3 million of
annual savings is achieved through.

103
00:08:07,015 --> 00:08:11,064
Reduced downtime and enhanced
operational efficiency.

104
00:08:11,564 --> 00:08:17,505
23.5 percentage of developer
productivity is boosted by significantly

105
00:08:17,594 --> 00:08:20,564
reducing time spent on alert triage.

106
00:08:21,164 --> 00:08:27,104
73.4 Percentage of alert volume
reduction resulting from intelligent

107
00:08:27,135 --> 00:08:28,889
clustering related issues.

108
00:08:29,389 --> 00:08:33,829
Now we are going to talk about the key
takeaways and implementation guide.

109
00:08:34,159 --> 00:08:38,929
On the left hand side, we have
represented the ML ops best practices.

110
00:08:39,079 --> 00:08:39,559
Start small.

111
00:08:40,059 --> 00:08:41,289
Scale gradually.

112
00:08:41,859 --> 00:08:46,299
Begin with one high volume
system and expand as models.

113
00:08:46,629 --> 00:08:49,959
Mature human in the loop feedback.

114
00:08:50,529 --> 00:08:56,709
Create explicit feedback mechanisms for
continuous model improvement and accuracy.

115
00:08:57,189 --> 00:08:59,049
Measure the business outcome.

116
00:08:59,499 --> 00:09:01,774
Focus on mean time to resolution.

117
00:09:02,529 --> 00:09:06,189
And cost savings, not just model accuracy.

118
00:09:06,189 --> 00:09:09,129
Metrics build for transparency.

119
00:09:09,519 --> 00:09:15,939
Ensure engineers understand why an alert
was triggered and how it was processed.

120
00:09:16,779 --> 00:09:20,229
Your implementation journey is
represented on the right hand

121
00:09:20,229 --> 00:09:22,899
side, secure data foundation.

122
00:09:23,304 --> 00:09:29,634
Implement robust exception capturing
with minimal overhead and distributed

123
00:09:30,174 --> 00:09:33,024
tracing across all enterprise systems.

124
00:09:33,594 --> 00:09:35,934
Model training and validation.

125
00:09:36,474 --> 00:09:41,484
Curate historical incident data
for training and continuously

126
00:09:41,484 --> 00:09:44,124
validate ML classification models.

127
00:09:44,624 --> 00:09:46,124
Registration integration.

128
00:09:46,874 --> 00:09:52,274
Connect your ML engine to intelligent
routing and notification channels

129
00:09:52,274 --> 00:09:59,254
like Slack teams and email iterate
to development, roll out the solution

130
00:09:59,284 --> 00:10:04,894
incrementally gathering feedback and
refining the system with each iteration.

131
00:10:05,394 --> 00:10:05,964
Thank you.

